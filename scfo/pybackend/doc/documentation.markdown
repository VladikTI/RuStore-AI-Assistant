Для управления приложениями предусмотрена система управления контентом
-- [RuStore Консоль](https://dev.rustore.ru/).

Вход в систему осуществляется с помощью единого аккаунта [VK
ID](https://help.rustore.ru/rustore/main_info/authorization/why-vk-id).

Доступ разработчика к системе [RuStore
Консоль](https://dev.rustore.ru/) осуществляется через web-интерфейс.

# **Аккаунт разработчика** {#аккаунт-разработчика .unnumbered}

## **Регистрация разработчиков** {#регистрация-разработчиков .unnumbered}

Вы можете создать аккаунт юридического или физического лица в системе
[RuStore Консоль](https://dev.rustore.ru/).

Регистрация [юридических лиц/индивидуальных
предпринимателей](https://help.rustore.ru/rustore/for_developers/acc_developers/registration_developer/registration)
предназначена для:

-   коммерческих и промышленных предприятий;

-   государственных компаний;

-   профессиональных разработчиков.

При выборе регистрации юридических лиц/индивидуальных предпринимателей
необходимо подписать форму регистрации квалифицированной электронной
подписью.

Регистрация [физических
лиц](https://help.rustore.ru/rustore/for_developers/acc_developers/registration_developer/registration_fl)
предназначена для использования в личных целях. Аккаунт подойдет для:

-   студентов;

-   любителей;

-   полупрофессиональных разработчиков.

При выборе регистрации физических лиц необходимо пройти удаленную
верификацию личности.

Если в вашем аккаунте перестала работать авторизация через Google,
войдите заново другим способом: по номеру телефона, VK, Яндекс или
ГосУслуги. Укажите тот же номер телефона, который использовали для
авторизации ранее.

## **Как узнать VK ID** {#как-узнать-vk-id .unnumbered}

[VK ID](https://connect.vk.com/promo) --- это единый аккаунт для
сервисов VK. Если у вас есть профиль в социальной сети ВКонтакте, он
автоматически стал и вашим VK ID.

Если вы не хотите привязывать аккаунт в системе [RuStore
Консоль](https://console.rustore.ru/sign-in) к личному профилю ВКонтакте
или у вас его нет, вы можете создать новый профиль и использовать его
как корпоративный.

**Как найти VK ID:**

1.  Войдите в свой профиль [ВКонтакте](https://vk.com/).

2.  Перейдите в раздел «Настройки».

3.  Найдите блок «Адрес страницы».

4.  Нажмите «Изменить», чтобы увидеть номер страницы, если ранее вы
    присвоили буквенно-цифровой адрес.

Это и есть ваш VK ID.

Если в вашем аккаунте перестала работать авторизация через Google,
войдите заново другим способом: по номеру телефона, VK, Яндекс или
ГосУслуги. Укажите тот же номер телефона, который использовали для
авторизации ранее.

### **Регистрация иностранной компании** {#регистрация-иностранной-компании .unnumbered}

Нерезидентами считаются все компании, зарегистрированные за пределами
Российской Федерации.1. Откройте в браузере систему [RuStore
Консоль](https://dev.rustore.ru/). 2. Нажмите «Создать аккаунт».

![800](media/image84.png){width="5.833333333333333in"
height="3.0228751093613297in"}

1.  Выберите «Юридическое лицо или ИП».

![800](media/image28.png){width="5.833333333333333in"
height="2.4877449693788276in"}

1.  Нажмите «Войти через VK ID».

![567](media/image78.jpg){width="5.833333333333333in"
height="6.831275153105862in"}

1.  Введите номер телефона, привязанный к вашему аккаунту [VK
    ID](https://help.rustore.ru/rustore/main_info/authorization/why-vk-id),
    или [создайте новый
    аккаунт](https://console.rustore.ru/sign-up/type). Создание аккаунта
    доступно с использованием международных номеров телефонов.

2.  Нажмите «Продолжить».

![800](media/image136.png){width="5.833333333333333in"
height="3.726851487314086in"}

1.  Нажмите «Создать аккаунт».

К одной учётной записи можно привязать не более одной компании. Если
аккаунт компании уже создан другим сотрудником, пожалуйста, обратитесь к
нему для добавления вашей учетной записи к аккаунту компании.

![786](media/image8.png){width="5.833333333333333in"
height="2.8944017935258093in"}

1.  Нажмите «Продолжить».

![818](media/image40.png){width="5.833333333333333in"
height="12.037489063867017in"}

1.  Заполните все поля.

-   Торговое название --- это название, под которым вас будут видеть
    пользователи приложения RuStore и сайта www.rustore.ru. Пожалуйста,
    укажите название, знакомое вашим пользователям, или используемое
    вами для продвижения. Это поможет пользователям найти вас в каталоге
    RuStore.

Мы можем попросить вас подтвердить ваши права на указанное торговое
название. Регистрация прав не требуется, однако в этом случае мы
попросим вас гарантировать, что использование данного торгового названия
не нарушает права третьих лиц.

-   Юридическое название --- это название вашей компании, которое
    указано в её учредительных документах. Просим вас быть внимательными
    при заполнении этого поля, так как мы будем проверять соответствие
    указанного здесь названия на основе предоставленных вами документов.

-   В блоке «Контактное лицо» укажите информацию о пользователе, с
    которым мы сможем связаться, если потребуется уточнить что-то
    относительно вашего аккаунта.

-   Информация в блоках «Номер телефона» и Email используется для
    внутренних коммуникаций с RuStore и не будет видна пользователям. В
    поле «Номер представителя» следует указать международный номер
    телефона.

-   Убедитесь, что информация в поле «Налоговый или регистрационный
    номер», соответствует данным в учредительных документах.

10\. В блоке «Документы» приложите все требуемые документы на английском
или на русском языке:

Поле «Ссылка на ваше приложение в альтернативных сторах» является
обязательным. Если ваше приложение не представлено в каком-либо
альтернативном сторе, вы можете приложить ссылку на официальный сайт, на
котором размещено приложение.

-   учредительный документ, подтверждающий, что компания существует и
    зарегистрирована в своей юрисдикции, например: бизнес-лицензия,
    устав, заверенный государственным органом, свидетельство о
    регистрации и другие.

-   документ, подтверждающий право подписи представителя, например,
    доверенность, приказ о назначении, устав и т.п. Данные
    представителя, указанные в этом документе, должны соответствовать
    информации в блоке «Контактное лицо», который вы заполнили выше;

-   документ, подтверждающий право на использование доменного имени,
    логотипа или товарного знака, например: свидетельство о регистрации,
    лицензионный договор, согласие правообладателя и т.п. При отсутствии
    зарегистрированных прав необходимо предоставить письмо,
    подтверждающее отсутствие зарегистрированных прав на логотип,
    доменное имя, товарные знаки и письмо-гарантию наличия
    незарегистрированных прав.

Просим прикреплять нотариально заверенные переводы на английский или
русский язык.

11\. Нажмите «Отправить на модерацию». Заявка на регистрацию будет
отправлена на проверку.

![790](media/image144.png){width="5.833333333333333in"
height="3.322784339457568in"}

При несоответствии правилам RuStore, заявка на регистрацию может быть
отклонена. В этом случае мы направим вам письмо на адрес электронной
почты, указанный при регистрации.

## **Добавление дополнительных разработчиков** {#добавление-дополнительных-разработчиков .unnumbered}

Сотрудник компании, VK ID которого был указан при регистрации, является
владельцем Компании. У каждой Компании может быть только один владелец.

Владелец компании может зарегистрировать только одну Компанию, поэтому
рекомендуется создать единую корпоративную VK ID (физического лица)
учетную запись для управления приложениями.

Владелец компании может создавать приложения и назначать/добавлять
разработчиков по их VK ID для каждого из приложений.

### **Как добавить дополнительного разработчика** {#как-добавить-дополнительного-разработчика .unnumbered}

1.  Разработчик, которого необходимо добавить к управлению приложением,
    авторизуется под своим VK ID (физического лица) в системе[RuStore
    Консоль](https://console.rustore.ru/sign-in) (производить действия
    после авторизации в системе[RuStore
    Консоль](https://console.rustore.ru/sign-in) на этом этапе не
    нужно).

2.  Разработчик передает свой VK ID владельцу компании в формате
    «12345678». [Как узнать VK
    ID?](https://help.rustore.ru/rustore/for_developers/acc_developers/VKID)

3.  Владелец компании добавляет VK ID этого разработчика к
    соответствующему приложению.

![483](media/image47.png){width="5.44in" height="2.2066666666666666in"}

После добавления разработчику будет открыт доступ к соответствующему
приложению. Он может изменять описание и данные о своих приложениях и
создавать, подготавливать и публиковать новые версии приложений.

У разработчика нет возможности регистрации Компаний, создания новых
приложений или добавления других разработчиков в приложения.

## **Добавление пользователей и выбор роли** {#добавление-пользователей-и-выбор-роли .unnumbered}

Вы можете установить ограничение возможных операций с приложениями для
сотрудников и назначить им определённые роли. Это позволит чётко
настроить варианты взаимодействия с приложениями. Например, разрешить
сотруднику только публиковать приложения или совершать возвраты.

Добавить и назначить роли можно только для тех пользователей, которые
хотя бы раз авторизовались в [RuStore Консоли](https://dev.rustore.ru/).

### **Как добавить пользователей** {#как-добавить-пользователей .unnumbered}

1\. Выберите приложение.

2\. Перейдите на вкладку «Доступы» в меню слева.

3\. Нажмите кнопку «Пригласить пользователя» в верхней части экрана.

![700](media/image131.png){width="5.833333333333333in"
height="3.6217946194225723in"}

4\. Укажите VK ID пользователя. [Как узнать VK
ID?](https://help.rustore.ru/rustore/for_developers/acc_developers/VKID)

5\. Выберите роль пользователя. Можно выбрать только один вариант из
списка.

![700](media/image111.png){width="5.833333333333333in"
height="3.6217946194225723in"}

6\. Нажмите кнопку «Пригласить».

![700](media/image33.png){width="5.833333333333333in"
height="3.637820428696413in"}

### **Как изменить владельца приложения** {#как-изменить-владельца-приложения .unnumbered}

Для передачи приложения другому паблишеру владелец приложения должен
направить запрос в службу поддержки <support@rustore.ru>. В письме нужно
указать VK ID текущего и нового владельца приложения, а также прикрепить
скриншот из RuStore Консоли, подтверждающий владение профилем.

Мы рекомендуем направить запрос в поддержку минимум за 3 рабочих дня до
окончания месяца. Так, приложение перейдёт к новому владельцу уже с 1-го
числа следующего месяца.

Передача приложений с монетизацией и предоставление отчетов новому
владельцу осуществляется с 1-го числа месяца, следующего за обращением в
поддержку.

### **Как редактировать доступы** {#как-редактировать-доступы .unnumbered}

1\. Выберите пользователя.

2\. Нажмите на ![18](media/image75.png){width="0.2777777777777778in"
height="0.2777777777777778in"} рядом с ним.

3\. Выберите новую роль.

![480](media/image12.png){width="5.833333333333333in"
height="5.90625in"}

4\. Нажмите кнопку «Сохранить».

### **Как удалить пользователя** {#как-удалить-пользователя .unnumbered}

1\. Выберите пользователя.

2\. Нажмите на ![18](media/image110.png){width="0.19444444444444445in"
height="0.19444444444444445in"} рядом с ним.

![480](media/image39.png){width="5.833333333333333in"
height="2.9652777777777777in"}

3\. Нажмите кнопку «Удалить».

Будьте внимательны, отменить удаление не получится и придётся заново
добавлять пользователя в случае ошибочного удаления.

### **Какие роли можно выбрать** {#какие-роли-можно-выбрать .unnumbered}

В RuStore возможны пять ролей пользователей:

-   владелец компании;

-   разработчик;

-   финансовый менеджер;

-   релиз-менеджер;

-   специалист поддержки.

  ---------------------------------------------------------------------------------------------------------------------------------
                      Владелец   [Администратор]{.mark}   Релиз-менеджер   Разработчик   Финансовыйменеджер   Специалистподдержки
  ------------------- ---------- ------------------------ ---------------- ------------- -------------------- ---------------------
  Дистрибуция
  приложений

  Просматривает       **✔**                               **✔**            **✔**         **✔**                **✔**
  статистику по
  загрузке приложений

  Загружает,          **✔**                               **✔**            **✔**
  редактирует версии
  приложения,
  отправляет на
  модерацию

  Приглашает          **✔**                               **✔**
  пользователей и
  управляет
  разрешениями

  Создает и удаляет   **✔**
  приложения

  Сервисы

  Подключает          **✔**                               **✔**            **✔**
  push-уведомления,
  просматривает
  статистику

  Подключает RuStore  **✔**                               **✔**            **✔**
  Geo

  Подключает RuStore  **✔**
  API

  Монетизация

  Создает подписки,   **✔**                               **✔**                          **✔**
  inn-app продукты

  Управляет           **✔**                                                              **✔**
  платежами,
  совершает возвраты

  Просматривает       **✔**                                                              **✔**
  финансовую
  статистику

  Заполняет и         **✔**
  редактирует
  банковские
  реквизиты компании

  Подключает          **✔**
  монетизацию

  Поддержка

  Просматривает       **✔**                               **✔**                                               **✔**
  отзывы и отвечает
  на них
  ---------------------------------------------------------------------------------------------------------------------------------

# **Публикация и проверка приложений** {#публикация-и-проверка-приложений .unnumbered}

После регистрации в системе [RuStore Консоль](https://dev.rustore.ru/)
вы можете опубликовать свое приложение.

## **Сколько стоит выложить приложение в RuStore** {#сколько-стоит-выложить-приложение-в-rustore .unnumbered}

В RuStore нет оплаты публикации приложений. Вы можете бесплатно
публиковать свои приложения как
[бесплатные](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account),
так и
[платные](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/paid_app).

## **Декларация разрешений** {#декларация-разрешений .unnumbered}

Безопасность пользователей является ключевым критерием для RuStore. Для
обеспечения безопасности данных пользователя RuStore проводит проверку
всех запрашиваемых разрешений (permissions) каждого приложения. Кроме
того, в системе реализована функция для получения информации о типах
пользовательских данных, которые собирает и передаёт загружаемое
приложение.

Декларация разрешений и предоставление информации о запрашиваемых данных
повышает прозрачность и помогает магазину и пользователям понять, как
обрабатываются и для каких целей используются пользовательские данные.

### **Как декларировать разрешения** {#как-декларировать-разрешения .unnumbered}

Для обеспечения безопасности пользователей в консоли RuStore был
реализован новый блок "Безопасность данных пользователя", в котором
разработчику необходимо заполнить информацию о категориях и типах
данных, а также предоставить информацию о чувствительных разрешениях.
Блок состоит из двух разделов "Чувствительные разрешения" и "Категории и
типы данных".

Раздел "Чувствительные разрешения" отображается только в том случае,
если в приложении обнаружены чувствительные разрешения, и содержит
список таких разрешений.

Если в приложении обнаружены чувствительные разрешения, в поле
"Обоснование" необходимо указать, для чего требуется каждое из них.

![](media/image7.png){width="5.833333333333333in"
height="4.054220253718285in"}

В разделе "Категории и типы данных" разработчику необходимо отметить все
типы данных, доступ к которым запрашивает приложение.

Подробная информация о доступных типах данных указана в
разделе [Категории и типы
данных](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/Declare_app_permissions/Data_categories).

Раздел "Категории и типы данных" отображается для всех версий
приложения, независимо от того, какой тип разрешения используется.

![600](media/image30.png){width="5.8181813210848645in"
height="2.447551399825022in"}

После заполнения всей информации в карточке версии приложения и отправки
ее на модерацию команда RuStore выполнит проверку приложения.

Перед отправкой приложения на модерацию обязательно проверьте приложение
на соответствие [требованиям к
приложениям](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/requirement_apps).

В случае, если в приложении используются чувствительные
разрешения, будет проведена расширенная проверка приложения.

Если приложение не соответствует правилам использования разрешений,
команда RuStore вправе обратиться к разработчикам за разъяснениями,
отправив письмо с результатами проверки владельцу аккаунта и на
контактный адрес электронной почты в аккаунте разработчика.

Если приложение соответствует Правилам программы для разработчиков,
заявка будет одобрена, и приложение станет доступно для публикации в
RuStore.

### **Категории и типы данных** {#категории-и-типы-данных .unnumbered}

Категории и типы данных --- это сведения, которые помогут пользователям
понять, каким образом приложение использует их данные и как в нём
обеспечивается безопасность.

Информация о том, какие типы данных приложение может собирать и
передавать третьим лицам, будет доступна пользователям на странице
мобильного приложения RuStore.

При загрузке или обновлении приложения необходимо указать все типы
пользовательских данных, которые собирает и передаёт приложение, а
именно:

-   все типы пользовательских данных, которые собирает и/или передает
    приложение;

-   все пользовательские данные, отправляемые с устройства с помощью
    библиотек или SDК, которые есть в приложении, независимо от того,
    кому передается информация --- разработчику или третьему лицу;

-   все пользовательские данные, которые передаются с сервера
    разработчика третьему лицу или стороннему приложению на том же
    устройстве.

#### *Категории и типы данных* {#категории-и-типы-данных-1 .unnumbered}

  ------------------------------------------------------------------------
  **Категории**           **Типы**                **Описание**
  ----------------------- ----------------------- ------------------------
  Местоположение          Приблизительное         Местоположение
                          местоположение          пользователя или
                                                  устройства в пределах
                                                  области размером от трёх
                                                  квадратных километров,
                                                  например, город, в
                                                  котором находится
                                                  пользователь, или
                                                  местоположение,
                                                  полученное с помощью
                                                  разрешения Android
                                                  ACCESS_COARSE_LOCATION

  Точное местоположение   Местоположение
                          пользователя или
                          устройства в пределах
                          области размером менее
                          трёх квадратных
                          километров, например,
                          местоположение,
                          полученное с помощью
                          разрешения Android
                          ACCESS_FINE_LOCATION

  Личная информация       Имя                     Обращение, которое
                                                  предпочитает
                                                  пользователь: имя,
                                                  фамилия или псевдоним

  Адрес электронной почты Адрес электронной почты
                          пользователя

  ID пользователей        Идентификаторы
                          пользователя. Например,
                          номер, идентификатор
                          или название аккаунта

  Адрес                   Адрес пользователя.
                          Например, почтовый или
                          домашний

  Номер телефона          Номер телефона
                          пользователя

  Раса и этническая       Сведения о расовой или
  принадлежность          этнической
                          принадлежности
                          пользователя

  Политические или        Сведения о политических
  религиозные убеждения   или религиозных
                          убеждениях пользователя

  Сексуальная ориентация  Сведения о сексуальной
                          ориентации пользователя

  Другие данные           Любая другая личная
                          информация. Например,
                          дата рождения,
                          гендерная идентичность,
                          статус участника боевых
                          действий и т. д.

  Финансовые данные       Платёжные данные        Информация о денежных
                                                  счетах пользователя.
                                                  Например, номер
                                                  кредитной карты

  История покупок         Информация о покупках и
                          транзакциях
                          пользователя

  Кредитный рейтинг       Информация о
                          кредитоспособности
                          пользователя

  Другие финансовые       Другая финансовая
  данные                  информация. Например,
                          зарплата или долги
                          пользователя

  Здоровье и фитнес       Медицинские данные      Информация о здоровье
                                                  пользователя. Например,
                                                  данные медицинской карты
                                                  или описание симптомов

  Данные о физической     Информация о физической
  активности              активности
                          пользователя. Например,
                          о тренировках

  Сообщения               Электронные письма      Содержание, темы,
                                                  информация об
                                                  отправителях и
                                                  получателях электронных
                                                  писем пользователя

  SMS или MMS             Содержание и информация
                          об отправителях и
                          получателях сообщений
                          пользователя

  Другие сообщения в      Другие типы сообщений.
  приложениях             Например, мгновенные
                          сообщения или контент в
                          чате

  Фото и видео            Фотографии              Фотографии пользователя

  Видео                   Видео пользователя

  Аудиофайлы              Аудиозаписи и голосовые Записи голоса
                          сообщения               пользователя. Например,
                                                  голосовые сообщения или
                                                  запись звука

  Музыкальные файлы       Музыкальные файлы
                          пользователя

  Другие аудиофайлы       Другие аудиофайлы,
                          созданные или
                          предоставленные
                          пользователем

  Файлы и документы       Файлы и документы       Документы и другие файлы
                                                  пользователя или любая
                                                  информация о них.
                                                  Например, названия
                                                  файлов

  Календарь               События календаря       Информация из календаря
                                                  пользователя. Например,
                                                  о мероприятиях, заметках
                                                  к ним и участниках

  Контакты                Контакты                Информация о контактах
                                                  пользователя. Например,
                                                  об их именах, истории
                                                  переписки с ними, а
                                                  также такие данные, как
                                                  имена пользователей,
                                                  журнал звонков и
                                                  сведения о давности,
                                                  частоте и длительности
                                                  общения

  Действия в приложении   Взаимодействие с        Информация о том, как
                          приложением             пользователь
                                                  взаимодействует с
                                                  приложением. Например,
                                                  сколько раз он
                                                  просмотрел страницу или
                                                  какие разделы посещал

  История поиска в        Информация о том, что
  приложении              пользователь искал в
                          приложении

  Установленные           Информация о
  приложения              приложениях,
                          установленных на
                          устройстве пользователя

  Другой пользовательский Другой контент,
  контент                 созданный пользователем
                          и не упомянутый ни в
                          одном разделе.
                          Например, биография,
                          заметки или развёрнутые
                          ответы

  Другие действия         Другие действия
                          пользователя в
                          приложении, не
                          упомянутые ни в одном
                          разделе. Например,
                          информация об играх,
                          лайках или выбранных
                          вариантах в диалоговых
                          окнах.

  Просмотр веб-страниц    История просмотра       Информация о сайтах,
                          веб-страниц             которые посещал
                                                  пользователь

  Данные о работе         Отчёты об ошибках       Данные из журнала сбоев
  приложения                                      приложения. Например, о
                                                  количестве сбоев и
                                                  трассировках стека, или
                                                  другая информация,
                                                  напрямую связанная с
                                                  ошибками.

  Диагностика             Информация о
                          производительности
                          приложения. Например,
                          время работы от
                          батареи, время загрузки
                          и реакции, частота
                          кадров или данные
                          технической
                          диагностики.

  Другие данные о работе  Другая информация о
  приложения              производительности
                          приложения, не
                          упомянутая здесь.

  Идентификаторы          ID устройства или
                          другие идентификаторы
  ------------------------------------------------------------------------

### **Типы разрешений** {#типы-разрешений .unnumbered}

Используемые разрешения проходят первичную проверку после добавления
приложения в систему [RuStore
Консоль](https://console.rustore.ru/sign-in).

Декларации подлежат все разрешения, отличные от
категории **Normal** («Безопасные»), а
именно [Dangerous](https://developer.android.com/guide/topics/permissions/overview#dangerous_permissions) («Опасные»), [Special](https://developer.android.com/guide/topics/permissions/overview#special_permissions) («Специальные»), [Signature](https://developer.android.com/guide/topics/permissions/overview#signature_permissions) («Требующие
особой подписи»).

Приложения, использующие разрешения из категории **Not for use by
third-party applications** («Запрещенные»), будут автоматически
отклонены при загрузке приложения.

Разрешения
типов [Dangerous](https://developer.android.com/guide/topics/permissions/overview#dangerous_permissions), [Special](https://developer.android.com/guide/topics/permissions/overview#special_permissions) и [Signature](https://developer.android.com/guide/topics/permissions/overview#signature_permissions) относятся
к категории чувствительных разрешений.

Список запрещенных и чувствительных разрешений представлен в таблице
ниже.

**Уровни** **разрешений**

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  **Уровень разрешения**                                        **Название разрешения**                                                                      **Описание разрешения**
  ------------------------------------------------------------- -------------------------------------------------------------------------------------------- -----------------------
  Запрещённые                                                   ACCESS_CHECKIN_PROPERTIES                                                                    Разрешает доступ на
                                                                                                                                                             чтение/запись к таблице
                                                                                                                                                             "свойства" в базе
                                                                                                                                                             данных checkin для
                                                                                                                                                             изменения загружаемых
                                                                                                                                                             значений.

  ACCOUNT_MANAGER                                               Позволяет приложениям вызывать AccountAuthenticators.

  BIND_APPWIDGET                                                Позволяет приложению сообщать службе AppWidget, какое приложение может получить доступ к
                                                                данным AppWidget.

  BLUETOOTH_PRIVILEGED                                          Позволяет приложениям создавать сопряженные устройства Bluetooth без взаимодействия с
                                                                пользователем, а также разрешать или запрещать доступ к телефонной книге или сообщениям.

  BROADCAST_PACKAGE_REMOVED                                     Позволяет приложению рассылать уведомления об удалении пакета приложения.

  BROADCAST_SMS                                                 Позволяет приложению транслировать уведомление о получении SMS.

  CALL_PRIVILEGED                                               Позволяет приложению звонить на любой номер телефона, включая номера экстренных служб, не
                                                                проходя через пользовательский интерфейс Dialer, чтобы пользователь мог подтвердить
                                                                происходящий вызов.

  CAPTURE_AUDIO_OUTPUT                                          Позволяет приложению захватывать аудиовыход.

  CHANGE_COMPONENT_ENABLED_STATE                                Позволяет приложению изменять состояние, включен ли компонент приложения (кроме его
                                                                собственного) или нет.

  CONTROL_LOCATION_UPDATES                                      Позволяет включать/отключать уведомления об обновлении местоположения с радиостанции.

  DELETE_PACKAGES                                               Позволяет приложению удалять пакеты.

  DIAGNOSTIC                                                    Позволяет приложениям повторно использовать диагностические ресурсы.

  FACTORY_TEST                                                  Позволяет осуществить запуск тестового приложения, работающего от имени пользователя root.

  INSTALL_LOCATION_PROVIDER                                     Позволяет приложению устанавливать поставщика определения местоположения в диспетчер
                                                                определения местоположения.

  INSTALL_PACKAGES                                              Позволяет приложению устанавливать пакеты.

  LOCATION_HARDWARE                                             Позволяет приложению использовать аппаратные функции определения местоположения, такие как
                                                                API геозоны.

  MANAGE_WIFI_INTERFACES                                        Позволяет приложениям получать уведомления, когда запрос интерфейса Wi-Fi не может быть
                                                                удовлетворен без отключения одного или нескольких других интерфейсов, и принимать решение о
                                                                том, следует ли утвердить запрос или отклонить его.

  MANAGE_WIFI_NETWORK_SELECTION                                 Это разрешение используется, чтобы OEM-производители могли предоставлять своим доверенным
                                                                приложениям доступ к подмножеству привилегированных API-интерфейсов Wi-Fi для повышения
                                                                производительности Wi-Fi.

  MASTER_CLEAR                                                  Не для использования сторонними приложениями.

  MEDIA_CONTENT_CONTROL                                         Позволяет приложению узнать, какой контент воспроизводится, и управлять его
                                                                воспроизведением.

  MODIFY_PHONE_STATE                                            Позволяет изменять состояние телефонии - питание, mmi и т. д.

  MOUNT_FORMAT_FILESYSTEMS                                      Позволяет форматировать файловые системы для съемного хранилища.

  MOUNT_UNMOUNT_FILESYSTEMS                                     Позволяет монтировать и размонтировать файловые системы для съемного хранилища.

  OVERRIDE_WIFI_CONFIG                                          Позволяет приложению изменять любую конфигурацию Wi-Fi, даже если она создана другим
                                                                приложением.

  READ_INPUT_STATE                                              Это разрешение устарело на уровне API 16.

  READ_LOGS                                                     Позволяет приложению читать низкоуровневые системные файлы журналов.

  REBOOT                                                        Требуется для перезагрузки устройства.

  REQUEST_COMPANION_PROFILE_APP_STREAMING                       Позволяет приложению запрашивать связь с виртуальным дисплеем, поддерживающим потоковую
                                                                передачу приложений Android (AssociationRequest.DEVICE_PROFILE_APP_STREAMING) с помощью
                                                                CompanionDeviceManager.

  REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION               Позволяет приложению запрашивать связь с головным устройством автомобиля, поддерживающим
                                                                автомобильную проекцию (AssociationRequest.DEVICE_PROFILE_AUTOMOTIVE_PROJECTION), с помощью
                                                                CompanionDeviceManager.

  REQUEST_COMPANION_PROFILE_COMPUTER                            Позволяет приложению запрашивать ассоциацию с компьютером для обмена функциональностью и/или
                                                                данными с другими устройствами, такими как уведомления, фотографии и медиафайлы
                                                                (AssociationRequest.DEVICE_PROFILE_COMPUTER) от CompanionDeviceManager.

  SEND_RESPOND_VIA_MESSAGE                                      Позволяет приложению (телефону) отправлять запрос другим приложениям для обработки действия
                                                                "Ответить через сообщение" во время входящих вызовов.

  SET_ALWAYS_FINISH                                             Позволяет приложению контролировать, будут ли действия немедленно завершены при переводе в
                                                                фоновый режим.

  SET_ANIMATION_SCALE                                           Изменяет глобальный коэффициент масштабирования анимации.

  SET_DEBUG_APP                                                 Позволяет настроить приложение для отладки.

  SET_PROCESS_LIMIT                                             Позволяет приложению устанавливать максимальное количество (не обязательных) процессов
                                                                приложения, которые могут быть запущены.

  SET_TIME                                                      Позволяет приложениям устанавливать системное время напрямую.

  SET_TIME_ZONE                                                 Позволяет приложениям устанавливать системный часовой пояс напрямую.

  SIGNAL_PERSISTENT_PROCESSES                                   Разрешить приложению запрашивать отправку сигнала всем постоянным процессам.

  START_FOREGROUND_SERVICES_FROM_BACKGROUND                     Позволяет приложению запускать службы переднего плана из фона в любое время.

  STATUS_BAR                                                    Позволяет приложению открывать, закрывать или отключать строку состояния и ее значки.

  UNINSTALL_SHORTCUT                                            Не используйте это разрешение в своем приложении.

  UPDATE_DEVICE_STATS                                           Позволяет приложению обновлять статистику устройства.

  WRITE_APN_SETTINGS                                            Позволяет приложениям записывать настройки apn и читать конфиденциальные поля существующих
                                                                настроек apn, таких как имя пользователя и пароль.

  WRITE_GSERVICES                                               Позволяет приложению изменять карту сервиса Google.

  WRITE_SECURE_SETTINGS                                         Позволяет приложению читать или записывать безопасные системные настройки.

  Чувствительные                                                ACCEPT_HANDOVER                                                                              Позволяет вызывающему
                                                                                                                                                             приложению продолжить
                                                                                                                                                             вызов, который был
                                                                                                                                                             запущен в другом
                                                                                                                                                             приложении.

  ACCESS_BACKGROUND_LOCATION                                    Позволяет приложению получить доступ к местоположению в фоновом режиме.

  ACCESS_COARSE_LOCATION                                        Позволяет приложению получить доступ к приблизительному местоположению.

  ACCESS_FINE_LOCATION                                          Позволяет приложению получить доступ к точному местоположению.

  ACCESS_MEDIA_LOCATION                                         Позволяет приложению получать доступ к любым географическим местоположениям, сохраненным в
                                                                общей коллекции пользователя.

  ACTIVITY_RECOGNITION                                          Позволяет приложению распознавать физическую активность.

  ADD_VOICEMAIL                                                 Позволяет приложению добавлять голосовые сообщения в систему.

  ANSWER_PHONE_CALLS                                            Позволяет приложению отвечать на входящий телефонный звонок.

  BLUETOOTH_ADVERTISE                                           Требуется для рекламы ближайшим устройствам Bluetooth.

  BLUETOOTH_CONNECT                                             Требуется для подключения к сопряженным устройствам Bluetooth.

  BLUETOOTH_SCAN                                                Требуется для обнаружения и сопряжения ближайших устройств Bluetooth.

  BODY_SENSORS                                                  Позволяет приложению получать доступ к данным датчиков, которые пользователь использует для
                                                                измерения того, что происходит внутри его тела, например частоты сердечных сокращений.

  BODY_SENSORS_BACKGROUND                                       Позволяет приложению получать доступ к данным с датчиков, которые пользователь использует
                                                                для измерения того, что происходит внутри его тела, таких как частота сердечных сокращений.

  CALL_PHONE                                                    Позволяет приложению инициировать телефонный звонок, не проходя через пользовательский
                                                                интерфейс Dialer, чтобы пользователь мог подтвердить вызов.

  CAMERA                                                        Требуется для доступа к устройству камеры.

  DUMP                                                          Позволяет приложению получать информацию о дампе состояния из системных служб.

  GET_ACCOUNTS                                                  Разрешает доступ к списку учетных записей в службе учетных записей.

  NEARBY_WIFI_DEVICES                                           Требуется для рекламы и подключения к ближайшим устройствам через Wi-Fi.

  POST_NOTIFICATIONS                                            Позволяет приложению публиковать уведомления

  PROCESS_OUTGOING_CALLS                                        Это разрешение устарело на уровне API 29.

  READ_CALENDAR                                                 Позволяет приложению читать данные календаря пользователя.

  READ_CALL_LOG                                                 Позволяет приложению читать журнал вызовов пользователя.

  READ_CONTACTS                                                 Позволяет приложению считывать контактные данные пользователя.

  READ_EXTERNAL_STORAGE                                         Позволяет приложению читать из внешнего хранилища.

  READ_MEDIA_AUDIO                                              Позволяет приложению читать аудиофайлы из внешнего хранилища.

  READ_MEDIA_IMAGES                                             Позволяет приложению читать файлы изображений из внешнего хранилища.

  READ_MEDIA_VIDEO                                              Позволяет приложению читать видеофайлы из внешнего хранилища.

  READ_PHONE_NUMBERS                                            Позволяет читать доступ к телефонным номерам устройства.

  READ_PHONE_STATE                                              Обеспечивает доступ только для чтения к состоянию телефона, включая текущую информацию о
                                                                сотовой сети, статус любых текущих вызовов и список любых телефонных учетных записей,
                                                                зарегистрированных на устройстве.

  READ_SMS                                                      Позволяет приложению читать SMS-сообщения.

  RECEIVE_MMS                                                   Позволяет приложению отслеживать входящие MMS-сообщения.

  RECEIVE_SMS                                                   Позволяет приложению получать SMS-сообщения.

  RECEIVE_WAP_PUSH                                              Позволяет приложению получать push-сообщения WAP.

  RECORD_AUDIO                                                  Позволяет приложению записывать аудио.

  SEND_SMS                                                      Позволяет приложению отправлять SMS-сообщения.

  USE_SIP                                                       Позволяет приложению использовать сервис SIP.

  UWB_RANGING                                                   Требуется для подключения к устройствам, использующим сверхширокополосный доступ.

  WRITE_CALENDAR                                                Позволяет приложению записывать данные календаря пользователя.

  WRITE_CALL_LOG                                                Позволяет приложению записывать (но не читать) данные журнала вызовов пользователя.

  WRITE_CONTACTS                                                Позволяет приложению записывать контактные данные пользователя.

  WRITE_EXTERNAL_STORAGE                                        Позволяет приложению записывать во внешнее хранилище.

  ACCESS_BLOBS_ACROSS_USERS                                     Позволяет приложению получать доступ к большим двоичным объектам данных разных
                                                                пользователей.

  BATTERY_STATS                                                 Позволяет приложению собирать статистику заряда батареи.

  BIND_ACCESSIBILITY_SERVICE                                    Должен быть обязательным для службы специальных возможностей, чтобы гарантировать, что
                                                                только система может привязаться к нему.

  BIND_AUTOFILL_SERVICE                                         Должно быть обязательным для службы автозаполнения, чтобы гарантировать, что только система
                                                                может привязываться к нему.

  BIND_CALL_REDIRECTION_SERVICE                                 Должен быть обязательным для CallRedirectionService, чтобы гарантировать, что только система
                                                                может привязаться к нему.

  BIND_CARRIER_MESSAGING_CLIENT_SERVICE                         Подкласс CarrierMessagingClientService должен быть защищен этим разрешением.

  BIND_CARRIER_SERVICES                                         Системный процесс, которому разрешено привязываться к службам в приложениях c указанным
                                                                разрешением

  BIND_CHOOSER_TARGET_SERVICE                                   Эта константа устарела в API уровня 30. Для публикации целевых показателей прямого доступа,
                                                                пожалуйста, следуйте инструкциям в
                                                                https://developer.android.com/training/sharing/receive.html#providing-direct-share-targets

  BIND_COMPANION_DEVICE_SERVICE                                 Должен быть обязательным для CompanionDeviceServices, чтобы гарантировать, что только
                                                                система может привязаться к нему.

  BIND_CONDITION_PROVIDER_SERVICE                               Должен быть обязательным для ConditionProviderService, чтобы гарантировать, что только
                                                                система может привязаться к нему.

  BIND_CONTROLS                                                 Позволяет SystemUI запрашивать сторонние элементы управления.

  BIND_DEVICE_ADMIN                                             Должен требоваться приемником администрирования устройства, чтобы гарантировать, что только
                                                                система может взаимодействовать с ним.

  BIND_DREAM_SERVICE                                            Должно быть обязательным для DreamService, чтобы гарантировать, что только система может
                                                                привязываться к нему.

  BIND_INCALL_SERVICE                                           Должен быть обязательным для InCallService, чтобы гарантировать, что только система может
                                                                привязываться к нему.

  BIND_INPUT_METHOD                                             Должно быть обязательным для InputMethodService, чтобы гарантировать, что только система
                                                                может привязываться к нему.

  BIND_MIDI_DEVICE_SERVICE                                      Должно быть обязательным для MidiDeviceService, чтобы гарантировать, что только система
                                                                может привязываться к нему.

  BIND_NFC_SERVICE                                              Должно быть обязательным для HostApduService или OffHostApduService, чтобы гарантировать,
                                                                что только система может привязываться к нему.

  BIND_NOTIFICATION_LISTENER_SERVICE                            Должно быть обязательным для NotificationListenerService, чтобы гарантировать, что только
                                                                система может привязываться к нему.

  BIND_PRINT_SERVICE                                            Должно быть обязательным для PrintService, чтобы гарантировать, что только система может
                                                                привязываться к нему.

  BIND_QUICK_ACCESS_WALLET_SERVICE                              Должно быть обязательным для QuickAccessWalletService , чтобы гарантировать, что только
                                                                система может привязываться к нему.

  BIND_QUICK_SETTINGS_TILE                                      Позволяет приложению привязываться к сторонним плиткам быстрых настроек.

  BIND_REMOTEVIEWS                                              Должно быть обязательным для RemoteViewsService, чтобы гарантировать, что только система
                                                                может привязываться к нему.

  BIND_SCREENING_SERVICE                                        Должно быть обязательным для CallScreeningService, чтобы гарантировать, что только система
                                                                может привязываться к нему.

  BIND_TELECOM_CONNECTION_SERVICE                               Должно быть обязательным для ConnectionService, чтобы гарантировать, что только система
                                                                может привязываться к нему.

  BIND_TEXT_SERVICE                                             Должен быть обязательным для TextService (например, SpellCheckerService), чтобы
                                                                гарантировать, что только система может привязаться к нему.

  BIND_TV_INPUT                                                 Должен быть обязательным для TvInputService , чтобы гарантировать, что только система может
                                                                привязаться к нему.

  BIND_TV_INTERACTIVE_APP                                       Должен быть обязательным для TvInteractiveAppService, чтобы гарантировать, что только
                                                                система может привязаться к нему.

  BIND_VISUAL_VOICEMAIL_SERVICE                                 Должен быть обязательным для VisualVoicemailService, чтобы гарантировать, что только система
                                                                может привязаться к нему.

  BIND_VOICE_INTERACTION                                        Должен быть обязательным для VoiceInteractionService, чтобы гарантировать, что только
                                                                система может привязаться к нему.

  BIND_VPN_SERVICE                                              Должен быть обязательным для VpnService, чтобы гарантировать, что только система может
                                                                привязаться к нему.

  BIND_VR_LISTENER_SERVICE                                      Должен быть обязательным для VrListenerService, чтобы гарантировать, что только система
                                                                может привязаться к нему.

  BIND_WALLPAPER                                                Должен быть обязательным для WallpaperService, чтобы гарантировать, что только система может
                                                                привязаться к нему.

  CHANGE_CONFIGURATION                                          Позволяет приложению изменять текущую конфигурацию, например, языковой стандарт.

  CLEAR_APP_CACHE                                               Позволяет приложению очищать кэши всех установленных приложений на устройстве.

  DELETE_CACHE_FILES                                            Старое разрешение на удаление файлов кеша приложения, больше не используется, но
                                                                сигнализирует нам о том, что мы должны спокойно игнорировать вызовы вместо создания
                                                                исключения.

  GET_ACCOUNTS_PRIVILEGED                                       Разрешает доступ к списку учетных записей в службе учетных записей.

  GLOBAL_SEARCH                                                 Это разрешение можно использовать для поставщиков контента, чтобы разрешить глобальной
                                                                поисковой системе доступ к их данным.

  INSTANT_APP_FOREGROUND_SERVICE                                Позволяет мгновенному приложению создавать службы переднего плана.

  INTERACT_ACROSS_PROFILES                                      Позволяет взаимодействовать между профилями в одной и той же группе профилей.

  LAUNCH_MULTI_PANE_SETTINGS_DEEP_LINK                          Приложению требуется разрешение forSettings.ACTION_SETTINGS_EMBED_DEEP_LINK_ACTIVITY чтобы
                                                                показать Activityembedded в настройках приложения.

  LOADER_USAGE_STATS                                            Позволяет загрузчику данных читать журналы доступа к пакету.

  MANAGE_DOCUMENTS                                              Позволяет приложению управлять доступом к документам.

  MANAGE_EXTERNAL_STORAGE                                       Предоставляет приложению широкий доступ к внешнему хранилищу в хранилище с заданной
                                                                областью.

  MANAGE_MEDIA                                                  Позволяет приложению изменять и удалять медиафайлы на этом устройстве или любом подключенном
                                                                устройстве хранения без подтверждения пользователя.

  MANAGE_ONGOING_CALLS                                          Позволяет запрашивать информацию о текущих звонках и управлять текущими вызовами

  PACKAGE_USAGE_STATS                                           Позволяет приложению собирать статистику использования компонентов

  READ_ASSISTANT_APP_SEARCH_DATA                                Позволяет приложению запрашивать глобальные данные в AppSearch, видимые для роли ASSISTANT.

  READ_HOME_APP_SEARCH_DATA                                     Позволяет приложению запрашивать глобальные данные в AppSearch, которые видны роли HOME.

  READ_PRECISE_PHONE_STATE                                      Разрешает доступ только для чтения к точному состоянию телефона.

  READ_VOICEMAIL                                                Позволяет приложению читать голосовые сообщения в системе.

  REQUEST_COMPANION_SELF_MANAGED                                Позволяет приложению создавать "самоуправляемую" ассоциацию.

  REQUEST_INSTALL_PACKAGES                                      Позволяет приложению запрашивать установку пакетов.

  SCHEDULE_EXACT_ALARM                                          Позволяет приложениям использовать точные API сигнализации.

  START_VIEW_APP_FEATURES                                       Позволяет владельцу запускать экран со списком функций приложения.

  START_VIEW_PERMISSION_USAGE                                   Позволяет владельцу запустить экран использования разрешений для приложения.

  SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE                            Позволяет приложению подписаться на состояние keyguard locked (т.е. showing).

  SYSTEM_ALERT_WINDOW                                           Позволяет приложению создавать окна с помощью
                                                                typeWindowManagerWindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY, показанного поверх
                                                                всех других приложений.

  USE_ICC_AUTH_WITH_DEVICE_IDENTIFIER                           Позволяет считывать идентификаторы устройств и использовать аутентификацию на основе ICC,
                                                                например EAP-AKA.

  WRITE_SETTINGS                                                Позволяет приложению читать или записывать системные настройки.

  WRITE_VOICEMAIL                                               Позволяет приложению изменять и удалять существующие голосовые сообщения в системе.

  Безопасные                                                    ACCESS_LOCATION_EXTRA_COMMANDS                                                               Позволяет приложению
                                                                                                                                                             получить доступ к
                                                                                                                                                             дополнительным командам
                                                                                                                                                             поставщика
                                                                                                                                                             местоположения.

  BLUETOOTH                                                     Позволяет приложениям подключаться к сопряженным устройствам Bluetooth.

  BLUETOOTH_ADMIN                                               Позволяет приложениям обнаруживать и создавать сопряжения с устройствами Bluetooth.

  BROADCAST_STICKY                                              Позволяет приложению транслировать последний интент.

  CALL_COMPANION_APP                                            Позволяет приложению, которое реализует InCallService API, иметь право быть включенным в
                                                                качестве приложения-компаньона для звонков.

  CHANGE_NETWORK_STATE                                          Позволяет приложениям изменять состояние сетевого подключения.

  CHANGE_WIFI_MULTICAST_STATE                                   Позволяет приложениям переходить в режим многоадресной рассылки Wi-Fi.

  CHANGE_WIFI_STATE                                             Позволяет приложениям изменять состояние подключения Wi-Fi.

  DELIVER_COMPANION_MESSAGES                                    Позволяет приложению доставлять сопутствующие сообщения в систему

  DISABLE_KEYGUARD                                              Позволяет приложениям отключать keyguard, если он небезопасен.

  EXPAND_STATUS_BAR                                             Позволяет приложению разворачивать или сворачивать строку состояния.

  FOREGROUND_SERVICE                                            Позволяет приложению использовать Service.startForeground.

  GET_PACKAGE_SIZE                                              Позволяет приложению узнать размер пакета.

  HIDE_OVERLAY_WINDOWS                                          Позволяет приложению предотвращать отрисовку окон, не являющихся системными, поверх него.

  HIGH_SAMPLING_RATE_SENSORS                                    Позволяет приложению получать доступ к данным датчиков с частотой дискретизации более 200
                                                                Гц.

  INSTALL_SHORTCUT                                              Позволяет приложению установить ярлык в Launcher.

  INTERNET                                                      Позволяет приложениям открывать сетевые сокеты.

  KILL_BACKGROUND_PROCESSES                                     Позволяет приложению вызывать ActivityManager.killBackgroundProcesses(String).

  MANAGE_OWN_CALLS                                              Позволяет вызывать приложение, которое управляет своими собственными вызовами через
                                                                самоуправляемые API ConnectionService.

  MODIFY_AUDIO_SETTINGS                                         Позволяет приложению изменять глобальные настройки звука.

  NFC                                                           Позволяет приложениям выполнять операции ввода-вывода через NFC.

  NFC_PREFERRED_PAYMENT_INFO                                    Позволяет приложениям получать информацию о предпочтительных платежных услугах NFC.

  NFC_TRANSACTION_EVENT                                         Позволяет приложениям получать события транзакций NFC.

  QUERY_ALL_PACKAGES                                            Позволяет запрашивать любое обычное приложение на устройстве, независимо от объявлений
                                                                манифеста.

  READ_BASIC_PHONE_STATE                                        Разрешает доступ только для чтения к состоянию телефона с неопасным разрешением, включая
                                                                такую информацию, как тип сотовой сети, версия программного обеспечения.

  READ_NEARBY_STREAMING_POLICY                                  Позволяет приложению читать ближайшую потоковую политику.

  READ_SYNC_SETTINGS                                            Позволяет приложениям читать настройки синхронизации.

  READ_SYNC_STATS                                               Позволяет приложениям читать статистику синхронизации.

  RECEIVE_BOOT_COMPLETED                                        Позволяет приложению получать Intent.ACTION_BOOT_COMPLETED, который транслируется после
                                                                завершения загрузки системы.

  REORDER_TASKS                                                 Позволяет приложению изменять порядок задач.

  REQUEST_COMPANION_PROFILE_WATCH                               Позволяет сопутствующему приложению работать в фоновом режиме.

  REQUEST_COMPANION_RUN_IN_BACKGROUND                           Позволяет сопутствующему приложению работать в фоновом режиме.

  REQUEST_COMPANION_START_FOREGROUND_SERVICES_FROM_BACKGROUND   Позволяет сопутствующему приложению запускать службу переднего плана в фоновом режиме.

  REQUEST_COMPANION_USE_DATA_IN_BACKGROUND                      Позволяет сопутствующему приложению использовать данные в фоновом режиме.

  REQUEST_DELETE_PACKAGES                                       Позволяет приложению запрашивать удаление пакетов.

  REQUEST_IGNORE_BATTERY_OPTIMIZATIONS                          Разрешение, которое должно иметь приложение, чтобы использовать
                                                                Settings.ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS.

  REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE                     Позволяет приложению подписываться на уведомления об изменении статуса присутствия
                                                                связанного с ним сопутствующего устройства

  REQUEST_PASSWORD_COMPLEXITY                                   Позволяет приложению запрашивать сложность блокировки экрана и предлагать пользователям
                                                                обновить блокировку экрана до определенного уровня сложности.

  SET_ALARM                                                     Позволяет приложению транслировать намерение установить сигнал тревоги для пользователя.

  SET_WALLPAPER                                                 Позволяет приложениям устанавливать обои.

  SET_WALLPAPER_HINTS                                           Позволяет приложениям устанавливать подсказки для обоев.

  TRANSMIT_IR                                                   Позволяет использовать ИК-передатчик устройства, если он доступен.

  UPDATE_PACKAGES_WITHOUT_USER_ACTION                           Позволяет приложению указать через PackageInstaller.SessionParams.setRequireUserAction(int),
                                                                что действия пользователя не требуются для обновления приложения.

  USE_BIOMETRIC                                                 Позволяет приложению использовать биометрические методы, поддерживаемые устройствами.

  USE_EXACT_ALARM                                               Позволяет приложениям использовать точные сигналы тревоги так же, как и в
                                                                SCHEDULE_EXACT_ALARM, но без необходимости запрашивать это разрешение у пользователя.

  USE_FINGERPRINT                                               Это разрешение устарело на уровне API 28. Вместо этого приложения должны запрашивать
                                                                USE_BIOMETRIC.

  USE_FULL_SCREEN_INTENT                                        Требуется для приложений, ориентированных на Build.VERSION_CODES.Q, которые хотят
                                                                использовать полноэкранные намерения уведомлений.

  VIBRATE                                                       Обеспечивает доступ к функции вибрации.

  WAKE_LOCK                                                     Позволяет использовать PowerManager WakeLocks для предотвращения перехода процессора в
                                                                спящий режим или затемнения экрана.

  WRITE_SYNC_SETTINGS                                           Позволяет приложениям записывать настройки синхронизации.

  Устаревшие                                                    BIND_CARRIER_MESSAGING_SERVICE                                                               Это разрешение устарело
                                                                                                                                                             на уровне API 23.
                                                                                                                                                             Вместо этого
                                                                                                                                                             используйте
                                                                                                                                                             BIND_CARRIER_SERVICES

  GET_TASKS                                                     Это разрешение устарело на уровне API 21. Больше не применяется.

  PERSISTENT_ACTIVITY                                           Это разрешение устарело на уровне API 15. Эта функция будет удалена в будущем; пожалуйста,
                                                                не используйте.

  RESTART_PACKAGES                                              Это разрешение устарело на уровне API 15.

  SET_PREFERRED_APPLICATIONS                                    Это разрешение устарело на уровне API 15.

  SMS_FINANCIAL_TRANSACTIONS                                    Это разрешение устарело на уровне API 31.
  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Требования RuStore, предъявляемые к разрешениям приложения, не являются
более строгими по сравнению с правилами Google Play и сохраняют их
терминологию для удобства разработчиков.

Актуальная информация по категориям разрешений доступна по ссылке:

<https://developer.android.com/reference/android/Manifest.permission>

## **Публикация приложений** {#публикация-приложений .unnumbered}

Опубликуйте свое приложение, чтобы пользователи могли скачать его из
RuStore.

1.  Откройте [[Консоль
    RuStore]{.underline}](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Нажмите «Добавить приложение».

4.  В открывшемся окне введите название приложения.

5.  Нажмите «Добавить».

6.  Выберите добавленное приложение.

7.  Нажмите «Загрузить версию».

Шаги по загрузке версии будут отличаться в зависимости от типа
приложения: «Универсальный» (подходит для телефона, планшета и ТВ) или
«Только для ТВ». Если вы выбрали «Универсальный» тип приложения,
дополнительно будет предложено заполнить информацию для ТВ-версии. Если
ваше приложение подходит только для ТВ, следуйте инструкции на странице
[[Добавление приложения для устройства
ТВ]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/app-publication/adding-an-app-for-a-tv-device).

В случае, если создано универсальное приложение и загружена версия для
мобильных устройств и ТВ, последующие версии могут быть только
универсальными. Если необходимо добавить новую версию, которая подходит
только под ТВ, создайте раздельные версии приложения: универсальное +
ТВ.

![800](media/image65.png){width="5.833333333333333in"
height="11.848957786526684in"}

### **Загрузка версии приложения** {#загрузка-версии-приложения .unnumbered}

### **RuStore поддерживает загрузку приложений в форматах APK и ААВ.** {#rustore-поддерживает-загрузку-приложений-в-форматах-apk-и-аав. .unnumbered}

### **Требования к загрузке файла APK** {#требования-к-загрузке-фаила-apk .unnumbered}

### **При загрузке первой версии убедитесь, что:** {#при-загрузке-первой-версии-убедитесь-что .unnumbered}

###  **размер файла не превышает 2,5 ГБ;**

###  **файл подписан [[цифровым сертификатом]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/app-publication/APK-signature);**

###  **имя пакета уникально;**

###  **сборка проверена и настроена.**

### **При загрузке [[второй и последующих версий]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/app-publication/new-version-app) проверьте, что:** {#при-загрузке-второи-и-последующих-версии-проверьте-что .unnumbered}

###  **размер файла не превышает 2,5 ГБ;**

###  **файл подписан [[цифровым сертификатом]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/app-publication/APK-signature);**

###  **подпись соответствует предыдущей;**

###  **пакет соответствует предыдущему;**

###  **сборка проверена и настроена;**

###  **номер новой версии приложения больше предыдущего.**

### **Требования к загрузке файла ААВ** {#требования-к-загрузке-фаила-аав .unnumbered}

### **подписи приложения должны быть добавлены отдельно перед загрузкой .aab файла.**

### **размер файла приложения не должен превышать 500 MB;**

### **имя пакета должно быть уникально;**

### **сборка должна быть проверена и настроена.**

### **К СВЕДЕНИЮ** {#к-сведению .unnumbered}

### [**[Как работать с ключами подписи APK-файлов?]{.underline}**](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/app-publication/APK-signature?utm_source=direct_none) {#как-работать-с-ключами-подписи-apk-файлов .unnumbered}

### [**[Загрузка приложений в формате ААВ]{.underline}**](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/app-publication/upload-aab/) {#загрузка-приложений-в-формате-аав .unnumbered}

### **Раздел «Что нового?»** {#раздел-что-нового .unnumbered}

### **Раздел «Что нового?» заполняется при загрузке новой версии приложения. Расскажите здесь о главных обновлениях, какие функции появились или какие баги были исправлены. При загрузке универсальной версии приложения также вы можете добавить историю изменений для ТВ-версии.** {#раздел-что-нового-заполняется-при-загрузке-новой-версии-приложения.-расскажите-здесь-о-главных-обновлениях-какие-функции-появились-или-какие-баги-были-исправлены.-при-загрузке-универсальной-версии-приложения-также-вы-можете-добавить-историю-изменений-для-тв-версии. .unnumbered}

### **Безопасность данных пользователя** {#безопасность-данных-пользователя .unnumbered}

### **Заполните информацию о категориях и типах данных, доступ к которым запрашивает приложение, а также предоставьте информацию о чувствительных разрешениях. Подробнее читайте в разделе [[Как декларировать разрешения]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/developers/publishing-and-verifying-apps/declare-app-permissions/how-to-declare-permissions).** {#заполните-информацию-о-категориях-и-типах-данных-доступ-к-которым-запрашивает-приложение-а-также-предоставьте-информацию-о-чувствительных-разрешениях.-подробнее-читайте-в-разделе-как-декларировать-разрешения. .unnumbered}

### **Информация о приложении** {#информация-о-приложении .unnumbered}

### **Укажите наименование приложения:**

### **не более 30 символов;**

### **наименование приложения должно быть уникально.**

### **Выберите категорию из предложенного списка. [[Как это сделать?]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/category)**

### **Выберите возрастное ограничение из предложенного списка. [[Как правильно выбрать возрастное ограничение?]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/age-restrictions)**

### **Введите краткое описание приложения для мобильных устройств и для ТВ-версии (до 80 символов).**

### **Введите подробное описание приложения (до 4000 символов, при формировании необходимо учесть возможность пользователя сворачивать описание до 2000 символов).**

### **Медиафайлы для каталога** {#медиафайлы-для-каталога .unnumbered}

### **Иконка** {#иконка .unnumbered}

### **Перетащите иконку приложения с рабочего стола или из папки на компьютере в область «Иконка для мобильных устройств». Также вы можете добавить отдельную иконку для ТВ-версии приложения, нажав «Добавить иконку для ТВ».** {#перетащите-иконку-приложения-с-рабочего-стола-или-из-папки-на-компьютере-в-область-иконка-для-мобильных-устройств.-также-вы-можете-добавить-отдельную-иконку-для-тв-версии-приложения-нажав-добавить-иконку-для-тв. .unnumbered}

### **ПРИМЕЧАНИЕ** {#примечание .unnumbered}

### **Если оставить это поле пустым, то иконка мобильных устройств будет также отображаться для ТВ-версии.** {#если-оставить-это-поле-пустым-то-иконка-мобильных-устройств-будет-также-отображаться-для-тв-версии. .unnumbered}

### **Требования к иконке** {#требования-к-иконке .unnumbered}

### **разрешение изображения и размер файла: 512х512 px, до 3 МБ;**

### **допустимый формат: .png или .jpg.**

### **Скриншоты** {#скриншоты .unnumbered}

### **Вы можете добавить скриншоты только для телефона. В этом случае одинаковые скриншоты будут отображаться на всех типах устройств: телефонах и планшетах.** {#вы-можете-добавить-скриншоты-только-для-телефона.-в-этом-случае-одинаковые-скриншоты-будут-отображаться-на-всех-типах-устройств-телефонах-и-планшетах. .unnumbered}

### **Вы также можете загрузить отдельные скриншоты для планшетов. В этом случае скриншоты для телефона будут отображаться на устройствах с экраном меньше 7 дюймов, а скриншоты для планшетов появятся в [[карточке приложения]{.underline}](https://help.rustore.ru/rustore/main_info/start/install_app) на устройствах с экраном от 7 дюймов и более.** {#вы-также-можете-загрузить-отдельные-скриншоты-для-планшетов.-в-этом-случае-скриншоты-для-телефона-будут-отображаться-на-устройствах-с-экраном-меньше-7-дюймов-а-скриншоты-для-планшетов-появятся-в-карточке-приложения-на-устройствах-с-экраном-от-7-дюймов-и-более. .unnumbered}

### **ПРИМЕЧАНИЕ** {#примечание-1 .unnumbered}

### **Обязательно загрузите скриншоты для мобильной версии приложения.** {#обязательно-загрузите-скриншоты-для-мобильной-версии-приложения. .unnumbered}

### **Если файл вашего приложения в формате APK или AAB подходит для ТВ, загрузите также скриншоты и баннер для ТВ.** {#если-файл-вашего-приложения-в-формате-apk-или-aab-подходит-для-тв-загрузите-также-скриншоты-и-баннер-для-тв. .unnumbered}

### **Как добавить скриншоты?** {#как-добавить-скриншоты .unnumbered}

### **Требования к изображениям** {#требования-к-изображениям .unnumbered}

### **размер файла: не более 3 МБ для телефонов и не более 5 МБ для планшетов;**

### **допустимый формат формат: .png или .jpg;**

### **максимальное разрешение: 2160х3840 px для мобильной версии; 1920х1080 px для ТВ-версии;**

### **рекомендуемое соотношение сторон --- 16:9;**

### **если ширина или высота меньше рекомендованной --- скриншот растягивается до пропорций 16:9;**

### **если ширина или высота больше рекомендованной --- скриншот обрезается до пропорций 16:9.**

![800](media/image107.png){width="5.833333333333333in"
height="4.065851924759405in"}

### **Добавление ссылки на видео** {#добавление-ссылки-на-видео .unnumbered}

### **Вы можете также добавить ссылку на видео с публичным доступом. Видео по ссылке будет доступно в карточке приложения для телефонов и планшетов.** {#вы-можете-также-добавить-ссылку-на-видео-с-публичным-доступом.-видео-по-ссылке-будет-доступно-в-карточке-приложения-для-телефонов-и-планшетов. .unnumbered}

### **Требования к видео** {#требования-к-видео .unnumbered}

### **видео должно относиться непосредственно к приложению (например, вы можете загрузить трейлер, запись геймплея и т. п.);**

### **видео не должно содержать недопустимого контента (см. [[Требования к приложениям]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/requirement-apps));**

### **видео должно быть публичным;**

### **максимальная продолжительность видеоролика: 1 мин;**

### **можно добавить только одно видео.**

### **Создание черновика версии и отправка на модерацию** {#создание-черновика-версии-и-отправка-на-модерацию .unnumbered}

### **Нажмите «Отправить на модерацию», если вы полностью заполнили форму загрузки версии приложения. Приложение отправляется на модерацию.** {#нажмите-отправить-на-модерацию-если-вы-полностью-заполнили-форму-загрузки-версии-приложения.-приложение-отправляется-на-модерацию. .unnumbered}

### **ПРИМЕЧАНИЕ** {#примечание-2 .unnumbered}

### **Перед отправкой приложения на модерацию обязательно проверьте приложение на соответствие [[требованиям к приложениям]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/requirement-apps).** {#перед-отправкой-приложения-на-модерацию-обязательно-проверьте-приложение-на-соответствие-требованиям-к-приложениям. .unnumbered}

### **Выберите «Сохранить как черновик», чтобы создать черновик и вернуться к редактированию версии приложения позже.** {#выберите-сохранить-как-черновик-чтобы-создать-черновик-и-вернуться-к-редактированию-версии-приложения-позже. .unnumbered}

### **Чтобы работать с черновиками, необходимо соблюдать следующие условия:** {#чтобы-работать-с-черновиками-необходимо-соблюдать-следующие-условия .unnumbered}

###  **создание, редактирование и удаление черновика доступно для роли владельца аккаунта, релиз-менеджера и разработчика;**

###  **вы можете создать только 1 черновик версии приложения;**

###  **черновик в RuStore Консоли можно сохранить только без APK или AAB файла. Удалите файл из формы, чтобы сохранить версию как черновик, или сразу отправьте версию приложения на на модерацию.**

### **Редактирование черновика** {#редактирование-черновика .unnumbered}

### **Чтобы продолжить заполнение формы загрузки приложения, выполните следующие шаги:** {#чтобы-продолжить-заполнение-формы-загрузки-приложения-выполните-следующие-шаги .unnumbered}

### **Перейдите на вкладку «Приложения» и выберите раздел «Версии».**

### **Нажмите «Редактировать» рядом с черновиком, чтобы перейти в форму загрузки приложения.**

### **Если необходимо удалить черновик, перейдите в меню действий и выберите «Удалить».** {#если-необходимо-удалить-черновик-перейдите-в-меню-действий-и-выберите-удалить. .unnumbered}

### **Условия добавления разработчика** {#условия-добавления-разработчика .unnumbered}

### **Чтобы добавить разработчика, который будет вести операционную деятельность с конкретным приложением, необходимо соблюдение условий:** {#чтобы-добавить-разработчика-который-будет-вести-операционную-деятельность-с-конкретным-приложением-необходимо-соблюдение-условий .unnumbered}

### **разработчик авторизовался в [[Консоли RuStore]{.underline}](https://dev.rustore.ru/);**

### **разработчик передал VK ID сотруднику, загрузившему приложение (в цифровом формате).**

### **Как загрузить новую версию приложения** {#как-загрузить-новую-версию-приложения .unnumbered}

После публикации вы можете загружать новые версии приложения.

1\. Откройте систему [RuStore
Консоль](https://console.rustore.ru/sign-in).

2\. Перейдите на вкладку «Приложения».

3\. Выберите приложение.

4\. Нажмите «Загрузить версию».

5\. Заполните [параметры
приложения](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account).

6. Перетащите скриншоты с рабочего стола или из папки на компьютере в
область «Скриншоты приложения для телефона» или «Скриншоты для
планшета».

7\. Для [платных
приложений](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/paid_app?utm_source=direct_none)
введите стоимость.

8\. Выберите параметры публикации приложения. [Как настроить
публикацию?](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account/setting_up_publication)

9\. Нажмите «Отправить на модерацию».

#### *Загрузка APK-файлов* {#загрузка-apk-файлов .unnumbered}

При загрузке файла APK в [RuStore
Консоль](https://console.rustore.ru/sign-in) укажите ту же подпись, что
и в других магазинах приложений. Тогда пользователи смогут обновить
установленные на устройстве приложения, для которых в RuStore доступна
последняя версия.

Вы также можете загрузить несколько APK-файлов. Например, если ваше
приложение есть в Google Play и подписано там, но для Rustore вы
поменяли подпись. Загрузите файлы с разными подписями, чтобы исключить
ошибки обновления у пользователей. [Как работать с ключами подписи
APK-файлов?](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account/APK_signature?utm_source=direct_none)

Если вы хотите указать новый ключ подписи, который прежде не
использовался в других магазинах, его нужно заменить везде. [Как
обновить подпись в Google
Play?](https://support.google.com/googleplay/android-developer/answer/9842756?visit_id=638150905149654896-2147605919&rd=1#upgrade)

Для замены ключа подписи в RuStore обратитесь в службу
поддержки <support@rustore.ru>.

Если ключи подписи не совпадают, пользователи не могут обновить
приложение, установленное через другой магазин.

Помимо APK-файлов в RuStore Консоль теперь доступна загрузка файлов в
формате ААВ.
[[Подробнее]{.underline}](https://www.rustore.ru/help/developers/publishing-and-verifying-apps/app-publication/upload-aab).

#### *Отправка на модерацию* {#отправка-на-модерацию .unnumbered}

Перед отправкой приложения на модерацию обязательно проверьте приложение
на соответствие [требованиям к
приложениям](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/requirement_apps).

Если при публикации новой версии приложения вы меняете стоимость,
напишите об изменениях в данной версии приложения в блоке «Описание».

Приложение отправляется на модерацию.

![600](media/image149.png){width="5.833333333333333in"
height="9.491318897637795in"}

#### *Комиссия в платных приложениях* {#комиссия-в-платных-приложениях .unnumbered}

Комиссия в платных приложениях

Комиссия RuStore составляет 15% от дохода разработчика.

Актуальные условия по размеру комиссии можно посмотреть в разделе
«[[Соглашение RuStore о распространении программных
продуктов]{.underline}](https://help.rustore.ru/rustore/legal_info/developers_agreement)».

### **Добавление приложения для устройства ТВ** {#добавление-приложения-для-устройства-тв .unnumbered}

При публикации приложения необходимо указать тип устройства, на котором
приложение будет использоваться.

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения» и нажмите «Добавить приложение».

![600](media/image139.png){width="5.833333333333333in"
height="4.0260487751531056in"}

1.  В новом окне выберите тип устройства «ТВ (Beta)», введите название
    приложения и нажмите «Добавить».

Выберите тип устройства: «Телефон» для публикации на мобильных
устройствах и планшетах или «ТВ» для публикации только на
ТВ-устройствах.

Важно!

1\. Для публикации на ТВ package_name должен отличаться от package_name
приложения для мобильных устройств.

2\. Каталог для ТВ независим от каталога для мобильных устройств.
В будущем вы сможете загрузить версию для ТВ и мобильных устройств в
рамках одного каталога, следите за обновлениями.

![500](media/image66.png){width="5.833333333333333in"
height="5.346277340332459in"}

1.  Для загрузки новой версии приложения во вкладке «Версии» нажмите
    «Загрузить версию» и заполните следующую информацию:

**Загрузите файл APK приложения и оставьте комментарий для модератора
при необходимости:**

-   Объем файла APK: не более 2.5 ГБ;

-   Допустимый формат: .apk;

-   Подпись apk должна соответствовать подписи, используемой в других
    магазинах приложений (например, в Google Play). Это позволит
    пользователям обновить установленные на устройстве приложения, для
    которых в RuStore доступна более новая версия. Вы можете указать
    новый ключ подписи, но тогда его нужно заменить во всех
    магазинах. [Как обновить подпись в Google
    Play?](https://support.google.com/googleplay/android-developer/answer/9842756?visit_id=638150905149654896-2147605919&rd=1#upgrade)

-   Имя пакета должно быть уникальным.

![800](media/image109.png){width="5.833333333333333in"
height="2.6986220472440943in"}

**Заполните информацию о приложении:**

1.  Укажите наименование приложения:

-   не более 50 символов;

-   наименование приложения должно быть уникальным.

1.  Выберите категорию из предложенного списка. [Как это
    сделать?](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/thematic_categories_for_app)

2.  Выберите возрастное ограничение из предложенного списка. [Как
    правильно выбрать возрастное
    ограничение?](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/age_restrictions)

3.  Введите краткое описание приложения (до 80 символов).

4.  Введите подробное описание приложения (до 4000 символов).

![](media/image71.png){width="5.833333333333333in"
height="4.314781277340333in"}

Перетащите иконку приложения с рабочего стола или из папки на компьютере
в область «Иконка для каталога приложений». Требования к иконке:

-   Объем изображения: не более 3 MB;

-   Допустимый формат: .png или .jpg;

-   Размер изображения: 512x512.

![538](media/image25.png){width="5.833333333333333in"
height="3.719346019247594in"}

Перетащите скриншоты с рабочего стола или из папки на компьютере в окно
«Скриншоты приложения для телефона». Требования к скриншотам:

-   Необходимо выбрать два скриншота или более.

-   Формат: JPEG или PNG (24-бит без альфа-канала);

-   Рекомендуемый размер: 1920 x 1080 пикселей (соотношение 16:9)

-   Рекомендуемый объем: не более 3 MB;

-   Разрешение: от 320p до 4k

Баннер для ТВ будет **первым** скриншотом при публикации приложения на
ТВ.

![](media/image77.png){width="5.833333333333333in"
height="2.989843613298338in"}

**Настройте публикацию приложения: «Автоматически после модерации» или
«Вручную».**

![](media/image14.png){width="5.5in" height="2.0694444444444446in"}

Подробная информация о настройке публикации приложения приведена в
разделе [Автоматическая и ручная публикация
приложения](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account/setting_up_publication/instant_app_publishing).

1.  Нажмите «Отправить на модерацию».

Перед отправкой приложения на модерацию обязательно проверьте приложение
на соответствие [требованиям к
приложениям](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/requirement_apps).

Приложение будет отправлено на модерацию.

После прохождения модерации статус приложения изменится и появится
кнопка «Опубликовать».

Нажмите «Опубликовать», и Ваше приложение будет доступно на ТВ.

Если возникли вопросы --- обратитесь в службу
поддержки <support@rustore.ru>.

### **Настройка публикации приложения** {#настройка-публикации-приложения .unnumbered}

#### *Автоматическая и ручная публикация приложения* {#автоматическая-и-ручная-публикация-приложения .unnumbered}

Вы можете настроить автоматическую/мгновенную публикацию версии
приложения, пока она находится на модерации.

Настройка мгновенной публикации доступна при первой публикации версии и
при обновлении ранее загруженной версии.

##### Автоматическая/мгновенная публикация {#автоматическаямгновенная-публикация .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите версию приложения в статусе «Ожидает модерацию».

4.  В меню выберите «Автоматически» и нажмите «Применить».

После прохождения модерации версия приложения опубликуется в RuStore в
течение одного часа. На вашу почту придет уведомление о статусе версии
приложения.

![800](media/image88.png){width="5.833333333333333in"
height="3.935598206474191in"}

Вы можете изменить публикацию с автоматической на ручную, пока модерация
не пройдена.

##### Публикация вручную {#публикация-вручную .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите версию приложения в статусе «Ожидает модерацию».

4.  В меню выберите «Ручная».

После прохождения модерации статус версии приложения изменится на
«Готова к публикации».

        5. Нажмите «Опубликовать».

![800](media/image76.png){width="5.833333333333333in"
height="3.637820428696413in"}

Вы можете снять текущую версию с публикации. Нажмите на кнопку меню и
выберите «Снять с публикации». Опубликованная версия будет
деактивирована, активируется последняя активная версия.

Если пользователи установили новую версию приложения до деактивации, то
они продолжат ей пользоваться.

#### *Отложенная публикация приложения* {#отложенная-публикация-приложения .unnumbered}

Вы можете отложить публикацию версии приложения на определенную дату и
время.

Настройка отложенной публикации доступна только при обновлении ранее
загруженной версии.

##### Управление публикацией при загрузке новой версии приложения {#управление-публикацией-при-загрузке-новой-версии-приложения .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите приложение.

4.  Загрузите новую версию приложения. [Как это
    сделать?](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account/new_version_app)

5.  Перейдите к блоку «Публикация версии».

6.  Выберите «В выбранную дату и время».

7.  Установите дату и время публикации.

8.  Нажмите «Отправить на модерацию».

Приложение отправляется на модерацию.

##### Управление публикацией во время модерации {#управление-публикацией-во-время-модерации .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите версию приложения в статусе «Ожидает модерации».

4.  Нажмите на поле с выбранным ранее типом публикации.

5.  Выберите «В выбранную дату и время».

6.  Установите дату и время публикации.

После прохождения модерации версия приложения автоматически опубликуется
в RuStore в указанную дату и время. На вашу почту придет уведомление о
статусе версии приложения.

![512](media/image119.png){width="5.833333333333333in"
height="5.924478346456693in"}

##### Управление публикацией после модерации {#управление-публикацией-после-модерации .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите версию приложения в статусе «Готова к публикации».

4.  В меню нажмите «Редактировать описание». Откроется страница
    публикации версии приложения.

5.  Перейдите к блоку «Публикация версии».

6.  Выберите «В выбранную дату и время».

7.  Нажмите «Отправить на модерацию».

Версия приложения автоматически опубликуется в RuStore в указанную дату
и время. На вашу почту придет уведомление о статусе версии приложения.

Вы можете изменить настройки отложенной публикации, если:

-   приложение находится на модерации;

-   приложение прошло модерацию, но еще не наступил срок публикации.

#### *Поэтапная публикация приложений* {#поэтапная-публикация-приложений .unnumbered}

Вы можете опубликовать приложение поэтапно на определенный процент
пользователей. Это поможет оперативно отслеживать ошибки, проблемы или
негативные отзывы на конкретную версию приложения.

Поэтапная публикация доступна только при обновлении ранее загруженной
версии.

Для выбора процента пользователей доступны значения:

-   5%.

-   10%.

-   25%.

-   50%.

-   75%.

-   100%.

Можно менять значение процентов в большую сторону. Завершение поэтапной
публикации --- 100% пользователей.

##### Управление публикацией при загрузке новой версии {#управление-публикацией-при-загрузке-новой-версии .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите приложение.

4.  Загрузите новую версию приложения. [Как это
    сделать?](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account/new_version_app)

5.  Перейдите к блоку «Публикация версии».

6.  Укажите процент пользователей.

Вы можете выбрать процент пользователей, если выбрана автоматическая
публикация или публикация вручную.

1.  Нажмите «Отправить на модерацию».

Приложение отправляется на модерацию.

##### Управление публикацией во время модерации {#управление-публикацией-во-время-модерации-1 .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите версию приложения в статусе «Ожидает модерации».

4.  В меню нажмите «Редактировать описание». Откроется страница
    публикации версии приложения.

5.  Перейдите к блоку «Параметры развёртывания» и укажите процент
    пользователей.

6.  Нажмите «Отправить на модерацию».

Если вы измените
[автоматическую](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account/setting_up_publication/instant_app_publishing)
или
[ручную](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account/setting_up_publication/instant_app_publishing#arm)
публикацию на
[отложенную](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account/setting_up_publication/delayed_publication),
процент пользователей автоматически станет 100%.

![564](media/image55.png){width="5.833333333333333in"
height="5.77127624671916in"}

##### Управление публикацией после модерации {#управление-публикацией-после-модерации-1 .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите версию приложения в статусе «Готова к публикации».

4.  Нажмите на кнопку с ранее настроенным процентом аудитории.

5.  Укажите процент пользователей.

![296](media/image22.png){width="4.111111111111111in"
height="5.166666666666667in"}

Изменение процента пользователей доступно только в большую сторону.

1.  Нажмите «Применить».

Версия приложения публикуется и рандомно выбранные пользователей
получают обновление версии приложения.

![800](media/image118.png){width="5.833333333333333in"
height="3.222298775153106in"}

Вы можете остановить поэтапную публикацию. Нажмите на кнопку меню и
выберите «Снять с публикации». Обновленная версия будет деактивирована,
активируется последняя активная версия.

Если пользователи установили новую версию приложения до деактивации, то
они продолжат ей пользоваться.

### **Как работать с ключами подписи APK-файлов** {#как-работать-с-ключами-подписи-apk-файлов-1 .unnumbered}

#### *Что такое подписи приложений Android?* {#что-такое-подписи-приложений-android .unnumbered}

RuStore поддерживает один формат приложений --- это файлы с расширением
APK.

Каждый APK-файл должен быть подписан цифровым сертификатом, который
Android использует для идентификации автора приложения. Подпись
необходимо хранить так же надёжно, как и личный пароль.

#### *Как Android проверяет версии?* {#как-android-проверяет-версии .unnumbered}

Android сравнивает цифровые отпечатки сертификатов каждого подписанного
APK-файла.

Цифровой отпечаток --- это последовательность байтов, которая создаётся
путём применения криптографической хеш-функции к открытому ключу.

Цифровой отпечаток имеет примерно такой вид:

43:51:43:a1:b5:fc:8b:b7:0a:3a:a9:b1:0f:66:73:a8

#### *Для чего нужна проверка подписей?* {#для-чего-нужна-проверка-подписей .unnumbered}

Этот процесс необходим, если приложение было размещено в Google Play.
При загрузке такого приложения в RuStore нужно использовать ту же
подпись, что и в Google Play. Тогда пользователи смогут без ошибок
обновить установленные на устройстве приложения, для которых в RuStore
доступна более новая версия.

#### *Обязательно ли использовать подпись с Google Play, если есть собственная?* {#обязательно-ли-использовать-подпись-с-google-play-если-есть-собственная .unnumbered}

Нет. Если ваше приложение есть в Google Play, но у вас есть собственная
подпись, вам не нужно проходить проверку подписей. Вы можете сразу
загрузить файлы с собственной подписью в RuStore. Процесс необходим
только в том случае, если вы используете подпись Google Play. Также вы
можете загрузить пакеты APK c двумя подписями.

#### *Почему пользователи не могут обновить приложения?* {#почему-пользователи-не-могут-обновить-приложения .unnumbered}

Одна из распространённых ошибок паблишеров --- это использование разных
подписей для приложения, публикуемого в RuStore и других сторах.

Например, первоначально загружаемая версия приложения подписана одним
сертификатом. А следующая версия подписана --- другим. Из-за этих
различий Android не позволяет установить обновления для этого
приложения.

Почему так происходит:

1.  Разработчик мог утратить сертификат и сгенерировал новый для
    публикации приложения в сторе.

2.  Разработчики могут публиковать одно и то же приложение в разных
    магазинах. Например, изначально разработчик публиковал приложения в
    Google Play и использовал один сертификат. Но после перехода в
    RuStore начал использовать другой сертификат.

Таким образом, пользователи делятся на два типа:

-   установившие приложение из Google Play;

-   загрузившие из RuStore.

Если пользователь установил RuStore и хочет обновить приложение, которое
ранее было загружено из Google Play, --- он не сможет этого сделать
из-за разных сертификатов.

#### *Как можно решить данную проблему?* {#как-можно-решить-данную-проблему .unnumbered}

1.  Рекомендуемый способ --- использовать один сертификат на все версии
    приложения, чтобы избежать проблем с обновлениями версий из разных
    источников.

2.  Радикальный способ --- просить пользователей удалить «старые» версии
    приложения, которые не удаётся обновить, и просить скачать новые. Но
    такой способ связан с риском потери части аудитории.

3.  Также с помощью технической поддержки RuStore можно обновить подпись
    приложения. Подробно описано в разделе ниже.

RuStore рекомендует использовать сертификат, сохранённый локально для
большего контроля над выпусками приложений.

Если вы используете Google Play App Signing, позволяющая Google Play
самостоятельно генерировать и хранить подпись, то можете столкнуться с
отсутствием возможности использования сертификата вне Google Play.

#### *Как решить проблему через поддержку RuStore?* {#как-решить-проблему-через-поддержку-rustore .unnumbered}

Если необходимо обновить подпись, то напишите соответствующее письмо в
техподдержку на <support@rustore.ru>.

Специалисты заведут обращение и проверят принадлежность приложения к
обратившемуся разработчику.

Если идентификация пройдена успешно, то специалист запускает процесс
деактивации старого сертификата. После этого разработчику достаточно
загрузить версию APK-файла с новым сертификатом подписи общим для
RuStore и других сторов.

#### *Что делать, если нужно использовать разные подписи?* {#что-делать-если-нужно-использовать-разные-подписи .unnumbered}

Если у вас выпущена отдельная подпись для RuStore, но приложение
опубликовано в Google Play --- загрузите APK-файлы с обеими подписями и
выберите по умолчанию подпись, выпущенную вне сервисов Google. Это
сократит число ошибок при обновлении у пользователей.

### **Как удалить карточку приложения** {#как-удалить-карточку-приложения .unnumbered}

Вы можете удалить карточку приложения из системы [RuStore
Консоль](https://console.rustore.ru/sign-in). Удаление доступно только
для тех приложений, в которых ни одна из версий не была отправлена на
модерацию.

Удалить карточку приложения может только владелец аккаунта. [Роли
пользователей в
RuStore](https://help.rustore.ru/rustore/for_developers/acc_developers/user_roles)

1.  Перейдите в раздел «Приложения».

2.  Выберите нужное приложение и нажмите
    ![33](media/image93.png){width="0.3706288276465442in"
    height="0.3986012685914261in"}, чтобы перейти в контекстное меню.

3.  Выберите пункт «Удалить приложение».

4.  Нажмите на кнопку «Удалить».

![700](media/image121.png){width="5.833333333333333in"
height="4.494535214348207in"}

### **Как выбрать регион для публикации приложения** {#как-выбрать-регион-для-публикации-приложения .unnumbered}

Выберите территории, где пользователи смогут установить ваше приложение
на свои устройства. Сейчас в RuStore доступно отображение приложений в
России и других странах.

Пользователи смогут обновить уже скачанные приложения независимо от
настроек доступности.

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите нужное приложение.

4.  В левом боковом меню выберите «Страны и регионы».

![700](media/image87.png){width="5.833333333333333in"
height="3.733974190726159in"}

5\. Проверьте наличие галочек напротив названий территорий, где ваше
приложение будет доступно.

Снимите галочку рядом с названием региона, чтобы приложение не
отображалось на выбранной территории.

![700](media/image80.png){width="5.833333333333333in"
height="3.224536307961505in"}

## **Платные приложения** {#платные-приложения .unnumbered}

Выберите тип приложения при добавлении в RuStore Консоль: бесплатное или
платное.

Подключите монетизацию, чтобы загружать платные приложения. [Как это
сделать?](https://help.rustore.ru/rustore/for_developers/Monetization/how-to-enable-subscription-monetization-in-RuStore)

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Нажмите «Добавить приложение».

4.  В открывшемся окне введите название приложения.

5.  Выберите параметр «Бесплатное» или «Платное».

Изменение параметра будет недоступно для этой версии приложения.

        6. Нажмите «Добавить».

![300](media/image120.jpg){width="5.833333333333333in"
height="6.319444444444445in"}

Вы можете обновить цены вашего приложения при редактировании или при
[загрузке новой
версии](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/account/new_version_app)
приложения.

### **Как изменить цену приложения** {#как-изменить-цену-приложения .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите приложение.

4.  Нажмите «Редактировать».

5.  Введите новую стоимость приложения.

6.  Нажмите «Отправить на модерацию».

Перед отправкой приложения на модерацию обязательно проверьте приложение
на соответствие [требованиям к
приложениям](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/requirement_apps).

Будет создана новая версия приложения, которая отправится на
модерацию. После прохождения модерации статус приложения изменится и
появится кнопка «Опубликовать».

Для публикации приложения нажмите «Опубликовать». Новая цена приложения
отобразится в RuStore.

![450](media/image89.jpg){width="5.45in" height="10.666666666666666in"}

Чтобы настроить цены на товары в приложении, узнайте, [как создавать
платный товар в
приложении](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-paid-product-in-application).

Чтобы настроить цены на подписки, узнайте, [как создавать подписку на
приложение](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-app-subscription).

### **Комиссия в платных приложениях** {#комиссия-в-платных-приложениях-1 .unnumbered}

Комиссия RuStore составляет 15% от дохода разработчика.

Актуальные условия по размеру комиссии можно посмотреть в разделе
«[[Соглашение RuStore о распространении программных
продуктов]{.underline}](https://help.rustore.ru/rustore/legal_info/developers_agreement)».

## **Требования к приложениям** {#требования-к-приложениям .unnumbered}

Каждое приложение перед публикацией в RuStore проходит обязательную
модерацию. Все требования, перечисленные в тексте, являются
обязательными для разработчика. Невыполнение требований может стать
основанием для отказа в публикации приложения, а равно и удаления
приложения из стора, если нарушения были выявлены после прохождения
модерации.

В блоке с этим значком размещаются рекомендации, желательные для
исполнения.

В блоке с этим значком размещаются важные уточнения к требованиям.

Перед публикацией разработчикам необходимо перепроверить:

1.  **Работоспособность приложения:**

-   приложение должно запускаться и работать стабильно без сбоев и
    ошибок;

-   все заявленные возможности приложения должны работать корректно;

-   запрещается публиковать приложения, которые провоцируют сбои,
    принудительно закрываются, зависают или работают с ошибками;

-   приложение должно быть самоценным и иметь оригинальное наполнение.
    Мы не приветствуем приложения, единственной целью которых является
    перенаправление на сайт (WebView). Приложение может дублировать
    функциональность сайта или обращаться к WebView для выполнения
    некоторых задач, однако оно должно восприниматься пользователем как
    завершённый, самостоятельный продукт. Если мы заподозрим, что целью
    публикации приложения является привлечение трафика на сайт, можем
    заблокировать доступ к нему;

-   приложение не должно содержать большое количество рекламы, которая
    будет мешать полноценному использованию приложения (демонстрация
    рекламы после каждого действия пользователя), или не предоставляет
    способов убрать её с экрана;

-   если в приложении присутствует возможность авторизации, пользователь
    должен иметь возможность успешно пройти её, не прибегая к сторонним
    ресурсам;

-   если ваше приложение рассчитано на ограниченный круг пользователей,
    вам нужно предоставить данные от тестового аккаунта в комментарии
    модератору;

Не забудьте предоставить тестовые данные авторизации модераторам RuStore
в поле «Комментарии для модераторов» для проверки функциональности.
Убедитесь, что в демонстрационном режиме представлены все функции
приложения.

-   убедитесь, что ваше приложение адаптировано под большинство
    современных мобильных устройств --- не допускаются ошибки и
    некорректная вёрстка приложений;

-   убедитесь, что вы загружаете верную версию приложения --- для
    мобильных устройств.

Чтобы обеспечить актуальность контента для пользователя, RuStore
оставляет за собой право блокировать и (или) удалять приложения, версии
которых ниже версий, размещённых в других сторах.

-   если приложение было скачано из RuStore, то когда будет доступна
    новая весрия, пользователь должен получить уведомление с
    рекомендацией обновиться именно через RuStore.

2.  **Содержание приложения:**

Приложение, его описание и функциональность не должны нарушать
законодательство РФ!

Правила RuStore запрещают публиковать приложения, нарушающие
законодательство РФ и использующиеся для обхода законодательных норм.
RuStore оставляет за собой право отказать в публикации приложению,
которое направлено на нарушение законодательства РФ, а также скрыть
такое приложение, если оно было опубликовано ранее.

Приложение, его карточка и пользовательский контент в нём не должны
содержать:

-   этически неуместных высказываний или идей: открытой дискриминации по
    признакам религии, расы, сексуальной ориентации, пола, национального
    и этнического происхождения, а также призывов к насилию, оскорблений
    вне юмористического контекста и так далее;

-   предложений продажи или распространения незаконных товаров
    (рецептурные препараты, наркотические вещества, оружие, табачная и
    никотиновая продукция с возможностью доставки и т.д.) и услуг
    (проституция, подделка документов, услуги взлома, накрутки и т.д.);

-   запрещённый порнографический контент, в том числе рисованный.
    Ограничение относится также к приложениям для знакомств и другим
    приложениям, которые могут содержать порнографию;

-   реалистичные изображения людей или животных, которых убивают,
    калечат, пытают или мучают, а также иной шокирующий контент, если он
    не направлен на соответствующую тематику и возрастную категорию
    (медицинский контент);

-   призывов к суициду в любой форме и в любом контексте, в том числе
    изображений или романтизации селф-харма;

-   товарных знаков и интеллектуальной собственности других лиц, в том
    числе логотипов и названий, вводящих пользователей в заблуждение;

Если ваше приложение является официальным партнёром другого сервиса,
пожалуйста, предоставьте нам документальное подтверждение этого статуса.
RuStore оставляет за собой право выборочной проверки документов,
подтверждающих право интеллектуальной собственности.

-   ссылок на сторонние магазины приложений или витрины, фишинговых и
    нерелевантных ссылок.

В RuStore запрещается размещать приложения, связанные с организацией и
проведением азартных игр, приёмом ставок в казино и выплатой выигрышей
реальными деньгами.

Разработчик, выкладывающий приложение с возможностью публикации
пользовательского контента, должен обеспечить своевременную и адекватную
премодерацию этого контента или постмодерацию по жалобам пользователей.

Приложения с пользовательским контентом или социальных сетей должны
включать:

-   определение и критерии неприемлемого контента;

-   механизм для сообщения об оскорбительном контенте;

-   блокировку пользователей, злоупотребляющих услугами сервиса;

-   контактную информацию с технической поддержкой или командой
    модерации.

Модераторы приложения должны своевременно реагировать на проблемы
пользователей и обращения технической поддержки RuStore.

Если приложение включает пользовательский контент с сайта, на котором
может отображаться взрослый контент, то он должен быть скрыт по
умолчанию и отображаться только для пользователей, включивших его на
сайте.

3.  **Безопасность приложения и защита прав пользователей:**

-   в приложении не должно содержаться вредоносных и фишинговых ссылок;

-   если приложение подразумевает работу с персональными данными,
    убедитесь, что у вас есть официальный статус оператора персональных
    данных. Вы также должны уведомить пользователя о том, что его данные
    собираются, и получить его согласие на их обработку;

-   если в вашем приложении есть возможность осуществлять покупки,
    предоставьте пользователю подробную информацию о порядке проведения
    оплаты товаров и услуг, а также их доставки и возврата. Соблюдайте
    «[Закон о защите прав
    потребителя](https://www.consultant.ru/document/cons_doc_LAW_305/)».

4.  **Конфиденциальность и данные устройства:**

В процессе работы ваше приложение может получать доступ к личным и
конфиденциальным данным пользователя на устройстве.

Рекомендуем ознакомиться с документацией по [декларации
разрешений](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/Declare_app_permissions).
В RuStore приняты следующие уровни разрешений:

-   запрещённые;

-   чувствительные;

-   безопасные;

-   устаревшие.

Если при загрузке в «RuStore Консоль» в приложения будут обнаружены
запрещённые разрешения (protection level --- «not for use by third party
applications»), данная версия будет отклонена. APK-файл необходимо
доработать, исключив запрещённые разрешения, и загрузить повторно.

Если при загрузке приложения обнаружатся чувствительные разрешения,
разработчику следует обосновать использование каждого в появившемся
блоке «Чувствительные разрешения».

При работе с разрешениями удостоверьтесь в том, что:

-   данные, полученные с разрешения пользователя, не предназначены для
    продажи, а также распространения и передачи третьим лицам;

-   получение разрешений не используется в целях обхода настроек
    конфиденциальности устройства;

-   приложение запрашивает только те разрешения, которые требуются для
    предоставляемого сервиса;

-   если пользователь отказывает в предоставлении разрешения, вы не
    стремитесь его переубедить. Вы можете предоставить альтернативу, не
    требующую разрешений. Например, предложите пользователю найти
    ближайший офис на карте самостоятельно, а не на основании данных о
    местоположении устройства;

-   согласие пользователя на предоставление разрешения предоставлено в
    форме активного действия. Например, не считается согласием
    автоматически закрывающееся окно, умышленный или случайный выход из
    диалога;

-   информация о запрашиваемых разрешениях доступна пользователям. Вы
    можете разместить эти сведения внутри приложения и опубликовать
    ссылку или информационный блок в описании приложения в магазине
    RuStore;

-   вы довели до сведения пользователей информацию обо всех
    запрашиваемых разрешениях и целях их использования. При выявлении
    несоответствий мы можем попросить предоставить и/или опубликовать
    дополнительные пояснения.

Мы просим принимать разумные и обоснованные действия для недопущения
использования предоставляемого вами сервиса в противоправных целях. Если
не соблюдаются требования, приложение и публикующее его лицо могут быть
заблокированы в RuStore.

5.  **Тип приложения:**

При публикации приложения укажите, что ваше приложение является
«Платным», если в нём отсутствует бесплатная функциональность.

Бесплатные приложения могут предоставлять возможность платной подписки и
покупки продуктов внутри приложения.

В случае подписки у пользователей должна быть возможность использовать
приложения и часть его функциональности до оформления подписки. При этом
пользователь должен быть явно проинформирован о наличии подписки и её
стоимости.

Обратитесь к разделам «[Как создать платный товар в
приложении](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-paid-product-in-application)»
и «[Как создать подписку на
приложение](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-app-subscription)»,
чтобы настроить платный контент для своего приложения.

Обратите внимание, что намеренное введение пользователей в заблуждение
может привести к удалению вашего приложения из RuStore.

6.  **Название, описания, иконка и скриншоты приложения**

6.1 В названии и описаниях приложения, в том числе в истории изменений
версий, не должно содержаться:

-   кликбейтов: воздержитесь от использования слов «лучший»,
    «единственный», «запрещённый», «секретный», «самый» и аналогичных.
    Если для описания приложения вы используете слово «официальный», мы
    попросим подтвердить этот статус документально;

При публикации приложения в RuStore разработчик должен подтвердить, что
использование приложения и любого контента внутри него не нарушает права
третьих лиц. Мы можем запросить подтверждение такого права на любом
этапе проверки.

Воздержитесь от иных словесных и графических способов ввести
пользователя в заблуждение.

-   завуалированных или прямых оскорблений, мата, бранных слов;

-   товарных знаков и интеллектуальной собственности других лиц, в том
    числе логотипов и названий;

-   ссылок на сторонние магазины приложений или витрины, фишинговых и
    нерелевантных ссылок.

Перед отправкой приложения на модерацию воспользуйтесь сервисами
проверки орфографии для корректировки описания.

6.2 В названии и кратком описании приложения запрещается использовать
эмодзи и специальные символы, если они не являются частью бренда.

Если название приложения содержит аббревиатуру или профессиональные
термины и сокращения, рекомендуем в кратком описании указывать
назначение приложения.

Приложение должно иметь одинаковые названия как на витрине, так и при
установке на устройство пользователя.

6.3 Подробное описание приложения должно быть чётким, последовательным,
понятным и написанным на русском языке. Исключение возможно для терминов
и названий. В описании должны указываться только функции и контент,
доступные в момент публикации приложения.

Рекомендуем не использовать в подробном описании эмодзи, смайлики или
повторяющиеся специальные символы. Не стоит злоупотреблять ключевыми
словами, заглавными буквами или иными способами навязчивого привлечения
внимания пользователей.

6.4 Иконка не должна:

-   имитировать иконки государственных приложений;

-   использовать товарные знаки и интеллектуальную собственность других
    лиц, в том числе логотипов, вводящих пользователей в заблуждение;

-   отображать значок непрочитанных сообщений или уведомлений, если они
    отсутствуют в приложении.

Приложение должно иметь одинаковые иконки как на витрине, так и при
установке на устройство пользователя.

6.5 Скриншоты должны отображать актуальную механику и функциональность
приложения или игры, а не только заголовок, страницу входа, заставку или
арты. Недопустимо формирование ленты скриншотов, состоящей только из
артов или элементов, не относящихся к интерфейсу приложения.

В случае с игровыми приложениями скриншоты должны отображать актуальный
уровень графики.

Скриншоты не должны содержать:

-   элементов интерфейса Android или других приложений;

-   функциональности, которой еще нет или уже нет в приложении.

6.6 Требования к видео:

-   видео должно относиться непосредственно к приложению (например, вы
    можете загрузить трейлер, запись геймплея и т. п.);

-   видео не должно содержать недопустимого контента (см. пункт 2.
    Содержание приложения);

-   видео должно быть публичным;

-   страница, на которой размещено видео, должна быть открыта для всех
    пользователей. Если вы добавляете видео со страницы с ограниченным
    настройками приватности, то видео необходимо переместить в группу
    или паблик с открытым доступом.

-   добавить ссылку можно только на видео с сервиса VK Видео;

-   длительность видео не должна быть дольше 1 минуты;

-   можно добавить только одно видео.

6.7 Разметка приложения:

-   приложение должно иметь правильную категорию. Пожалуйста,
    ознакомьтесь со [списком возможных
    категорий](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/category).
    Модератор может изменить категорию приложения, в случае неверного
    указания;

-   приложение должно иметь правильную возрастную категорию. Пожалуйста,
    ознакомьтесь с [возрастными
    ограничениями](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/age_restrictions),
    если вы не уверены, какой ценз поставить.

## **Рекомендации по ASO** {#рекомендации-по-aso .unnumbered}

Одним из главных факторов, влияющих на развитие RuStore, является
доступность приложений. Чтобы пользователи могли найти ваше приложение,
его важно подробно описать и интересно оформить. Это поможет увеличить
число установок и улучшить позиции в списках приложений и поиске.

RuStore использует несколько параметров для формирования результатов
поиска приложений. Вот некоторые из них, на которые мы бы хотели
обратить дополнительное внимание:

-   Рейтинг. Чем он выше, тем выше позиция приложения в списке. Важно,
    чтобы разработчик активно отвечал на отзывы пользователей. RuStore
    проводит автоматическую и ручную проверку рейтинга, чтобы убедиться
    в отсутствии накруток. Вы можете увеличить число оценок запрашивая
    их у пользователей с помощью [RuStore SDK для подключения отзывов и
    оценок](https://help.rustore.ru/rustore/for_developers/developer-documentation/SDK-reviews-ratings).

-   Число установок. Чем их больше, тем выше вероятность попадания
    приложения в топ. Однако, не стоит использовать накрутки, важен
    только органический трафик. Чтобы продвигать приложение, разработчик
    может разместить на своих ресурсах кнопку для скачивания или
    использовать рекламу. Это поможет привлечь аудиторию и улучшить
    позиции.

-   **Количество переходов в установку.** RuStore рекомендует сразу
    оформлять свои приложения так, чтобы конверсия была высокой. Важно
    правильно оформить скриншоты, добавить в описание достаточное их
    количество и вести раздел «Что нового?». Это поможет поднять
    количество скачиваний приложения.

-   **Количество оценок и их распределение.** Чем больше положительных
    оценок, тем лучше! RuStore рекомендует вовремя отвечать своим
    пользователям, дорабатывать приложение, чтобы улучшать его
    функциональность, стимулировать пользователей ставить оценки и
    писать комментарии. Это также позволит приложению подняться выше в
    выдаче. Необхдимо помнить, что RuStore отслеживает накрутки и
    пресекает их использование, это только навредит. [RuStore SDK для
    подключения отзывов и
    оценок](https://help.rustore.ru/rustore/for_developers/developer-documentation/SDK-reviews-ratings)позволит
    упростить работу с отзывами и нативно привлекать пользователей
    оставлять их прямо из приложения.

## **Возрастные ограничения** {#возрастные-ограничения .unnumbered}

Для приложений, опубликованных в RuStore, работает система возрастных
ограничений. Ограничения помогают пользователям понять, содержит ли
приложение потенциально недопустимый контент для людей определенного
возраста.

Возрастные ограничения не несут информации о целевой группе приложения.

Укажите возрастное ограничение при публикации приложения или его новой
версии, если с обновлением появился потенциально недопустимый контент
для определенной возрастной группы. Эта информация поможет пользователям
RuStore принять решение об установке приложения.

### **Как указать возрастное ограничение** {#как-указать-возрастное-ограничение .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Выберите приложение.

4.  Выберите версию приложения.

5.  Нажмите ![35](media/image146.jpg){width="1.4833333333333334in"
    height="1.725in"}.

6.  Найдите подраздел «Возрастная категория».

7.  Выберите один из вариантов ограничений в выпадающем списке.

8.  Нажмите «Сохранить».

![751](media/image99.jpg){width="5.833333333333333in"
height="8.773990594925634in"}

### **Как выбрать ограничение** {#как-выбрать-ограничение .unnumbered}

В RuStore используются следующие возрастные ограничения:

  -----------------------------------------------------------------------
  Ограничение                         Характеристики
  ----------------------------------- -----------------------------------
  0+                                  Без насилия, непристойного контента
                                      (оскорблений, ругательств).
                                      Обратите внимание, что не все
                                      приложения с этим возрастным
                                      ограничением разработаны специально
                                      для детей.

  6+                                  Некоторое насилие или страшные
                                      сцены. Не рекомендуются детям до 6
                                      лет. Обратите внимание, что не все
                                      приложения с этим возрастным
                                      ограничением разработаны специально
                                      для детей.

  12+                                 Умеренное насилие, страшные сцены,
                                      непристойный контент. Не
                                      рекомендуются детям до 12 лет.

  16+                                 Насилие или сексуальный контент. Не
                                      рекомендуются детям до 16 лет.

  18+                                 Высокий уровень насилия,
                                      сексуальный контент, упоминание
                                      наркотиков или алкоголя.
                                      Рекомендуются только для взрослых.
  -----------------------------------------------------------------------

Возрастные ограничения не указывают на сложность игр. Рекомендуем
родителям или опекунам ориентироваться на возрастное ограничение, чтобы
убедиться, что содержание игры подходит ребёнку.

## **Инструкция по категориям приложений для RuStore** {#инструкция-по-категориям-приложений-для-rustore .unnumbered}

Здесь собрана общая информация о том, какие приложения входят в каждую
категорию, а также примеры для наглядности. Внимательно изучите
[таблицу](#kix.uevkpedo05uc) перед тем, как выбрать категорию для
загружаемого приложения и отправить его на модерацию.

Как выбрать категорию

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  Нажмите «Добавить приложение».

4.  Введите название приложения в открывшемся окне.

5.  Выберите тип вашего приложения в блоке «Тип»: неигровое приложение и
    игра. Приложения первого типа расположены на главной странице
    RuStore на вкладке «Приложения», а второго --- на вкладке «Игры».

6.  Выберите основную категорию для своего приложения с учётом его
    особенностей в выпадающем списке. Приложение разместится в выбранной
    категории в магазине.

7.  Выберите дополнительную категорию. Приложение разместится сразу в
    двух категориях в магазине.

![230](media/image125.jpg){width="5.833333333333333in"
height="7.777777777777778in"}

Для приложения можно выбрать две категории --- основную и
дополнительную: в основной категории указывается наиболее релевантная, а
дополнительной категории может не быть. Если вы сомневаетесь в выборе,
посмотрите [таблицу](#kix.uevkpedo05uc) ниже.

На этапе модерации специалисты поддержки поправят категорию приложения,
если потребуется.

Обратите внимание на столбец «Требования»: в нём прописаны требования и
уточнения, которые нужно обязательно учесть при назначении категорий.

Требованиями также руководствуются модераторы. Эти правила помогают нам
настроить правильную выдачу в категориях и обеспечить всем приложениям
справедливое размещение в RuStore.

Указывайте только релевантные категории для приложения в соответствии с
инструкцией, чтобы процесс публикации прошел максимально быстро и
эффективно, а пользователям было легче найти приложение.

### **Категории приложений** {#категории-приложений .unnumbered}

1\. Бизнес-сервисы

**Описание**: Внутренние сервисы для сотрудников компаний, включая
обучение и инструменты для ведения бизнеса --- бухгалтерия, логистика,
управление персоналом/закупками, СRM. Специальные инструменты ---
замерщики дверей, приложения для водителей такси и грузовых автомобилей,
курьеров и прочее. Приложения с монетизацией просмотра рекламы или
другими способами заработка.

**Требования**: Не назначайте приложениям из этой категории
дополнительную категорию «Полезные инструменты». Приложения для
курьеров, водителей такси и другого транспорта не нужно дополнительно
относить к категории «Транспорт». Банковским приложениям для бизнеса
назначается основная категория «Финансы», а в качестве дополнительной
можно указать «Бизнес-сервисы».

**Примеры**:

-   Яндекс Про: водители и курьеры;

-   Delivery Club: работа курьером;

-   Офис сотрудника РСХБ;

-   1С: Документооборот;

-   Замерщик дверей;

-   МиниСклад.

2\. Государственные

**Описание**: Приложения ведомств, а также сервисы для оформления
документов, учёта и уплаты налогов, онлайн-записи в ведомства и МФЦ,
социальных государственных программ.

**Требования**: Категория назначается только приложениям от
государственных разработчиков.

**Примеры**:

-   Госуслуги;

-   Госуслуги Авто;

-   ЦБ Онлайн;

-   Портал ЕАСУЗ;

-   Налоги ФЛ;

-   Банкноты Банка России.

3\. Еда и напитки

**Описание**: Приложения кафе и ресторанов, сервисы доставки еды и
продуктов, заказа столика, сборники рецептов.

**Требования**: Не указывайте дополнительную категорию «Покупки».

**Примеры**:

-   Самокат;

-   Вкусвилл;

-   Яндекс Лавка;

-   Пятёрочка;

-   Бургер Кинг;

-   Domino's Pizza.

4\. Здоровье

**Описание**: Приложения аптек, сервисы поиска и записи к врачу или
психологу, поиска и заказа лекарств, приложения для отдыха и релаксации,
диет и контроля питания, трекеры здоровья, сна и привычек.

**Требования**: Приложения для фитнеса и домашних тренировок относятся к
категории «Спорт» --- не указывайте категорию «Здоровье» как
дополнительную. Для аптек не назначайте дополнительную категорию
«Покупки», а для трекеров здоровья не нужно указывать категорию «Образ
жизни».

**Примеры**:

-   К врачу;

-   К врачу --- запись онлайн;

-   Аптека Озерки;

-   Первая помощь

-   Pro U --- конструктор питания;

-   Дневник аллергика;

-   Менструальный календарь;

-   Квадратное дыхание Антистресс.

5\. Книги

**Описание**: Книги, включая религиозные, комиксы и аудиокниги.

**Требования**: Приложения с детскими сказками относятся к категории
«Родителям». Дополнительно для них можно назначить категорию «Книги».

**Примеры**:

-   Литрес;

-   Аудиокниги;

-   билайн книги и аудиокниги;

-   Дзен;

-   PowerAudioBook;

-   Inspirebook.

6\. Новости и события

**Описание**: Новостные порталы и сервисы городских новостей, приложения
по городам или районам с разделом новостей, афиши событий и покупки
билетов на мероприятия.

**Примеры**:

-   РИА Новости;

-   Новости Mail.ru;

-   Lenta.ru;

-   Российская газета;

-   Мой город Волгоград;

-   Афиша.

7\. Образ жизни

**Описание**: Хобби и увлечения, религия и эзотерика, гороскопы,
психологические и другие непрофессиональные тесты, рукоделие, открытки и
поздравления, демотиваторы и картинки.

**Требования**: Религиозным книгам и аудиокнигам назначайте основную
категорию «Книги». Трекерам здоровья, женским календарям и другим
приложениям из категории «Здоровье» не назначайте дополнительную
категорию «Образ жизни». Сервисам аренды велосипедов и самокатов из
категории «Транспорт» можно дополнительно указать категорию «Образ
жизни».

**Примеры**:

-   Справочник садовода;

-   Справочник рыбака

-   Клев по погоде;

-   Нумерология и таро;

-   Поздравления с Днем Рождения;

-   Музыка и чакры;

-   Психологические тесты;

-   Анекдоты, приколы, картинки.

8\. Образование

**Описание**: Приложения для профессионального образования, школьников и
студентов, сервисы для изучения иностранных языков, обучающих курсов,
профессиональной аттестации и тестов.

**Требования**: Приложения по изучению ПДД и обучению вождению
транспортными средствами должны входить только в категорию
«Транспорт». Для электронных дневников школьника вы можете дополнительно
выбрать категорию «Родителям».

**Примеры**:

-   SkyEng;

-   Обучающие курсы --- билайн;

-   ЕГЭ Литература 2023;

-   Обучение инвестициям;

-   Дневач --- расписание занятий;

-   Учи.ру.

9\. Общение

**Описание**: Социальные сети и блоги, мессенджеры, сервисы знакомств.

**Требования**: Не указывайте дополнительную категорию «Развлечения»
приложениям для знакомств. Не указывайте дополнительную категорию
«Полезные инструменты» мессенджерам. Социальным сетям с опцией
поиска/воспроизведения/создания визуального или аудио-контента можно
указать дополнительную категорию «Развлечения». Видеозвонкам и
конференциям назначайте основную категорию «Полезные инструменты», а в
качестве дополнительной можно добавить «Общение».

**Примеры**:

-   ВКонтакте;

-   Одноклассники;

-   ЯRus;

-   Yappy;

-   Чат знакомств Galaxy;

-   Пикабу.

10. Объявления и услуги

**Описание**: Сервисы с объявлениями и поиском специалистов, доставка
отправлений  и грузов, курьерские службы, приложения салонов красоты,
химчисток, клининговых сервисов, ремонта и прочих услуг.

**Требования**: Не указывайте приложениям дополнительную категорию
«Покупки». Для курьерских сервисов можно дополнительно выбрать категорию
«Транспорт».

**Примеры**:

-   ДомКлик;

-   Суточно.ру;

-   HH.ru;

-   Авто.ру;

-   Яндекс Недвижимость;

-   СДЭК;

-   МойПрофи.

11\. Питомцы

**Описание**: Сервисы записи к ветеринару и онлайн-консультаций с
ветеринарами, объявлений по поиску животных и поддержке питомцев
приютов, приложения для изучения пород животных.

**Примеры**:

-   Ветэксперт --- ветеринар 24/7;

-   Бешенство --- график вакцинации;

-   Gooddog --- питомцы из приютов;

-   Породы собак;

-   Поиск зверей;

-   В добрые руки.

12\. Покупки

**Описание**: Приложения магазинов и маркетплейсов, сервисы списка
покупок, скидок и кешбэка.

**Требования**: Для аптек выбирайте только категорию «Здоровье». Для
доставки еды и продуктов, приложений ресторанов и кафе выбирайте только
категорию «Еда и напитки». Для приложений с объявлениями о продаже
выбирайте только категорию «Объявления и услуги».

**Примеры**:

-   Яндекс.Маркет;

-   СберМегаМаркет;

-   Ozon;

-   Читай-город;

-   Эльдорадо;

-   Flor2U;

-   Рив Гош;

-   Привет, Мир! --- акции и кешбэк;

-   Ценомер: цены, скидки, акции.

13\. Полезные инструменты

**Описание**: Приложения для работы с документами, планировщики задач,
связь и интернет, видеозвонки и видеоконференции. Приложения для умного
дома и оплаты ЖКХ от управляющих компаний. Фото- и видеоредакторы, обои
и виджеты для телефона, погода, фонарик, клавиатуры, утилиты и прочее.

**Требования**: Для мессенджеров выбирайте только категорию
«Общение». Инструменты для ведения бизнеса (CRM, бухучет и прочее)
относятся к категории «Бизнес-сервисы». Не указывайте дополнительную
категорию «Полезные инструменты». Каждое приложение --- это полезный
инструмент, не рекомендуем перегружать эту категорию.

**Примеры**:

-   Погода;

-   Клавиатуры;

-   Голосовые помощники;

-   Календари;

-   Генераторы и менеджеры паролей;

-   Текстовые редакторы;

-   Браузеры;

-   Операторы связи.

14\. Путешествия

**Описание**: Приложения для туристов, сервисы для покупки билетов и
туров, бронирования отелей, аренды жилья, а также туристические
навигаторы, экскурсии.

**Требования**: Не указывайте сервисам для покупки билетов и туров
дополнительную категорию «Транспорт». Для туристических навигаторов с
картами можете дополнительно выбрать категорию «Транспорт».

**Примеры**:

-   Аэрофлот;

-   S7;

-   ЖД билеты;

-   РЖД Пассажирам;

-   Горящие туры;

-   Карта.ру;

-   Достопримечательности России.

15\. Развлечения

**Описание**: Приложения для прослушивания музыки и радио, телеканалы и
видеосервисы, онлайн-кинотеатры, караоке, приложения для стриминга,
гейминга, покупки билетов в кино и театры, поиска мероприятий и других
развлечений, прочие развлекательные сервисы, которые не относятся к
другим категориям.

Не выбирайте категорию «Развлечения» для игр. В RuStore для них
предусмотрены отдельные категории.

**Требования**: Для аудиокниг выбирайте основную категорию
«Книги». Приложениям с трансляциями спортивных матчей, помимо основной
категории «Спорт», можно указать дополнительную категорию
«Развлечения». Социальным сетям с опцией поиска/воспроизведения/создания
визуального или аудио-контента, помимо основной категории
«Общение»,  можно указать дополнительную категорию «Развлечения». Не
указывайте дополнительную категорию «Развлечения» приложениям для
знакомств.

**Примеры**:

-   VK Музыка;

-   Яндекс.Музыка;

-   Zaycev.net;

-   Okko;

-   КиноПоиск;

-   Rutube;

-   VK Play;

-   Афиша.

16\. Родителям

**Описание**: Приложения для детей и родителей, трекеры и локаторы
нахождения детей, а также сервисы ведения беременности и развития
ребёнка, дневники грудного вскармливания, колыбельные и белый шум для
сна.

**Требования**: Для детских сказок выбирайте основную категорию
«Родителям» и дополнительную категорию «Книги». Для электронных
дневников школьника выбирайте основную категорию «Образование».
Дополнительно вы можете выбрать категорию «Родителям».

**Примеры**:

-   Дневник малыша --- режим ребёнка;

-   Где мои дети: GPS-трекер 0+;

-   Колыбельные стихи;

-   Счет до 1000;

-   Учимся читать;

-   Я беременна;

-   Логопед --- запуск речи.

17\. Спорт

**Описание**: Приложения спортивных клубов и фитнес-центров, сервисы для
новостей и трансляций спорта, тренировок и фитнеса.

**Требования**: Для беттинговых приложений выбирайте только категорию
«Ставки и лотереи». Не указывайте тренировкам и фитнес-приложениям
дополнительную категорию «Здоровье». Приложениям с трансляциями
спортивных матчей можно дополнительно указать категорию «Развлечения».

**Примеры**:

-   Матч.ТВ;

-   Sports.ru: новости спорта;

-   ФК Спартак;

-   Sport24;

-   Футбол --- новости и результаты;

-   Gym up --- дневник тренировок;

-   Счётчик отжиманий.

18\. Ставки и лотереи

**Описание**: Приложения с лотереями и ставками на спорт.

**Требования**: Не указывайте беттинг-приложениям и лотереям никаких
дополнительных категорий.

**Примеры**:

-   Фонбет --- ставки на спорт;

-   Лига ставок;

-   1хСтавка --- ставки на спорт;

-   Столото.

19\. Транспорт и навигация

**Описание**: Сервисы такси, каршеринга и совместных поездок, приложения
для водителей и пассажиров, карты и навигаторы, сервисы отслеживания
общественного транспорта и пополнения проездных билетов, сервисы аренды
самокатов и велосипедов, а также приложения по изучению ПДД и обучению
вождению транспортными средствами, страхование ОСАГО и КАСКО.

**Требования**: Для приложений по изучению ПДД и обучению вождению
другими транспортными средствами не нужно указывать категорию
«Образование». Для приложений доставки отправлений и грузов, курьерских
служб выбирайте основную категорию «Объявления и услуги». Дополнительно
для них вы можете указать категорию «Транспорт».

Также вы можете указать дополнительную категорию
«Транспорт» туристическим навигаторам с картами. Не указывайте сервисам
для покупки билетов и туров дополнительную категорию «Транспорт»,
относите их только к категории «Путешествия». Не указывайте
приложениям для водителей такси, сотрудников транспортных
компаний и курьеров дополнительную категорию «Транспорт». Относите их
только к категории «Бизнес-сервисы». Сервисам аренды велосипедов и
самокатов можно дополнительно указать категорию «Образ жизни».

**Примеры**:

-   2ГИС;

-   Яндекс Карты и Навигатор;

-   Яндекс Go;

-   Ситимобил;

-   Штрафы ГИБДД;

-   Делимобиль --- твой каршеринг;

-   Юрент.

20\. Финансы

**Описание**: Приложения банков и финансовых организаций, сервисы для
учёта расходов и ведения бюджета, перевода денег, займов и кредитных
карт.

**Требования**:

Не назначайте категорию «Финансы» приложениям с монетизацией просмотра
рекламы и другими способами заработка --- такие приложения относятся к
категории «Бизнес-сервисы».

Банковским приложениям для бизнеса в качестве дополнительной категории
можно указать «Бизнес-сервисы».

**Примеры**:

-   СберБанк с Салютом;

-   Тинькофф Банк;

-   ВТБ;

-   Личные финансы;

-   Кредитный калькулятор;

-   Финансы --- бюджет, расходы;

-   Альфа-Бизнес.

### **Категории игр** {#категории-игр .unnumbered}

Для всех игр действуют запреты на: реалистичные сцены жестокости, обилие
ненормативной лексики, шокирующий и оскорбительный контент, пропаганду
ненависти, насилия или дискриминации в отношении групп людей по
этническому, религиозному, половому, возрастному и сексуальному
признаку, высказывания клеветнического характера или заявления,
оскорбляющие честь и достоинство, иной контент, нарушающий
законодательство Российской Федерации.

1\. Аркады

**Описание**: Игры для быстрого решения виртуальных задач. Игроки должны
действовать быстро и точно, получая за удачные решения бонусы: очки,
новые умения для персонажей или элементы игрового мира и так далее.

**Примеры**:

-   Бегущий шарик;

-   Красные линии;

-   Доктор кот;

-   Зомби драйв;

-   Simple Snake;

-   Dino Trex.

2\. Викторины

**Описание**: Поиск ответов на вопросы за ограниченное количество
времени из разных областей знаний: загадки со словами и квизы. Задания
игрокам выдаются в текстовом, графическом или звуковом формате.

**Примеры**:

-   Угадай слова;

-   Загадки;

-   Математика с Дино;

-   Квиз. Викторина-Баттл;

-   Quiz Kids;

-   TriviaChallenge.

3\. Головоломки

**Описание**: Геймплей предлагает игрокам решение головоломок различной
сложности: выбор подходящих элементов и поиски логических
последовательностей.

**Примеры**:

-   Судоку;

-   Пасьянс;

-   Найди слова : Игра в филворды;

-   Сортировка шаров;

-   Открой замок;

-   Wobbler.

4\. Гонки

**Описание**: Игрокам предстоит управлять различными видами транспортам
и сражаться с ботами или другими игроками в скоростном преодолении
различных трасс.

**Примеры**:

-   Симулятор Автобуса 3D;

-   Хаги Ваги Мотокросс;

-   Shift Race: Гонки-трансформер;

-   Kart Race;

-   Gravity Moto Race;

-   Traffic Racer.

5\. Дети

**Описание**: Игры, рассчитанные на развитие детей и скрашивание их
досуга. Отличаются простой сложностью, большими и понятными графическими
элементами и интуитивным управлением.

**Примеры**:

-   Игры для детей. Учим Лунтика;

-   Математика для детей. Фиксики;

-   Английский для детей. Фиксики;

-   Поиск слов для детей;

-   Рисовалка для детей;

-   Quiz Kids.

6\. Игры с AR

**Описание**: Использование дополненной реальности для переноса части
игрового процесса из виртуального в реальный мир. Используют окружающие
элементы для помощи игроку в выполнении различных заданий.

**Примеры**:

-   AR Travel;

-   AR Gotek New Year;

-   GimaQuest;

-   AR Tourism;

-   Amusement Park VR Game;

-   KidZLab.

7\. Инди

**Описание**: Игровые проекты, создаваемые независимыми авторами и
небольшими командами без помощи издателей.

**Примеры**:

-   Тренажёры для мозга;

-   Полка Книг;

-   Загадочные земли;

-   Сон Гизы;

-   Escape Sideways;

-   Running Fish.

8\. Казино

**Описание**: Симуляторы популярных игр из казино: покер, слоты, рулетка
и так далее. Игроку предстоит набрать максимальное количество очков или
виртуальной валюты.

**Примеры**:

-   Poker Games: World Poker Club;

-   Слоты игра Fruit paradise;

-   Livegames Club;

-   Fred's Slots;

-   Pocket Chips: фишки для покера.

9\. Казуальные

**Описание**: Игры с простым геймплеем, интуитивным управлением и
понятными условиями победы. От игрока не требуется много действий для
победы. Подходят для мимолётной игры.

**Примеры**:

-   Дачники: Ферма и приключения;

-   Забытое Сокровище 2: Три в ряд;

-   Шарики: Bubble Breaker;

-   Цветные Линии;

-   Найди отличия;

-   Bridge Stick.

10\. Карточные

**Описание**: Игры с базовым набором карт, которые необходимо
использовать игроку для победы. Предусматривают игру как с ботами, так и
с реальными оппонентами.

**Примеры**:

-   Сборник карточных пасьянсов;

-   Покер. Онлайн дуэль;

-   Тысяча (1000);

-   Дурак Онлайн 3D;

-   Классический Пасьянс-7;

-   Livegames Club.

11\. Музыка

**Описание**: Приложения с различным набором звуков, а также для
обучения игры на музыкальных инструментах.

**Примеры**:

-   GLGuitar: симулятор гитары;

-   Звуки кошек, котов и котят: мяуканье, урчание;

-   Звуки животных для малышей;

-   Звук машины: клаксон, сигналка, брелок, тормоза;

-   Breakout 3D;

-   Ice Samurai.

12\. Настольные игры

**Описание**: Виртуальные аналоги популярных настольных игр, в которых
игроки ходят по очереди на ограниченном игровом поле, соблюдая заранее
оговорённые правила.

**Примеры**:

-   Шахматы;

-   Морской бой 18-й век;

-   Мини-Бильярд;

-   Покер;

-   Маджан;

-   Пятнашки-7.

13\. Приключения

**Описание**: Жанр игр, основанный на взаимодействии с окружающим
виртуальным миром или персонажами для решения загадок. В помощь игрокам
доступны подсказки и советы.

**Примеры**:

-   Дачники: Ферма и приключения;

-   Megacraft: Майнкрафт креатив;

-   Slaughter;

-   Raid & Rush;

-   Зазеркалье;

-   Мир чудес: слияние и магия.

14\. Ролевые

**Описание**: Игрокам необходимо развивать виртуального персонажа с
помощью выполнения различных заданий и взаимодействия с элементами
игрового мира. Предстоит искать различные предметы, бороться с врагами,
создавать собственные элементы мира.

**Примеры**:

-   Варвар: Кровь и Слава;

-   Гильдия Героев: Экшен ММО РПГ;

-   Моя Ферма;

-   Танки: Стальной Легион;

-   ТехноМагия;

-   Битва магов: Новая Эра.

15\. Семейные

**Описание**: Игры, которые могут вместе играть дети и родители.
Отличаются простыми сюжетами и заданиями, а также интуитивными
элементами управления.

**Примеры**:

-   Учимся читать Азбука Смешарики;

-   Английский для детей. Фиксики;

-   Наши фильмы --- фото-викторина;

-   Сокровища подводного мира;

-   Соединяй и Совмещай;

-   Tasty World: Кухня для девочек.

16\. Симуляторы

**Описание**: Игры с наиболее точным отображением действительности в
виртуальном мире. Управление техникой и аппаратами, участие в
соревнованиях и выполнение задач различных профессий.

**Примеры**:

-   Рыбалка World of Fishers;

-   Симулятор Автобуса 3D;

-   Tank Force;

-   Весёлая Ферма;

-   Небоскреб Мечты: Новые вершины;

-   Кафе мечты Боба: Бикини Боттом.

17\. Словесные игры

**Описание**: Игры, в которых предлагаются различные задания со словами:
поиск последовательностей, угадывание слов и так далее.

**Примеры**:

-   Кроссы --- кроссворды на русском;

-   Филворды --- игра в поиск слов;

-   Угадай слова;

-   Лабиринт слов: найди слова;

-   Ежедневные сканворды;

-   БУКВА.

18\. Спортивные игры

**Описание**: Имитации спортивных игр и дисциплин. Игроку предстоит
стать участников команды, тренером или менеджером.

**Примеры**:

-   Футбольный менеджер 2023;

-   Экстремальный Баскетбол. Регдольный данк;

-   Мини-Бильярд;

-   Городки 3d;

-   Домино;

-   Викторина Футбол России.

19. Стратегии

**Описание**: Игры, требующие выбора оптимальной стратегии для
выполнения поставленной цели как в реальном времени, так и в пошаговом
режиме. Как правило, игрок будет управлять не отдельным персонажем, а
группой --- военным подразделением, командой специалистов, предприятием,
вселенной и так далее.

**Примеры**:

-   Last Day on Earth: Survival;

-   Armor Age：Танки Второй мировой;

-   Герои Войны и Денег: Стратегия;

-   Space Arena: Собирай корабли;

-   Битва магов: Новая Эра;

-   Caribbean Pirates.

20. Экшен

**Описание**: Игры, в которых игроку предстоит взаимодействовать с
противниками или опасными предметами. Он будет находиться в центре
сюжета и бороться с врагами.

**Примеры**:

-   Warface: GO;

-   Tank Force;

-   Гильдия Героев: Экшен ММО РПГ;

-   Art of War 3: RTS стратегия;

-   Inspire Helicopter;

-   Gun War Z2.

## **Работа с оценками и отзывами пользователей** {#работа-с-оценками-и-отзывами-пользователей .unnumbered}

Скачав приложение из RuStore, пользователи могут оценить его и оставить
отзыв. Один пользователь может добавить оценку и отзыв только один раз,
при этом разрешается изменить их в любое время.

Сейчас в системе [RuStore Консоль](https://console.rustore.ru/sign-in)
вы можете отслеживать оценки и отзывы. В будущем мы добавим инструменты
для анализа этих данных.

Вы можете написать публичный ответ на отзыв. Эта возможность даётся,
чтобы вы могли выстраивать отношения с пользователями. Вы можете:

-   поблагодарить пользователя за хороший отзыв;

-   ответить на вопросы;

-   узнать, какими функциями пользователи хотят пользоваться в вашем
    приложении;

-   узнать об ошибках в приложении.

### **Как написать ответ на отзыв** {#как-написать-ответ-на-отзыв .unnumbered}

Чтобы написать ответ на отзыв пользователя:

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Отзывы» на панели слева.

3.  Нажмите «Ответить» под отзывом, на который хотите написать ответ.

4.  Введите текст ответа в поле «Ответ разработчика» и нажмите
    «Опубликовать».

![602](media/image148.png){width="5.833333333333333in"
height="3.236111111111111in"}

Ваш ответ будет отправлен на модерацию и ему будет присвоен статус «На
модерации». После прохождения модерации статус изменится на
«Опубликовано».

### **Изменение и удаление ответов на отзывы пользователей** {#изменение-и-удаление-ответов-на-отзывы-пользователей .unnumbered}

При необходимости вы можете отредактировать или удалить ответ в любое
время.

#### *Как изменить свой ответ на отзыв* {#как-изменить-свой-ответ-на-отзыв .unnumbered}

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Отзывы» на панели слева.

3.  Нажмите «Редактировать» под вашим ответом на отзыв.

4.  Внесите необходимые изменения в поле «Ответ разработчика» и нажмите
    «Опубликовать».

После изменения ваш ответ повторно будет отправлен на модерацию и
опубликован после проверки модератором.

#### *Как удалить свой ответ на отзыв* {#как-удалить-свой-ответ-на-отзыв .unnumbered}

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Отзывы» на панели слева.

3.  Нажмите «Удалить» под ответом на отзыв и он будет удалён.

![602](media/image97.png){width="5.833333333333333in"
height="3.2395833333333335in"}

### **Требования по ответам на отзывы** {#требования-по-ответам-на-отзывы .unnumbered}

1.  Не отклоняйтесь от темы. Ответ должен быть ясным, правдивым,
    полезным и соответствовать содержанию отзыва.

2.  Будьте вежливы. Ваша цель --- помочь пользователям найти решение
    проблемы, а не отпугнуть их. Не публикуйте ответы на отзывы с
    оскорблениями, угрозами, пренебрежительными или дискриминационными
    высказываниями. Не провоцируйте пользователей оставлять подобные
    комментарии.

3.  Отвечайте на все отзывы. Так вы покажете пользователям, что цените
    их мнение. Приложения, разработчики которых комментируют отзывы, как
    правило, получают более высокие оценки.

4.  Если пользователь настроен крайне негативно, не отвечайте негативом.
    [Как отвечать на негативные
    отзывы?](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/dealing_negative_reviews)

5.  Постарайтесь ускорить работу с позитивными отзывами, тогда у вас
    будет больше времени на решение сложных проблем пользователя.
    Например, создайте на локальном компьютере шаблоны для быстрых
    ответов и вставляйте готовый ответ. Пока в RuStore нет встроенных
    шаблонов, но мы обязательно добавим такую функциональность.

6.  Если вы используете шаблоны для быстрых ответов, то старайтесь
    менять формулировки от отзыва к отзыву. У пользователя не должно
    создаваться ощущение, что ему отвечает робот.

7.  Не публикуйте в ответах ссылки на сторонние магазины приложений или
    витрины, фишинговые и нерелевантные ссылки.

8.  Не публикуйте в ответах рекламу и промокоды других сервисов или
    покупок внутри приложения, а также предложения загрузить приложение
    из другого стора или витрины. Пользователи не считают подобную
    информацию полезной.

9.  Не публикуйте материалы сексуального характера и не используйте
    неприличные выражения.

Несоблюдение этих требований может привести к блокировке приложения или
всего аккаунта разработчика.

## **Работа с негативными отзывами** {#работа-с-негативными-отзывами .unnumbered}

Мнение пользователя о приложении возможно изменить в лучшую сторону,
если корректно ответить на отзыв.

### **Как отвечать на негативные отзывы** {#как-отвечать-на-негативные-отзывы .unnumbered}

1.  Избегайте односложных ответов без извинений. Скорее всего, ответ в
    одну строку не покажется приятным возмущенному пользователю, это
    будет выглядеть грубо и вызовет еще больше негатива.

2.  Не отвечайте официальным тоном. Формальные конструкции могут
    читаться так, будто пользователю отвечает не человек, а бот.

3.  Важно показать, что вы понимаете и разделяете чувства пользователя.
    Если проблема на стороне вашего приложения, нужно признать ошибку.

4.  Постарайтесь помочь пользователю в ответе. Старайтесь не
    использовать шаблоны для быстрых ответов на негативные отзывы.
    Всегда следует учитывать контекст и смотреть, насколько шаблонный
    ответ подходит под него.

5.  Благодарите пользователя за сообщения об ошибках в приложении. Такие
    отзывы помогают вам сделать приложение удобнее, чтобы люди хотели
    пользоваться им больше.

6.  Объясните пользователю, почему в приложении дано именно такое
    решение проблемы. Иногда пользователи не понимают, зачем вы убрали
    их любимую функцию. Если вы сможете обосновать это, возможно,
    негатив пользователя снизится.

7.  Отвечайте на отзывы быстро. Чем скорее вы поможете пользователю
    решить проблему, тем больше шансов, что он продолжит использовать
    приложение и повысит рейтинг.

Если вы обнаружили отзыв или комментарий, содержащий необъективную
информацию, мат или оскорбления, [напишите
нам](mailto:support@rustore.ru). Мы постараемся решить проблему.

## **Как собрать HAR-логи** {#как-собрать-har-логи .unnumbered}

HAR-логи (HTTP-архив) содержат записи обо всех сетевых запросах и
ответах, сделанных браузером при загрузке определённой веб-страницы. В
них находятся такие данные, как URL-адрес запрошенного ресурса, метод
HTTP, используемый для его запроса, код ответа.

HAR-логи собираются для диагностики проблем загрузки веб-страниц,
выявления ресурсов с медленной скоростью загрузки и сетевых ошибок,
мониторинга производительности и оптимизации сайта, сравнения
производительных различных страниц.

Большинство браузеров позволяют собрать HAR в отдельный файл, который
потом можно передать технической поддержке для понимания причин
возникновения бага.

Прежде чем приступить к работе, включите запись логов в консоли, чтобы
точно зафиксировать ошибку.

### **Google Chrome** {#google-chrome .unnumbered}

#### *Чтобы собрать HAR-логи:* {#чтобы-собрать-har-логи .unnumbered}

1\. Нажмите F12 на клавиатуре. Откроется окно инструментов разработчика.

2\. Выберите вкладку «Сеть»/«Network».

![700](media/image15.png){width="5.833333333333333in"
height="1.6352854330708662in"}

3\. Нажмите ![30](media/image53.png){width="0.48251640419947506in"
height="0.44055883639545057in"}, чтобы очистить сетевой журнал.

![700](media/image44.png){width="5.833333333333333in"
height="1.6198261154855642in"}

4. Установите «флажки» в полях «Сохранять журнал»/«Preserve log» и
«Отключить кеш»/«Disable cache».

![700](media/image82.png){width="5.833333333333333in"
height="1.7162609361329835in"}

5\. Повторите действия, которые привели к возникновению проблемы.

6\. Нажмите ![30](media/image32.png){width="0.8181813210848644in"
height="0.7902088801399825in"}, чтобы сохранить HAR-логи.

![700](media/image123.png){width="5.833333333333333in"
height="1.6374267279090113in"}

7\. Выберите папку для сохранения в открывшемся окне.

8\. Нажмите «Сохранить».

В указанную папку будут собраны и сохранены HAR-логи.

#### *Чтобы собрать консольные логи:* {#чтобы-собрать-консольные-логи .unnumbered}

1\. Нажмите F12 на клавиатуре, чтобы открыть окно инструментов
разработчика.

2\. Перейдите на вкладку «Console».

3\. Нажмите правой кнопкой мыши в любой области окна и выберите в
контекстном меню «Save as».

![700](media/image130.png){width="5.833333333333333in"
height="1.7629779090113735in"}

4. Выберите папку для сохранения логов и нажмите «Сохранить».

Консольные логи будут собраны и сохранены в указанной папке.

### **Microsoft Edge** {#microsoft-edge .unnumbered}

#### *Чтобы собрать HAR-логи:* {#чтобы-собрать-har-логи-1 .unnumbered}

1\. Нажмите F12 на клавиатуре, чтобы открыть окно инструментов
разработчика.

2\. Нажмите «Открыть средства разработчика».

3\. Откройте выпадающее меню и выберите «Сеть».

![700](media/image21.png){width="5.747898075240595in"
height="2.571428258967629in"}

4\. Нажмите ![30](media/image46.png){width="0.5804188538932633in"
height="0.5174825021872266in"}, чтобы очистить сетевой журнал.

5\. Установите флажки «Сохранить журнал» и «Отклюить кэш».

![700](media/image127.png){width="5.833333333333333in"
height="2.183737970253718in"}

6\. Воспроизведите проблему.

7\. Нажмите правой кнопкой мыши на любой лог и выберите «Сохранить как
все HAR с содержимым», чтобы сохранить HAR-логи.

![300](media/image34.png){width="4.991595581802275in"
height="5.613444881889764in"}

8\. Выберите папку для сохранения логов и нажмите «Сохранить».

HAR-логи будут собраны и сохранены в указанной папке.

#### *Чтобы собрать консольные логи:* {#чтобы-собрать-консольные-логи-1 .unnumbered}

1\. Нажмите F12 на клавиатуре, чтобы открыть окно инструментов
разработчика.

2\. Нажмите «Открыть средства разработчика».

3\. Откройте выпадающее меню и выберите «Консоль».

![700](media/image45.png){width="5.806722440944882in"
height="1.8403357392825896in"}

4. Нажмите правой кнопкой мыши в любой области окна и выберите в
контекстном меню «Save as».

5. Выберите папку для сохранения логов и нажмите «Сохранить».

Консольные логи будут собраны и сохранены в указанной папке.

### **Internet Explorer** {#internet-explorer .unnumbered}

#### *Чтобы собрать HAR-логи:* {#чтобы-собрать-har-логи-2 .unnumbered}

1. Нажмите F12 на клавиатуре, чтобы открыть окно инструментов
разработчика.

2\. Перейдите на вкладку Сеть.

3\. Нажмите ![30](media/image140.png){width="0.6083912948381452in"
height="0.46853127734033245in"}, чтобы начать сеанс профилирования.

![700](media/image129.png){width="5.833333333333333in"
height="1.158601268591426in"}

4\. Воспроизведите проблему.

5\. Нажмите ![30](media/image29.png){width="0.44755139982502185in"
height="0.40559383202099736in"} после воспроизведения проблемы, чтобы
остановить сеанс профилирования.

6\. Нажмите ![30](media/image49.png){width="0.6293700787401575in"
height="0.4615376202974628in"}, чтобы экспортировать HAR-файл.

7\. Выберите папку для сохранения логов и нажмите «Сохранить».

HAR-логи будут собраны и сохранены в указанной папке.

#### *Чтобы собрать консольные логи:* {#чтобы-собрать-консольные-логи-2 .unnumbered}

1\. Нажмите F12 на клавиатуре, чтобы открыть окно инструментов
разработчика.

2\. Перейдите на вкладку «Консоль».

3\. Нажмите правой кнопкой мыши в любой области окна и выберите в
контекстном меню «Копировать все».

![700](media/image133.png){width="5.833333333333333in"
height="1.76371719160105in"}

4. Создайте новый текстовых файл в формате TXT и откройте его.

5\. Вставьте скопированные данные и сохраните файл.

Консольные логи будут сохранены в созданном файле.

### **Firefox** {#firefox .unnumbered}

#### *Чтобы собрать HAR-логи:* {#чтобы-собрать-har-логи-3 .unnumbered}

1\. Нажмите F12 на клавиатуре, чтобы открыть окно инструментов
разработчика.

2\. Перейдите на вкладку «Сеть».

![700](media/image17.png){width="5.833333333333333in"
height="1.5599311023622047in"}

3\. Установите флажок «Непрерывные логи».

![700](media/image4.png){width="5.833333333333333in"
height="1.0095264654418197in"}

4\. Воспроизведите проблему.

5\. Нажмите правую кнопку мыши в сетевой таблице после воспроизведения
проблемы и выберите Сохранить все как HAR.

![700](media/image35.png){width="5.833333333333333in"
height="1.552846675415573in"}

6\. Выберите папку для сохранения логов и нажмите «Сохранить».

HAR-логи будут собраны и сохранены в указанной папке.

#### *Чтобы собрать консольные логи:* {#чтобы-собрать-консольные-логи-3 .unnumbered}

1\. Нажмите F12 на клавиатуре, чтобы открыть окно инструментов
разработчика.

2\. Перейдите на вкладку Консоль.

![700](media/image143.png){width="5.833333333333333in"
height="0.9577788713910761in"}

3\. Выберите папку для сохранения логов и нажмите «Сохранить».

![700](media/image73.png){width="5.833333333333333in"
height="1.1403160542432196in"}

Консольные логи будут собраны и сохранены в указанной папке.

### **Safari** {#safari .unnumbered}

#### *Чтобы собрать HAR-логи:* {#чтобы-собрать-har-логи-4 .unnumbered}

1. В строке меню выберите «Разработка».

Если в строке нет «Разработки», нажмите «Safari», перейдите в
«Настройки», нажмите «Дополнения» установите флажок «Показывать меню
"Разработка" в строке меню».

2. Нажмите «Подключить веб-инспектор».

3\. Откройте вкладку «Сеть».

4. Установите флажок в поле «Сохранить журнал».

![700](media/image96.png){width="5.833333333333333in"
height="0.6939818460192476in"}

5\. Нажмите «Импортировать».

![700](media/image62.png){width="5.833333333333333in"
height="0.7362456255468066in"}

6. Выберите папку для сохранения в открывшемся окне.

7\. Нажмите «Сохранить».

HAR-логи будут собраны и сохранены в указанной папке.

#### *Чтобы собрать консольные логи:* {#чтобы-собрать-консольные-логи-4 .unnumbered}

1. В строке меню выберите «Разработка».

![700](media/image2.png){width="5.833333333333333in"
height="2.099750656167979in"}

2. Нажмите «Подключить веб-инспектор».

![700](media/image61.png){width="5.833333333333333in"
height="0.976272965879265in"}

3\. Откройте вкладку «Консоль».

![700](media/image13.png){width="5.833333333333333in"
height="1.3692125984251968in"}

4\. Нажмите правой кнопкой мыши в любой области окна и выберите в
контекстном меню «Сохранить выбранные».

5\. Выберите папку для сохранения логов и нажмите «Сохранить».

Консольные логи будут собраны и сохранены в указанной папке.

### **Opera** {#opera .unnumbered}

#### *Чтобы собрать HAR-логи:* {#чтобы-собрать-har-логи-5 .unnumbered}

1\. Нажмите «Ctrl+Shift+I» или «Ctrl+Shift+J», чтобы открыть окно
инструментов разработчика.

2\. На вкладке «Сеть» проверьте индикатор записи. Он должен гореть
красным. Если нет --- нажмите на него, чтобы запустить.

3\. Отметьте «Сохранять журнал», чтобы сохранить логи при переходе
на другую страницу.

![700](media/image6.png){width="5.833333333333333in"
height="1.3350339020122484in"}

4\. Обновите страницу кнопкой F5 и повторите ошибку.

5\. Правой кнопкой мыши кликните по любой записи в логе и выберите
Сохранить все как HAR с контентом.

6\. Выберите папку для сохранения в открывшемся окне.

7\. Нажмите «Сохранить».

HAR-логи будут собраны и сохранены в указанной папке.

#### *Чтобы собрать консольные логи:* {#чтобы-собрать-консольные-логи-5 .unnumbered}

1. Нажмите «Ctrl+Shift+I» или «Ctrl+Shift+J», чтобы открыть окно
инструментов разработчика.

2\. Перейдите на вкладку «Консоль».

3\. Нажмите правой кнопкой мыши в любой области окна и выберите в
контекстном меню «Сохранить как».

![700](media/image59.png){width="5.470587270341207in"
height="2.579831583552056in"}

Выберите папку для сохранения логов и нажмите «Сохранить».

Консольные логи будут собраны и сохранены в указанной папке.

# **Монетизация** {#монетизация .unnumbered}

Для подключения монетизации:

1.  Заполните заявление на
    [монетизацию](https://help.rustore.ru/rustore/for_developers/Monetization/how-to-enable-subscription-monetization-in-RuStore).

2.  Настройте в приложении [RuStoreSDK для подключения
    платежей](https://help.rustore.ru/rustore/for_developers/developer-documentation/sdk_payments) или
    [добавьте платное приложение через RuStore
    Консоль](https://help.rustore.ru/rustore/for_developers/publishing_and_verifying_apps/paid_app).

3.  Создайте
    [подписки](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-app-subscription)
    или [разовые
    покупки](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-paid-product-in-application).

## **Монетизация нерезидентов** {#монетизация-нерезидентов .unnumbered}

Иностранные компании, зарегистрированные в RuStore, теперь могут
подключить монетизацию и получать доход от размещения платных приложений
или встроенных в приложение покупок (в том числе подписок).

Подключение монетизации доступно на условиях стандартного
[дополнительного
соглашения](https://help.rustore.ru/rustore/legal_info_en/add_agreement_form).
Актуальная на момент подачи заявления валюта расчетов будет отображаться
в форме.

### **Как создать и подписать заявление** {#как-создать-и-подписать-заявление .unnumbered}

1.  Войдите в [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Компания» в верхней части экрана.

3.  Выберите «Монетизация» в левом боковом меню.

4.  Нажмите «Заполнить заявление».

![600](media/image1.png){width="5.833333333333333in"
height="3.9796062992125982in"}

1.  Заполните данные в открывшемся окне.

##### Основная информация {#основная-информация .unnumbered}

-   Информация в поле «Торговое и юридическое название» подгружается
    согласно учредительным документам. Если данные указаны некорректно,
    обратитесь в поддержку и подайте заявление после исправления данных.

Мы можем попросить вас подтвердить ваши права на указанное торговое
название. Регистрация прав не требуется, однако в этом случае мы
попросим вас гарантировать, что использование данного торгового названия
не нарушает права третьих лиц.

##### Представитель отличается от владельца компании {#представитель-отличается-от-владельца-компании .unnumbered}

Если представитель отличается от владельца компании в RuStore, заполните
информацию о представителе согласно документу-основанию права
представителя. В качестве такого документа приложите решение о
назначении, доверенность и т. д. Убедитесь, что здесь указан именно тот
человек, который будет подписывать дополнительное соглашение от имени
вашей компании.

![](media/image50.png){width="5.833333333333333in"
height="6.098069772528434in"}

##### Информация о компании {#информация-о-компании .unnumbered}

-   Убедитесь, что информация в полях «Налоговый номер» и «Юридический
    адрес», соответствует данным в учредительных документах.

-   Если юридический адрес не совпадает с фактическим, необходимо также
    указать фактический адрес, по которому компания осуществляет свою
    деятельность.

![](media/image105.png){width="5.833333333333333in"
height="3.4611111111111112in"}

##### Контакты для пользователей по вопросам обратной связи {#контакты-для-пользователей-по-вопросам-обратной-связи .unnumbered}

Служба поддержки RuStore может передавать эти контакты пользователям или
публиковать их на витрине приложений.

-   В блоке «Контактное лицо» укажите контактные данные, по которым
    пользователи RuStore могут обратиться к вам по вопросам поддержки
    приложений, а также для направления финансовых претензий (запросов
    на возврат/отмену платежа, информирование о мошеннических платежах).

-   Информация в блоках «Номер телефона» и Email используется для
    внутренних коммуникаций с RuStore и будет видна пользователям. В
    поле «Номер представителя» следует указать международный номер
    телефона.

-   Также вы можете указать предпочтительный способ связи, добавив
    ссылку на мессенджеры, форму обратной связи или другой инструмент,
    используемый для получения обратной связи от пользователей
    (опционально). Рекомендуем проверить доступность этого инструмента
    для пользователей из РФ.

![](media/image36.png){width="5.833333333333333in"
height="4.355810367454068in"}

##### Информация о договоре {#информация-о-договоре .unnumbered}

-   Имя главного бухгалтера компании.

-   Бухгалтерская отчетность: отчет о прибылях и убытках, балансовый
    отчёт.

-   Документы, подтверждающие налоговое резидентство: свидетельство о
    налоговом резидентстве предоставляется во избежание двойного
    налогообложения. В дальнейшем мы попросим вас обновлять этот
    документ ежегодно.

![](media/image56.png){width="5.833333333333333in"
height="4.236731189851269in"}

##### Банковские реквизиты {#банковские-реквизиты .unnumbered}

-   Укажите реквизиты счёта компании в российском или зарубежном банке,
    по которым будут производиться расчёты.

![](media/image48.png){width="5.833333333333333in"
height="6.694492563429571in"}

-   Если вы хотите вести расчеты через определенного корреспондента,
    укажите его реквизиты в этом блоке. Мы направим ваш доход на его
    реквизиты для дальнейшего перечисления вам. В ином случае, мы будем
    перечислять ваш доход на реквизиты, указанные вами выше, через
    нашего стандартного корреспондента.

![](media/image60.png){width="5.833333333333333in"
height="4.1800349956255465in"}

Порядок конвертации валюты при выплате отражен в дополнительном
соглашении.

ПРЕДУПРЕЖДЕНИЕ

RuStore взимает комиссию с платных приложений и покупок внутри
приложений (подписки, покупки in-app). Размер комиссии для нерезидентов
составляет 15%. В случаях, когда RuStore должен являться налоговым
агентом нерезидента, в дополнение к комиссии будет удерживаться сумма
налогов, подлежащая уплате в соответствии с законодательством РФ.

1.  Нажмите «Перейти к отправке заявления».

2.  Проверьте текст заявления и нажмите «Отправить на модерацию».
    Заявление отправляется на подтверждение модератором.

К СВЕДЕНИЮ

-   Если потребуется, заявление можно отозвать на любом этапе и внести
    необходимые изменения, после чего повторно отправить на модерацию.

-   В случае несоответствия мы сообщим об этом по электронной почте и
    попросим вас приложить корректные документы, при этом оставляем за
    собой возможность отказать в подключении и/или заблокировать
    возможность подключения монетизации.

После отправки заявления на монетизацию мы отправим дополнительное
соглашение на вашу электронную почту. Ознакомьтесь с
[[соглашением]{.underline}](https://help.rustore.ru/rustore/legal_info_en/add_agreement_form)
и подпишите его, чтобы подключить монетизацию.

ПРЕДУПРЕЖДЕНИЕ

Обратите внимание, что Дополнительное соглашение должно быть подписано
лицом, информацию о котором вы указали в блоке «Представитель компании».

После подключения монетизации вы сможете настроить платные продукты и
публиковать платные приложения.Ежемесячно вам будет приходить отчёт по
принятым платежам. Выплата дохода производится в соответствие с
дополнительным соглашением.

К СВЕДЕНИЮ

Выплаты производятся не чаще, чем раз в месяц, при условии, что с
момента предыдущей выплаты была достигнута минимальная сумма.

Подробная информация приведена в [[Дополнительном
соглашении]{.underline}](https://help.rustore.ru/rustore/legal_info_en/add_agreement_form).

## **Отчёт по монетизации** {#отчёт-по-монетизации .unnumbered}

### **Пример отчета о выполнении Поручений по Соглашению RuStore о распространении программных продуктов** {#пример-отчета-о-выполнении-поручении-по-соглашению-rustore-о-распространении-программных-продуктов .unnumbered}

Ежемесячно на почту разработчика приходит отчёт по монетизации. Ниже
представлен пример отчёта с описанием полей.

![661](media/image43.png){width="5.833333333333333in"
height="11.843166010498688in"}

  -----------------------------------------------------------------------
  Поле                                Описание
  ----------------------------------- -----------------------------------
  Дата, время начала отчётного        Дата и время начала отчётного
  периода                             периода.

  Дата, время конца отчётного периода Дата и время конца отчётного
                                      периода

  Нераспределённые платежи на начало  Сумма платежей, принятых от
  отчётного периода, руб.             пользователей ваших приложений, но
                                      не учтённая в расчётах на дату
                                      окончания предыдущего отчётного
                                      периода.Сумма представлена в
                                      рублях.

  Общая сумма принятых платежей от    Сумма платежей, принятых от
  Пользователей за отчётный период    пользователей ваших приложений в
  (включая возвраты) **в том числе    течение отчётного периода (до
  НДС**, руб.                         налогообложения).Сумма представлена
                                      в рублях.

  Общая сумма принятых платежей от    Сумма платежей, принятых от
  Пользователей за отчётный период    пользователей ваших приложений в
  (включая возвраты) **за вычетом     течение отчётного периода (сумма
  НДС**, руб.                         после вычета НДС, который мы
                                      обязаны удержать, т.к. являемся
                                      налоговым агентом по
                                      законодательству РФ).Сумма
                                      представлена в рублях.

  Сумма вознаграждения Компании за    Сумма комиссий, удержанных
  отчётный период, руб.               Компанией.Сумма представлена в
                                      рублях.

  Общая сумма возвратов Пользователям Сумма возвратов, произведённых
  за отчётный период, руб.            пользователям. В том числе
                                      технические возвраты (при отмене
                                      покупки после начавшейся процедуры
                                      оплаты)Сумма представлена в рублях

  Нераспределенные платежи на конец   Сумма платежей, принятых от
  отчётного периода, руб.             пользователей ваших приложений, но
                                      не учтённая в расчётах на дату
                                      окончания отчётного периода. В
                                      следующем месяце эта сумма
                                      отразится в графе «Нераспределённые
                                      платежи на начало отчётного
                                      периода, руб.».Сумма представлена в
                                      рублях.

  Задолженность перед Компанией за    Задолженность может возникнуть,
  текущий отчётный период, руб.       если в течение любого дня отчётного
                                      периода сумма возвратов превысила
                                      сумму покупок в ваших
                                      приложениях.При возникновении такой
                                      ситуации мы ждём поступления
                                      средств от новых покупок
                                      пользователей, которые
                                      автоматически погашают возникшую
                                      задолженность.Если на момент
                                      завершения отчётного периода сумма
                                      задолженности не была полностью
                                      погашена последующими покупками, мы
                                      отразим эту информацию в графе
                                      отчёта.Сумма представлена в рублях.

  Сумма причитающаяся Разработчику за Сумма вашей выручки, учтённая для
  отчётный период, рубли РФ (Сумма к  выплаты за отчётный период (сумма
  перечислению)                       платежей пользователей за минусом
                                      возвратов и комиссий).Выплата суммы
                                      может производится с учётом
                                      ограничений, оговорённых в
                                      соглашении между разработчиком и
                                      RuStore.Сумма представлена в
                                      рублях.

  Сумма причитающаяся Разработчику за Сумма вашей выручки, учтённая для
  отчётный период, валюта (Сумма к    выплаты за отчётный период (сумма
  перечислению)                       платежей пользователей за минусом
                                      возвратов и комиссий).Выплата суммы
                                      может производится с учётом
                                      ограничений, оговорённых в
                                      соглашении между разработчиком и
                                      RuStore.Сумма представлена в валюте
                                      соглашения.

  Курс валюты на конец отчётного      Справочные данные о курсе валюты
  периода (в соответствии с           для проведения расчётов по текущему
  Дополнительным соглашением)         отчёту. Порядок применения курса
                                      отражён в соглашении между
                                      разработчиком и RuStore.
  -----------------------------------------------------------------------

## **Как создать подписку на приложение** {#как-создать-подписку-на-приложение .unnumbered}

Создайте подписку в системе RuStore Консоль, чтобы пользователи могли
покупать подписку на приложение в магазине RuStore:

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите во вкладку «Приложения» в верхней части экрана.

3.  В левом боковом меню, в разделе «Монетизация» выберите «Подписки».

4.  Чтобы создать подписку, нажмите «Новая подписка». Если ранее вы не
    создавали подписки, кнопка будет в центре экрана. Если подписки уже
    есть --- справа
    сверху.![700](media/image51.png){width="5.833333333333333in"
    height="4.316260936132983in"}
    ![700](media/image104.png){width="5.833333333333333in"
    height="1.5687970253718284in"}

5.  Укажите пользовательскую и техническую информацию о подписке, а
    также [дополнительные
    настройки](https://docs.google.com/document/d/10ko2i48k8EsI-QNJt3idzKDCIv_rYRnS/edit#bookmark=id.434ayfz).
    ![700](media/image57.png){width="5.833333333333333in"
    height="6.278934820647419in"}

6.  Нажмите «Создать» в левом нижнем углу экрана.

7.  Нажмите «Опубликовать» в левом нижнем углу экрана. Если на этом шаге
    нужно отредактировать информацию о подписке, нажмите
    «Редактировать».

8.  Нажмите «Опубликовать» во всплывающем окне.

![1200](media/image112.png){width="5.833333333333333in"
height="5.120369641294838in"}

Регулярные платежи списываются в течение 8 часов до момента окончания
подписки. Например, если подписка была оформлена в 16:00, то последующие
регулярные платежи списываются в промежутке с 08:00 до 16:00. Условия
списания должны регламентироваться пользовательской документацией
разработчика.

####  {#section .unnumbered}

#### *Дополнительные настройки* {#дополнительные-настройки .unnumbered}

Для подписки можно настроить бесплатный период и стартовый период по
сниженной цене. Например, первый месяц бесплатный, второй месяц --- 50
руб, а далее наступает стандартный период, и каждый месяц списывается
100 руб.

Пользователь может воспользоваться бесплатным и стартовым периодом
только один раз. Если он отменяет подписку, а затем покупает снова,
подписка начинается сразу со стандартного периода.

Бесплатный период

Включите, если нужно дать пользователям бесплатный доступ к приложению
на определенный срок. Например, для продвижения на рынке.

Когда бесплатный период завершается, подписка переходит в стартовый
период, если он предусмотрен, или стандартный период со списанием
средств.

ПРЕДУПРЕЖДЕНИЕ

В бесплатном периоде пользователю доступна оплата только новой картой,
сохранённой ранее картой, картой из кошелька SberID или SberPay.
Недоступные способы оплаты (по номеру телефона и карте из кошелька VK
ID) не будут предложены пользователю. Рекомендуем учитывать это при
планировании маркетинговых активностей по подпискам с бесплатным
периодом.

Стартовый период

Включите, если нужно дать пользователям доступ к приложению на условиях
специального предложения.

ПРЕДУПРЕЖДЕНИЕ

Указанная сумма списывается один раз за весь стартовый период. Например,
если указать длительность «Три месяца» и стоимость «Один рубль», за три
месяца будет только один платёж на один рубль.

Когда стартовый период завершается, подписка переходит в стандартный
период со списанием средств.

Грэйс

Укажите грэйс-период, если нужно сохранить доступ пользователя к
контенту даже при неудачной попытке провести платёж по подписке.

Каждый день в течение грэйс-периода выполняются повторные попытки
провести платёж. Если до конца грэйс-периода оплата не поступает, доступ
к контенту пропадает. Если в течение грэйс-периода оплата поступает,
попытки списания прекращаются и пользователь сохраняет доступ к
контенту. При этом дата следующего планового платежа по подписке
остается прежней.

Длительность грэйс-периода может быть меньше или равна стандартному
периоду подписки. Принцип работы грэйс-периода показан на следующем
графике.

![670](media/image98.png){width="5.833333333333333in"
height="2.2806332020997377in"}

Пунктирными линиями на графике обозначены плановые даты платежей.
Указанные значения являются лишь примером, и фактические даты могут
отличаться в каждом конкретном случае.

Холд

Укажите холд-период, если нужно отключить доступ пользователя к контенту
при неудачной попытке провести платёж по подписке.

Каждый день в течение холд-периода выполняются повторные попытки
провести платёж. Если в течение холд-периода оплата поступает, попытки
списания прекращаются. При этом дата списания становится новой датой
начала стандартного периода. Дата очередного платежа по подписке
сдвигается в зависимости от даты списания платежа в холд-период.

Если до конца холд-периода оплата не поступает, подписка отключается.
Принцип работы холд-периода показан следующем графике.

Если вы также указали грэйс-период, сначала будет действовать он, а
затем холд-период, как показано на следующем графике.

Пунктирными линиями на графиках обозначены плановые даты платежей.
Указанные значения являются лишь примером, и фактические даты могут
отличаться в каждом конкретном случае.

![700](media/image86.png){width="5.833333333333333in"
height="1.9418547681539808in"}

Изменение цены подписки

Вы можете изменить цену подписки в большую или меньшую сторону:

-   При снижении новая стоимость применяется ко всем подпискам. Это
    значит, что цены обновятся у всех пользователей, которые приобрели
    подписку.

-   Повышение цены отразится только на новых приобретениях подписок. У
    тех, кто купил подписку ранее, стоимость останется прежней

## **Как создать платный товар в приложении** {#как-создать-платный-товар-в-приложении .unnumbered}

1.  Откройте систему [RuStore
    Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения» в верхней части экрана.

3.  В левом боковом меню, в разделе «Монетизация» выберите «Разовые
    покупки».

4.  Нажмите «Новый товар» в центре экрана.

5.  Укажите пользовательскую и техническую информацию о товаре.

6.  Нажмите «Создать» в левом нижнем углу экрана.

7.  Нажмите «Опубликовать» в левом нижнем углу экрана. Если на этом шаге
    нужно отредактировать информацию о товаре, нажмите «Редактировать».

8.  Во всплывающем окне нажмите «Опубликовать».

![1200](media/image124.png){width="5.833333333333333in"
height="3.6458333333333335in"}

## **Управление платежами** {#управление-платежами .unnumbered}

В RuStore Консоли можно просматривать платежи по каждому приложению, для
которого подключена монетизация.

#### *Как просмотреть информацию по платежам* {#как-просмотреть-информацию-по-платежам .unnumbered}

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Выберите «Приложения» в верхнем меню.

3.  Перейдите на вкладку «Монетизация → Управление платежами».

![800](media/image126.png){width="5.833333333333333in"
height="3.6217946194225723in"}

Таблица с данными о покупках выводится в случае, если по приложению
проводились покупки. В таблице можно просмотреть:

-   дату и время покупки;

-   номер счёта и номер заказа;

-   номер карты или номер телефона, с которого была произведена оплата;

-   сумму покупки;

-   и статус счета.

Номер заказа есть только у платежей по подпискам. Этот номер будет
одинаковым у всех платежей в рамках одной подписки.

Вы также можете кликнуть на интересующий вас платеж, чтобы просмотреть
детальную информацию о нём.

![](media/image85.png){width="5.833333333333333in"
height="6.227909011373578in"}

### **Поиск платежа** {#поиск-платежа .unnumbered}

Для поиска интересующего вас платежа и просмотра информации о нём
выполните следующие действия:

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Выберите «Приложения» в верхнем меню.

3.  Перейдите на вкладку «Монетизация → Управление платежами».

4.  В поле поиска введите номер счета. Отразится информация о сумме и
    статусе платежа. Выберите идентификатор, по которому хотите
    производить поиск --- номер счета или номер заказа. После этого
    введите в поле поиска номер счета или заказа соответственно. В
    поисковой выдаче вы увидите все платежи в вашем приложении,
    соответствующие критериям поиска.

![800](media/image52.png){width="5.833333333333333in"
height="3.7019225721784776in"}

Платёж может быть в одном из следующих статусов:

В обработке: средства на карте покупателя захолдированы. Покупка ожидает
потребления.

Отменено: средства на карте покупателя разблокированы. Покупка отменена.

Оплачено: операция подтверждена, средства списаны со счёта покупателя.

Возвращено: средства возвращены на счёт покупателя. Срок зачисления
средств на счет покупателя может составлять до 5 рабочих дней.

#### *Возврат платежа* {#возврат-платежа .unnumbered}

Для возврата платежа покупателю выполните следующие действия:

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Выберите «Приложения» в верхнем меню.

3.  Перейдите на вкладку «Монетизация → Управление платежами».

4.  Выберите счёт, по которому необходимо произвести возврат.

5.  Во всплывающем окне нажмите «Вернуть платеж», чтобы перейти на
    страницу оформления возврата.

![](media/image85.png){width="5.833333333333333in"
height="6.227909011373578in"}

6\. Ознакомьтесь с информацией в новом окне и снова выберите «Вернуть
платеж».

Возврат платежа не деактивирует товар или подписку у пользователя.

![800](media/image134.png){width="5.833333333333333in"
height="3.6217946194225723in"}

После оформления возврата статус покупки изменится на «Возвращено».
Уплаченные ранее средства будут возвращены на счет покупателя.

![800](media/image113.png){width="5.833333333333333in"
height="3.637820428696413in"}

## **Тестовые платежи** {#тестовые-платежи .unnumbered}

Протестируйте платежи по подпискам и платным товарам в мобильном
приложении. Процесс покупки в тестовом режиме повторяет обычный платёж,
но с использованием [тестовых банковских
карт](https://help.rustore.ru/rustore/for_developers/Monetization/sandbox/test-bank-cards).

Для тестирования платежей приложение должно пройти модерацию. Хотя бы
его первая версия.

### **Возможности** {#возможности .unnumbered}

Функция «Тестовые платежи» предоставляет следующие возможности:

-   Управление тестовым режимом через [RuStore
    Консоль](https://console.rustore.ru/sign-in).

-   Тестирование сценариев оплаты покупок в вашем приложении, которое
    проводится в изолированной тестовой среде с использованием
    специальных тестовых карт и без влияния на рабочую версию
    приложения.

-   Просмотр истории тестовых платежей в RuStore Консоль.

### **Технические особенности** {#технические-особенности .unnumbered}

-   Выполнять тестирование можно до публикации версии приложения на всех
    пользователей.

-   В тестовом режиме можно приобретать те же товары и подписки, которые
    добавлены в рабочую версию приложения. Публиковать их не
    обязательно.

-   Можно многократно тестировать покупку нерасходуемых товаров.
    Например, доступ к полной версии приложения или скин в игре. Если
    вернуть платёж через RuStore консоль, после этого можно снова
    совершить покупку в приложении.

-   В тестовом режиме для подписок применяются специальные параметры.
    Они не зависят от параметров, которые вы выбрали для рабочей версии
    приложения, и не влияют на них. Эти технические особенности призваны
    упростить и ускорить тестирование. Параметры из следующей таблицы
    одинаковы для всех подписок в тестовом режиме.

  ------------------------------------------------------------------------------------------------------------------------------------------------------------
  Параметр                                                                                                                 Значение
  ------------------------------------------------------------------------------------------------------------------------ -----------------------------------
  Максимальное количество списаний по подписке. После выполнения указанного количества списаний подписка автоматически     12
  закрывается

  Период между списаниями по подписке                                                                                      10 минут

  Периодичность сброса бесплатного и стартового периода ([условия покупки подписок с бесплатным и стартовым                Каждые 3 часа
  периодом](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-app-subscription#advanced-settings)).
  После сброса вы снова сможете приобретать подписку бесплатно или по стартовой цене. Таким образом вы сможете несколько
  раз тестировать оплату подписки по специальным условиям
  ------------------------------------------------------------------------------------------------------------------------------------------------------------

### **Ограничения** {#ограничения .unnumbered}

-   Владелец приложения является единственным пользователем, которому
    доступно тестирование платежей. Только у него есть доступ к разделу
    «Тестовые платежи». Мы работаем над возможностью добавлять других
    тестировщиков.

-   Тестирование покупки платного приложения в магазине RuStore
    недоступно.

-   Нет возможности получить информацию о тестовых платежах и подписках
    через public API.

-   В мобильном приложении RuStore не отображается история тестовых
    покупок и тестовые подписки. Это означает, что тестовые подписки
    нельзя отменить и возобновить.

-   Оплата тестовых покупок производится только тестовыми банковскими
    картами.

### **Включение тестового режима** {#включение-тестового-режима .unnumbered}

#### *Перед началом тестирования платежей* {#перед-началом-тестирования-платежей .unnumbered}

-   Встройте в тестируемое приложение версию SDK, которая поддерживает
    функцию тестирования платежей --- RuStore SDK billingclient 3.1.0
    или выше.

-   Убедитесь, что на устройстве Android, на котором планируется
    тестировать ваше приложение, установлен RuStore версии 1.29 или
    выше.

-   Убедитесь, что компания не заблокирована, у нее подключена
    монетизация и в приложении есть возможность совершать покупки. Вы
    можете настроить подписки и платные товары в RuStore Консоль, но не
    публиковать их для пользователей.

<!-- -->

-

- [Как подключить
монетизацию](https://help.rustore.ru/rustore/for_developers/Monetization)- [Как
создать платный товар в
приложении](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-paid-product-in-application)

- [Как создать подписку на
приложение](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-app-subscription)

#### *Включение тестового режима* {#включение-тестового-режима-1 .unnumbered}

Тестировать платежи можно после завершения модерации и до публикации
новой версии приложения. Вы также можете тестировать покупки для
приложения, которое уже опубликовано.

Режим тестирования включается только для тестировщика и только в
выбранном приложении. В других приложениях этот же пользователь будет
совершать реальные покупки. Также все остальные пользователи в этом
приложении будут совершать реальные покупки.

По умолчанию режим тестирования отключен.

Чтобы включить тестовый режим:

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Выберите «Приложения» в верхнем меню.

3.  Перейдите на вкладку «Монетизация --- Тестовые платежи».

4.  Переключитесь на вкладку «Тестировщики». Если на вкладке
    отображается окно «Добавьте себя в список тестировщиков», нажмите
    «Стать тестировщиком».

5.  Активируйте переключатель в столбце «Режим тестирования».
    ![1000](media/image128.png){width="5.833333333333333in"
    height="3.637820428696413in"}

После включения тестового режима тестировщик будет совершать в вашем
приложении тестовые покупки, и ему станут доступны покупки ещё не
опубликованных товаров.

### **Тестирование платежей** {#тестирование-платежей .unnumbered}

#### *Тестирование платежей* {#тестирование-платежей-1 .unnumbered}

Для применения изменений после переключения режима тестирования
необходимо либо подождать несколько минут, либо перезапустить ваше
приложение, если оно было открыто.

Чтобы протестировать платежи:

1.  [Включите тестовый
    режим](https://help.rustore.ru/rustore/for_developers/Monetization/sandbox/enable-test-mode).

2.  Если вы еще не авторизованы в RuStore на устройстве, на котором
    выполняете тестирование, авторизуйтесь под вашим VK ID, под которым
    вы зарегистрированы в RuStore Консоль как владелец приложения.

-

- [Как узнать VK ID в RuStore
Консоль?](https://help.rustore.ru/rustore/for_developers/acc_developers/VKID)- [Как
войти с аккаунтом VK ID в мобильное приложение
RuStore?](https://help.rustore.ru/rustore/main_info/authorization/login_vk_id)

3.  Откройте ваше приложение на устройстве или установите его, если это
    еще не сделано.

4.  Совершите покупку в приложении. Например, оформите подписку. Во
    время оплаты появится окошко оплаты с отметкой «Тестовая покупка».
    ![250](media/image83.png){width="4.625in" height="4.375in"}

Если отметка «Тестовая покупка» не появляется, вы совершаете покупку не
в тестовой среде, а в рабочей версии приложения. Убедитесь,
что [тестовый режим
включен](https://help.rustore.ru/rustore/for_developers/Monetization/sandbox/enable-test-mode),
и что вы авторизованы в мобильном приложении RuStore под верным VK ID.

1.  Добавьте одну из [тестовых банковских
    карт](https://help.rustore.ru/rustore/for_developers/Monetization/sandbox/test-bank-cards)
    и выберите ее для оплаты. После добавления эта карта сохранится в
    тестовом профиле и далее покупка с этой картой будет доступна в один
    клик. Когда ваша учетная запись находится в тестовом режиме,
    используйте только тестовые карты. При попытке оплатить покупку
    настоящей банковской картой появится ошибка.

-

<!-- -->

-   Используйте разные тестовые карты, чтобы проверить как сценарии
    успешной оплаты, так и неуспешной. Например, смоделировать ошибку,
    когда сумма платежа превышает лимит по банковской карте.

-   Если необходимо протестировать грэйс- и холд-период,
    используйте [тестовую карту с балансом 1
    копейка](https://help.rustore.ru/rustore/for_developers/Monetization/sandbox/test-bank-cards#test-card).
    С помощью этой карты можно купить подписку с бесплатным периодом.
    После окончания бесплатного периода будет одна неудачная попытка
    списания, а затем подписка сразу переключится в грэйс- или
    холд-период, если они настроены для данной подписки. Подробности о
    периодах есть в статье [Как создать подписку на
    приложение](https://help.rustore.ru/rustore/for_developers/Monetization/How-create-app-subscription#advanced-settings).

1.  Нажмите «Оплатить».

2.  Проверьте, прошла ли оплата успешно и обработало ли ваше приложение
    покупку.

Если оплата прошла успешно, а доступ к покупке не появляется, проверьте
реализацию в своем приложении. При других проблемах со сценариями
тестирования обратитесь в техническую поддержку <support@rustore.ru>.

При включенном режиме тестирования [метод получения информации о
покупках](https://help.rustore.ru/rustore/for_developers/developer-documentation/sdk_payments/SDK-connecting-payments/Getting-information) и [метод
получения списка
покупок](https://help.rustore.ru/rustore/for_developers/developer-documentation/sdk_payments/SDK-connecting-payments/Getting-user-shopping-list) будут
возвращать только тестовые покупки для этого пользователя.

#### *Просмотр тестовых платежей* {#просмотр-тестовых-платежей .unnumbered}

Чтобы посмотреть историю тестовых платежей:

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Выберите «Приложения» в верхнем меню и откройте приложение, в
    котором совершалась тестовая покупка.

3.  Перейдите на вкладку «Монетизация --- Тестовые платежи».

![1000](media/image90.png){width="5.833333333333333in"
height="3.6217946194225723in"}

На вкладке «История платежей» отображаются все платежи, которые
выполнены в тестовом режиме. По функциональным возможностям этот раздел
повторяет [«Управление
платежами»](https://help.rustore.ru/rustore/for_developers/Monetization/how-to-manage-payments),
в котором отображаются покупки пользователей, совершенные в рабочей
версии приложения.

На вкладке «Истории платежей» вы можете:

-   Искать тестовый платеж по номеру счета и номеру заказа.

-   Просматривать детальную информацию по каждому платежу, нажав на
    него.

-   Выполнить возврат, чтобы заново протестировать приобретение
    нерасходуемого товара. Для этого нажмите на платёж, а затем на
    кнопку «‎Вернуть платёж».

### **Отключение тестового режима** {#отключение-тестового-режима .unnumbered}

После завершения тестирования платежей вы можете отключить тестовой
режим. Делать это не обязательно, вы можете оставаться в тестовом режиме
сколько времени, сколько необходимо.

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Выберите «Приложения» в верхнем меню.

3.  Перейдите на вкладку «Монетизация --- Тестовые платежи».

4.  Переключитесь на вкладку «Тестировщики».

5.  Деактивируйте переключатель в столбце «Режим тестирования».

![1000](media/image69.png){width="5.833333333333333in"
height="3.637820428696413in"}

При отключении тестового режима:

-   Тестировщик станет выполнять реальные покупки в приложении.

-   Все платежи, выполненные в тестовом режиме, сохраняются в RuStore
    Консоль на вкладке «История платежей».

-   Купленные платные товары остаются доступны для учетной записи при
    следующем включении тестового режима.

-   Тестовые подписки отключатся автоматически после 12 списаний.

#### *Следующие шаги* {#следующие-шаги .unnumbered}

После того, как вы протестировали платежи и убедились в их
работоспособности, можно опубликовать подписки и платные товары в
приложении, а затем опубликовать новую версию приложения.

### **Тестовые банковские карты** {#тестовые-банковские-карты .unnumbered}

Для тестирования покупок вы может использовать следующие тестовые карты.

#### *Всегда успешная оплата* {#всегда-успешная-оплата .unnumbered}

  -----------------------------------------------------------------------
  Номер карты                               4111 1111 1111 1111
  ----------------------------------------- -----------------------------
  ECI                                       05

  CVC\\CVV                                  123

  Срок действия                             2024/12

  Код подтверждения 3-D Secure              12345678
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  Номер карты                               5100 0000 0000 0008
  ----------------------------------------- -----------------------------
  ECI                                       05

  CVC\\CVV                                  123

  Срок действия                             2024/12

  Код подтверждения 3-D Secure              12345678
  -----------------------------------------------------------------------

Покупателю предлагается выбрать результат проверки 3-D Secure.

  -----------------------------------------------------------------------
  Номер карты                   2201 3820 0000 0013
  ----------------------------- -----------------------------------------
  ECI                           02

  CVC\\CVV                      123

  Срок действия                 2024/12
  -----------------------------------------------------------------------

#### *Карты, возвращающие ошибки* {#карты-возвращающие-ошибки .unnumbered}

После трех неуспешных попыток оплаты будет произведен возврат на
платежную шторку RuStore с ошибкой оплаты.

  -----------------------------------------------------------------------
  Номер карты                   5100 0000 0000 0180
  ----------------------------- -----------------------------------------
  ECI                           00

  CVC\\CVV                      123

  Срок действия                 2024/12
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  Номер карты                   4444 4444 4444 4422
  ----------------------------- -----------------------------------------
  CVC\\CVV                      123

  Срок действия                 2024/12
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  Номер карты                   4444 4444 1111 1111
  ----------------------------- -----------------------------------------
  CVC\\CVV                      123

  Срок действия                 2024/12
  -----------------------------------------------------------------------

#### *Карта с балансом 1 копейка* {#карта-с-балансом-1-копейка .unnumbered}

  -----------------------------------------------------------------------
  Номер карты                               4954 8493 9714 9582
  ----------------------------------------- -----------------------------
  CVC\\CVV                                  123

  Срок действия                             2024/12

  Код подтверждения 3-D Secure              12345678
  -----------------------------------------------------------------------

# **Реклама и продвижение** {#реклама-и-продвижение .unnumbered}

## **Добавление кнопки «Скачайте из RuStore»** {#добавление-кнопки-скачайте-из-rustore .unnumbered}

Чтобы рассказать пользователям о вашем приложении, используйте
кнопку «Скачайте из RuStore».

***Двухцветная версия логотипа***

![150](media/image108.png){width="2.237761373578303in"
height="0.7832163167104113in"}![150](media/image68.png){width="2.237761373578303in"
height="0.7832163167104113in"}

Скачать:
[SVG](https://help.mail.ru/pic/f/d/fd8f56e233fb370a28c81fa6a916abbf.svg),
[PNG](https://help.mail.ru/pic/e/d/edc2a045e17e4971c7cca77c7fde4b66.png) 
                                                 
 Скачать: [SVG](https://help.mail.ru/pic/d/9/d9aa347d240d14f24360571598665230.svg),
[PNG](https://help.mail.ru/pic/d/2/d2ca5f4870b8d8f4e42e5ab7fa288629.png)

***Одноцветная версия логотипа***

![150](media/image117.png){width="2.237761373578303in"
height="0.7832163167104113in"}![150](media/image101.png){width="2.237761373578303in"
height="0.7832163167104113in"}

Скачать: [SVG](https://help.mail.ru/pic/7/d/7d9ecde2dda11cf910e3de9d32779507.svg),
[PNG](https://help.mail.ru/pic/c/9/c90da111977f89486025d90e0a1b7a2e.png) 
                                                  
Скачать: [SVG](https://help.mail.ru/pic/3/9/39dbaa93aa078d5dfc88a3d09c777427.svg),
[PNG](https://help.mail.ru/pic/d/7/d781c505a907e6353ef6869c376ca298.png)

Примеры использования:

![500](media/image31.png){width="5.833333333333333in"
height="9.29761811023622in"}

     Скачать [SVG,
PNG](https://drive.google.com/file/d/1K-tkxt5GqMCKXpFzxcFWPNvEKPoYgg97/view?usp=share_link) 
                                    Скачать [SVG,
PNG](https://drive.google.com/file/d/1ltiHNKQGLlZF8tfp7WSy25Ha_JGcgbbs/view?usp=share_link)

***Любимые/необходимые приложения***

Скачать:
[SVG](https://drive.google.com/drive/folders/1UJYJjZM_7iarBxpswBO6_HdFgpkcZC7p),
[PNG](https://drive.google.com/drive/folders/14TE0eoDRboaB41Q4eZqzz6uSAinm8h-S)

![500](media/image70.png){width="5.833333333333333in"
height="1.805323709536308in"}

***Государственные приложения***

Скачать:
[SVG](https://drive.google.com/drive/folders/1SvHyHusNqL9CsnCFQm_AHS5Sc7KyYa4F),
[PNG](https://drive.google.com/drive/folders/1PgJQLWvnyKeRoqNal6kQAoiNqJkH33dd)

![500](media/image138.png){width="5.833333333333333in"
height="1.6590212160979878in"}

Для установки логотипа на сайте:

1.  Скачайте логотип «Скачайте из RuStore».

2.  Загрузите его на свой сервер.

3.  Найдите на сайте RuStore своё приложение и скопируйте bundle_id
    из ссылки на него.

Пример
ссылки: https://trk.mail.ru/c/me10h4?bundle_id=com.vkontakte.android

1.  Код для вставки на сайт:

-

Рекомендуемый размер изображения 188px на 63px.

## **VK реклама в RuStore** {#vk-реклама-в-rustore .unnumbered}

Теперь у разработчиков появилась возможность продвигать приложения в
RuStore с помощью рекламы.

### **Как настроить рекламную кампанию через VK Реклама** {#как-настроить-рекламную-кампанию-через-vk-реклама .unnumbered}

1.  Откройте в браузере платформу [VK
    Реклама](https://ads.vk.com/hq/apps) и войдите в систему.

2.  Перейдите в раздел «Кампании».

3.  Нажмите «Создать кампанию».

![800](media/image116.png){width="5.833333333333333in"
height="3.13046697287839in"}

1.  Нажмите на иконку «Мобильное приложение». Выберите рекламируемое
    приложение из списка или привяжите новое через VK Рекламу.

При первом подключении необходимо добавить приложение и настроить
интеграцию с трекером. Подробнее смотрите в разделе «Как добавить
приложение через VK Реклама» ниже.

![800](media/image150.png){width="5.833333333333333in"
height="2.9438681102362203in"}

1.  Настройте рекламную кампанию.

VK Реклама предоставляет множество инструментов и технологий, с помощью
которых вы можете настроить рекламу максимально точно. Более подробные
инструкции о настройке рекламной кампании и ответы на многие другие
вопросы можно найти
[здесь](https://ads.vk.com/help/articles/app_campaign).

### **Как добавить приложение через VK Реклама** {#как-добавить-приложение-через-vk-реклама .unnumbered}

1.  Откройте в браузере систему [VK
    Реклама](https://ads.vk.com/hq/apps).

![800](media/image142.png){width="5.833333333333333in"
height="3.7003685476815398in"}

1.  Выберите удобный способ авторизации или [создайте новый
    кабинет](https://ads.vk.com/help/articles/new_account).

2.  Перейдите в раздел «Мобильные приложения» и нажмите «Добавить
    приложение».

![800](media/image42.png){width="5.833333333333333in"
height="2.3825667104111985in"}

1.  Откроется форма добавления приложения. Введите ссылку на приложение
    в RuStore и нажмите «Добавить».

Просмотреть ссылку на своё приложение можно перейдя на
веб-версию [витрины RuStore.](https://www.rustore.ru/)

Статус приложения изменится на «Проверяем доступ».

1.  Приступите к настройке интеграции с трекером.

RuStore также позволяет разработчикам запускать рекламные кампании на
платформе VK Реклама по прямым ссылкам без использования сторонних
трекинговых систем. Для запуска кампаний из RuStore ознакомьтесь с
[инструкцией](https://ads.vk.com/help/articles/rustore_direct_links).

Как реклама отображается для пользователей

Рекламные приложения доступны в разделе «Интересное».

Реклама отображается как для авторизованных, так и для неавторизованных
пользователей.

##### Показ рекламы в разделе «Интересное» в RuStore: {#показ-рекламы-в-разделе-интересное-в-rustore .unnumbered}

Рекламный баннер отображается при переходе в раздел «Интересное». Чтобы
перейти на страницу приложения, пользователь может нажать на баннер.

![400](media/image132.png){width="4.762237532808399in"
height="9.762237532808399in"}

##### Показ рекламы в поисковой выдаче: {#показ-рекламы-в-поисковой-выдаче .unnumbered}

Рекламный блок также отображается в поисковой выдаче на первом месте в
списке.

По клику на «Установить» начинается загрузка рекламного приложения
аналогично другим приложениям из результатов поиска.

![400](media/image100.png){width="5.0in" height="11.11111111111111in"}

## **Заявки на события** {#заявки-на-события .unnumbered}

События (in-app events) --- способ повысить мотивацию к установке
приложения, например: распродажи (для интернет-магазинов), особые
предложения и ивенты в играх и другие акции с ограниченным сроком
действия или условиями использования.

RuStore Консоль позволяет отправить заявку на событие, сведения о
котором будут отображаться в вашем приложении. Заявку на событие можно
создать для приложения, которое содержит опубликованную версию.

Для управления заявками на события выполните вход в [RuStore
Консоль](https://dev.rustore.ru/).

Срок рассмотрения заявки на событие --- до 14 дней. Если с вами не
связались в течении 14 дней --- это значит, что заявка не прошла
одобрение редакцией RuStore.

Максимальное количество одновременно поданных заявок на предстоящие
события в рамках одного приложения --- 5.

### **Создание заявки** {#создание-заявки .unnumbered}

Чтобы создать заявку на событие, выполните следующие действия.

1\. В навигационном меню слева выберите **Продвижение** \> **Заявки на
события**.

В зависимости от того, есть ли уже у вас созданные заявки, отобразится
следующая страница.

**Заявок нет**

![1456](media/image64.png){width="5.833333333333333in"
height="3.6217946194225723in"}

**Есть созданные заявки**

![1456](media/image37.png){width="5.833333333333333in"
height="3.6217946194225723in"}

2. Нажмите ![](media/image95.png){width="2.1666666666666665in"
height="0.5in"}.

Отобразится форма создания заявки на событие (см. изображение ниже).

![901](media/image81.png){width="5.833333333333333in"
height="5.127635608048994in"}

3\. Внесите необходимые данные, руководствуясь приведённой ниже
таблицей.

  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Настройка                           Описание
  ----------------------------------- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  **Название события**                Введите название события (до 34 символов).Название должно быть ёмким, максимально коротко передающим суть события.

  **Тип заявки на события**           Выберите из списка тип события:- **Новый сезон**;- **Акция**;- **Турнир**;- **Распродажа**;- **Большое обновление**;- **Специальное событие**;- **Премьера**;- **Прямой эфир**.

  **Дата начала**/ **Время**          Дата и время начала события.Сделайте так, чтобы пользователь сразу мог воспользоваться особыми условиями.

  **Дата окончания**/ **Время**       Дата и время окончания события. Должно быть больше текущей даты и времени.- Максимальная продолжительность события --- 90 дней.- Минимальная продолжительность события --- 24 часа.Завершение события не должно быть с большой отсрочкой, чтобы пользователь не откладывал эту возможность
                                      на потом.

  **Краткое описание**                Введите краткое описание события --- до 32 символов.- В кратком описании рекомендуется указать призыв к действию или другую полезную информацию о событии (напр., «Покупайте со скидкой до 90%»/«Эксклюзивно в  RuStore» и пр.).- Обращайтесь к пользователям на «вы» --- так вы выдержите
                                      общий тон RuStore.- Если в рамках события пользователь получает особые условия использования, отличные от типовых, отобразите это на креативе --- это должно стать призывом к действию.

  **Описание**                        Введите развёрнутое описание события --- до 448 символов.- Описание должно содержать не только подробности о вашем приложении, но и контекст соответствующего события.- Описание должно быть ёмким и содержать основные преимущества события или условия участия в нём (как активировать
                                      промокод/в каком разделе искать подарочный бокс/где забрать подарок при регистрации и пр.).

  **Обложка**                         Воспользуйтесь ссылкой, чтобы указать путь к файлу обложки или перетащите его в выделенную область:- формат файла: JPG;- размер файла: не более 3 Мбайт;- соотношение сторон: 4:3;- разрешение --- 2880x2160 px.Изображение должно быть хорошего качества.Подробные требования к обложке:-
                                      см. [События на смартфоне](https://help.rustore.ru/rustore/for_developers/advertising_an_promotion/event_creation/mcard);- см. [События на планшете](https://help.rustore.ru/rustore/for_developers/advertising_an_promotion/event_creation/tcard).[Инструкция по оформлению событий для
                                      дизайнеров](https://www.figma.com/proto/rO8mVvh8HWpGjqDa1a5xZM/Events-instruction?page-id=0%3A1&type=design&node-id=7-4088&viewport=435%2C331%2C0.06&t=KKnZkXfZJ4LeQGlU-8&scaling=min-zoom&starting-point-node-id=7%3A4088&disable-default-keyboard-nav=1&hotspot-hints=0&hide-ui=1)\_\_

  **Цвет подложки**                   Введите цветовой HEX-код для автоматического градиента на обложке. Цвет, соответствующий введённому коду, отобразится в квадрате ![](media/image27.png){width="0.5in" height="0.5in"} ниже.Лучше указать код в цвет вашего изображения.\_\_

  **Цвет текста**                     Выберите цвет отображаемого текста --- белый или чёрный.Обратите внимание, что текст должен быть хорошо виден на подложке: если подложка тёмная, выбирайте белый цвет текста, если подложка светлая --- текст должен быть чёрным.

  **Приоритет рассмотрения заявки**   Выберите приоритет рассмотрения своей заявки:- **Стандартный** --- устанавливается по умолчанию, заявки рассматриваются в общем порядке;- **Высокий** --- заявки рассматриваются с повышенным приоритетом.Высокий приоритет рассмотрения можно установить только для 1 из заявок на
                                      предстоящее событие.

  **Телефон**                         Укажите контактный номер телефона в формате **+79876543210**.

  **E-mail**                          Введите адрес электронной почты для связи с вами в случае одобрения заявки или уточнения вопросов.

  **Комментарий для модератора**      Если есть дополнительная информация, которую необходимо учесть в рамках события, введите её в этом поле.
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4. Нажмите ![](media/image103.png){width="2.1527777777777777in"
height="0.5in"}.

После отправки заявки на почту, которую вы указали в карточке, придёт
письмо (о получении заявки командой редакции RuStore). Если письмо
отсутствует, проверьте папку спам.

Одобренное событие будет отображаться в даты проведения в карточке
приложения. Также событие может попасть в список подборок на странице
«Интересное», «Игры», «Приложения», если будет выбрано командой редакции
RuStore.

### **Просмотр заявки** {#просмотр-заявки .unnumbered}

Чтобы просмотреть созданную заявку на событие, выполните следующие
действия.

1.  В навигационном меню слева выберите **Продвижение** \> **Заявки на
    события**.

-   Отобразится страница со списком созданных заявок.

![1456](media/image135.png){width="5.833333333333333in"
height="3.6217946194225723in"}

1.  Выберите нужную заявку из списка.

-   Отобразится страница с подробной информацией о заявке.

![888](media/image122.png){width="5.833333333333333in"
height="5.202702318460193in"}

### **События на смартфоне** {#события-на-смартфоне .unnumbered}

См. также: [Инструкция по оформлению событий для
дизайнеров](https://www.figma.com/proto/rO8mVvh8HWpGjqDa1a5xZM/Events-instruction?page-id=0%3A1&type=design&node-id=7-4088&viewport=435%2C331%2C0.06&t=KKnZkXfZJ4LeQGlU-8&scaling=min-zoom&starting-point-node-id=7%3A4088&disable-default-keyboard-nav=1&hotspot-hints=0&hide-ui=1).

**Обложка может быть**:

-   На светлом фоне: текст черный.

-   На тёмном фоне: текст белый.

Размер итоговой карточки в мобильном приложении --- **316х270**.

**Карточка включает в себя**:

-   Заголовок: максимальное кол-во символов --- 34 (две строчки).

-   Краткое описание: максимальное кол-во символов --- 32 (одна
    строчка).

-   Иконка и название приложения, а также кнопка «Скачать».

![826](media/image10.png){width="5.833333333333333in"
height="5.338982939632546in"}

#### *Событие в открытом виде* {#событие-в-открытом-виде .unnumbered}

Событие в открытом виде --- всплывающее окно фиксированной высоты и
ширины.

-   По краям отступы --- XS (12px).

-   Cверху ---  XL17 (88 px).

-   Cнизу --- XL19 (96 px).

Карточка включает в себя:

-   Кнопка «Закрыть»

-   Заголовок: максимальное кол-во символов --- 34 (две строчки).

-   Описание: максимальное кол-во символов --- 448.

![826](media/image16.png){width="5.833333333333333in"
height="12.655366360454943in"} Изображение

Загружаемое изображение: JPG, 3 Мбайт, 4:3, 2880x2160 px (2х).

Важные элементы на изображении должны располагаться по центру в верхней
части.

![826](media/image54.png){width="5.833333333333333in"
height="2.612994313210849in"}

По низу изображения, где идёт иконка и название приложения, а также
кнопка «Скачать», накладывается заливка и градиент. Заливку лучше
выбирать под цвет изображения. Цвет указывается в HEX.

![826](media/image19.png){width="5.833333333333333in"
height="5.360168416447944in"}

Изображение растягивается по центру контейнера.

![826](media/image20.png){width="5.833333333333333in"
height="6.059321959755031in"}

![826](media/image74.png){width="5.833333333333333in"
height="7.563558617672791in"}

Если есть важные детали на изображении и хочется, чтобы изображение не
растягивалось на всю карточку, то можно расположить в верхней части
изображения по центру.

![826](media/image115.png){width="5.833333333333333in"
height="8.107343613298339in"}

#### *Градиент и подложка* {#градиент-и-подложка .unnumbered}

Подложка распространяется на всю зону описания события и приложение с
кнопкой, градиент начинается от начала описания вверх на 120 px.

![826](media/image26.png){width="5.833333333333333in"
height="4.92231627296588in"}

### **События на планшете** {#события-на-планшете .unnumbered}

См. также: [Инструкция по оформлению событий для
дизайнеров](https://www.figma.com/proto/rO8mVvh8HWpGjqDa1a5xZM/Events-instruction?page-id=0%3A1&type=design&node-id=7-4088&viewport=435%2C331%2C0.06&t=KKnZkXfZJ4LeQGlU-8&scaling=min-zoom&starting-point-node-id=7%3A4088&disable-default-keyboard-nav=1&hotspot-hints=0&hide-ui=1).

**Обложка может быть**:

-   На светлом фоне: текст черный.

-   На тёмном фоне: текст белый.

Размер итоговой карточки на планшете --- **357х404**.

**Карточка включает в себя**:

-   Заголовок: максимальное кол-во символов --- 34 (две строчки).

-   Краткое описание: максимальное кол-во символов --- 32 (одна
    строчка).

-   Иконка и название приложения, а также кнопка «Скачать».

![826](media/image137.png){width="5.833333333333333in"
height="6.532485783027122in"}

#### *Событие в открытом виде* {#событие-в-открытом-виде-1 .unnumbered}

Событие в открытом виде --- всплывающее окно фиксированной высоты и
ширины.

-   По краям отступы --- S (16 px).

-   Высота карточки фикс ---  560 px, располагается по центру планшета.

**Карточка  включает в себя**:

-   Кнопка «Закрыть».

-   Заголовок: максимальное кол-во символов --- 34 (две строчки).

-   Описание: максимальное кол-во символов --- 448.

**Расположение контента**:

Контент делится на две части 50/50, слева идёт изображение, справа
информация:

-   название события;

-   полное описание;

-   иконка и названием приложения, а также кнопка «Скачать».

Правая часть, где расположена информация, заливается цветом, которую
указали при добавление события, в HEX. Этот же цвет встречается на
карточке в миниатюре, которая располагается в списке подборок.

![826](media/image38.png){width="5.833333333333333in"
height="8.248587051618548in"}

#### *Изображение* {#изображение .unnumbered}

Изображение растягивается по центру контейнера.

![826](media/image147.png){width="5.833333333333333in"
height="6.906779308836396in"} Расположение

-   Если событие одно: встает в пару с подборкой с обложкой.

-   Если два события --- рядом.

-   Если три и более событий, появляется горизонтальная прокрутка.

# **Инструменты** {#инструменты .unnumbered}

Используйте раздел «‎Инструменты»‎ в [RuStore
Консоли](https://console.rustore.ru/waiting) для подключения
инструментов разработчика к вашим приложениям.

Инструменты предоставляют разработчикам дополнительные возможности по
управлению приложениями, поиску ошибок и интеграциям с различными
сервисами.

Подключение инструмента доступно только пользователям с правами
владельца организации.

![800](media/image145.png){width="5.833333333333333in"
height="3.334623797025372in"}

## **Подключение Инструмента** {#подключение-инструмента .unnumbered}

1\. Перейдите на вкладку «‎Инструменты»‎.

2\. Выберите из бокового меню интересующий инструмент и нажмите
«‎Подключить». Система отобразит сообщение с результатом подключения.

При появлении ошибок напишите в поддержку.

При подключении с общей страницы инструмент подключится ко всем вашим
приложениям, у которых есть хотя бы одна созданная версия в [RuStore
Консоли](https://console.rustore.ru/waiting).

Подключить инструмент также можно в боковом меню карточки приложения. В
этом случае инструмент будет подключен только к выбранному приложению.

![800](media/image5.png){width="5.833333333333333in"
height="3.270403543307087in"}

После подключения вы сможете увидеть все подключенные приложения в
разделе инструменты и перейти непосредственно в интерфейс инструмента.

При подключении в конкретном сервисе создаётся аккаунт для владельца
организации в RuStore. Для того, чтобы настроить доступы для других
сотрудников вашей организации, после подключения вам нужно перейти в
сервис и настроить доступы в интерфейсе инструмента.

## **RuStore Remote Config** {#rustore-remote-config .unnumbered}

### **Общая информация** {#общая-информация .unnumbered}

[RuStore Remote
Config](https://console.rustore.ru/tools/remote_config)--- инструмент
для управления конфигурацией мобильных приложений. Позволяет реализовать
функции feature toggle (или feature switcher) и управлять ими из
удобного графического интерфейса.

#### *Быстрый старт* {#быстрый-старт .unnumbered}

-   [Установка SDK и конфигурация
    приложения](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk);

-   [Создание условий, по которым будут включаться
    параметры](https://help.rustore.ru/rustore/for_developers/tools/remote_config/conditions);

-   [Описание параметров в Remote
    Config](https://help.rustore.ru/rustore/for_developers/tools/remote_config/parameters).

#### *Дополнительная информация* {#дополнительная-информация .unnumbered}

-   [Права
    пользователей](https://help.rustore.ru/rustore/for_developers/tools/remote_config/roles).

-   [Принцип работы
    сервиса](https://help.rustore.ru/rustore/for_developers/tools/remote_config/how_it_works).

### **Принцип работы** {#принцип-работы .unnumbered}

При создании нового приложения его код должен быть сконфигурирован так,
чтобы в нём были параметры, которые можно менять с помощью конфига.
Из-за этого Remote Config не может работать с любым приложением: сначала
нужно адаптировать код сервиса под работу с RuStore Remote Config.

При запуске приложения SDK отправляет запрос в RuStore Remote Config и в
качестве ответа получает конфиг --- JSON с набором определённых
параметров. Вместе с конфигом (параметрами, которые меняют поведение
приложения) в ответе приходит и хэш от конфига. Этот хэш приложение
запоминает и в следующих запросах к Remote Config отправляет его в
качестве одного из параметров.

Remote Config сравнивает полученный хэш с хэшом конфига, который нужно
отдать на этот запрос. Если они совпадают, то вместо конфига сервис
возвращает ответ «‎not modified»‎. Это нужно, чтобы не возвращать клиенту
неизменённый конфиг.

После получения конфига на устройстве отрисовывается интерфейс или
изменяются фичи в зависимости от параметров конфига из RuStore Remote
Config.

Приложение применяет полученный конфиг только после перезапуска.
Пользователи не увидят изменения в интерфейсе в реальном времени.

### **SDK и конфигурация приложения** {#sdk-и-конфигурация-приложения .unnumbered}

#### *Подключение в проект* {#подключение-в-проект .unnumbered}

Подключите репозиторий:

**build.gradle**

  -----------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"
  )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

#### *Подключение зависимости* {#подключение-зависимости .unnumbered}

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

**build.gradle**

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:remoteconfig:0.0.2\" )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

[Пример приложения с подключённым
SDK](https://gitflic.ru/project/rustore/rustore-kotlin-remote-config-sdk-example).

#### *Общая информация* {#общая-информация-1 .unnumbered}

SDK Remote Config --- это облачный сервис, который позволяет изменять
поведение и внешний вид вашего приложения, не требуя от пользователей
загрузки обновления приложения. SDK инкапсулирует в себе запрос
конфигурации с сервера, кэширование, фоновое обновление. Имеет удобный
api для получения данных.

Приложение-пример [доступно по
ссылке](https://gitflic.ru/project/rustore/rustore-kotlin-remote-config-sdk-example).

##### Ключевые особенности {#ключевые-особенности .unnumbered}

-   SDK позволяет выбрать наиболее удобный механизм обновления
    конфигурации.

-   Имеет возможность указывать процент распространения конфигурации на
    аудиторию.

-   Для построения воронки конкретной конфигурации можно
    передавать дополнительную информацию. Возможно формировать
    конфигурации даже для конкретных пользователей.

-   Имеет набор колбэков о работе SDK, которые можно использовать для
    аналитики.

-   Имеет минимальное количество внешних зависимостей.

##### Подключение в проект {#подключение-в-проект-1 .unnumbered}

Подключите репозиторий:

**build.gradle**

  -----------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"
  )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

##### Подключение зависимости {#подключение-зависимости-1 .unnumbered}

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

**build.gradle**

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:remoteconfig:0.0.2\" )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

#### *Создание и инициализация RemoteConfigClient* {#создание-и-инициализация-remoteconfigclient .unnumbered}

Инициализация RemoteConfigClient должна происходить в момент
Application.onCreate(), так как при запуске [фоновой
синхронизации](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/synchronization) SDK
должна быть проинициализирована.

##### Создание RemoteConfigClient {#создание-remoteconfigclient .unnumbered}

  -----------------------------------------------------------------------
  val remoteConfigClient = RemoteConfigClientBuilder(appId = AppId(
  \"your_app_id\" ), context = applicationContext).build()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Через RemoteConfigClientBuilder можно установить [дополнительные
параметры](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/initialization),
которые могут быть использованы для получения конкретной конфигурации.

Повторный вызов RemoteConfigClientBuilder.build() вызовет
ошибку [RemoteConfigClientAlreadyExist](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/errors)
**.**

После вызова метода RemoteConfigClientBuilder.build() создается
экземпляр RemoteConfigClient и записывается синглтон. Получить созданный
экземпляр можно следующим образом:

  -----------------------------------------------------------------------
  RemoteConfigClient.instance
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Доступ через статическую переменную до создания
через RemoteConfigClientBuilder.build() вызовет
ошибку [RemoteConfigClientNotCreated](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/errors).

##### Опциональные параметры RemoteConfigClientBuilder {#опциональные-параметры-remoteconfigclientbuilder .unnumbered}

  ---------------------------------------------------------------------------------
  Параметр                            Описание
  ----------------------------------- ---------------------------------------------
  OsVersion                           **Условие в конфигураторе: Os
                                      Version**Позволят сравнивать OsVersion со
                                      значением, установленным в интерфейсе. По
                                      умолчанию OsVersion не передается, в этом
                                      случае будет возвращен дефолтный конфиг.

  DeviceModel                         **Условие в конфигураторе: Device
                                      Model**Позволят сравнивать DeviceModel со
                                      значением, установленным в интерфейсе. По
                                      умолчанию DeviceModel не передается, у этом
                                      случае будет возвращен дефолтный конфиг.

  Language                            **Условие в конфигураторе: Language**Позволят
                                      сравнивать Language со значением,
                                      установленным в интерфейсе. По умолчанию
                                      Language не передается, у этом случае будет
                                      возвращен дефолтный конфиг.Для передачи
                                      Language необходимо
                                      реализовать ConfigRequestParameterProvider.

  Account                             **Условие в конфигураторе: Account**Позволят
                                      сравнивать account со значением,
                                      установленным в интерфейсе**Условие в
                                      конфигураторе: Account Percentile**Позволят
                                      раздавать конфиг по значению account на
                                      определенный процент**Условие в
                                      конфигураторе: Interval Account
                                      Percentile**Позволят раздавать конфиг по
                                      значению account на определенный процент и в
                                      определенный деньДля передачи Account
                                      необходимо
                                      реализовать ConfigRequestParameterProvider.

  DeviceId                            **Условие в конфигураторе: DeviceID**Позволят
                                      сравнивать DeviceId со значением,
                                      установленным в интерфейсе**Условие в
                                      конфигураторе: DeviceID Percentile**Позволят
                                      раздавать конфиг по значению DeviceId на
                                      определенный процент**Условие в
                                      конфигураторе: Interval DeviceID
                                      Percentile**Позволят раздавать конфиг по
                                      значению DeviceId на определенный процент и в
                                      определенный день

  AppVersion                          **Условие в конфигураторе: App
                                      Version**Позволят сравнивать AppVersion со
                                      значением, установленным в интерфейсе

  Environment                         **Условие в конфигураторе: App
                                      Environment**Позволят
                                      сравнивать Environment со значением,
                                      установленным в интерфейсеEnvironment может
                                      принимать следующие значения: Alpha, Beta,
                                      Release.Данный параметр удобно использовать
                                      для тестирования конфигурации на различных
                                      сборках приложения.

  AppBuild                            **Условие в конфигураторе: App
                                      Build**Позволят сравнивать AppBuild со
                                      значением, установленным в интерфейсе
  ---------------------------------------------------------------------------------

##### UpdateBehaviour {#updatebehaviour .unnumbered}

UpdateBehaviour --- это параметр, определяющий поведение SDK. При
создании экземпляра RemoteConfigClientBuilder, по умолчанию используется
значение UpdateBehaviour.Default с интервалом синхронизации 15 минут.

Установить другое поведение SDK можно следующим образом:

  -----------------------------------------------------------------------
  remoteConfigClientBuilder.setUpdateBehaviour(UpdateBehaviour.Actual)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

###### Разница в UpdateBehaviour {#разница-в-updatebehaviour .unnumbered}

  ------------------------------------------------------------------------------------------------------------------------------------------------------
  UpdateBehaviour                             Описание
  ------------------------------------------- ----------------------------------------------------------------------------------------------------------
  UpdateBehaviour.Actual                      При инициализации с этим типом обновления, **каждый**[запрос
                                              конфигурации](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/configuration)будет
                                              происходить через запрос к серверу.**Данный тип обновления гарантирует получение самой актуальной
                                              конфигурации, но скорость запроса конфигурации будет зависеть от скорости сети.**Данный тип инициализации
                                              отменяет процесс фонового обновления.

  UpdateBehaviour.Default(minSyncInterval)    При инициализации с этим типом обновления, запрос конфигурации будет происходить из локального постоянного
                                              хранилища, которое будет обновляться в указанный интервал.Если инициализация происходит первый раз
                                              (локальное постоянное хранилище пустое), то происходит запрос на сервер для его заполнения, время которого
                                              зависит от объема данных и скорости сети. Доступ к конфигурации будет ожидать завершения
                                              инициализации.**Данный тип инициализации не гарантирует, что в рамках жизни процесса получение
                                              конфигурации будет отдавать одинаковый результат, так как
                                              в [фоне](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/synchronization) может
                                              произойти синхронизация данных.**Данный тип инициализации запускает процесс фонового обновления.

  UpdateBehaviour.Snapshot(minSyncInterval)   При инициализации с этим типом обновления, запрос конфигурации будет происходить из локального inMemory
                                              хранилища.inMemory хранилище будет заполнено результатом первого запроса из постоянного хранилища, и
                                              сохранено там до конца жизни процесса.Если инициализация происходит первый раз (локальное постоянное
                                              хранилище пустое), то происходит запрос на сервер для его заполнения, время которого зависит от объема
                                              данных и скорости сети. Доступ к конфигурации будет ожидать завершения инициализации.**Данный тип
                                              инициализации гарантирует, что в рамках жизни процесса запросы конфигурации будут отдавать одинаковый
                                              результат.**Данный тип инициализации запускает процесс [фонового
                                              обновления](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/synchronization).
  ------------------------------------------------------------------------------------------------------------------------------------------------------

##### ConfigRequestParameterProvider {#configrequestparameterprovider .unnumbered}

Реализация ConfigRequestParameterProvider дает возможность динамически
передавать параметры на сервер для синхронизации конфигурации.

Поддерживаемый список параметров: Language и Account

  -----------------------------------------------------------------------
  class ConfigRequestParameterProviderImpl :
  ConfigRequestParameterProvider {    \`\`override fun
  getConfigRequestParameter(): ConfigRequestParameter
  =        \`\`ConfigRequestParameter(            \`\`language =
  Language(Locale.getDefault().language),            \`\`account =
  Session.id,        \`\`)}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Реализация метода должна выполняться быстро, без длительных
операций. Реализация долго работающего метода getConfigRequestParameter
может привести к большим задержкам при получении конфигурации.

**Вызов метода будет происходить на потоках RemoteConfig SDK.**

Добавить реализацию ConfigRequestParameterProvider можно следующим
образом:

  -----------------------------------------------------------------------------------------------------------
  val provider =
  ConfigRequestParameterProviderImpl()remoteConfigClientBuilder.setConfigRequestParameterProvider(provider)
  -----------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------

##### RemoteConfigClientEventListener {#remoteconfigclienteventlistener .unnumbered}

Реализация RemoteConfigClientEventListener дает возможность получать
колбэки о работе SDK, такие как завершение инициализации, обновление
постоянного хранилища и т. д.

Колбэки слушателя вызываются на MainThread.

Добавить реализацию RemoteConfigClientEventListener можно следующим
образом:

  -------------------------------------------------------------------------------------------------------------
  val listener =
  RemoteConfigClientEventListenerImpl()remoteConfigClientBuilder.setRemoteConfigClientEventListener(listener)
  -------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------

Пример имплементации RemoteConfigEventListener:

  -----------------------------------------------------------------------
  class RemoteConfigListenerImpl: RemoteConfigClientEventListener
  {    \`\`override fun backgroundJobErrors(exception:
  RemoteConfigException.BackgroundConfigUpdateError)
  {        \`\`//Возвращает ошибку фоновой
  работы    \`\`}    \`\`override fun firstLoadComplete()
  {        \`\`//Вызывается при окончании первой
  загрузки    \`\`}    \`\`override fun initComplete()
  {        \`\`//Вызывается при окончании
  инциализации    \`\`}    \`\`override fun memoryCacheUpdated()
  {        \`\`//Вызывается при измененияя кэша в
  памяти    \`\`}    \`\`override fun persistentStorageUpdated()
  {        \`\`//Вызывается при изменении постоянного
  хранилища    \`\`}    \`\`override fun
  remoteConfigNetworkRequestFailure(throwable: Throwable)
  {        \`\`//Вызывается при ошибке сетевого запроса Remote
  Сonfig    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

##### Инициализация RemoteConfigClient {#инициализация-remoteconfigclient .unnumbered}

Инициализация RemoteConfigClient выполняется асинхронно, результат
инициализации можно отслеживать через
класс [Task](https://help.rustore.ru/rustore/for_developers/developer-documentation/Task_API),
который возвращает метод init() или через слушатель.

  -----------------------------------------------------------------------
  remoteConfigClient.init()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

#### *Получение конфигурации из RemoteConfigClient* {#получение-конфигурации-из-remoteconfigclient .unnumbered}

Получение конфигурации из RemoteConfigClient происходит через вызов
метода getRemoteConfig().

  -----------------------------------------------------------------------
  remoteConfigClient.getRemoteConfig()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если RemoteConfigClient не был проинициализирован ранее, то при первом
вызове метода getRemoteConfig() произойдет инициализация, что может
занять некоторое время. Для более быстрого получения конфигурации,
инициализацию RemoteConfigClient стоит производить заранее.

Метод getRemoteConfig()
возвращает [Task](https://help.rustore.ru/rustore/for_developers/developer-documentation/Task_API)\<[RemoteConfig](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/RemoteConfig_class)\>
и выполняется асинхронно. Task может завершиться неудачно. [Ошибки SDK
RemoteConfig](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/errors)

После успешного завершения Task, появится доступ к RemoteConfig, это
текущий набор всех данных, полученных в зависимости от
выбранной [политики
обновления](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/initialization) и параметров при
инициализации. При некоторых политиках обновления, получение
конфигурации будет зависеть не от текущих параметров инициализации, а от
параметров, которые использовались во время [фоновой
синхронизации](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/synchronization).

#### *Класс RemoteConfig* {#класс-remoteconfig .unnumbered}

Экземпляр RemoteConfig --- это текущий набор всех данных, полученных в
зависимости от выбранной политики обновления при инициализации,
экземпляр имеет весь набор ключей, которые были переданы с сервера в
зависимости от параметров, указанных при инициализации.

##### Проверка доступности ключа {#проверка-доступности-ключа .unnumbered}

  -----------------------------------------------------------------------
  remoteConfig.containsKey( \"my_key\" )
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод проверяет наличие ключа в текущем экземпляре RemoteConfig.

##### Получение типизированных данных {#получение-типизированных-данных .unnumbered}

Класс RemoteConfig имеет методы получения данных и приведения его к
определенным типам.

-   getBoolean(key: String): Boolean

-   getInt(key: String): Int

-   getLong(key: String): Long

-   getString(key: String): String

-   getDouble(key: String): Double

-   getFloat(key: String): Float

Методы могут вернуть
ошибку [RemoteConfigCastException](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk/errors),
если тип данных не соответствует выбранному методу или отсутствует
значение по передаваемому ключу.

#### *Фоновая синхронизация конфигурации* {#фоновая-синхронизация-конфигурации .unnumbered}

Фоновая синхронизация конфигурации используется при некоторых
типах политики обновления.

Результатом фоновой синхронизации конфигурации является обновление
постоянного хранилища конфигураций актуальными данными для последующего
использования в зависимости от выбранной политики обновления.

Минимальный допустимый интервал между фоновыми синхронизациями
составляет 15 минут.

Для корректной работы фоновой синхронизации, инициализация SDK
RemoteConfig должна происходить в методе Application.onCreate().

#### *Ошибки SDK RemoteConfig* {#ошибки-sdk-remoteconfig .unnumbered}

Все ошибки SDK RemoteConfig имеют суперкласс RemoteConfigException

Наследники RemoteConfigException:

  -----------------------------------------------------------------------
  Ошибка                              Описание
  ----------------------------------- -----------------------------------
  BackgroundConfigUpdateError         Выбрасывается в случае ошибки в
                                      работе фоновой синхронизации.

  FailedToReceiveRemoteConfig         Выбрасывается в случае ошибки при
                                      вызове метода получения
                                      конфигурации.

  RemoteConfigCastException           Выбрасывается в случае
                                      некорректного получения данных по
                                      ключу из класса RemoteConfig.
                                      Ошибка может быть связана с
                                      невозможностью приведения к типу,
                                      либо значение по передаваемому
                                      ключу отсутствует.

  RemoteConfigClientAlreadyExist      Выбрасывается в случае
                                      повторного создания
                                      RemoteConfigClient в рамках жизни
                                      процесса.

  RemoteConfigClientNotCreated        Выбрасывается в случае доступа к
                                      RemoteConfigClient через
                                      статическое поле instance
                                      до создания RemoteConfigClient.

  RemoteConfigCommonException         Общая непредвиденная ошибка.

  RemoteConfigNetworkException        Выбрасывается в случае
                                      возникновения сетевой ошибки в
                                      работе синхронизации.
  -----------------------------------------------------------------------

#### *История изменений SDK Remote Config* {#история-изменений-sdk-remote-config .unnumbered}

###### Версия SDK 0.0.2 {#версия-sdk-0.0.2 .unnumbered}

-   Внутреннее обновление SDK.

### **Условия** {#условия .unnumbered}

Условия определяют, как именно обновится приложение. Например, «‎версия
Android старше 11й версии и русский язык на устройстве»‎. Условие можно
назвать «‎таргетингом»‎ или «‎сегментом»‎. Само по себе создание условия ни
на что не влияет, его нужно применить к раскатываемому параметру.
[Параметры Remote
Config](https://help.rustore.ru/rustore/for_developers/developer-documentation/remote_config/parameters)

Условия нужны, чтобы применять параметры на определённый сегмент
пользователей. Весь список находится в разделе Conditions. Условия также
видны в выпадающем списке при настройке параметра.

Не редактируйте условия без необходимости и уверенности, что это не
повлияет на пользователей. Особенно, если на условия раздаются
параметры. Это может помешать стабильной работе приложения.

#### *Создание нового условия* {#создание-нового-условия .unnumbered}

Для создания нового условия нажмите кнопку «‎Add Condition».

![700](media/image3.png){width="5.833333333333333in"
height="2.1944444444444446in"}

В поле «‎Название» укажите название события. В «‎Описании» --- поясняющий
комментарий.

Выберите «‎Атомарные условия», из которых состоит условие.

Все атомарные условия объединяются по логическому «‎И». Чтобы
пользователь попал в созданное условие, он должен попасть под действие
всех атомарных условий.

#### *Атомарные условия* {#атомарные-условия .unnumbered}

Атомарные условия могут быть текстовыми и числовыми. Текстовое поле
заполняется без кавычек.

![400](media/image79.png){width="4.825173884514435in"
height="3.986013779527559in"}

Для текстовых доступны операторы:

-   Exactly matches. Требует точного соответствия.

**Пример**. *Условию «‎OS Version exactly matches 9.0.0»‎ будет
соответствовать запрос от приложения с os_version=9.0.0, но не
с os_version=9.0.*

-   Contains. Содержит подстроку.

-   Does not contain. Не содержит подстроку элементов.

-   Regexp. Соответствует регулярному выражению.

При использовании Regexp для Golang нужно проверять работу условия по
[ссылке](https://regex101.com/) и при тестировании.

-   Presented in file. Соответствует элементам из списка в файле.
    Максимальный размер файла --- 5 MB.

-   Not presented in file. Под условие попадают все пользователи,
    которые не указаны в загруженном файле.

Для числовых доступны операторы:

-   =

-   != (не равно)

-   =

-   \<

-   \<=

#### *Список атомарных условий* {#список-атомарных-условий .unnumbered}

  --------------------------------------------------------------------------------------------------------------------------
  **Atomic          **Описание**      **Тип**           Примеры использования и комментарии
  Condition**
  ----------------- ----------------- ----------------- --------------------------------------------------------------------
  OS Version        Версия ОС         Текстовый +       Версия OS \<= 9.9OS Version matches regex
                                      Числовой          "\^\[1-8\](\\.\\d+)\*\$\\\|\^9(\\\\.\\\\d(\\\\.\\\\d+)\\\*)\\\*\$"

  Device Model      Модель устройства Текстовый         Устройства Samsung:Device Model Contains samsung

  Language          Язык на           Текстовый         Русский язык на устройствеLanguage matches regex \^ru
                    устройстве

  Account           Аккаунт           Текстовый         Account exactly matches mrg.test@mail.ruВ данном случае, если хотя
                                                        бы одна из подключенных учеток является <mrg.test@mail.ru>, то
                                                        условие выполнится.

  App Version       Версия приложения Текстовый         App Version exactly matches  1.5.3

  App Environment   Альфа, Бета или   Возможные         Значение данного поля задается при инициализации SDK RuStore Remote
                    Стор версия       значения: Alpha,  Config.
                                      Beta, Release.

  App Build Id      Номер сборки      Числовой          Пользователи на сборках не младше 22563App Build Id \>= 22563
                    приложения

  DeviceID          Персентиль от     Числовой          Используется для публикации параметров на % пользователей.Персентиль
  Percentile        DeviceId                            --- число от 0.00 до 99.99.Число определяется функцией от значения
                                                        device_id. Каждому device_id RuStore Remote Config вернёт какое-то
                                                        число.Есть дополнительное поле: [Salt](#kix.sd4wxpic70v6)--- его
                                                        нужно использовать, когда необходимо применить параметр на разные не
                                                        пересекающиеся группы пользователей.

  Account           То же, но от      Числовой
  Percentile        аккаунта

  DeviceID Interval Вычисляется по    Числовой          Позволяет публиковать фичу интервалами. **Пример**. *Вы взяли 10%
  Percentile        DeviceID                            пользователей, указали [соль](#kix.sd4wxpic70v6) и интервал в 7
                                                        дней. Пользователи, которые увидят обновления, распределятся по
                                                        всему интервалу: 1/7 пользователей из выбранных 10% будет получать
                                                        конфиг каждый 7-й день.*

  Account Interval  Вычисляется по    Числовой          Аналогично DeviceID Interval Percentile
  Percentile        Account

  Random Percent    Каждый раз новый
                    процент

  Show Time         Время отдачи                        Указывается начало и/или конец отдачи и часовой пояс. Использовать,
                    конфига                             например, если нужно в пятницу настроить запуск чего-то на
                                                        понедельник, или отключить какую-то фичу в определенный день.
  --------------------------------------------------------------------------------------------------------------------------

##### Параметр Salt {#параметр-salt .unnumbered}

Чтобы пользователь попадал в разные персентили, значения параметра Salt
должны отличаться.

Например, если вы хотите всегда включать новые фичи на одних и тех же
пользователей при публикации на % используйте атомарное
условие **deviceId percentile**.Если нужно, чтобы каждое обновление
видели разные пользователи, меняйте значение параметра Salt.

##### Подтверждение создания условий {#подтверждение-создания-условий .unnumbered}

Если условие создает не владелец приложения или пользователь с правами
на подтверждение, то понадобится подтверждение от пользователя с такими
правами или владельца приложения. [Роли
пользователей](https://help.rustore.ru/rustore/for_developers/acc_developers/user_roles)

### **Параметры** {#параметры .unnumbered}

В RuStore Remote Config заводятся параметры, которые будут регулировать
поведение вашего приложения. Их значения могут быть разными в
зависимости от того,
какое [условие](https://help.rustore.ru/rustore/for_developers/tools/remote_config/conditions) выполняется.
При интеграции приложения его код должен быть сконфигурирован при помощи
[SDK](https://help.rustore.ru/rustore/for_developers/tools/remote_config/sdk)
так, чтобы в нём были параметры, которые можно было бы менять с помощью
конфигурации.

Редактируйте параметры осторожно, чтобы изменения не повлияли на
пользователей и стабильную работу приложения.

#### *Создание нового параметра* {#создание-нового-параметра .unnumbered}

Нажмите кнопку «‎Создать параметр»‎. Вы увидите экран создания параметра:

![600](media/image9.png){width="5.833333333333333in"
height="4.9762237532808395in"}

В поле «‎Ключ параметра» укажите его название. Добавьте комментарий или
описание.

Типы параметров:

-   Boolean --- True/False.

-   Numeric --- цифровой.

-   String --- текстовый (однострочный).

-   Text --- текстовый (многострочный).

-   JSON --- передача конфига.

Тип значения параметра может быть только один.

После выбора типа параметра, добавьте к нему заранее созданные условия.

У каждого параметра может быть множество заданных значений по разным
условиям. Расчёт условий происходит в порядке их описания внутри
параметра в RuStore Remote Config. Например, если пользователь попал под
условие «А», то дальнейшие условия проверяться не будут. Таким образом,
различными комбинациями можно создавать условия любой сложности.

Чтобы перетащить условия, потяните за
значок ![33](media/image91.png){width="0.4615376202974628in"
height="0.4195800524934383in"}

При создании параметра рядом с названием появляется индикатор New,
который говорит, что это новый параметр. Такой параметр можно удалять
без подтверждения, так как он является черновиком.

#### *Тестирование нового параметра* {#тестирование-нового-параметра .unnumbered}

При создании, изменении или удалении параметра оно переходит в
статус **Pending**, то есть в режим ожидания подтверждения. Но в отличие
от условия, параметры можно протестировать перед тем, как подтверждать
изменения. Механизм тестирования позволяет применить параметр на
конкретное устройство или аккаунт и убедиться в корректности поведения
приложения.

Тестирование --- важная возможность системы, которая позволит
обезопасить от применения некорректных значений конфигурации. В основе
тестирования лежит применение кастомных атомарных условий на каждую
возможную версию параметра.

При нажатии на кнопку «Настроить тест» появляется окно вида:

![700](media/image58.png){width="5.833333333333333in"
height="3.5633770778652667in"}

Табы сверху соответствуют всем добавленным условиям и значению по
умолчанию, которые есть в измененном параметре. На скриншоте выше
тестируется значение, получаемое по условию «Моё новое условие».

При нажатии на кнопку «Запустить тест» параметр переходит в
статус **Testing**, в котором уже появляется возможность подтвердить или
отклонить изменения.

Добавляемые условия полностью заменяют атомарные, приведённые в
параметре «Моё новое условие». Это сделано для тестирования сложных
сценариев, которые трудно воссоздать на устройстве пользователя.
Например, это может быть условие, связанное с версией приложения. Вы
можете изменить исходные условия на кастомные и посмотреть, как выглядит
интерфейс при выполнении параметра «Моё новое условие». Другими словами,
сервис позволяет получить любое значение параметра на устройстве с
помощью кастомных условий.

Первое условие ограничено в выборе допустимых типов и операций. Доступны
только типы DeviceID и Account и операция Exactly matches. Такая защита
сделана специально, чтобы не выбрать слишком широкий диапазон
пользователей для тестирования. Начиная со второго условия таких
ограничений нет.

Обратите внимание, что один и тот же Account или DeviceID применяется
только для одного условия или Default value. В противном случае система
не будет знать точно, какое именно значение отдавать, поэтому оно может
быть произвольным и постоянно меняться.

При удалении параметра табы отсутствуют, и выбранные атомарные условия
применяются глобально. Так как параметр удаляется, то нам необходимо
протестировать его удаления, и в данном случае неважны именно тесты
отдельных условий внутри параметр, так как они тоже удалятся вместе с
параметром. Пример:

![700](media/image102.png){width="5.833333333333333in"
height="3.2243580489938757in"}

#### *Применение нового параметра* {#применение-нового-параметра .unnumbered}

После подтверждения параметра пользователем, имеющим соответствующие
права, параметр начинает действовать. [Роли
пользователей](https://help.rustore.ru/rustore/for_developers/acc_developers/user_roles)

### **Роли и права пользователей** {#роли-и-права-пользователей .unnumbered}

Remote config предоставляет пользователям возможность гибкого управления
доступами с использованием механизма выдачи прав. Права
выдаются **отдельно** на каждое приложение.

#### *Список прав и их описание* {#список-прав-и-их-описание .unnumbered}

Владелец компании обладает всеми правами во всех приложениях компании.

  -----------------------------------------------------------------------
  Право                               Доступные действия
  ----------------------------------- -----------------------------------
  Просмотр                            Просмотр параметров, условий и
                                      истории изменений.

  Запись                              Создание, изменение, удаление и
                                      отклонение параметров и условий, а
                                      также тестирование параметров.
                                      Право **не позволяет** делать
                                      подтверждение изменений.

  Подтверждение                       Подтверждение и отклонение любых
                                      изменений в системе.

  Выдача прав                         Выдача прав любом сотруднику в
                                      системе в рамках текущего
                                      приложения.
  -----------------------------------------------------------------------

### **Работа с параметрами и условиями** {#работа-с-параметрами-и-условиями .unnumbered}

Remote Config защищает пользователей от непреднамеренных действий с
параметрами и условиями, поэтому любое изменение, которое может повлиять
на поведение приложения, будет отправлено на подтверждение. Не все
изменения требуют подтверждения. Например, изменение описания параметра
или условия никак не влияет на поведение системы, поэтому изменения
вступают в силу сразу.

#### *Права и доступы* {#права-и-доступы .unnumbered}

Важно сказать, что права для совершения операций изменения подтверждения
разделены. [Роли
пользователей](https://help.rustore.ru/rustore/for_developers/acc_developers/user_roles)

#### *Работа с условием* {#работа-с-условием .unnumbered}

При создании, изменении или удалении условия оно переходит в
статус **Pending**, то есть переходит в режим ожидания подтверждения.

В зависимости от типа действия, интерфейс будет принимать разный вид.

##### Создание условия {#создание-условия .unnumbered}

![700](media/image3.png){width="5.833333333333333in"
height="2.1944444444444446in"}

При создании условия рядом с названием появляется индикатор New, который
говорит, что это новое условие. Такое условие можно удалять без
подтверждения, так как оно является черновиком.

При подтверждении создается полноценном условие. Используйте его в
параметрах.

##### Изменение условия {#изменение-условия .unnumbered}

![700](media/image92.png){width="5.833333333333333in"
height="2.501613079615048in"}

Вы можете сравнить старое условие с новым, а также отменить изменения,
удалив черновик. Любые параметры будут работать с исходной версией, а не
черновиком. При подтверждении все изменения вступают в силу, и
пользователь будет получать все связанные параметры уже по новому
условию.

##### Удаление условия {#удаление-условия .unnumbered}

![700](media/image18.png){width="5.833333333333333in"
height="2.1088429571303586in"}

При удалении условия рядом с названием появляется индикатор Will be
deleted. Подтвердите операцию, если хотите полностью удалить условие из
системы.

##### Отклонение изменений {#отклонение-изменений .unnumbered}

С помощью отклонения изменений вы можете скорректировать условие, если
допустили ошибку.

![700](media/image11.png){width="5.833333333333333in"
height="2.1677919947506563in"}

#### *Работа с параметром* {#работа-с-параметром .unnumbered}

При создании, изменении или удалении параметра оно переходит в
статус **Pending**, то есть переходит в режим ожидания подтверждения. Но
в отличие от условия, параметры можно протестировать перед тем, как
подтверждать изменения. Механизм тестирования позволяет применить
параметр на конкретное устройство или аккаунт и убедиться в корректности
поведения приложения.

##### Создание параметра {#создание-параметра .unnumbered}

![700](media/image106.png){width="5.833333333333333in"
height="7.623502843394576in"}

При создании параметра рядом с названием появляется индикатор New. Такой
параметр можно удалять без подтверждения, так как он является
черновиком.

##### Изменение параметра {#изменение-параметра .unnumbered}

![700](media/image41.png){width="5.833333333333333in"
height="2.5664370078740157in"}

При изменении параметра можно сравнить старую версию с новой, а также
отменить изменения, удалив черновик. Всем пользователям приходит
исходный параметр.

##### Удаление параметра {#удаление-параметра .unnumbered}

![700](media/image114.png){width="5.833333333333333in"
height="8.009818460192475in"}

При удалении параметра рядом с названием появляется индикатор Will be
deleted.

##### Тестирование параметра {#тестирование-параметра .unnumbered}

Тестирование помогает избежать применения некорректных значений
конфигурации. В основе тестирования лежит применение кастомных атомарные
условий на каждую возможную версию параметра.

При нажатии на кнопку «Настроить тест» появляется окно вида:

![700](media/image58.png){width="5.833333333333333in"
height="3.5633770778652667in"}

Табы сверху соответствуют всем добавленным условиям и значению по
умолчанию, которые есть в измененном параметре. На скриншоте выше
тестируется значение, получаемое по условию «Моё новое условие».

При нажатии на кнопку «Запустить тест» параметр переходит в
статус **Testing**, в котором уже появляется возможность подтвердить или
отклонить изменения.

Добавляемые условия полностью заменяют атомарные, приведённые в
параметре «Моё новое условие». Это сделано для тестирования сложных
сценариев, которые трудно воссоздать на устройстве пользователя.
Например, это может быть условие, связанное с версией приложения. Вы
можете изменить исходные условия на кастомные и посмотреть, как выглядит
интерфейс при выполнении параметра «Моё новое условие». Другими словами,
сервис позволяет получить любое значение параметра на устройстве с
помощью кастомных условий.

Первое условие ограничено в выборе допустимых типов и операций. Доступны
только типы DeviceID и Account и операция Exactly matches. Такая защита
сделана специально, чтобы не выбрать слишком широкий диапазон
пользователей для тестирования. Начиная со второго условия таких
ограничений нет.

Обратите внимание, что один и тот же Account или DeviceID применяется
только для одного условия или Default value. В противном случае система
не будет знать точно, какое именно значение отдавать, поэтому оно может
быть произвольным и постоянно меняться.

При удалении параметра табы отсутствуют, и выбранные атомарные условия
применяются глобально. Так как параметр удаляется, то нам необходимо
протестировать его удаления, и в данном случае неважны именно тесты
отдельных условий внутри параметр, так как они тоже удалятся вместе с
параметром. Пример:

![700](media/image102.png){width="5.833333333333333in"
height="3.2243580489938757in"}

### **Лицензионное соглашение сервиса Remote Config** {#лицензионное-соглашение-сервиса-remote-config .unnumbered}

Настоящее лицензионное соглашение (далее «Соглашение») регулирует
отношения между **ООО «ВК»**, именуемым в дальнейшем Лицензиар, и Вами
(далее -- «Лицензиат») и/или Вашими представителями, работниками
(далее - «Пользователь») по использованию Сервиса
Лицензиара RuStore Remote Config.

Сервис « **RuStore** **Remote Config**» (далее «Сервис») предназначен
для удаленной настройки конфигурации мобильных приложений Лицензиата
(например, для включения и выключения полезных функций для разных
сегментов пользователей мобильных приложений Лицензиата, которые могут
быть гибко настроены с использованием параметров мобильного приложения
Лицензиата и устройства пользователя).

Принимая настоящее Соглашение, Лицензиат выражает полное и
безоговорочное согласие со всеми его условиями. Если Лицензиат не
принимает условия Соглашения в полном объеме, он не имеет права
использовать Сервис и обязан немедленно прекратить его использование.

Действующая редакция настоящего Соглашения доступна в сети Интернет по
адресу: <https://help.rustore.ru/rustore/for_developers/tools/remote_config/license_agreement>.
Редакция Соглашения вступает в силу с момента его опубликования по
вышеуказанному адресу.

Лицо, принимающее Правила и/или использующее Сервис, заверяет и
гарантирует, что обладает всеми необходимыми разрешениями и полномочиями
для совершения этих действий от имени Лицензиата.

**1. Термины, используемые в настоящем Соглашении**

1.1 **Сервис** --- программное обеспечение «RuStore Remote Config»,
являющееся конфигуратором для мобильных приложений, предназначенным для
осуществления настроек внутри мобильных приложений различных полезных
функций, дополнений, специфических черт и программных особенностей.
Сервис размещен на сервере Лицензиара, и Лицензиат имеет возможность его
использовать через веб-интерфейс на Сайте.

1.2 **Сайт** --- интернет-сайт, расположенный по
адресу: <http://remote-config.rustore.ru/>, предоставляющий Лицензиату
доступ к Сервису и использованию его функционала.

1.3 **Лицензиар** --- общество с ограниченной ответственностью «ВК»,
которое предоставляет право использования Сервиса на условиях
неисключительной лицензии Лицензиатам в пределах, определенных настоящим
Соглашением.

1.4 **Лицензиат** --- лицо, обладающее необходимой дееспособностью и
правоспособностью для заключения настоящего Соглашения и которому
предоставляется право на использование Сервиса в установленных настоящим
Соглашением пределах. Лицензиат является Стороной настоящего Соглашения.
Лицензиар вправе установить критерии, которым лицу необходимо
соответствовать для того, чтобы получить статус Лицензиата.

1.5 **Лицензионное соглашение** --- текст настоящего Соглашения,
документация, доступная на Сайте, и иные правила, указанные в настоящем
Соглашении, содержащие все необходимые и существенные условия
лицензионного договора о предоставлении прав использования Сервиса и
Сайта.

**2. Условия присоединения к настоящему Соглашению и регистрации в
Сервисе**

2.1 Перед тем, как начать использовать Сервис, Лицензиат обязан
ознакомиться с настоящим Соглашением.

2.2 Присоединение Лицензиата к настоящему Соглашению осуществляется
путем совершения активных действий Лицензиата (проставление галочки в
окне «Я принимаю условия Соглашения» или аналогичной по содержанию), что
по смыслу по смыслу ст.ст. 435 и 438 Гражданского кодекса РФ, является
принятием (акцептом) оферты Лицензиара, а равно заключением
Лицензионного договора, порождающего у Лицензиата обязанности соблюдать
условия настоящего Соглашения.

2.3 Регистрация и/или авторизация в Сервисе осуществляется с
использованием инструмента VK ID, который является инструментом
Экосистемы VK. Экосистема VK представляет собой общее пространство
взаимодействия пользователей, Сервисов и специализированных
инструментов, призванных повысить удобство использования привычных для
Пользователей сервисов.

Инструмент VK ID, предоставляемый ООО «В Контакте» (ОГРН 1079847035179,
адрес места нахождения: 191024, Санкт-Петербург, Херсонская ул., д.
12-14, лит. А, пом. 1-Н), позволяет осуществлять регистрацию и/или
авторизацию пользователей в сервисах, выполняет функции создания и
поддержания аккаунта пользователя в Экосистеме VK, предоставляет
пользователю функциональность единого безопасного управления данными
аккаунта в Экосистеме VK, а также подключения или отключения нужных
пользователю сервисов в аккаунте пользователя в Экосистеме VK, в целях
исполнения соглашений с пользователем Экосистемы VK.

Регистрация и/или авторизация в Сервисе посредством инструмента VK ID,
означает согласие Лицензиата с Пользовательским соглашением Экосистемы
VK, которое размещено в открытом доступе в сети Интернет по
адресу: <https://id.vk.com/terms>, и Политикой конфиденциальности
Экосистемы VK, которая размещена в открытом доступе в сети Интернет по
адресу: <https://id.vk.com/privacy>, настоящим Соглашением и Политикой
конфиденциальности.

2.4 Каждым последующим использованием Сервиса Лицензиат выражает
согласие с условиями настоящего Соглашения в редакции, которая
действовала на момент фактического использования Сервиса.

**3. Предмет Соглашения**

3.1 В соответствии с условиями настоящего Соглашения Лицензиар
предоставляет Лицензиату и/или Пользователям (далее совместно
«Лицензиат») на условиях простой (неисключительной) лицензии право
использования Сервиса в пределах, определенных настоящим Соглашением.

3.2 Право использования Сервиса предоставляется Лицензиату **на
безвозмездной основе**, если иное не предусмотрено Лицензиаром.

3.3 Оперирование и обслуживание Сервиса и Сайта, а также предоставление
доступа Лицензиатам к Сервису и Сайту осуществляется исключительно
Лицензиаром.

3.4 Лицензиар является обладателем исключительных прав на Сервис, а
также на документацию, доступную на Сайте.

**4. Способы использования Сервиса**

4.1 Лицензиат вправе использовать Сервис следующими способами:

4.1.1 использовать основной функционал Сервиса для осуществления
удаленной настройки конфигурации мобильных приложений Лицензиата на
Сайте.

В целях обмена данными, содержащимися в мобильном приложении Лицензиата
и необходимыми для настройки его конфигурации, Лицензиат осуществляет
интеграцию SDK Лицензиара в мобильное приложение Лицензиата в
соответствии с инструкцией, размещенной по
адресу: <https://help.rustore.ru/rustore/for_developers/developer-documentation/remote_config/>.

4.2 Лицензиат не вправе:

4.2.1 воспроизводить, распространять, перерабатывать в коммерческих или
некоммерческих целях элементы Сервиса, являющиеся объектом авторских и
смежных прав Лицензиара или третьих лиц, при отсутствии разрешения
соответствующих правообладателей на совершение данных действий;

4.2.2 воспроизводить элементы дизайна или пользовательского интерфейса
Сервиса и/или Сайта кроме случаев прямого разрешения Лицензиаром;

4.2.3 передавать предоставленные Лицензиату права использования Сервиса
другим Лицензиатам или третьим лицам посредством заключения
сублицензионного договора или иным способом;

4.2.4 использовать Сервис как основу для продукта, содержащего такую же
функциональность, что и Сервис;

4.2.5 нарушать закрепленные в настоящем Соглашении правила использования
Сервиса;

4.2.6 использовать Сервис иными способами, не предусмотренными настоящим
Соглашением.

**5. Правила использования Сервиса**

5.1 Для использования Сервиса Лицензиату необходимо зарегистрироваться
на Сайте и принять условия настоящего Соглашения.

5.2 После авторизации на Сайте, Пользователь имеет право на
интеграцию SDK Лицензиара в мобильное приложение Лицензиата и на
использование Сервиса в пределах, определенных настоящим Соглашением.

5.3 Доступ к использованию Сервиса осуществляется с использованием
логина и пароля, которые указаны Лицензиатом при регистрации на Сайте.

5.4 Лицо, авторизовавшееся на Сайте, считается Лицензиатом по настоящему
Соглашению.

5.5 При использовании Лицензиатом Сайта может применяться технология
cookies в целях автоматической авторизации Лицензиата на Сайте, а также
для сбора статистических данных.

5.6 Лицензиат вправе ограничить или запретить использование технологии
cookies путем применения соответствующих настроек браузера.

5.7 При невозможности совершения авторизации в связи с утратой пароля и
по иным причинам, Лицензиат, помимо выполнения условий, вправе
обратиться в службу поддержки Лицензиара по адресу электронной
почты <support@rustore.ru>. Способы восстановления доступа к аккаунту,
регламентируются службой поддержки Лицензиара.

**6. Права и обязанности Лицензиара**

6.1 Лицензиар осуществляет текущее управление Сервисом и Сайтом,
самостоятельно определяет структуру, внешний вид, разрешает или
ограничивает доступ Лицензиатов к Сервису и/или Сайту при нарушении
положений настоящего Соглашения, осуществляет иные принадлежащие ему
права.

6.2 Лицензиар имеет право:

6.2.1 в любое время изменять оформление и пользовательский интерфейс
Сервиса и/или Сайта, их содержание, содержание предоставляемых функций,
изменять или дополнять используемые скрипты, программное обеспечение и
другие объекты, используемые или хранящиеся в рамках Сервиса и/или
Сайта, с уведомлением Лицензиата или без такового;

6.2.2 приостанавливать, ограничивать или прекращать доступ Лицензиата к
Сервису, и/или Сайту, и/или SDK в любое время без объяснения причин, с
предварительным уведомлением или без такового;

6.2.3 осуществлять рассылку Лицензиатам информационных сообщений (в том
числе сообщений по электронной почте);

6.2.4 в целях сбора статистических данных и идентификации Лицензиата
устанавливать и сохранять информацию об IP-адресах доступа Лицензиата к
Сервису и/или Сайту, использовать файлы технической информации
(cookies), размещаемые на персональном компьютере Лицензиата.

6.3 Лицензиар обязуется:

6.3.1 на условиях, изложенных в настоящем Соглашении, предоставить права
на использование Сервиса;

6.3.2 уведомлять Лицензиата путем опубликования информации на Сайте или
рассылки сообщений на электронный почтовый ящик Лицензиата об изменениях
условий настоящего Соглашения.

**7. Права и обязанности Лицензиата**

7.1 Лицензиат вправе:

7.1.1 производить настройки мобильных приложений Лицензиата в рамках
функциональных возможностей Сервиса, доступных посредством Сайта;

7.1.2 осуществлять иные действия, не запрещенные применимым
законодательством, настоящим Соглашением, связанные с использованием
Сервиса и Сайта.

7.2 Лицензиат обязан:

7.2.1 соблюдать условия настоящего Соглашения без каких-либо
ограничений;

7.2.2 не превышать пределов предоставленных прав при использовании
Сервиса, установленных в настоящем Соглашении;

7.2.3 не нарушать иным образом права интеллектуальной собственности
Лицензиара в отношении Сервиса и Сайта.

7.2.4 выполнять все указания и предписания Лицензиара. В случае
невыполнения Лицензиатом таких указаний Лицензиар имеет право
приостановить, ограничить, прекратить предоставление Лицензиату прав
использования Сервиса или отдельных его функций, и доступ к Сайту;

7.2.5 периодически знакомиться с содержанием настоящего Соглашения в
сети Интернет по
адресу: <https://help.rustore.ru/rustore/for_developers/tools/remote_config/license_agreement>,
и следить за внесенными в него изменениями;

7.2.6 соблюдать иные требования и выполнять иные обязательства,
предусмотренные настоящим Соглашением.

7.2.7. уведомить конечных пользователей о том, мобильное приложение
Лицензиата настраивается с использованием Сервиса, который может
собирать о них информацию (в том числе IP-адрес устройства, через
которое осуществляется доступ к приложению, идентификатор устройства и
другую информацию), доступную Лицензиару. Лицензиат должен
проинформировать конечных пользователей о возможности отказаться от
сбора информации о нем и обеспечить такой отказ путем выбора
соответствующих настроек в мобильном приложении.

**8. Гарантии и ограничения ответственности**

8.1 Сервис, включая все его элементы, предоставляются «как есть» (as
is). Это означает, что Лицензиар не несет ответственности за проблемы,
возникшие в процессе использования Сервиса, а также не предоставляет
никаких гарантий того, что Сервис, его элементы могут подходить для
конкретных целей использования. Лицензиар не может гарантировать и не
обещает никаких специфических результатов от использования Сервиса или
его элементов.

8.2 Лицензиар не несет ответственности за возможные сбои и перерывы в
работе Сервиса и/или Сайта и вызванную ими потерю информации. Лицензиар
не несет ответственности за любой ущерб компьютеру Лицензиата, мобильным
устройствам, любому другому оборудованию или программному обеспечению,
вызванный или связанный с использованием Сервиса и/или Сайта.

8.3 Лицензиар не несет ответственности за любой ущерб, включая упущенную
выгоду, или вред, вызванные в связи с использованием Сервиса и/или
Сайта.

8.4. Лицензиат гарантирует, что им будут приняты надлежащие меры для
обеспечения конфиденциальности учетных данных (логина и пароля),
используемых им для авторизации на Сайте и предотвращения возможности
авторизации другими лицами.

8.5 Лицензиат гарантирует, что обладает всеми необходимыми полномочиями
для заключения настоящего Соглашения.

8.6 Лицензиар не обязан предоставлять Лицензиату какие-либо
доказательства, документы и прочее, свидетельствующие о нарушении
Лицензиатом условий Соглашения, в результате которого Лицензиату было
отказано в предоставлении доступа к Сервису и/или Сайту, либо такой
доступ был прекращен и/или ограничен.

**9. Территория и срок действия Соглашения**

9.1 Лицензиат вправе использовать Сервис и Сайт в пределах, определенных
настоящим Соглашением, без ограничения по территории.

9.2 Право использования Сервиса и Сайта предоставляется Лицензиату на
неограниченный срок до расторжения Соглашения Лицензиаром или
Лицензиатом.

9.3 Настоящее соглашение прекращает свое действие, в случае если:

9.3.1 Лицензиар примет решение об изменении положений настоящего
Соглашения, о необходимости заключения с Лицензиатами нового соглашения,
прекращении настоящего Соглашения в отношении Лицензиата, прекращении
администрирования и обслуживания Сервиса и прекращении к ним доступа или
прекращения доступа к использованию Сервиса и Сайта в отношении
Лицензиата.

9.3.2 Лицензиат примет решение о прекращении использования Сервиса и
Сайта, путем удаления учетной записи на Сайте через службу технической
поддержки по адресу <support@rustore.ru>.

9.4 Лицензиар вправе в любое время без уведомления Лицензиата и без
объяснения причин приостановить доступ и возможность использовать
Сервис, без возмещения каких-либо затрат, убытков или возврата,
полученного по Соглашению, в том числе в случае любого, в том числе
однократного, нарушения Лицензиатом условий настоящего Соглашения; при
этом, с такого момента право использования Сервиса Лицензиатом считается
прекращенным.

9.5 Лицензиар вправе в любое время расторгнуть настоящее Соглашение с
уведомлением Лицензиата или без такового, при этом, после расторжения
Соглашения, Лицензиат обязуется полностью прекратить использование
Сервиса не позднее 5 дней с даты получения уведомления.

9.6 Настоящее Соглашение не предусматривает уступку каких-либо
исключительных прав или выдачу исключительной лицензии на любые
составляющие Сервиса и Сайта от Лицензиара к Лицензиату.

**10. Заключительные положения**

10.1 Настоящее Соглашение может быть изменено Лицензиаром без
какого-либо предварительного уведомления. Любые изменения в Соглашении,
осуществленные Лицензиаром в одностороннем порядке, вступают в силу в
день, следующий за днем опубликования таких изменений на Сайте.
Лицензиат обязуется самостоятельно проверять Соглашение на предмет
изменений. Неосуществление Лицензиатом действий по ознакомлению с
Соглашением и/или измененной редакцией Соглашения не может служить
основанием для неисполнения Лицензиатом своих обязательств и
несоблюдения Лицензиатом ограничений, установленных Соглашением.

10.2 Недействительность одного или нескольких положений Соглашения,
признанная в установленном порядке вступившим в силу решением суда, не
влечет для Сторон недействительности Соглашения в целом. В случае
признания одного или нескольких положений Соглашения в установленном
порядке недействительными, Стороны обязуются исполнять взятые на себя по
Соглашению обязательства максимально близким к подразумеваемым Сторонами
при заключении и/или согласованном изменении Соглашения способом.

10.3 Настоящее Соглашение и взаимоотношения Сторон в связи с настоящим
Соглашением и использованием Сервиса регулируются законодательством
Российской Федерации.

10.4 В отношении формы и способа заключения настоящего Соглашения
применяются нормы Гражданского Кодекса РФ.

10.5 Все споры Сторон по настоящему Соглашению подлежат разрешению путем
переписки и переговоров с использованием обязательного досудебного
(претензионного) порядка. В случае невозможности достичь согласия между
Сторонами путем переговоров в течение 60 (шестидесяти) календарных дней
с момента получения другой Стороной письменной претензии, рассмотрение
спора должно быть передано любой заинтересованной Стороной в суд по
месту нахождения Лицензиара (с исключением подсудности дела любым иным
судам).

10.6 По вопросам, связанным с исполнением Соглашения, просьба обращаться
по адресу местонахождения Лицензиара: Российская Федерация, 125167, г.
Москва, Ленинградский проспект д. 39, строение 79.

*Редакция от* *12 сентября 202* *3* *года*

### **Политика конфиденциальности сервиса Remote Config** {#политика-конфиденциальности-сервиса-remote-config .unnumbered}

**1. Общие положения**

1.1. Настоящая Политика конфиденциальности (далее --- «Политика»),
доступная в сети Интернет по
адресу: <https://help.rustore.ru/rustore/for_developers/tools/remote_config/privacy_policy> является
документом Общества с ограниченной ответственностью «ВК» (ОГРН
1027739850962, Россия, 125167, г. Москва, Ленинградский проспект д.39,
стр.79) (далее --- «Компания»), и определяет порядок обработки и защиты
информации, в том числе персональных данных (далее -- «Информация»),
получаемой Компанией в связи с использованием Вами (далее --
«Лицензиат») либо Вашими представителями, работниками (далее -
«Пользователь») сервиса **RuStore** **Remote** **Config**, (далее ---
«Сервис») который доступен в сети Интернет по
адресу <http://remote-config.rustore.ru/> (далее --- «Сайт»).

1.2. Настоящая Политика является неотъемлемой частью лицензионного
соглашения (далее -- «Лицензионное соглашение»), которое доступно в сети
Интернет по
адресу: <https://help.rustore.ru/rustore/for_developers/tools/remote_config/license_agreement> (далее
Политика и Лицензионное соглашение совместно --- «Правила»).

Лицо, принимающее Правила и/или использующее Сервис, заверяет и
гарантирует, что обладает всеми необходимыми разрешениями и полномочиями
для совершения этих действий от имени Лицензиата.

1.3. Условием использования Сервиса является безусловное принятие Правил
Лицензиатом, использующим Сервис и Сайт. При каждом доступе и/или
фактическом использовании Сервиса, Лицензиат соглашается с условиями
Правил в редакциях, которые действовали на момент фактического
использования Сервиса. Ряд терминов, используемых в Политике, имеет
значение, определенное в Лицензионном соглашении.

1.4. Настоящая Политика, может быть изменена Компанией при условии
уведомления Лицензиата путём размещения новой редакции указанных
документов в сети Интернет по
адресу: <https://help.rustore.ru/rustore/for_developers/tools/remote_config/privacy_policy>.
Лицензиат обязуется самостоятельно периодически проверять настоящую
Политику на предмет внесения изменений. Изменения в Политику, внесенные
Компанией, вступают в силу со дня, следующего за днем опубликования
таких изменений.

1.5. В случае несогласия Лицензиата с условиями настоящей Политики (в
т.ч. с изменениями и дополнениями к Политике) использование Сервиса (в
т.ч. Пользователями) должно быть немедленно прекращено.

1.6. Обработка данных при использовании Сервиса осуществляется на
основании законодательства РФ.

**2. Действие настоящей Политики**

2.1 Настоящая Политика определяет, как Компания собирает и использует
Информацию, которую получает через Сайт и Сервис, предоставляемый в
использование Лицензиатов в целях удалённой настройки конфигурации
мобильных приложений Лицензиатов.

2.2. В процессе предоставления Сервиса Компания может получить
Информацию о следующих категориях лиц:

2.2.1. Лицензиат, т.е. физическое или юридическое лицо, которое приняло
условия Лицензионного соглашения и которому предоставлено право
пользоваться Сервисом;

2.2.2. Пользователь, т.е. представитель/работник Лицензиата,
использующий Сервис от имени Лицензиата;

2.2.3. пользователь мобильного приложения Лицензиата (далее -- «Конечный
пользователь»);

2.3. Используя Сервис, Лицензиат, действуя разумно и добросовестно,
гарантирует, что Лицензиат:

2.3.1. имеет все необходимые права для использования Сервиса;

2.3.2. предоставляет достоверную информацию в объеме, необходимом для
использования Сервиса;

2.3.3. полностью ознакомился и принял настоящую Политику.

**3. Цели обработки Информации**

3.1. Компания осуществляет обработку Информации о лицах, указанных в
пункте 2.2. настоящей Политики, в целях исполнения Лицензионного
соглашения, в т.ч., для осуществления коммуникации с Лицензиатом и/или
Пользователями.

**4. Состав обрабатываемой Информации**

4.1. В Состав обрабатываемой Информации, включаются Учетные данные и
Иные данные (определение раскрыто в Таблице 1), которые обрабатываются
Компанией в целях исполнения Лицензионного соглашения, а именно:

Таблица 1

  -----------------------------------------------------------------------
  Собираемые данные                   Цели обработки
  ----------------------------------- -----------------------------------
  **О Лицензиатах**

  **Учетные данные (персональные      Исполнение Лицензионного
  данные)**, а именно:1) Данные о     соглашения, в частности, для
  Лицензиате и/или Пользователе,      предоставления доступа к Сервису,
  предоставляемые (в том числе путем  для управления и администрирования
  регистрации/авторизации в Сервис с  Сервисом, для подтверждения
  использованием VK ID) для создания  принадлежности учетной записи в
  аккаунта в процессе регистрации в   Сервисе заявителю, обратившемуся с
  Сервисе, а именно: номер VK ID,     запросом о восстановлении доступа к
  фамилия, имя, адрес электронной     учетной записи, для осуществления
  почты, номер мобильного телефона    коммуникации с Лицензиатом и/или
  Лицензиата и/или Пользователя. В    Пользователем в рамках
  ходе регистрации Пользователю       Лицензионного соглашения.
  присваивается внутренний ID-номер,
  идентифицирующий Пользователя в
  Сервисе.2) Дополнительные данные,
  которые Лицензиат и/или
  Пользователь предоставляет при
  редактировании страницы своего
  профиля в Сервисе.3) Данные,
  дополнительно предоставляемые
  Лицензиатом и/или Пользователем по
  запросу Компании (сведения,
  указанные Лицензиатом и/или
  Пользователем в аккаунте, как
  например, адрес электронной почты,
  номер телефона и т.п.).

  **Иные данные (не персональные      Заключение, исполнение
  данные)**, а именно:4) Технические  Лицензионного соглашения, в
  данные, получаемые при доступе к    частности, для управления и
  Сервису, включающие в себя данные о администрирования Сервисом, для
  технических средствах               улучшения работы и персонализации
  (устройствах), технологическом      использования Сервиса.
  взаимодействии с Сервисом (IP-адрес
  хоста, вид операционной системы
  Лицензиата и/или Пользователя, тип
  браузера, географическое положение,
  поставщик услуг Интернета, дата и
  время доступа к Сервису, информация
  о событиях (например, сбои системы)
  и другие подобные данные
  веб-журнала.5) Информация,
  автоматически получаемая при
  доступе к Сервису с использованием
  закладок (cookies).6) Информация об
  активности Лицензиата и/или
  Пользователя во время использования
  Сервиса, в том числе, клики и
  переходы в рамках интерфейса
  Сервиса.

  **О Конечных пользователях**

  **Иные данные (не персональные      Исполнение соглашения с
  данные)**, а именно:7) Техническая  Лицензиатом, в частности, для
  информация, полученная при доступе  предоставления функционала Сервиса.
  к приложениям Лицензиатов, которые
  настроены с использованием
  Сервиса:а) Информация об устройстве
  Конечного пользователя, такая как:
  тип браузера, тип и модель
  устройства, процессор, язык
  системы, память, версия ОС,
  разрешение экрана, отметка времени
  и зоны, носитель, местоположение,
  данные версии приложения,
  установленные приложения,
  Интернет-провайдер, дата и время,
  когда Конечный пользователь
  получает доступ к приложению
  Лицензиата и другая подобная
  информация.б) Информация о
  технических идентификаторах,
  которые идентифицируют только
  компьютер, устройство, браузер или
  приложение, например, IP-адрес
  (который также может предоставлять
  общую информацию о местоположении),
  User Agent, сетевые данные (к
  которым подключены устройства
  MAC-адреса, Wi-Fi и других сетей),
  IDFA (идентификатор для
  рекламодателей), идентификатор
  Android ID (в устройствах Android),
  Google Advertiser ID, Customer
  issued user ID.в) Информация о
  вовлеченности Конечного
  пользователя, связанная с
  действиями Конечного пользователя в
  Приложении.
  -----------------------------------------------------------------------

4.2. Регистрируясь и/или авторизовываясь в Сервисе с использованием
инструмента VK ID, Лицензиат и/или Пользователь соглашается с Политикой
конфиденциальности Экосистемы VK, которая размещена по
ссылке <https://id.vk.com/privacy>.

Сбор персональных данных, а также иной информации, которая не относится
к персональным данным, осуществляется в Сервисе при регистрации и/или
авторизации путем заполнения Лицензиатом и/или Пользователем
регистрационной формы или иными доступными способами, в том числе с
использованием инструмента VK ID или иного сервиса третьего лица, а
также в дальнейшем при редактировании Лицензиатом и/или Пользователем
ранее предоставленной информации либо при дополнении по своей инициативе
персональных данных (если применимо) с помощью инструментария Сервиса.

При использовании инструмента VK ID Лицензиатом и/или Пользователем его
персональные данные, а также иная информация, которая не относится к
персональным данным, могут передаваться третьим лицам (сервисам
Экосистемы VK и иным сервисам, использующим инструмент VK ID в процессе
использования таких сервисов и/или инструментов Лицензиатом и/или
Пользователем), а также Компания может получать от указанных третьих лиц
персональные данные, а также иную информацию, которая не относится к
персональным данным в объеме, указанном в личном кабинете пользователя
Экосистемы VK, в целях исполнения соглашений с пользователем Экосистемы
VK.

**5. Обработка Учетных и Иных данных**

**5.1.** Обработка Учетных и Иных данных осуществляется в соответствии
со следующими принципами:

а) законности целей и способов обработки персональных данных;

б) добросовестности;

в) соответствия целей обработки таких данных целям, заранее определенным
и заявленным при их сборе;

г) соответствия объема и характера обрабатываемых Учетных и Иных данных,
способов их обработки целям обработки Учетных и Иных данных;

д) недопустимости объединения созданных для несовместимых между собой
целей баз данных, содержащих Учетные и Иные данные.

**5.2.** Сбор Учетных и Иных данных

Сбор Учетных данных осуществляется при регистрации Лицензиата и/или
Пользователя в Сервисе, а также в дальнейшем при внесении Лицензиатом по
своей инициативе дополнительных сведений с помощью инструментария
Сервиса. Сбор Иных данных осуществляется в процессе использования
Лицензиатом Сервиса, в процессе использования Конечными пользователями
приложений Лицензиата.

Компания обеспечивает сбор, а также последующие запись, систематизацию,
накопление, хранение, уточнение (обновление, изменение), извлечение
Учетных данных, являющихся персональными данными граждан Российской
Федерации с использованием баз данных, находящихся на территории
Российской Федерации.

**5.3.** Хранение и использование Учетных и Иных данных

Учетные и Иные данные обрабатываются и хранятся на территории Российской
Федерации, при этом хранение осуществляется исключительно на электронных
носителях, а обработка --- с использованием средств автоматизации, за
исключением случаев, когда неавтоматизированная обработка Учетных и Иных
данных необходима в связи с исполнением требований законодательства.

**5.4.** Передача Учетных и Иных данных

Учетные и Иные данные не передаются каким-либо третьим лицам, за
исключением случаев, прямо предусмотренных применимыми Правилами.
Передача Учетных и Иных данных третьим лицам-контрагентам Компании в
случаях, предусмотренных Политикой, осуществляется с условием принятия
такими контрагентами обязательств по обеспечению конфиденциальности
полученной информации.

Предоставление персональных данных по запросу государственных органов
(органов местного самоуправления) осуществляется в случаях и в порядке,
предусмотренном законодательством РФ.

**5.5.** Прекращение обработки Учетных и Иных данных

При достижении целей обработки Учетных и Иных данных Компания прекращает
обработку Учетных и Иных данных одним из способов, предусмотренных
Федеральным законом «О персональных данных».

**5.6.** Способы обработки Учетных и Иных данных

5.6.1.В целях исполнения Лицензионного соглашения (в т.ч. предоставления
и совершенствования Сервиса) Лицензиат соглашается и поручает Компании
осуществлять с соблюдением применимого законодательства обработку
(включая сбор, запись, систематизацию, накопление, хранение, уточнение
(обновление, изменение), сопоставление, извлечение, использование,
обезличивание, блокирование, удаление и уничтожение) Учетных и Иных
данных Лицензиата и/или Пользователей, включая результаты их
автоматизированной обработки, в том числе в виде целочисленных и/или
текстовых значений и идентификаторов.

5.6.2. В целях использования Сервиса (исполнения Лицензионного
соглашения) Лицензиат поручает Компании осуществлять обработку (включая
сбор, получение от Лицензиата и партнеров Компании, запись,
систематизацию, накопление, хранение, уточнение (обновление, изменение),
сопоставление, извлечение, использование, обезличивание, блокирование,
удаление и уничтожение) Иных данных Конечных пользователей, использующих
приложения Лицензиата, которые настроены с использованием Сервиса,
включая результаты их автоматизированной обработки, в том числе в виде
целочисленных и/или текстовых значений и идентификаторов, а также
передачу Иных данных Конечных пользователей и/или результата их
обработки Лицензиату.

Компания обязуется при обработке Иных данных Конечных пользователей по
поручению Лицензиата соблюдать требования законодательства РФ. Компания
при такой обработке обязана соблюдать конфиденциальность Иных данных
Конечных пользователей и обеспечивать их безопасность при обработке.

Лицензиат заверяет и гарантирует Компании наличие законных оснований в
соответствии с применимым законодательством для обработки Компанией
вышеуказанных данных Конечных пользователей и Пользователей
(представителей, контактных лиц Лицензиата) на условиях, указанных в
Политике.

Лицензиат по запросу Компании обязан в течение 5 (пяти) рабочих дней с
момента получения запроса направить Компании подтверждение выполнения
данной гарантии.

**6. Права и обязанности Лицензиата**

**6.1.** Лицензиат вправе:

**6.1.1.** осуществлять свободный бесплатный доступ к информации о себе
посредством доступа к учетной записи в Сервисе с использованием логина и
пароля;

**6.1.2.** с помощью инструментария Сервиса установить в отношении
информации о себе желаемый уровень конфиденциальности (условия доступа к
информации) с учетом функционала Сервиса (если применимо);

**6.1.3.** самостоятельно вносить изменения и исправления в информацию о
себе в учетной записи в Сервисе, при условии, что такие изменения и
исправления содержат актуальную достоверную информацию;

**6.1.4.** удалять информацию, указанную в Учетной записи;

**6.1.5.** требовать от Компании уточнения своих Учетных данных, их
блокирования или уничтожения в случае, если такие данные являются
неполными, устаревшими, недостоверными, незаконно полученными или не
являются необходимыми для заявленной цели обработки и если невозможно
самостоятельно выполнить действия по уточнению или удалению;

**6.1.6.** на основании запроса получать от Компании информацию,
касающуюся обработки его Учетных данных в порядке, предусмотренном
законодательством РФ о персональных данных.

**7. Меры по защите информации**

**7.1.** Компания принимает технические и организационно-правовые меры в
целях обеспечения защиты Учетных и Иных данных Лицензиата и/или
Пользователей, а также Конечных пользователей от неправомерного или
случайного доступа к ним, уничтожения, изменения, блокирования,
копирования, распространения, а также от иных неправомерных действий.

**7.2.** Для авторизации доступа к Сервису используется логин (адрес
электронной почты или номер мобильного телефона) и пароль Лицензиата
и/или Пользователя. Ответственность за сохранность данной информации
несет Лицензиат и/или Пользователь соответственно. Лицензиат и/или
Пользователь не вправе передавать собственный логин и пароль третьим
лицам, а также обязан предпринимать меры по обеспечению их
конфиденциальности.

**7.3.** Если Лицензиат и/или Пользователь забыл свои данные для входа,
Лицензиат и/или Пользователь может обратиться за помощью в поддержку
инструмента VK ID для восстановления своей Учетной записи и доступа к
Сервису.

**8. Обращения Лицензиатов**

**8.1.** Сведения об обрабатываемых Компанией Учетных и Иных данных
Лицензиата и/или Пользователя, в том числе персональных данных, в связи
с использованием им Сервиса предоставляются Лицензиату и/или
Пользователю в случаях, предусмотренных законодательством РФ, при
обращении (запросе).

**8.2.** Запросы направляются в письменной форме по адресу места
нахождения Компании.

**8.3.** Обработка Компанией Информации прекращается, а соответствующие
персональные данные и иная информация подлежат уничтожению Компанией в
случае прекращения действия Лицензионного соглашения. Лицензиат вправе в
одностороннем порядке отказаться от исполнения Лицензионного соглашения
с обязательным письменным уведомлением Компании.

Несмотря на указанное выше, Компания вправе продолжить обработку
Информации при наличии законных оснований в соответствии с
законодательством РФ.

*Редакция от 12 сентября 2023 г.*

## **Tracer** {#tracer .unnumbered}

Cервис Tracer собирает и анализирует ошибки, а затем отправляет
автоматический отчёт о них разработчику. Это позволяет чинить баги
быстрее и эффективнее. Сервис работает в мобильных приложениях под iOS и
Android.

С помощью Tracer вы можете:

-   проводить профилирование в продакшене, чтобы определить причины
    лагов и фризов;

-   находить причины утечек памяти на устройстве пользователя в
    автоматическом и полуавтоматическом режиме;

-   обнаруживать забытые и утёкшие файлы приложения на диске --- так
    меньше рисков, что в результате очистки данных приложение удалится
    или пользователь будет разлогинен.

### **Android** {#android .unnumbered}

#### *Начало работы* {#начало-работы .unnumbered}

##### Быстрый старт {#быстрый-старт-1 .unnumbered}

###### Регистрация и настройка {#регистрация-и-настройка .unnumbered}

Для начала нужно:

1.  Зайти в аккаунт Tracer.

2.  Создать или вступить в организацию.

3.  Добавить андроид проект (нужно быть администратором или владельцем
    организации).

###### Подключение зависимостей на трейсер к проекту {#подключение-зависимостей-на-трейсер-к-проекту .unnumbered}

В вашем \<project\>/settings.gradle

  -----------------------------------------------------------------------
  pluginManagement {     repositories {         maven { url
  \'https://artifactory-external.vkpartner.ru/artifactory/maven/\' }   
   }} dependencyResolutionManagement {      repositories {          maven
  { url \'https://artifactory-external.vkpartner.ru/artifactory/maven/\'
  }      }}\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

В вашем \<project\>/\<app-module\>/build.gradle

  -----------------------------------------------------------------------
  plugins {    \`\`id  \'ru.ok.tracer\' version  \'0.2.7\'} tracer
  {    \`\`defaultConfig {         \`\`// См. в
  разделе \`\`\"Настройки\"        \`\`pluginToken = 
  \"PLUGIN_TOKEN\"        \`\`appToken =  \"APP_TOKEN\"        \`\`//
  Включает загрузку маппингов для билда. По умолчанию
  включена        \`\`uploadMapping =  true    \`\`}    \`\`// Также
  можно задавать конфигурацию для каждого flavor, buildType,
  buildVariant.    \`\`// Конфигурации наследуют
  defaultConfig.    \`\`debug {        \`\`//
  Параметры\...    \`\`}    \`\`demoDebug {        \`\`//
  Параметры\...    \`\`}} dependencies {    \`\`// Плагины независимы
  друг от друга. Можно подключать только те,    \`\`// которые необходимы
  в данный момент.    \`\`// Сбор и анализ крешей и
  ANR    \`\`implementation 
  \"ru.ok.tracer:tracer-crash-report:0.2.7\"    \`\`// Сбор и анализ
  нативных крешей    \`\`implementation 
  \"ru.ok.tracer:tracer-crash-report-native:0.2.7\"    \`\`// Сбор и
  анализ хипдапмов при OOM    \`\`implementation 
  \"ru.ok.tracer:tracer-heap-dumps:0.2.7\"    \`\`// Анализ потребления
  дискового места на устройстве    \`\`implementation 
  \"ru.ok.tracer:tracer-disk-usage:0.2.7\"    \`\`// Семплирующий
  профайлер    \`\`implementation 
  \"ru.ok.tracer:tracer-profiler-sampling:0.2.7\"     \`\`//
  Систрейс    \`\`implementation 
  \"ru.ok.tracer:tracer-profiler-systrace:0.2.7\"}\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

###### Включение плагинов трейсера и их конфигурация в проекте {#включение-плагинов-трейсера-и-их-конфигурация-в-проекте .unnumbered}

В вашем Application.kt реализуйте интерфейс HasTracerConfiguration

  -----------------------------------------------------------------------------------
  class MyApplication : Application(), HasTracerConfiguration {    \`\`override val
  tracerConfiguration: List\<TracerConfiguration\>        \`\`get() =
  listOf(            \`\`CoreTracerConfiguration.build {                \`\`// опции
  ядра трейсера            \`\`},            \`\`CrashReportConfiguration.build
  {                \`\`// опции сборщика
  крэшей            \`\`},            \`\`CrashFreeConfiguration.build
  {                \`\`// опции подсчета crash
  free            \`\`},            \`\`HeapDumpConfiguration.build
  {                \`\`// опции сборщика хипдампов при
  ООМ            \`\`},            \`\`DiskUsageConfiguration.build
  {                \`\`// опции анализатора дискового
  пространства            \`\`},            \`\`SystraceProfilerConfiguration.build
  {                \`\`// опции systrace-профайлера в
  продакшене            \`\`},            \`\`SamplingProfilerConfiguration.build
  {                \`\`// опции семплирующего
  профайлера            \`\`},        \`\`)}
  -----------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------

Проперти HasTracerConfiguration.tracerConfiguration будет запрошена
ровно один раз при старте процесса до вызова Application.onCreate но
после Application.attachBaseContext. В геттере уже можно обращаться к
контексту приложения, но еще рано обращаться к тому, что
проинициализируется в onCreate.

Подробное описание опций:

-   CoreTracerConfiguration --- [смотрите ниже](#kix.3fpqb1hkpdfo) на
    этой странице;

-   CrashReportConfiguration и CrashFreeConfiguration --- на
    странице «[Crash и
    ANR](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/modules/Crash-ANR)»;

-   HeapDumpConfiguration --- на странице «[Heap
    Dumps](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/modules/Heap-Dumps)»;

-   DiskUsageConfiguration --- на странице «[Disk
    Usage](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/modules/Disk-Usage)»;

-   SystraceProfilerConfiguration --- на странице «[Systrace
    Profiler](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/modules/Systrace-Profiler)»;

-   SamplingProfilerConfiguration --- на странице «[Sampling
    Profiler](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/modules/Sampling-Profiler)».

###### Описание CoreTracerConfiguration {#описание-coretracerconfiguration .unnumbered}

В том редком случае, когда вы захотите сконфигурировать ядро трейсера в
вашем проекте, нужно
вернуть CoreTracerConfiguration из HasTracerConfiguration:

  -----------------------------------------------------------------------
  class MyApplication : Application(), HasTracerConfiguration
  {    \`\`override val tracerConfiguration:
  List\<TracerConfiguration\>        \`\`get() =
  listOf(            \`\`CoreTracerConfiguration.build
  {                \`\`// ваши опции            \`\`},        \`\`)}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Опции CoreTracerConfiguration.Builder:

-   setEnabled --- не используется и будет удалена в версии 0.3.x, ядро
    трейсера всегда включено, но не активно пока нет включенных
    плагинов;

-   setHost, provideHost --- изменение адреса трейсера;

-   setStatHost, provideStatHost --- изменение адреса трейсера для фичи
    crash free;

-   setCustomAppKey, provideCustomAppKey ---
    заменяет sampleUploadToken из конфигурации gradle-плагина.

##### Миграция на новую версию {#миграция-на-новую-версию .unnumbered}

###### Миграция 0.2.7 с 0.2.3 {#миграция-0.2.7-с-0.2.3 .unnumbered}

Класс Condition и методы SystraceProfiler.start(context,
profileDuration, activeCondition) и SamplingProfiler.run(context,
duration, condition) объявлены deprecated и будут вскоре удалены. Вместо
них используйте SystraceProfiler и SamplingProfiler API для ручного
профилирования.

В тех местах, где для профилирования размечались interestingEvents с
помощью TracerEvents.addEvent(), теперь стоит
вызывать SystraceProfiler.commit() или SamplingProfiler.commit() в
зависимости от того, каким типом профилирования пользовались. А в тех
метсах, откуда можно было попасть на
эти interestingEvents вызывать SystraceProfiler.start() или SamplingProfiler.start()
соответственно.

###### Миграция на 0.2.3 с 0.2.2 {#миграция-на-0.2.3-с-0.2.2 .unnumbered}

Метод TracerCrashReport.log(Throwable), служащий для отправки non-fatal,
объявлен deprecated и будет вскоре удален. Вместо него используйте
метод TracerCrashReport.report(Throwable). Это не касается
метода TracerCrashReport.log(String), служащего для добавления логов к
событиям crash и non-fatal, он продолжит работать без изменений.
Актуальные примеры использования на странице «[Crash и
ANR](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/modules/Crash-ANR)».

Начиная с версии 0.2.3 изменяется способ подключения tracer-plugin.
Зависимость заменяется
с ru.ok.tracer:plugin:0.1.1 на ru.ok.tracer:tracer-plugin:0.2.3 (обратите
внимание, изменена не только версия). Plugin id меняется
с ru.ok.tracer.mapping_plugin на ru.ok.tracer. В дальнейшем версии
плагина и runtime-зависимостей будут совпадать, публиковаться они будут
вместе. Актуальная информация на странице «[Быстрый
старт](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/start/quick-start)».

###### Миграция на 0.2.2 c 0.1.15 {#миграция-на-0.2.2-c-0.1.15 .unnumbered}

Методы Tracer.configure и Tracer.configureAsync. Вместо их вызовов
следует реализовать интерфейс HasTracerConfiguration в вашем
классе Application и вернуть то, что раньше передавалось
в Tracer.configure. Актуальное описание на странице «[Быстрый
старт](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/start/quick-start)».

Теперь конфигурация трейсера происходит в момент запуска а не на
следующий запуск.

#### *Модули Tracer* {#модули-tracer .unnumbered}

##### Crash и ANR {#crash-и-anr .unnumbered}

###### Подключение зависимостей к проекту {#подключение-зависимостей-к-проекту .unnumbered}

В вашем \<project\>/\<app-module\>/build.gradle

  -----------------------------------------------------------------------
  dependencies {    implementation
  \"ru.ok.tracer:tracer-crash-report:0.2.7\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Также Tracer поддерживает сбор и анализ нативных крэшей. Если вы хотите
собирать крэши случившиеся в нативном коде, нужно подключить
соответствующую зависимость:

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation 
  \"ru.ok.tracer:tracer-crash-report-native:0.2.7\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

На данный момент эта фича находится в активной разработке. Сбор уже
работает, однако отображаются все нативные крэши пока без стэктрейса и
прочих подробностей. Собрать и подсчитать их можно уже сейчас, а
отображение и классификация дорабатываются.

Более подробное описание зависимостей --- на странице «[Быстрый
старт](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/start/quick-start)».

###### Описание CrashReportConfiguration и CrashFreeConfiguration {#описание-crashreportconfiguration-и-crashfreeconfiguration .unnumbered}

В вашем Application.kt

 

  -----------------------------------------------------------------------
  class MyApplication : Application(), HasTracerConfiguration
  {    \`\`override val tracerConfiguration:
  List\<TracerConfiguration\>        \`\`get() =
  listOf(            \`\`CrashReportConfiguration.build
  {                \`\`// ваши
  опции            \`\`},            \`\`CrashFreeConfiguration.build
  {                \`\`// ваши опции            \`\`},        \`\`)}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Опции CrashReportConfiguration.Builder:

-   setEnabled --- включает/выключает репортинг крэшей. По умолчанию
    включена, можно не трогать ))

-   setSendAnr --- отключает отправку ANR. По умолчанию включена

-   setNativeEnabled --- включает/выключает репортинг нативных крэшей.
    Значение по умолчанию зависит от того, подключена ли
    зависимость tracer-crash-report-native. Если подключена, то и
    репортинг по умолчанию включен. Если не подключена - выключен. ⚠
    Включить репортинг нативных крэшей без подключения соответствующей
    зависимости не выйдет, а вот выключить репортинг при наличии
    зависимости - пожалуйста.

Опции CrashFreeConfiguration.Builder:

-   setEnabled --- включает/выключает подсчет crash free users. По
    умолчанию выключена!

Устаревшие или опасные опции CrashReportConfiguration.Builder:

-   setHost --- устарела и будет удалена в версии 0.3.x. Если вам точно
    действительно надо поменять хост,
    используйте CoreTracerConfiguration.setHost

-   setSendLogs --- устарела и ничего не делает, будет удалена в версии
    0.3.x

-   setCountCrashFreeUsers --- устарела и ничего не делает, будет
    удалена в версии 0.3.x. Вместо нее предоставлена
    опция CrashFreeConfiguration.Builder.setEnabled

-   setSendThreadsDump, setSendAsap, setMaxNonFatalExceptions ---
    устарели и ничего не делают, будут удалены в версии 0.3.x

Устаревшие или опасные опции CrashFreeConfiguration.Builder:

-   setExperimentalMaxSessionsToUpload --- сколько сессий нужно накопить
    чтобы отправить батч. По умолчанию 10. Только для тестов!

-   setExperimentalMaxSessionTimeSpanToUpload --- как долго копить
    сессии чтобы отправить батч. По умолчанию 4 часа (в миллисекундах).
    Только для тестов!

-   setExperimentalUploadSessionsFromYesterday --- отправлять батч если
    обнаружены вчерашние (или ранее) сессии. По умолчанию включена

###### Описание TracerCrashReport {#описание-tracercrashreport .unnumbered}

Для отправки non-fatals используется
метод TracerCrashReport.report(throwable)

  -----------------------------------------------------------------------
  // Залоггировать не фатальную
  ошибку. TracerCrashReport.report(NonFatalException(\"I\'ll be ok
  soon\"))
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Крэши всегда группируются по общим частям стектрейса. По умолчанию
non-fatals тоже, однако есть способ повлиять на эту группировку.

Для того, чтобы все non-fatals попали в одну группу вне зависимости от
стектрейса, есть метод report с параметром issueKey.

  -----------------------------------------------------------------------
  // Залогировать не фатальную ошибку с ключем
  ISSUE-001 TracerCrashReport.report(NonFatalException(\"What a terrible
  failure\"), issueKey = \"ISSUE-001\")\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

На текущий момент в Tracer есть лимит в 1 млн событий в день. Поэтому
рекомендуется не злоупотреблять этим методом.

Также к событию можно добавить [дополнительную
информацию](https://apptracer.ru/#/doc/android/sideload.md).

##### Heap Dumps {#heap-dumps .unnumbered}

###### Подключение зависимостей к проекту {#подключение-зависимостей-к-проекту-1 .unnumbered}

В вашем \<project\>/\<app-module\>/build.gradle

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation 
  \"ru.ok.tracer:tracer-heap-dumps:0.2.7\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Более подробное описание зависимостей на странице «[Быстрый
старт](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/start/quick-start)».

###### Описание HeapDumpConfiguration {#описание-heapdumpconfiguration .unnumbered}

В вашем Application.kt

  -----------------------------------------------------------------------
  class MyApplication : Application(), HasTracerConfiguration
  {    \`\`override val tracerConfiguration:
  List\<TracerConfiguration\>        \`\`get() =
  listOf(            \`\`HeapDumpConfiguration.build
  {                \`\`// ваши опции            \`\`},        \`\`)}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Опции HeapDumpConfiguration.Builder:

-   setEnabled --- включает/выключает сбор хипдампов при OOM. По
    умолчанию включён.

Устаревшие или опасные опции HeapDumpConfiguration.Builder:

-   setProbability --- устарела и ничего не делает, будет удалена в
    версии 0.3.x

-   setInterestingSize --- устарела и ничего не делает, будет удалена в
    версии 0.3.x

Хипдампы отправляются ночью, когда пользователь не пользуется
устройством.

##### Disk Usage {#disk-usage .unnumbered}

###### Подключение зависимостей к проекту {#подключение-зависимостей-к-проекту-2 .unnumbered}

В вашем \<project\>/\<app-module\>/build.gradle

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation 
  \"ru.ok.tracer:tracer-disk-usage:0.2.7\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Более подробное описание зависимостей на странице «[Быстрый
старт](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/start/quick-start)».

###### Описание DiskUsageConfiguration {#описание-diskusageconfiguration .unnumbered}

В вашем Application.kt

  -----------------------------------------------------------------------
  class MyApplication : Application(), HasTracerConfiguration
  {    \`\`override val tracerConfiguration:
  List\<TracerConfiguration\>        \`\`get() =
  listOf(            \`\`DiskUsageConfiguration.build
  {                \`\`// ваши опции            \`\`},        \`\`)}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Опции DiskUsageConfiguration.Builder:

-   setEnabled --- включить/выключить плагин. По умолчанию включён;

-   setProbability --- вероятность(1/n) того, что раз в день у этого
    юзера в фоне будет произведена проверка использования дискового
    места. По умолчанию 0, что равноценно включению плагина;

-   setInterestingSize --- лимит занимаемого места, при превышении
    которого сдк будет сигнализировать о проблеме и отправлять отчет в
    Tracer. Измеряется в байтах. По умолчанию 10Gb;

-   setExcludePath --- пути с заранее известными большими файлами
    которые должны быть исключены из проверки. Принимает только пути
    сформированные через GlobalDirs.

Описание GlobalDirs:

-   GlobalDirs.INTERNAL_DATA.excludePath(\"foo/bar\") --- внутреннее
    хранилище приложения;

-   GlobalDirs.EXTERNAL_DATA.excludePath(\"foo/bar\") --- файлы
    приложения на SD-карте;

-   GlobalDirs.SRC.excludePath(\"foo/bar\") --- файлы самого приложения.

##### Systrace Profiler {#systrace-profiler .unnumbered}

###### Подключение зависимостей к проекту {#подключение-зависимостей-к-проекту-3 .unnumbered}

В вашем \<project\>/\<app-module\>/build.gradle

 

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation 
  \"ru.ok.tracer:tracer-profiler-systrace:0.2.7\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Более подробное описание зависимостей на странице «[Быстрый
старт](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/start/quick-start)».

###### Описание SystraceProfilerConfiguration {#описание-systraceprofilerconfiguration .unnumbered}

В вашем Application.kt

 

  -----------------------------------------------------------------------
  class MyApplication : Application(), HasTracerConfiguration
  {    \`\`override val tracerConfiguration:
  List\<TracerConfiguration\>        \`\`get() =
  listOf(            \`\`SystraceProfilerConfiguration.build
  {                \`\`// ваши опции            \`\`},        \`\`)}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Опции SystraceProfilerConfiguration.Builder:

-   setEnabled --- включает/выключает профилирование. По умолчанию
    включён.

Устаревшие или опасные опции SystraceProfilerConfiguration.Builder:

-   setDurationMs --- время работы профайлера в ms;

-   addCondition --- добавляет Condition для начала профилирования.

###### Описание Condition, TracerEvents, SystraceProfiler API, etc. {#описание-condition-tracerevents-systraceprofiler-api-etc. .unnumbered}

Актуальное описание в разделе «[Sampling
Profiler»](https://apptracer.ru/#/doc/android/profiler-sampling.md).

##### Sampling Profiler {#sampling-profiler .unnumbered}

###### Подключение зависимостей к проекту {#подключение-зависимостей-к-проекту-4 .unnumbered}

В вашем \<project\>/\<app-module\>/build.gradle

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation 
  \"ru.ok.tracer:tracer-profiler-sampling:0.2.7\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Более подробное описание зависимостей на странице «[Быстрый
старт](https://help.rustore.ru/rustore/for_developers/tools/app-tracer/android/start/quick-start)».

###### Описание SamplingProfilerConfiguration {#описание-samplingprofilerconfiguration .unnumbered}

В вашем Application.kt

  -----------------------------------------------------------------------
  class MyApplication : Application(), HasTracerConfiguration
  {    \`\`override val tracerConfiguration:
  List\<TracerConfiguration\>        \`\`get() =
  listOf(            \`\`SamplingProfilerConfiguration.build
  {                \`\`// ваши опции            \`\`},        \`\`)}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Опции SamplingProfilerConfiguration.Builder:

-   setEnabled --- включает/выключает профилирование. По умолчанию
    включён.

Устаревшие или опасные опции SamplingProfilerConfiguration.Builder:

-   setBufferSizeMb --- смотрите
    описание android.os.Debug.startMethodTracingSampling;

-   setSamplingIntervalUs --- смотрите
    описание android.os.Debug.startMethodTracingSampling. По умолчанию
    5000;

-   setDurationMs --- время работы профайлера в ms;

-   addCondition --- добавляет Condition для начала профилирования.

###### Описание Condition. Deprecated. {#описание-condition.-deprecated. .unnumbered}

Конструкция Condition используется для управления запуском и отправкой
результатов профилирования. Пример использования:

  -----------------------------------------------------------------------
  Condition.appStart(10_000, 7_000)\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Включить профайлер при старте приложения с вероятностью 100% и отправить
результат его работы на сервер, если время запуска приложения превысило
7000 мс.

Создание собственного события:

  -----------------------------------------------------------------------
  val condition = Condition.build { // ваши опции }
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Опции Condition.Builder

-   setTag(\"my_tag\") --- Тег, с которым результат будет загружен в
    Tracer.

-   setTagLimit(n) --- Максимальное количество отчетов в день для
    данного тега которое примет сервер.

-   setProbability(n) --- Вероятность(1/n) с которой будет запущен
    профайлер при наступлении события из startEvent.

-   setStartEvent(\"my_event\") --- При наступлении этого события с
    указанной выше вероятностью будет запущен профайлер.

-   setInterestingEvent(\"my_other_event\") --- Опционально. Если
    присутствует, то результат профилирования будет отправлен на бекенд,
    только если данное событие встретилось за время работы профайлера.

-   setInterestingDuration(n) --- Если время между стартовым и
    интересующим событием превысит это число, результат профилирования
    будет отправлен на бекенд.

Если интересующее событие будет иметь свой счётчик, сравнение будет
происходить с ним. К примеру, app_freeze имеет счетчик --- время которое
UI поток висел. Следовательно, если interestingEvent ==
\"app_freeze\" и interestingDuration == 700, то отправка произойдет,
если во время работы профайлера случился фриз на 700+ мс.

###### Ручное профилирование {#ручное-профилирование .unnumbered}

Также есть возможность размечать в коде начало и конец профилирования.

SamplingProfiler.start() --- Запускает профайлер. Принимает параметры:

-   context: Context --- App context приложения.

-   tag: String --- Тег, с которым результат будет загружен в трейсер.

-   duration: Long --- Время работы профайлера в ms.

SamplingProfiler.abort() --- Прекращает работу профайлера и очищает
результат.

SamplingProfiler.commit() --- Прекращает работу профайлера и отпавляет
результат на бэкенд. Если на момент вызова профайлер ещё не закончил
работу, то результирующий тег будет равен \<tag\>\_\<tagSuffix\>

-   tagSuffix: String --- Опционально. Суффикс, который будет добавлен к
    тегу в случае досрочной остановки профайлера.

Пример:

С вероятностью 1/100000 профайлер начнёт свою работу

  -----------------------------------------------------------------------
  if (Random.nextInt( 100 \_ 0 0 0 ) ==  0 )
  {        \`\`SamplingProfiler.start(                \`\`context =
  appContext,                \`\`tag =  \"stream_request\"
  ,                \`\`duration =  10 \_ 0 0 0 ,        \`\`)}// \...
  Код. Например, загрузка лентыSamplingProfiler.commit( \"loaded\"
  )\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

###### Описание «системных» событий {#описание-системных-событий .unnumbered}

«Системные» события используются в классе Condition и ручном
профилировании:

-   TracerEvents.EVENT_APP_START_BEGIN --- \"app_start_begin\" ---
    Начало работы приложения.

-   TracerEvents.EVENT_APP_START_END --- \"app_start_end\" --- Окончание
    работы метода Application.onCreate().

-   TracerEvents.EVENT_FIRST_ACTIVITY_CREATED --- \"app_first_activity_created\" ---
    Создана первая активити.

-   TracerEvents.EVENT_ACTIVITY_CREATED --- \"activity_created\" ---
    Любая активити перешла в состояние created.

-   TracerEvents.EVENT_FREEZE --- \"app_freeze\" --- UI поток завис на N
    мс. Если данный эвент используется как interesting event, тогда
    interesting duration будет сравниваться с N. К примеру, если N ==
    500, тогда результат профайлинга будет отправлен, если UI поток за
    время работы профайлера зависал на более чем 500 мс.

-   EVENT_ANR --- \"app_anr\" --- UI поток завис и не продолжил свою
    работу на момент окончания профайлера. Прошло N мс с момента
    обнаружения зависания до окончания работы профайлера. Если данный
    эвент используется как interesting event, тогда interesting duration
    будет сравниваться с N. К примеру, если N == 5000, тогда результат
    профайлинга будет отправлен, если UI поток за время работы
    профайлера завис на более чем 5000 мс.

Чтобы добавить пользовательское событие:

  -----------------------------------------------------------------------
  TracerEvents.addEvent(eventName, duration)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   eventName --- имя события. Используется в классе Condition в
    методах startEvent и interestingEvent.

-   duration --- время ассоциированное с этим событием. Если задано,
    то interestingDuration будет вычисляться не как разница
    между startEvent и interestingEvent, а сравниваться с duration этого
    события.

#### *Дополнительные возможности* {#дополнительные-возможности .unnumbered}

##### Добавление информации к событиям {#добавление-информации-к-событиям .unnumbered}

Описание HasTracerSystemInfo

Самую важную информацию о сбое предоставляет tracer sdk и вам не надо об
этом беспокоиться:

-   date --- дата и время наступления события;

-   board --- Build.BOARD;

-   brand --- Build.BRAND;

-   cpuABI --- Build.SUPPORTED_ABIS;

-   device --- Build.DEVICE;

-   display --- Build.DISPLAY;

-   manufacturer --- Build.MANUFACTURER;

-   model --- Build.MODEL;

-   osVersionSdkInt --- Build.VERSION.SDK_INT;

-   osVersionRelease --- Build.VERSION.RELEASE;

-   cpuCount --- Runtime.getRuntime().availableProcessors();

-   operatorName --- имя оператора (если доступно).

Добавить дополнительную информации к сбою можно в
реализации HasTracerSystemInfo в своем приложении:

  -----------------------------------------------------------------------
  class MyApplication : Application(), HasTracerSystemInfo
  {    \`\`override val tracerSystemInfo: Map\<String,
  String\>        \`\`get() = mapOf {            \`\`\"foo\" to  \"bar\"
  ,        \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Полезным примером такой информации может быть userId, build flavor или
vendor если сборка предназначена для предустановки.

HasTracerSystemInfo.tracerSystemInfo запрашивается каждый раз при
наступлении события CRASH и NON-FATAL. Также он будет вызван 1 раз на
старте приложения на случай наступления ANR.

Описание TracerCrashReport.log

К событию также прилагаются логи, предшествующие его наступлению. Вы
можете добавить логи воспользовавшись методом TracerCrasgReport.log:

  -----------------------------------------------------------------------
  // при наступлении какого-то событияTracerCrashReport.log( \"button
  100500 clicked\" )// спустя  100500
  строчекTracerCrashReport.report(NoSuchElementException( \"Nothing here,
  see logs\" ))// во вкладке logs этого non-fatal вы увидите строчку
  event button  100500 clicked
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Логи накапливаются не бесконечно. На данный момент они собираются в
циклический буффер размером 64Кб.

##### Собственное логирование Tracer {#собственное-логирование-tracer .unnumbered}

Информация касается собственного логирования Tracer SDK. Никакого
отношения к тому, что SDK отправляет на сервер она не имеет. Собственное
логирование служит только для самого Tracer SDK и/или его интеграции в
ваш проект.

###### Описание HasTracerLogger и TracerLoggerDelegate {#описание-hastracerlogger-и-tracerloggerdelegate .unnumbered}

Трейсер осуществляет все внутреннее логирование через
интерфейс TracerLoggerDelegate. Для того, чтобы подменить мезанизм
логирования, реализуйте HasTracerLogger в вашем приложении.

В том случае, если вы хотите всего лишь поменять уровень логирования,
можно создать экземпляр DefaultTracerLoggerDelegate:

  -----------------------------------------------------------------------
  class MyApplication : Application, HasTracerLogger {    \`\`override
  val tracerLoggerDelegate: TracerLoggerDelegate        \`\`get() =
  DefaultTracerLoggerDelegate(            \`\`minLogPriority =
  Log.VERBOSE,        \`\`)}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Полностью переопределить механизм логирования можно в своей
реализации TracerLoggerDelegate:

  -----------------------------------------------------------------------
  class MyApplication : Application, HasTracerLogger {    \`\`override
  val tracerLoggerDelegate: TracerLoggerDelegate        \`\`get() =
  MyLoggerDelegate()}class MyLoggerDelegate : TracerLoggerDelegate
  {    \`\`// Начиная с какого уровня логировать события. Используютя
  константы из android.util.Log    \`\`// По умочанию
  Log.DEBUG    \`\`override val minLogPriority: Int        \`\`get() =
  Log.VERBOSE        \`\`// Основной метод
  логирования    \`\`//    \`\`// priority - уровень логнирования.
  Используютя константы из android.util.Log    \`\`// msg - опциональное
  сообщение.    \`\`// tr - опциональное исключение.    \`\`override fun
  println(priority: Int, msg: String?, tr: Throwable?) {        \`\`//
  тут ваш код логирования        \`\`TODO()        \`\`// опционально
  переправить во встроенную реализацию        \`\`// будет отправлено в
  android logcat с тэгом
  ru.ok.tracer        \`\`DefaultTracerLoggerDelegate.println(priority,
  msg, tr)    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

# **Статистика для разработчиков** {#статистика-для-разработчиков .unnumbered}

В [RuStore Консоль](https://console.rustore.ru/sign-in) есть несколько
разделов статистики, в которых можно просмотреть следующие данные:

-   количество просмотров и скачиваний приложения;

-   сумма полученной прибыли и возвратов;

-   количество push-уведомлений, отправленных пользователю и т. д.

Данная статистика позволит собрать нужные данные, чтобы повысить
функциональность приложения и сделать его более удобным для
пользователя, оценить динамику продаж и, при необходимости, изменить
стратегию монетизации вашего приложения.

## **Статистика загрузки версий** {#статистика-загрузки-версий .unnumbered}

В [RuStore Консоль](https://console.rustore.ru/sign-in) реализована
возможность просмотра статистики по приложениям.

Просмотр статистики доступен только авторизованным пользователям.

Как просмотреть статистику загрузки версий?

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Перейдите на вкладку «Приложения».

3.  В боковом меню нажмите «Статистика по приложениям».

На вкладке статистики отображены следующие элементы:

-   Таблица с общей статистикой по приложению, содержащая:

    -   Общее количество просмотров приложения в интерфейсе RuStore (Web
        и МП);

    -   Общее количество скачиваний приложения в интерфейсе RuStore;

-   Таблица со статистикой по версиям операционной системы (далее ОС)
    пользователей RuStore, содержащая:

    -   Название версии ОС пользователя RuStore;

    -   Количество скачиваний приложения на устройство с определенной
        версией ОС;

    -   Процент скачиваний приложения на устройство с определенной
        версией ОС;

-   Таблица со статистикой по моделям устройств пользователей RuStore,
    содержащая:

    -   Название модели устройства пользователя RuStore;

    -   Количество скачиваний приложения на ту или иную модель
        устройства;

    -   Процент скачиваний приложения на ту или иную модель устройства;

При необходимости можно отсортировать элементы таблиц со статистикой по
версиям операционной системы и по моделям устройств, а именно:

-   Нажмите на иконку сортировки один раз -- все элементы таблицы будут
    отсортированы от большего к меньшему значению этого параметра;

-   Нажмите на иконку сортировки два раза -- все элементы таблицы будут
    отсортированы от меньшего к большему значению этого параметра;

-   Нажмите на иконку сортировки три раза -- список элементов вернется к
    состоянию по умолчанию.

Для удобства сортировки одновременно можно использовать несколько
фильтров.

![700](media/image24.png){width="5.833333333333333in"
height="5.76121719160105in"}

## **Статистика по монетизации** {#статистика-по-монетизации .unnumbered}

В RuStore Консоли можно просматривать финансовые данные, что позволяет
вам оценить динамику продаж, в то числе конкретного контента или
подписок. Данные о доходах основаны на сведениях об объемах транзакций.

**Общие требования**

Для просмотра статистики по монетизации необходимо соблюдение следующих
условий:

-   для приложения подключен один из видов монетизации и ранее были
    совершены транзакции. Подробнее в разделе
    [Монетизация](https://help.rustore.ru/rustore/for_developers/Monetization).

-   у пользователя есть права на просмотр статистики;

-   пользователь должен быть авторизован в [RuStore
    Консоль](https://console.rustore.ru/sign-in).

Как просмотреть статистику по платежам?

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Выберите «Приложения» в верхнем меню.

3.  Перейдите на вкладку «Монетизация → Статистика по платежам».

На странице «Статистика по платежам» данные отображаютсяпо совокупному
доходу из всех источников и по возвратам из всех источников.

Под источниками подразумевается тип продукта монетизации, подключенный к
приложению:

1.  Платные приложения: доход от платной загрузки приложения из витрины
    RuStore;

2.  inn-app продукты: доход от транзакций с inn-app продуктами в
    приложении;

3.  Подписки: доход от регулярных платежей за использование подписки.

Для статистики по возвратам и доходам отображается следующий тип данных:

-   Сумма, с указанием валюты;

-   Количество транзакций;

-   Процент от дохода.

Выводится в случае, если компания подключила более одного типа продукта
(например, подписки + inn_app платежи)

-   Процент возврата

-   Период ---отрезок времени, за который можно посмотреть статистику.
    Доступные значения:

-   Последние сутки с 00:00 до 00:00;

-   Последние 7 дней до текущего дня включительно;

-   Последние 30 дней до текущего дня включительно;

-   Все время = с момента получения первой транзакции до текущего дня
    включительно.

1.  Отчет формируется на момент окончания выбранного периода.

![800](media/image94.png){width="5.833333333333333in"
height="8.605768810148732in"}

## **Статистика push-уведомлений** {#статистика-push-уведомлений .unnumbered}

В [RuStore Консоль](https://console.rustore.ru/sign-in) можно
просматриватьстатистику по push-уведомлениям для опубликованных
приложений.

Статистика рассчитывается на основании данных для каждого приложения, в
котором настроены push-уведомления.

Как просмотреть статистику по push-уведомлениям?

1.  Откройте [RuStore Консоль](https://console.rustore.ru/sign-in).

2.  Выберите «Приложения» в верхнем меню.

3.  Перейдите на вкладку «Push-уведомления → Статистика по
    push-уведомлениям».

Данные статистики по push-уведомлениям отображаются через день после
публикации новой версии приложения.

На странице статистики по push-уведомлениям отображается количество:

-   всех отправленных push-уведомлений;

-   доставленных push-уведомлений;

-   пользователей, которые перешли в приложение, кликнув на
    push-уведомление.

Эти данные собраны для просмотра по периодам времени: за день, за
неделю, за месяц или за все время.

![800](media/image141.png){width="5.833333333333333in"
height="4.05448709536308in"}

# **Проверка подписи APK** {#проверка-подписи-apk .unnumbered}

Для работы большинства SDK необходимо, чтобы приложение было подписано
правильной подписью. Чтобы узнать, какой подписью подписан файл APK,
нужно воспользоваться дополнительными инструментами, которые покажут
отпечаток подписи.

Информация о подписи указана в файле build.gradle. Если не указать
подпись явно, используется подпись по умолчанию
\~/.android/debug.keystore.

Ниже рассмотрены способы, с помощью которых можно узнать подпись.

## **Получение подписи с помощью Android Studio** {#получение-подписи-с-помощью-android-studio .unnumbered}

  -----------------------------------------------------------------------
  gradle signingreport
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Результат выполнения команды:

![700](media/image63.png){width="5.833333333333333in"
height="1.2544061679790026in"}

Отпечаток подписи указан в строке SHA-256.

## **Получение подписи с помощью apksigner** {#получение-подписи-с-помощью-apksigner .unnumbered}

  -----------------------------------------------------------------------
  apksigner verify --print-certs -v example.apk
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

example.apk --- ваше приложение.

Результат выполнения команды Mac OS:

![700](media/image72.png){width="5.833333333333333in"
height="0.67917104111986in"}

Значение Signer #1 certificate SHA-256 digest --- это нужный отпечаток
подписи.

## **Получение подписи с помощью keytool** {#получение-подписи-с-помощью-keytool .unnumbered}

  -----------------------------------------------------------------------
  keytool -printcert -jarfile example.apk
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

example.apk --- ваше приложение.

Результат выполнения команды Mac OS:

![700](media/image23.png){width="5.833333333333333in"
height="2.941000656167979in"}

Отпечаток подписи указан в строке SHA256.

## **Проверка для пуш-уведомлений** {#проверка-для-пуш-уведомлений .unnumbered}

Отпечаток подписи, полученный с помощью указанных инструментов, должен
совпадать с отпечатком, который указан в проекте пуш-уведомлений ---
поле «Отпечаток подписи SHA-256».

![700](media/image67.png){width="5.833333333333333in"
height="4.234933289588802in"}

Подробная информация о подписи --- в [официальной документации
Google](https://developer.android.com/studio/publish/app-signing).

# **Соглашение об инфор.взаимодействии с потенциальными партнерами** {#соглашение-об-инфор.взаимодействии-с-потенциальными-партнерами .unnumbered}

Настоящее соглашение (далее --- « **Соглашение**»), заключается между
ООО «ВК» (ОГРН 1027739850962, Россия, 125167, г. Москва, Ленинградский
проспект д.39, стр.79) (далее -- **Компания**) и потенциальным партнером
(далее -- **Претендент**), проявившим интерес к потенциальному
заключению с Компанией Соглашения RuStore о распространении программных
продуктов
(<https://help.rustore.ru/rustore/legal_info/developers_agreement>).

Настоящее Соглашение определяет условия обмена информацией между
Компанией и Претендентом.

Претендент безоговорочно и в полном объеме принимает условия Соглашения
путем направления заполненной анкеты для потенциальных партнеров
Компании, содержащую ссылку на настоящее Соглашение (далее -- «
**Анкета**»), посредством веб-формы в чат-боте в Telegram (в
соответствии с ч.3. ст. 438 ГК РФ).

1.  **ПРЕДМЕТ СОГЛАШЕНИЯ**

1.1. Компания безвозмездно оказывает Претенденту перечисленные ниже
услуги (далее -- «Услуги»):

        I.         Рассмотрение Претендента на предмет его соответствия
требованиям, предъявляемым к партнерам Компании для принятия решения о
заключении, сопровождении, изменении, расторжении договоров Компанией.

      II.         Учет Претендента в качестве потенциального партнера
Компании, в том числе упрощение повторных рассмотрений Претендента на
предмет его соответствия требованиям, предъявляемым к контрагентам
Компании.

      III.         Информирование Претендента о продуктах Компании, в
том числе приглашения на мероприятия, проводимые Компанией.

1.2. В целях оказания Услуг Компания может получать от Претендента и
обрабатывать информацию о Претенденте и его представителях, включающую:

-   ФИО Претендента -- физического лица/ индивидуального
    предпринимателя;

-   ФИО представителя Претендента;

-   Должность представителя Претендента;

-   Email Претендента;

-   Телефон Претендента;

-   Ник Претендента в Telegram;

-   Email представителя Претендента;

-   Телефон представителя Претендента;

-   Ник представителя Претендента в Telegram;

-   Название Претендента-юридического лица;

-   Сайт Претендента.

В указанном перечне перечислен максимальный объем данных, которые могут
быть запрошены в Анкете в чат-боте в Telegram.

1.3. Претендент гарантирует, что указанные им в Анкете данные
предоставлены им лично, являются достоверными, корректными и
действительными и согласен предоставить Компании возможность производить
проверку предоставленных данных.

1.4. Претендент настоящим дает согласие Компании на период действия
Соглашения на обработку (сбор, получение, запись, систематизацию,
накопление, хранение, уточнение (обновление, изменение), извлечение,
использование, блокирование, удаление, уничтожение) предоставленных в
ходе заполнения Анкеты персональных данных с использованием средств
автоматизации или без использования таких средств для целей исполнения
настоящего Соглашения на период действия Соглашения.

Компания осуществляет сбор предоставленных в ходе заполнения Анкеты
персональных данных с привлечением третьего лица, а именно: ООО «Много
Приложений», место нахождения: 119071, Россия, г. Москва, вн.тер.г.
муниципальный округ Донской, Ленинский пр-кт, д. 15А, этаж 16, помещ. 6,
ОГРН 1237700094752, ИНН 9725113777.

1.5. Претендент с целью исполнения Соглашения (получения Услуг) поручает
Компании в течение срока действия Соглашения осуществлять обработку
информации о представителе Претендента, предусмотренной настоящим
Соглашением, с использованием средств автоматизации или без
использования таких средств способами: получение, запись,
систематизация, накопление, хранение, уточнение (обновление, изменение),
использование, блокирование, удаление, уничтожение.

Претендент гарантирует наличие законных оснований для обработки
Компанией по поручению Претендента информации о представителе и
контактных лицах Претендента, указанной в Анкете. В случае, если такие
законные основания перестают действовать в отношении соответствующего
субъекта данных, Претендент обязуется незамедлительно сообщить об этом
письмом по адресу местонахождения Компании.

Компания обязуется обеспечить конфиденциальность информации,
обрабатываемой по поручению Претендента в рамках настоящего Соглашения.
Компания обязуется соблюдать требования применимого законодательства к
защите обрабатываемой по поручению Претендента информации.

Претендент гарантирует, что уведомил представителей и контактных лиц
Претендента об обработке их данных Компанией по поручению Претендента на
условиях настоящего Соглашения.

1.6. Компания обязуется обрабатывать полученные во исполнение настоящего
Соглашения персональные данные в порядке, определенным Соглашением и
законодательством РФ.

1.7. В случае прекращения действия законного основания для обработки
Компанией информации о представителе Претендента, Претендент обязан
направить Компании уведомление в письменном виде на адрес места
нахождения Компании с указанием данных соответствующего представителя.

1.8. Компания имеет право хранить предоставленные Претендентом
персональные данные в принадлежащих Компании информационных системах
управления взаимоотношениями с контрагентами.

**2. СРОК ДЕЙСТВИЯ, ИЗМЕНЕНИЕ И РАСТОРЖЕНИЕ СОГЛАШЕНИЯ**

2.1. Настоящее Соглашение вступает в силу для Претендента с момента его
принятия Претендентом и действует до его расторжения по соглашению
Сторон, либо по требованию одной из Сторон по основаниям и в порядке,
предусмотренном Соглашением и действующим законодательством РФ.

2.2. Претендент вправе расторгнуть настоящее Соглашение посредством
направления Компании уведомления об этом письмом по адресу
местонахождения Компании. Настоящее Соглашение считается расторгнутым по
истечении 30 календарных дней со дня получения Компанией уведомления
Претендента.

2.3. Компания вправе продолжить обработку предоставленных Претендентом
персональных данных после направления Претендентом уведомления о разрыве
Соглашения при наличии иных законных оснований их обработки, к числу
которых может относиться необходимость исполнения иных соглашений,
стороной которых является Претендент, а также необходимость выполнения
возложенных законодательством Российской Федерации на Компанию функций,
полномочий и обязанностей.

2.4. Настоящее Соглашение может быть изменено Компанией при условии
уведомления Претендента путём размещения новой редакции указанных
документов в сети Интернет на странице по ссылке:
https://help.rustore.ru/rustore/for_developers/potentialpartners.
Претендент обязуется самостоятельно периодически проверять Соглашение на
предмет внесения изменений. Изменения в Соглашение, внесенные Компанией,
вступают в силу со дня, следующего за днем опубликования таких
изменений.

2.5. В случаях неисполнения и/или ненадлежащего исполнения обязательств
по Соглашению Стороны несут ответственность в соответствии с действующим
законодательством Российской Федерации.

**3. РАЗРЕШЕНИЕ СПОРОВ**

3.1. Все споры, связанные с заключением, толкованием, исполнением и
расторжением Соглашения, будут разрешаться Сторонами путем переговоров.
Соблюдение досудебного претензионного порядка разрешения споров
обязательно. Претензии должны быть рассмотрены Стороной, получившей
претензию, в течение 30 (тридцати) календарных дней со дня ее получения.

3.2. В случае невозможности урегулировать разногласия путем переговоров,
Стороны вправе обратиться за разрешением спора в судебные органы. В
таком случае спор передается в соответствующий суд по месту нахождения
Компании, если иное не предусмотрено законодательством РФ.

*Редакция от 09 ноября 2023 года*

# **Правила акции «Призы от RuStore»** {#правила-акции-призы-от-rustore .unnumbered}

(далее « **Правила Акции**», « **Правила**»)

*Настоящие Правила Акции являются соглашением между Вами (далее -- «
**Участник**») и Организатором Акции, предметом которого является
участие в Акции, установление прав и обязанностей Участников Акции, а
также порядка организации и проведения Акции.*

*Принимая участие в Акции, Вы безоговорочно и в полном объеме принимаете
Правила Акции.*

**1.** **Термины и определения**

1.1.         **Акция «Призы от** **RuStore** **»**(далее --- «
**Акция**») представляет собой мероприятие или комплекс мероприятий,
целями проведения которого является привлечение внимания потребителей к
платформе RuStore (<https://www.rustore.ru/>), принадлежащей
Организатору Акции, повышение узнаваемости данного продукта и его
продвижение на рынке товаров, работ и услуг.

1.2.         **Организатор Акции**--- ООО «ВК», место нахождения:
125167, г. Москва, Ленинградский проспект, д. 39, стр. 79, ОГРН
1027739850962, ИНН 7743001840;

1.3.         **Технический партнер Акции**--- ООО «Много Приложений»,
место нахождения: 119071, Россия, г. Москва, вн.тер.г. муниципальный
округ Донской, Ленинский пр-кт, д. 15А, этаж 16, помещ. 6, ОГРН
1237700094752, ИНН 9725113777.

1.4.         **Победитель**--- Участник, имеющий право на получение
Приза согласно условиям Правил Акции.

1.5.         **Место проведения Акции:**

\- в период 9-10 ноября 2023 года - Стенд RuStore на конференции
«Mobius», проводимой по адресу: г. Санкт-Петербург, пл. Победы, д.1,
гостиница Пулковская;

\- 18 ноября 2023 года -- конференция «RuStore Mobile Conf», проводимая
по адресу: Москва, Ленинградский пр-т., 39, стр. 79, Бизнес-центр
SkyLight;

\- в период 27-28 ноября 2023 года -- конференция «Highload++»,
проводимая по адресу: Кампус СКОЛКОВО, Московская область, Одинцовский
район, Сколково, улица Новая, дом 100;

\- в период с 30 ноября по 01 декабря 2023 года -- конференция «Team
Lead Conf», проводимая по адресу: Кампус СКОЛКОВО, Московская область,
Одинцовский район, Сколково, улица Новая, дом 100.

1.6.         **Участник Акции**--- физическое лицо, достигшее возраста
18 лет, обладающее необходимой дееспособностью и выполнившее необходимые
для участия в Акции действия, указанные в п. 3.1. Правил Акции.

1.7.         **Приз** --- один из призов, указанных в разделе 6 Правил
Акции, и подлежащий передаче Победителю в качестве награды.

1.8.         **Необоснованное преимущество** --- результат
неправомерных, нечестных и/или иных действий, направленных на получение
Приза или иного преимущества в Акции путем обмана, подлога, шантажа,
принуждения, злоупотребления, незаконного получения информации, доступа
к данным и/или обхода условий Акции, в том числе с помощью использования
технических/программных средств, а также использования
технических/программных и прочих уязвимостей, позволяющих осуществить
такие действия. К таким действиям, в частности, относятся неправомерное
получение доступа (взлом) к данным Участников Акции и прочие средства
получения необоснованного преимущества.

**2.** **Общие положения**

2.1.         Информирование Участников и потенциальных участников об
условиях участия в Акции производится посредством размещения информации
в Месте проведения Акции и иными способами, не запрещенными применимым
законодательством.

2.2.         В случае изменения Срока проведения Акции, изменения
призового фонда или иных условий проведения Акции Организатор публикует
такие изменения по ссылки размещения настоящих Правил:
<https://help.rustore.ru/rustore/for_developers/rules_promotion>.
Организатор вправе в одностороннем порядке вносить изменения в условия
Правил Акции.

2.3.         По всем вопросам, связанным с проведением Акции, Участник
вправе обратиться к Организатору, отправив сообщение по электронной
почте на адрес: <support@rustore.ru>. Организатор отвечает на запросы
Участников в течение 7 (семи) рабочих дней с даты получения запроса по
будним дням (с понедельника по пятницу с 10:00 до 18:00 по московскому
времени).

2.4.         Акция не является лотереей, стимулирующей лотереей либо
иной основанной на риске азартной игрой.

2.5.         Официальным языком при проведении Акции является русский
язык.

2.6.         Участниками Акции не могут быть сотрудники Организатора и
аффилированных с ним лиц, которые участвуют в организации Акции,
сотрудники Технического партнера Акции, а также члены семей всех
упомянутых лиц.

2.7.         Результаты проведения Акции являются окончательными и не
подлежащими пересмотру, за исключением случаев выявления Организатором
Акции после объявления таких результатов нарушений условий Правил Акции
Победителями/Участниками Акции.

**3.** **Условия участия в Акции**

3.1.      Для принятия участия в Акции Участник должен совершить
следующие действия:

3.1.1. быть зарегистрированным участником конференции в Месте проведения
Акции;

3.1.2. отсканировать размещенный в Месте проведения Акции QR-код,
перейти по предоставленной ссылке в чат-бот в Telegram, подтвердить
ознакомление в настоящими Правилами, нажав кнопку «Start»;

3.1.3. выполнить задания, предлагаемые в чат-боте в игровой форме, и
получить за это определенное количество виртуальной игровой валюты.

3.2.      Право участия в розыгрыше Приза могут получить только
Участники, которые произвели действия, указанные в п. 3.1. Правил Акции.
Организатор может отказать в участии в Акции в случае установления
нарушения Участником условий Правил Акции.

3.3.      Акция проводится посредством чат-бота в Telegram, функционал
которого предоставлен Техническим партнером Акции.

**4.** **Срок проведения Акции**

4.1.      Акция проводится в период с 9:00 МСК 09 ноября 2023 года по
18:30 МСК 01 декабря 2023 года (далее -- « **Срок проведения Акции**»).

4.2.      Срок выполнения действий, указанных в п. 3.1. Правил Акции: в
течение Срока проведения Акции.

4.3.      Срок подведения итогов, определения/объявления Победителей и
вручения Призов: в течение Срока проведения Акции.

**5.** **Порядок определения Победителей**

5.1.      Количество Победителей ограничено количеством Призов, согласно
п. 6.1 Правил.

5.2.      По итогам выполнения заданий в чат-боте согласно пп.
3.1.2.-3.1.3. Правил каждому участнику Акции начисляется определенное
количество виртуальной игровой валюты, которую можно обменять на
доступные Призы в Месте проведения Акции.

**6.** **Призовой фонд**

6.1.      Призовой фонд формируется за счет средств Организатора Акции и
включает в себя: 250 термосов, 3700 монет в коробочках «Жабкоины», 2400
пар носков, 3800 шторок для телефона,970 карточных игр (маленьких,
90х60).

6.1.1.              Условия получения и использования Приза:

а) Все Призы в рамках Акции предоставляются Организатором Акции.

б) Участник соглашается и признает, что указанные количество Призов и
состав призового фонда могут изменяться по усмотрению Организатора
Акции. Ответственность за качество Призов несёт их производитель.

в) Право на получение Приза не может быть уступлено другому лицу, а
также передано в залог либо обременено иным образом.

г) Выплата денежного эквивалента Приза не осуществляется.

д) Один Участник Акции может получить только один Приз в течение Срока
проведения Акции.

е) Дополнительные условия получения и использования Призов, а также
ограничения по их использованию, могут указываться Организатором Акции
на странице размещения настоящих Правил:
<https://help.rustore.ru/rustore/for_developers/rules_promotion>.

6.2.      Стоимость Призов не превышает 4000,00 рублей, в связи с чем
Организатор Акции в соответствии со ст. 226 Налогового Кодекса РФ не
выступает налоговым агентом лица, объявленного Победителем в Акции, по
уплате налога на доходы физических лиц со стоимости Призов, превышающей
4000,00 руб. (ставка налога -- 35% в соответствии со ст. 224 Налогового
Кодекса РФ для налоговых резидентов), и не обязан исчислять, удерживать
и перечислять в бюджет сумму налога, удержанного из доходов Победителя
Акции, получившего Приз, а также не обязан подавать в налоговые органы
сведения о доходах Победителя Акции в виде полученного Приза.

**7.** **Условия вручения Приза**

7.1.      После выполнения заданий (согласно пп. 3.1.2-3.1.3 Правил)
Участник Акции вправе в чат-боте выбрать Приз из перечня доступных
Призов и обратиться к Организатору Акции за его получением в Месте
проведения Акции. Для вручения Приза Победитель обязуется предоставить
по запросу Организатора сведения, указанные в разделе 8 Правил Акции.

7.2.      Непредставление Победителем сведений, указанных в разделе 8
Правил Акции, до момента окончания Срока проведения Акции считается
отказом Победителя от получения Приза.

7.3.      Призы вручаются Организатором Акции в течение Срока проведения
Акции при условии предоставления Победителем сведений, указанных в
разделе 8 Правил Акции, путём выдачи Приза в Месте проведения Акции.

7.4.      В случае, если вручение Приза не состоялось в результате
действий Победителя, например, в случае пропуска Победителем или
истечения срока на востребование Приза, предоставления Победителем
некорректных данных, необходимых для вручения Приза, повторное вручение
Приза Организатором не производится. В данном случае Приз считается
невостребованным, и Организатор Акции имеет право распорядиться им по
своему усмотрению.

7.5.      Приз не подлежит возврату или обмену и замене на другие Призы.
Выплата денежных средств в размере, эквивалентном стоимости Приза, не
производится.

**8.** **Порядок обработки информации об Участниках**

8.1.     Отношения, связанные с обработкой информации о данных
Участников, регулируются настоящими Правилами Акции, а также действующим
законодательством Российской Федерации.

8.2.     Организатор Акции обрабатывает информацию о данных Участников в
соответствии с условиями, предусмотренными ниже:

  -----------------------------------------------------------------------
  Собираемая информация               Цель обработки
  ----------------------------------- -----------------------------------
  Об Участниках и Победителях:a)      Заключение, исполнение, изменение
  Ф.И. Участника;b)  Адрес            сопровождение, расторжение Правил
  электронной почты;c)   Название     Акции с Участниками и Победителями
  компании;d)  Ник в Telegram.        с учетом требований действующего
                                      законодательства.

  -----------------------------------------------------------------------

8.3.     Организатор осуществляет обработку данных Участников путем
сбора, получения, записи, систематизации, накопления, хранения,
уточнения (обновления, изменения), сопоставления, использования,
блокирования, удаления и уничтожения данных Участника. Организатор
вправе поручить обработку данных третьим лицам, указанным в п. 1.3.
Правил Акции.

8.4.     Организатор осуществляет обработку данных Участников в течение
Срока проведения Акции, а после окончания Акции (если применимо) -- в
случаях и в течение срока, предусмотренного действующим
законодательством.

8.5.     Обработка Организатором данных Участников прекращается, а
соответствующие данные подлежат уничтожению Организатором в случае
прекращения действия настоящих Правил Акции.

8.6.     Организатор принимает технические и организационно-правовые
меры в целях обеспечения защиты информации о данных Участников от
неправомерного или случайного доступа к ним, уничтожения, изменения,
блокирования, копирования, распространения, а также от иных
неправомерных действий.

8.7.     Технические меры безопасности реализованы Организатором с
учетом требований законодательства, современного уровня техники,
характера обрабатываемых данных и рисков, связанных с их обработкой.

**9.** **Прочие условия**

9.1.     Все спорные вопросы, касающиеся Акции, регулируются действующим
законодательством РФ. В случае возникновения ситуаций, допускающих
неоднозначное толкование условий Правил Акции, и (или) вопросов, не
урегулированных Правилами Акции, окончательное решение о таком
толковании и (или) разъяснении принимается исключительно Организатором.

9.2.     Организатор в одностороннем порядке и без объяснения причин
имеет право в любой момент исключить из числа Участников лиц:

9.2.1.        подозреваемых Организатором в получении или попытке
получения Необоснованного преимущества и (или) в совершении иных
недобросовестных действий, целью которых является необоснованное
получение Приза;

9.2.2.        не соответствующих требованиям, предъявляемым к Участникам
в соответствии с Правилами Акции;

9.2.3.        нарушающих права третьих лиц (например, авторские,
исключительные и иные интеллектуальные права);

9.2.4.        использующих программное обеспечение, нарушающее работу
чат-бота и/или создающее возможность изменения результатов Акции;

9.2.5.        использующих для участия в Акции чужие данные и/или
данные, содержащие неполные и/или недостоверные сведения об Участнике;

9.2.6.        нарушающих иные условия Правил Акции и (или) положения
законодательства РФ.

9.3.     В случае нарушения Участником обязательств, предусмотренных
п. 9.2. Правил Акции, Участник несет ответственность в соответствии с
действующим законодательством РФ. В этом случае Участник будет считаться
дисквалифицированным, а результаты Акции аннулированными.

В случае возникновения у Организатора убытков, связанных с нарушением
Участником условий Правил Акции, а также прав третьих лиц, Участник
обязуется самостоятельно и за свой счет нести убытки, связанные с
нарушением любых прав третьих лиц, а также возместить убытки
Организатору, если убытки возникли у Организатора вследствие такого
нарушения.

9.4.      Участник вправе отказаться от участия в Акции в любой момент в
период ее проведения, направив уведомление (сообщение) Организатору по
электронной почте на адрес: <support@rustore.ru>.

9.5.     В случае письменного отказа Победителя от получения Приза,
совершения действий, указанных в п. 7.4. Правил Акции, он теряет право
получения Приза от Организатора Акции.

9.6.     Организатор не компенсирует Участнику расходы, связанные с его
участием в Акции, в том числе расходы, связанные с оплатой доступа в
сеть «Интернет», оплатой услуг связи и прочих расходов, которые могут
возникнуть у Участника.

9.7.     В случае обстоятельств, неподконтрольных Организатору, при
незапланированных событиях или в исключительной ситуации (пожар,
наводнение, стихийное бедствие, атака интернет-серверов, забастовка),
ставящих под опасность финансовую или техническую целесообразность
Акции, даже если ответственность за них лежит на Организаторе (при
условии добросовестного выполнения Организатором своих обязательств),
Организатор сохраняет за собой право отменить всю Акцию или ее часть.
При отмене Акции Участники не могут требовать компенсацию (в том числе
возмещение убытков) в какой бы то ни было форме.

9.8.     Если по какой-либо причине любой аспект Акции не может
осуществляться так, как это запланировано, в том числе по причинам,
связанным  с заражением компьютерными вирусами, неполадками в сети
Интернет, дефектами, манипуляциями, несанкционированным вмешательством,
фальсификацией, техническими неполадками или любой причиной,
неконтролируемой Организатором, которая искажает или затрагивает
исполнение, безопасность, честность, целостность или надлежащее
проведение Акции, Организатор может по своему усмотрению аннулировать,
прекратить, изменить или временно приостановить проведение Акции.

9.9.     Организатор Акции не несёт ответственности за какие-либо прямые
или косвенные потери Участников, связанные с участием в Акции, в том
числе явившиеся результатом сбоев в телекоммуникационных и
энергетических сетях, действий вредоносных программ, недобросовестных
действий третьих лиц, направленных на несанкционированный доступ и/или
выведение из строя программного и/или аппаратного комплекса Организатора
Акции, а также непредвиденных обстоятельств непреодолимой силы.
Организатор Акции не обязан возмещать потери Участникам Акции в подобных
случаях.

*Редакция 17 ноября 2023 года*

Документация разработчика

RuStore SDK для in-app платежей

Узнайте, как подключить платежи в вашем приложении в зависимости от
вашей среды разработки:

Kotlin

keywords: RuStore разработчики документация RuStoreSDK подключение
платежей

Быстрый старт

**Пример реализации**

Ознакомьтесь с приложением-примером чтобы узнать, как правильно
интегрировать платежи.

**Условия работы платежей**

Для работы проведения платежей необходимо соблюдение всех условий:

-   На устройстве пользователя установлено приложение RuStore.

-   Пользователь авторизован в приложении RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения включена возможность покупок в системе RuStore
    Консоль.

Сервис имеет некоторые ограничения на работу за пределами РФ.

Добавление репозитория

Подключите репозиторий:

  -----------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"
  )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подключение зависимости

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

  -----------------------------------------------------------------------
  ---

  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:billingclient:3.1.0\" )}
  -----------------------------------------------------------------------

Чтобы узнать подробности подключения зависимости, ознакомьтесь
с информацией.

Инициализация библиотеки в проекте

Перед вызовом методов библиотеки необходимо выполнить ее инициализацию.

Создайте RuStoreBillingClient, используя
RuStoreBillingClientFactory.create():

  -----------------------------------------------------------------------
  val billingClient: RuStoreBillingClient =
  RuStoreBillingClientFactory.create(    \`\`context =
  app,    \`\`consoleApplicationId =  \"111111\" ,    \`\`deeplinkScheme
  =  \"yourappscheme\" ,    \`\`// Опциональные
  параметры    \`\`themeProvider =  null ,    \`\`debugLogs  =  false
  ,    \`\`externalPaymentLoggerFactory =  null , \`\`)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   context --- контекст Android. Может быть любым, в реализации
    используется applicationContext.

-   consoleApplicationId --- код приложения из консоли разработчика
    RuStore (пример: https://console.rustore.ru/apps/111111).

-   deeplinkScheme --- cхема deeplink, необходимая для возврата в ваше
    приложение после оплаты через стороннее приложение (например,
    SberPay или СБП). SDK генерирует свой хост к данной схеме.

-   themeProvider --- интерфейс, который предоставляет тему
    BillingClientTheme. Возможны 2 реализации темы BillingClientTheme:
    светлая (Light) и тёмная (Dark). Данный интерфейс необязательный, по
    умолчанию применяться светлая тема.

-   externalPaymentLoggerFactory --- интерфейс, который предоставляет
    доступ ко внешнему логгеру. Логирование событий

-   debugLogs --- флаг регулирующий логирование (логи будут
    автоматически отключены для Release-сборок). Логирование событий

**Важно.** ApplicationId, указанный в build.gradle, должен совпадать с
applicationId apk-файла, который вы публиковали в системе RuStore
Консоль.

Схема deeplink, передаваемая в deeplinkScheme, должна совпадать со
схемой, указанной в AndroidManifest.xml в разделе Обработка deeplink.

Подпись keystore должна совпадать с подписью, которой было подписано
приложение, опубликованное в системе RuStore Консоль. Убедитесь, что
используемый buildType использует такую же подпись, что и опубликованное
приложение.

Библиотека поддерживает логирование событий, которое подключается
отдельно при инициализации библиотеки.

Чтобы узнать подробности инициализации библиотеки, ознакомьтесь
с информацией.

Обработка deeplink

Для возвращения в ваше приложение после оплаты через сторонние
приложения (СБП, SberPay и другие) необходимо правильно реализовать
обработку deeplink. Укажите в AndroidManifest.xml intent-filter с scheme
вашего проекта:

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  \< activity    \`\`android:name = \".YourBillingActivity\" \>    \`\`\<
  intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.MAIN\" /\>        \`\`\< category android:name
  = \"android.intent.category.LAUNCHER\" /\>    \`\`\</ intent-filter
  \>    \`\`\< intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.VIEW\" /\>        \`\`\< category android:name
  = \"android.intent.category.DEFAULT\" /\>        \`\`\< category
  android:name = \"android.intent.category.BROWSABLE\" /\>        \`\`\<
  data android:scheme = \"yourappscheme\" /\>    \`\`\</ intent-filter
  \>\</ activity \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где «yourappscheme» --- схема вашего deeplink, может быть изменена на
другую. Эта схема должна совпадать с параметром deeplinkScheme,
передаваемым в init().

Также для успешного возврата в приложение нужно добавить следующий код:

  ------------------------------------------------------------------------------------------
  class YourBillingActivity: AppCompatActivity() {        \`\`// Previously created with
  RuStoreBillingClientFactory.create()    \`\`private val billingClient:
  RuStoreBillingClient = YourDependencyInjection.getBillingClient()    \`\`override fun
  onCreate(savedInstanceState: Bundle?) {        \`\`super
  .onCreate(savedInstanceState)        \`\`if (savedInstanceState ==  null )
  {            \`\`billingClient.onNewIntent(intent)        \`\`}    \`\`}    \`\`override
  fun onNewIntent(intent: Intent?) {        \`\`super .onNewIntent(intent)  
           \`\`billingClient.onNewIntent(intent)    \`\`}}
  ------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------

Чтобы узнать подробности обработки deeplink, ознакомьтесь с информацией.

Для восстановления состояния вашего приложения при возврате с deeplink
необходимо добавить в AndroidManifest.xml:

android:launchMode="singleTask"

**AndroidManifest.xml**

  -----------------------------------------------------------------------
  \<activity         \`\`android:name=
  \".YourBillingActivity\"         \`\`android:launchMode=
  \"singleTask\"         \`\`android:exported= \"true\"      
    \`\`android:screenOrientation=
  \"portrait\"         \`\`android:windowSoftInputMode= \"adjustResize\"
  \> 
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Общая информация

Вы можете ознакомиться с разделом для быстрой интеграции платежей в
приложение.

**Пример реализации**

Ознакомьтесь с приложением-примером чтобы узнать, как правильно
интегрировать платежи.

**Условия работы платежей**

Для работы проведения платежей необходимо соблюдение всех условий:

-   На устройстве пользователя установлено приложение RuStore.

-   Пользователь авторизован в приложении RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения включена возможность покупок в системе RuStore
    Консоль.

Сервис имеет некоторые ограничения на работу за пределами РФ.

Добавление репозитория

Подключите репозиторий:

  -----------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"
  )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подключение зависимости

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:billingclient:3.1.0\" )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Инициализация

Перед вызовом методов библиотеки необходимо выполнить ее инициализацию.

Создайте RuStoreBillingClient, используя
RuStoreBillingClientFactory.create():

**Создание RuStoreBillingClient**

  -----------------------------------------------------------------------
  val billingClient: RuStoreBillingClient =
  RuStoreBillingClientFactory.create(    \`\`context =
  app,    \`\`consoleApplicationId =  \"111111\" ,    \`\`deeplinkScheme
  =  \"yourappscheme\" ,    \`\`// Опциональные
  параметры    \`\`themeProvider =  null ,    \`\`debugLogs  =  false
  ,    \`\`externalPaymentLoggerFactory =  null , \`\`)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   context --- контекст Android. Может быть любым, в реализации
    используется applicationContext.

-   consoleApplicationId --- код приложения из консоли разработчика
    RuStore (пример: https://console.rustore.ru/apps/111111).

-   deeplinkScheme --- cхема deeplink, необходимая для возврата в ваше
    приложение после оплаты через стороннее приложение (например,
    SberPay или СБП). SDK генерирует свой хост к данной схеме.

-   themeProvider --- интерфейс, который предоставляет тему
    BillingClientTheme. Возможны 2 реализации темы BillingClientTheme:
    светлая (Light) и тёмная (Dark). Данный интерфейс необязательный, по
    умолчанию применяться светлая тема.

-   externalPaymentLoggerFactory --- интерфейс, который предоставляет
    доступ ко внешнему логгеру. Логирование событий

-   debugLogs --- флаг регулирующий логирование (логи будут
    автоматически отключены для Release-сборок). Логирование событий

**Важно.** ApplicationId, указанный в build.gradle, должен совпадать с
applicationId apk-файла, который вы публиковали в системе RuStore
Консоль.

Схема deeplink, передаваемая в deeplinkScheme, должна совпадать со
схемой, указанной в AndroidManifest.xml в разделе Обработка deeplink.

Подпись keystore должна совпадать с подписью, которой было подписано
приложение, опубликованное в системе RuStore Консоль. Убедитесь, что
используемый buildType (пр. debug) использует такую же подпись, что и
опубликованное приложение.

Обработка deeplink

Для корректной работы оплаты через сторонние приложения (СБП или
SberPay), вам необходимо правильно реализовать обработку deeplink. Для
этого необходимо указать в AndroidManifest.xml intent-filter с scheme
вашего проекта:

  -----------------------------------------------------------------------
  \< activity    \`\`android:name = \".YourBillingActivity\" \>    \`\`\<
  intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.MAIN\" /\>        \`\`\< category android:name
  = \"android.intent.category.LAUNCHER\" /\>    \`\`\</ intent-filter
  \>    \`\`\< intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.VIEW\" /\>        \`\`\< category android:name
  = \"android.intent.category.DEFAULT\" /\>        \`\`\< category
  android:name = \"android.intent.category.BROWSABLE\" /\>        \`\`\<
  data android:scheme = \"yourappscheme\" /\>    \`\`\</ intent-filter
  \>\</ activity \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где «yourappscheme» --- схема вашего deeplink, может быть изменена на
другую.

Эта схема должна совпадать с параметром deeplinkScheme, передаваемым в
init().

Далее в Activity, в которую необходимо вернуться после совершения оплаты
(ваша страница магазина), нужно добавить:

  ------------------------------------------------------------------------------------------
  class YourBillingActivity: AppCompatActivity() {        \`\`// Previously created with
  RuStoreBillingClientFactory.create()    \`\`private val billingClient:
  RuStoreBillingClient = YourDependencyInjection.getBillingClient()    \`\`override fun
  onCreate(savedInstanceState: Bundle?) {        \`\`super
  .onCreate(savedInstanceState)        \`\`if (savedInstanceState ==  null )
  {            \`\`billingClient.onNewIntent(intent)        \`\`}    \`\`}    \`\`override
  fun onNewIntent(intent: Intent?) {        \`\`super .onNewIntent(intent)  
           \`\`billingClient.onNewIntent(intent)    \`\`}}
  ------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------

Для восстановления состояния вашего приложения при возврате с deeplink
необходимо добавить в AndroidManifest.xml:

android:launchMode="singleTask"

  -----------------------------------------------------------------------
  \<activity         \`\`android:name=
  \".YourBillingActivity\"         \`\`android:launchMode=
  \"singleTask\"         \`\`android:exported= \"true\"      
    \`\`android:screenOrientation=
  \"portrait\"         \`\`android:windowSoftInputMode= \"adjustResize\"
  \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка доступности работы с платежами

Для проверки доступности платежей, вызовите метод
checkPurchasesAvailability. При его вызове проверяются следующие
условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность платежей.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок в
    системе RuStore Консоль.

Если все условия выполняются, возвращается
FeatureAvailabilityResult.Available. Иначе, возвращается
FeatureAvailabilityResult.Unavailable(val cause: RuStoreException), где
cause --- это ошибка о невыполненном условии. Все возможные ошибки
RuStoreException описаны в разделе Обработка ошибок. Прочие ошибки
(например, «Нет соединения с интернетом») возвращаются в onFailure.

  ---------------------------------------------------------------------------------------
  RuStoreBillingClient.checkPurchasesAvailability(context)    \`\`.addOnSuccessListener {
  result -\>        \`\`when (result)
  {            \`\`FeatureAvailabilityResult.Available -\> {                 \`\`//
  Process purchases available             \`\`}            \`\`is
  FeatureAvailabilityResult.Unavailable -\> {                \`\`// Process purchases
  unavailable            \`\`}        \`\`}    \`\`}.addOnFailureListener { throwable
  -\>        \`\`// Process unknown error    \`\`}
  ---------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------

где context --- контекст Android.

Получение актуальной информации по списку продуктов

keywords: RuStore разработчики документация RuStoreSDK подключение
платежей список продуктов продуктыДля получения списка продуктов
используйте метод getProducts:

  -----------------------------------------------------------------------
  ---

  val productsUseCase: ProductsUseCase =
  billingClient.productsproductsUseCase.getProducts(productIds = listOf(
  \"id1\" ,  \"id2\" ))    \`\`.addOnSuccessListener { products:
  List\<Product\> -\>        \`\`// Process
  success    \`\`}    \`\`.addOnFailureListener { throwable: Throwable
  -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

-   productIds: list --- список идентификаторов продуктов. Максимальная
    длина --- 2083 символа в списке.

**Метод возвращает**:

  -----------------------------------------------------------------------
  data  class Product(    \`\`val productId: String,    \`\`val
  productType: ProductType?,    \`\`val productStatus:
  ProductStatus,    \`\`val priceLabel: String?,    \`\`val price:
  Int?,    \`\`val currency: String?,    \`\`val language:
  String?,    \`\`val \#### String?,\`    \`\`val
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   productId --- идентификатор продукта;

-   productType --- тип продукта;

-   productStatus --- статус продукта;

-   priceLable --- отформатированная цена товара, включая валютный знак
    на языке \[language\];

-   price --- цена в минимальных единицах (в копейках);

-   currency --- код валюты ISO 4217;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   title --- название продукта на языке \[language\];

-   description --- описание продукта на языке \[language\];

-   imageUrl --- ссылка на картинку;

-   promoImageUrl --- ссылка на промо картинку;

-   subscription --- описание подписки, возвращается только для
    продуктов с типом subscription.

Структура ответа сервера на запрос продуктов:

**Структура продукта**

  -----------------------------------------------------------------------
  data  class ProductsResponse(    \`\`override val meta:
  RequestMeta?,    \`\`override val code: Int,    \`\`override val
  errorMessage: String?,\`    \`\`override val error
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   meta --- дополнительная информация о запросе;

-   code --- код ответа;

-   errorMessage --- сообщение об ошибке для пользователя;

-   errorDescription --- расшифровка сообщения об ошибке;

-   errors --- список ошибок для запрошенных продуктов;

-   products --- список запрошенных продуктов.

**Структура подписки**:

  -----------------------------------------------------------------------
  data  class ProductSubscription(    \`\`val subscriptionPeriod:
  SubscriptionPeriod?,    \`\`val freeTrialPeriod:
  SubscriptionPeriod?,    \`\`val gracePeriod:
  SubscriptionPeriod?,    \`\`val introductoryPrice: String?,    \`\`val
  introductoryPriceAmount: String?,    \`\`val introductoryPricePeriod:
  SubscriptionPeriod?)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   subscriptionPeriod --- период подписки;

-   freeTrialPeriod --- пробный период подписки;

-   gracePeriod --- льготный период подписки;

-   introductoryPrice --- отформатированная вступительная цена подписки,
    включая знак валюты, на языке product:language;

-   introductoryPriceAmount --- вступительная цена в минимальных
    единицах валюты (в копейках);

-   introductoryPricePeriod --- расчетный период вступительной цены.

**Структура периода подписки**:

  -----------------------------------------------------------------------
  data  class SubscriptionPeriod(    \`\`val years: Int,    \`\`val
  months: Int,    \`\`val days: Int,)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   years --- количество лет;

-   months --- количество месяцев;

-   days --- количество дней.

Получение списка покупок пользователя

keywords: RuStore разработчики документация RuStoreSDK подключение
платежей покупки список покупокДля получения  списка покупок
пользователя используйте метод getPurchases

  --------------------------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.getPurchases()     \`\`.addOnSuccessListener {
  purchases: List\<Purchase\> -\>        \`\`// Process
  success    \`\`}    \`\`.addOnFailureListener { throwable: Throwable -\>        \`\`//
  Process error    \`\`}
  --------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------

**Структура покупки**:

  -----------------------------------------------------------------------
  data  class Purchase(    \`\`val purchaseId: String?,    \`\`val
  productId: String,    \`\`val productType: ProductType?,    \`\`val
  invoiceId: String?,\`    \`\`val
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки;

-   productId --- идентификатор продукта;

-   productType --- тип продукта;

-   invoiceId --- идентификатор счета;

-   description --- описание покупки;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   purchaseTime --- время покупки (в формате RFC 3339);

-   orderId --- уникальный идентификатор оплаты, сформированный
    приложением (uuid);

-   amountLable --- отформатированная цена покупки, включая валютный
    знак на языке \[language\];

-   amount --- цена в минимальных единицах валюты;

-   currency --- код валюты ISO 4217;

-   quantity --- количество продукта;

-   purchaseState --- состояние покупки:

    -   возможные значения состояния покупки:

        -   CREATED --- создана;

        -   INVOICE_CREATED --- создана, ожидает оплаты;

        -   CONFIRMED --- подтверждена;

        -   PAID --- оплачена;

        -   CANCELLED --- покупка отменена;

        -   CONSUMED --- потребление покупки подтверждено;

        -   CLOSED --- подписка была отменена.

<!-- -->

-   developerPayload --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе;

-   subscriptionToken --- токен для валидации покупки на
    сервере. Подробнее о валидации покупки на сервере.

Структура ответа сервера на запрос покупок:

**Структура продукта**

  -----------------------------------------------------------------------
  data  class PurchasesResponse(    \`\`override val meta:
  RequestMeta?,    \`\`override val code: Int,    \`\`override val
  errorMessage: String?,\`    \`\`override val error
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   meta --- дополнительная информация о запросе;

-   code --- код ответа;

-   errorMessage --- сообщение об ошибке для пользователя;

-   errorDescription --- расшифровка сообщения об ошибке;

-   errors --- список ошибок для запрошенных продуктов;

-   purchases --- список запрошенных покупок.

**Статусная модель (purchaseState):**

Статусная модель покупки подписок (SUBSCRIPTIONS):

Статусная модель покупки непотребляемых продуктов (NON-CONSUMABLES):

Статусная модель покупки потребляемых продуктов (CONSUMABLES):

Получение информации о покупке

keywords: RuStore разработчики документация RuStoreSDK подключение
платежей покупки список покупокДля получения информации о покупке,
используйте метод getPurchaseInfo.

  -----------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.getPurchaseInfo( \"purchaseId\"
  )     \`\`.addOnSuccessListener { purchase: Purchase -\>        \`\`//
  Process success    \`\`}    \`\`.addOnFailureListener { throwable:
  Throwable -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Структура покупки**:

  -----------------------------------------------------------------------
  data  class Purchase(    \`\`val purchaseId: String?,    \`\`val
  productId: String,    \`\`val productType: ProductType?,    \`\`val
  invoiceId: String?,\`    \`\`val
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки;

-   productId --- идентификатор продукта;

-   productType --- тип продукта;

-   invoiceId --- идентификатор счета;

-   description --- описание покупки;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   purchaseTime --- время покупки (в формате RFC 3339);

-   orderId --- уникальный идентификатор оплаты, сформированный
    приложением (uuid);

-   amountLable --- отформатированная цена покупки, включая валютный
    знак на языке \[language\];

-   amount --- цена в минимальных единицах валюты;

-   currency --- код валюты ISO 4217;

-   quantity --- количество продукта;

-   purchaseState --- состояние покупки:

    -   возможные значения состояния покупки:

        -   CREATED --- создана;

        -   INVOICE_CREATED --- создана, ожидает оплаты;

        -   CONFIRMED --- подтверждена;

        -   PAID --- оплачена;

        -   CANCELLED --- покупка отменена;

        -   CONSUMED --- потребление покупки подтверждено;

        -   CLOSED --- подписка была отменена.

<!-- -->

-   developerPayload --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе;

-   subscriptionToken --- токен для валидации покупки на
    сервере. Подробнее о валидации покупки на сервере.

**Статусная модель (purchaseState):**

Статусная модель покупки подписок (SUBSCRIPTIONS):

Статусная модель покупки непотребляемых продуктов (NON-CONSUMABLES):

Статусная модель покупки потребляемых продуктов (CONSUMABLES):

Покупка продукта

keywords: RuStore разработчики документация RuStoreSDK подключение
платежей покупка продуктаДля вызова покупки продукта используйте
метод purchaseProduct:

  ---------------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.purchaseProduct(    \`\`productId =
  productId,    \`\`orderId = UUID.randomUUID().toString(),    \`\`quantity
  =  1 ,    \`\`developerPayload =  null ,).addOnSuccessListener {
  paymentResult: PaymentResult -\>    \`\`when (paymentResult)
  {        \`\`// Process PaymentResult    \`\`}}.addOnFailureListener {
  throwable: Throwable -\>    \`\`// Process error}
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

-   productId: String --- идентификатор продукта;

-   orderId: String --- идентификатор заказа, создаётся на стороне
    AnyApp (опционально. Если не указан, то генерируется автоматически);

-   quantity: Int --- количество продуктов (опционально);

-   developerPayload --- дополнительная информация от разработчика
    AnyApp (опционально).

**Структура результата покупки**:

  -----------------------------------------------------------------------
  ---

  public sealed  interface PaymentResult {         \`\`public data  class
  Success(        \`\`val orderId: String?,        \`\`val purchaseId:
  String,        \`\`val productId: String,        \`\`val invoiceId:
  String,        \`\`val subscriptionToken: String? =  null ,    \`\`) :
  PaymentResult    \`\`public data  class Cancelled(        \`\`val
  purchaseId: String,    \`\`) : PaymentResult    \`\`public data  class
  Failure(        \`\`val purchaseId: String?,        \`\`val invoiceId:
  String?,        \`\`val orderId: String?,        \`\`val quantity:
  Int?,        \`\`val productId: String?,        \`\`val errorCode:
  Int?,    \`\`) : PaymentResult    \`\`public object InvalidPaymentState
  : PaymentResult()}
  -----------------------------------------------------------------------

-   Success -- результат успешного завершения покупки цифрового товара.

-   Failure -- результат ошибки покупки цифрового товара.

-   Cancelled -- результат отмены покупки цифрового товара.

-   InvalidPaymentState -- ошибка работы SDK платежей. Может возникнуть
    в случае некорректного обратного deeplink. \|

Серверная валидация покупки

Если вам необходимо произвести валидацию успешной покупки на сервере, вы
можете использовать subscriptionToken в PurchaseResult, возвращаемой
purchaseProduct при успешной покупке продукта.

SubscriptionToken состоит из invoiceId покупки и userId RuStore,
записанных через точку: «userId».

**Получение subscriptionToken из результата покупки**

  ------------------------------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.purchaseProduct(productId).addOnSuccessListener {
  paymentResult -\>    \`\`if (paymentResult is PaymentResult.Success) {        \`\`val
  subscriptionToken =
  paymentResult.subscriptionToken        \`\`yourApi.validate(subscriptionToken)    \`\`}}
  ------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------

Также можно получить subscriptionToken в сущности Purchase. Сущность
Purchase можно получить используя метод getPurchases():

**Получение subscriptionToken из результата покупки**

  -----------------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.getPurchases().addOnSuccessListener {
  purchases -\>    \`\`purchases.forEach { purchase
  -\>        \`\`yourApi.validate(purchase.subscriptionToken)    \`\`}}
  -----------------------------------------------------------------------------

  -----------------------------------------------------------------------------

Потребление (подтверждение) покупки

keywords: RuStore разработчики документация RuStoreSDK подтверждение
покупки потреблениеRuStore содержит продукты следующих типов:

-   CONSUMABLE --- потребляемый (можно купить много раз, например,
    кристаллы в приложении);

-   NON_CONSUMABLE --- непотребляемый (можно купить один раз, например
    отключение рекламы в приложении);

-   SUBSCRIPTION --- подписка (можно купить на период времени, например
    подписка в стриминговом сервисе).

Потребления требуют только продукты типа CONSUMABLE, если они находятся
в состоянии PurchaseState.PAID.

Для потребления покупки вы можете использовать метод confirmPurchase:

**Вызов метода подтверждения**

  -----------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.confirmPurchase(purchaseId = 
  \"purchaseId\" , developerPayload =  null
  )    \`\`.addOnSuccessListener {        \`\`// Process
  success    \`\`}.addOnFailureListener { throwable: Throwable
  -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки;

-   developerPayload --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе (опционально).

Отмена покупки

keywords: RuStore разработчики документация RuStoreSDK отмена покупкиДля
отмены покупки вы можете использовать метод deletePurchase:

  -----------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.deletePurchase(purchaseId = 
  \"purchaseId\" )    \`\`.addOnSuccessListener {        \`\`// Process
  success    \`\`}.addOnFailureListener { throwable: Throwable
  -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки.

Используйте метод, если у вас есть логика, завязанная на удалении
покупки. Покупка отменяется автоматически через таймаут в 20 минут, либо
при повторной покупке от того же клиента.

Обработка ошибок

Возможные ошибки:

-   RuStoreNotInstalledException() --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException() --- RuStore установленный на устройстве
    пользователя не поддерживает платежи.

-   RuStoreUserUnauthorizedException() --- пользователь не авторизован в
    RuStore.

-   RuStoreApplicationBannedException() --- приложение забанено в
    RuStore.

-   RuStoreUserBannedException() --- пользователь забанен в RuStore.

-   RuStoreException(message: String) --- базовая ошибка RuStore от
    которой наследуются остальные ошибки.

При вызове метода RuStoreBillingClient.purchases.purchaseProduct(),
ошибки обрабатываются автоматически.

Для показа диалога с ошибкой пользователю, вы можете использовать метод
resolveForBilling:

**Обработка ошибок**

  -----------------------------------------------------------------------
  public fun RuStoreException.resolveForBilling(context: Context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Сценарий потребления и отмены покупки

keywords: RuStore разработчики документация RuStoreSDK потребление
отмена подтверждение покупкиОбработка незавершённых платежей должна
производиться разработчиком AnyApp.

Метод отмены покупки (deletePurchase) необходимо использовать, если:

1\. Метод получения списка покупок (getPurchases) вернул покупку со
статусом:

-   PurchaseState.CREATED.

-   PurchaseState.INVOICE_CREATED.

В некоторых случаях, после оплаты через приложение банка (СБП, СберPay,
TinkoffPay и т.д.), при последующем возврате обратно в AnyApp
приложение, статус покупки может быть всё ещё
PurchaseState.INVOICE_CREATED. Это связано с временем обработки покупки
на стороне банка. Поэтому разработчику необходимо правильно связать
логику получения списка покупок с ЖЦ экрана.

Альтернативным вариантом решения данной проблемы является отмена покупки
в статусе PurchaseState.INVOICE_CREATED только через взаимодействие
пользователя с приложением. Например, вынести эту логику в отдельную
кнопку.

2\. Метод покупки (purchaseProduct) вернул PaymentResult.Cancelled.

3\. Метод покупки (purchaseProduct) вернул PaymentResult.Failure.

Метод потребления продукта (confirmPurchase) необходимо использовать,
если метод получения списка покупок (getPurchases) вернул покупку типа
CONSUMABLE и со статусом PurchaseState.PAID.

Логирование событий

keywords: RuStore разработчики документация RuStoreSDK подключение
платежей логирование событийЕсли вы хотите логировать события библиотеки
платежей, то добавьте в вызов RuStoreBillingClientFactory.create()
параметры externalPaymentLoggerFactory и debugLogs (данные параметры
являются необязательными для инициализации):

  -----------------------------------------------------------------------
  val billingClient: RuStoreBillingClient =
  RuStoreBillingClientFactory.create(    \`\`context =
  app,    \`\`consoleApplicationId =  \"111111\" ,    \`\`deeplinkScheme
  =  \"yourappscheme\" ,    \`\`externalPaymentLoggerFactory = { tag -\>
  PaymentLogger(tag) },    \`\`debugLogs =  true)class PaymentLogger(
  private val tag: String) : ExternalPaymentLogger {    \`\`override fun
  d(e: Throwable?, message: () -\> String) {        \`\`Log.d(tag,
  message.invoke(), e)    \`\`}    \`\`override fun e(e: Throwable?,
  message: () -\> String) {        \`\`Log.e(tag, message.invoke(),
  e)    \`\`}    \`\`override fun i(e: Throwable?, message: () -\>
  String) {        \`\`Log.i(tag, message.invoke(),
  e)    \`\`}    \`\`override fun v(e: Throwable?, message: () -\>
  String) {        \`\`Log.v(tag, message.invoke(),
  e)    \`\`}    \`\`override fun w(e: Throwable?, message: () -\>
  String) {        \`\`Log.w(tag, message.invoke(), e)    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Параметры для включения логирования:

-   externalPaymentLoggerFactory --- интерфейс, позволяющий создать
    логгер, который пробрасывает логи библиотеки в приложение-хост

-   debugLogs --- включить логи (логи будут автоматически отключены для
    Release-сборок)

Где PaymentLogger --- это пример реализации логирования событий
платежей.

Смена темы

SDK поддерживает динамическую смены темы через интерфейс провайдера
BillingClientThemeProvider:

  -----------------------------------------------------------------------
  val billingClient: RuStoreBillingClient =
  RuStoreBillingClientFactory.create(    \`\`context =
  app,    \`\`consoleApplicationId =  \"111111\" ,    \`\`deeplinkScheme
  =  \"yourappscheme\" ,    \`\`themeProvider? =
  BillingClientThemeProviderImpl(),)class BillingClientThemeProviderImpl:
  BillingClientThemeProvider {         \`\`override fun provide():
  BillingClientTheme {        \`\`// Тут должна размещаться логика по
  проверке установленной темы        \`\`val darkTheme =
  \....        \`\`if
  (darkTheme){            \`\`BillingClientTheme.Dark        \`\`}  else
  {            \`\`BillingClientTheme.Light        \`\`}    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка ошибок

keywords: RuStore разработчики документация RuStoreSDK подключение
платежей ошибки обработка ошибок**Возможные ошибки**:

-   RuStoreNotInstalledException() --- на устройстве пользователя не
    установлен RuStore;

-   RuStoreOutdatedException() --- RuStore установленный на устройстве
    пользователя не поддерживает платежи;

-   RuStoreUserUnauthorizedException() --- пользователь не авторизован в
    RuStore;

-   RuStoreApplicationBannedException() --- приложение забанено в
    RuStore;

-   RuStoreUserBannedException() --- пользователь забанен в RuStore;

-   RuStoreException(message: String) --- базовая ошибка RuStore от
    которой наследуются остальные ошибки.

При вызове метода RuStoreBillingClient.purchases.purchaseProduct(),
ошибки обрабатываются автоматически.

Для показа диалога с ошибкой пользователю, вы можете использовать метод
resolveForBilling:

  -----------------------------------------------------------------------
  public fun RuStoreException.resolveForBilling(context: Context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Коды ошибок SDK оплаты

Описание возможных ошибок в поле «code» интерфейса «ResponseWithCode»:

  -------------------------------------------------------------------------------
  http code                code                    Описание
  ------------------------ ----------------------- ------------------------------
  200                      0                       Успешный запрос

  400                      40001                   Параметры запроса неверны ---
                                                   не заполнены обязательные
                                                   параметры/неверный формат
                                                   параметров

  400                      40003                   Приложение не найдено

  400                      40004                   Статус приложения «inactive»

  400                      40005                   Продукт не найден

  400                      40006                   Статус продукта «inactive»

  400                      40007                   Недопустимый тип продукта.
                                                   Поддерживаемые типы:
                                                   «consumable»,
                                                   «non-consumable»,
                                                   «subscription»

  400                      40008                   Покупка с таким «order_id» уже
                                                   существует

  400                      40009                   У текущего клиента найдена
                                                   покупка этого продукта со
                                                   статусом «invoice_created».
                                                   Необходимо предложить клиенту
                                                   оплатить/отменить покупку

  400                      40010                   Для типа продукта
                                                   «consumable». У текущего
                                                   клиента найдена покупка этого
                                                   продукта со статусом «paid».
                                                   Сначала требуется подтвердить
                                                   потребление покупки на
                                                   устройстве, а затем можно
                                                   отправлять следующий запрос на
                                                   покупку этого продукта

  400                      40011                   Для типа продукта
                                                   «non-consumable». У текущего
                                                   клиента найдена покупка этого
                                                   продукта со статусом
                                                   «pre_confirmed»/«confirmed».
                                                   Такой продукт уже приобретён.
                                                   Более одного раза продукт не
                                                   продаётся

  400                      40012                   Для типа продукта
                                                   «subscription». У текущего
                                                   клиента найдена покупка этого
                                                   продукта со статусом
                                                   «pre_confirmed»/«confirmed».
                                                   Такой продукт уже приобретён.
                                                   Более одного раза продукт не
                                                   продаётся

  400                      40013                   Для типа продукта
                                                   «subscription». При обращении
                                                   в сервис подписок за списком
                                                   продуктов «GET/products»
                                                   («serviceId», «user_id»)
                                                   данные не были получены

  400                      40014                   Обязательный атрибут(-ы) не
                                                   пришел в запросе

  400                      40015                   Не удалось изменить статус при
                                                   обновлении покупки (переход
                                                   запрещён)

  400                      40016                   При покупке подписки
                                                   непотребляемого продукта
                                                   указано значение quantity \> 1

  400                      40017                   Продукт удалён, новые покупки
                                                   не доступны

  400                      40018                   Нельзя потреблять продукт с
                                                   типом «тип продукта»

  401                      40101                   Невалидный токен

  401                      40102                   Время жизни токена истекло

  403                      40301                   Доступ к запрашиваемому
                                                   ресурсу запрещён
                                                   (неавторизованно)

  403                      40302                   Для текущего токена текущий
                                                   вызов не авторизован (метод
                                                   запрещён)

  403                      40303                   Идентификатор приложения в
                                                   запросе и токен не совпадают

  403                      40305                   Неверный тип токена

  404                      40401                   Не найдено

  408                      40801                   Истекло время ожидания
                                                   уведомления, указанное в
                                                   запросе

  500                      50\*\*\*                Внутренняя ошибка платежного
                                                   сервиса
  -------------------------------------------------------------------------------

Миграция до платежей версии 2.2.0

Общая информация

В версии 2.2.0 платежей были значительно изменены модели результата
покупки продуктов PaymentResult.

Для того, чтобы быстро и без особых проблем перейти на новую версию SDK,
используйте данную инструкцию по миграции.

Обновление зависимости

Для обновления зависимости, поднимите версию у billingclient в блоке
dependencies вашего build.gradle:

**build.gradle**

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:billingclient:2.2.0\" )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Изменение моделей

Получение списка продуктов

Изменилась модель результата получения списка продуктов. Теперь
метод **getProducts()** сразу возвращается список продуктов:

  -----------------------------------------------------------------------
  val productsUseCase: ProductsUseCase =
  billingClient.productsproductsUseCase.getProducts(productIds = listOf(
  \"id1\" ,  \"id2\" ))    \`\`.addOnSuccessListener { products:
  List\<Product\> -\>        \`\`// Process
  success    \`\`}    \`\`.addOnFailureListener { throwable: Throwable
  -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Модель продукта и модели ошибок остались без изменений.

Получение списка покупок

Изменилась модель результата получения списка покупок. Теперь
метод **getPurchases()** сразу возвращается список покупок:

  --------------------------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.getPurchases()     \`\`.addOnSuccessListener {
  purchases: List\<Purchase\> -\>        \`\`// Process
  success    \`\`}    \`\`.addOnFailureListener { throwable: Throwable -\>        \`\`//
  Process error    \`\`}
  --------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------

Модель покупки и модели ошибок остались без изменений.

Получение информации о покупке

Изменилась модель результата получения информации о покупке. Теперь
метод **getPurchaseInfo()** сразу возвращается модель покупки:

  -----------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.getPurchaseInfo( \"purchaseId\"
  )     \`\`.addOnSuccessListener { purchase: Purchase -\>        \`\`//
  Process success    \`\`}    \`\`.addOnFailureListener { throwable:
  Throwable -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Модели ошибок остались без изменений.

Покупка продукта

Изменилась модель результата покупки продукта. Обновленная модель
представлена ниже:

  -----------------------------------------------------------------------
  public sealed  interface PaymentResult {          \`\`public data 
  class Success(        \`\`val orderId: String?,        \`\`val
  purchaseId: String,        \`\`val productId: String,        \`\`val
  invoiceId: String,        \`\`val subscriptionToken: String? =  null
  ,    \`\`) : PaymentResult    \`\`public data  class
  Cancelled(        \`\`val purchaseId: String,    \`\`) :
  PaymentResult    \`\`public data  class Failure(        \`\`val
  purchaseId: String?,        \`\`val invoiceId: String?,        \`\`val
  orderId: String?,        \`\`val quantity: Int?,        \`\`val
  productId: String?,        \`\`val errorCode: Int?,    \`\`) :
  PaymentResult    \`\`public object InvalidPaymentState :
  PaymentResult()}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где:

-   Success --- результат успешного завершения покупки цифрового товара.

-   Failure --- результат ошибки покупки цифрового товара.

-   Cancelled --- результат отмены покупки цифрового товара.

-   InvalidPaymentState --- ошибка работы SDK платежей. Может
    возникнуть, в случае некорректного обратного deeplink.

Обратите особое внимание на сценарии потребления и отмены покупки.

Потребление (подтверждение) покупки

Изменилась модель результата потребления покупки. Теперь потребление
может либо закончиться успехом, либо ошибкой:

  -----------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.confirmPurchase(purchaseId = 
  \"purchaseId\" , developerPayload =  null
  )    \`\`.addOnSuccessListener {        \`\`// Process
  success    \`\`}.addOnFailureListener { throwable: Throwable
  -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отмена покупки

Изменилась модель результата отмены покупки. Теперь отмена покупки может
либо закончиться успехом, либо ошибкой:

  -----------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.deletePurchase(purchaseId = 
  \"purchaseId\" )    \`\`.addOnSuccessListener {        \`\`// Process
  success    \`\`}.addOnFailureListener { throwable: Throwable
  -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Сценарий потребления и отмены покупки

В связи с тем, что изменилась модель результата покупки продукта,
изменилась и логика потребления и отмены покупки.

**Метод отмены покупки (deletePurchase) необходимо использовать, если:**

-   Метод получения списка покупок (getPurchases) вернул покупку со
    статусами PurchaseState.CREATED или PurchaseState.INVOICE_CREATED.

В некоторых случаях, после оплаты через приложение банка (СБП, СберPay,
TinkoffPay и т. д.), при последующем возврате обратно в AnyApp
приложение, статус покупки может быть всё ещё
PurchaseState.INVOICE_CREATED. Это связано с временем обработки покупки
на стороне банка. Поэтому разработчику необходимо правильно связать
логику получения списка покупок с жизненного цикла экрана.
Альтернативным вариантом решения данной проблемы является отмена покупки
в статусе PurchaseState.INVOICE_CREATED только через взаимодействие
пользователя с приложением. Например, вынести эту логику в отдельную
кнопку.

-   Метод покупки (purchaseProduct) вернул PaymentResult.Cancelled.

-   Метод покупки (purchaseProduct) вернул PaymentResult.Failure.

**Метод потребления продукта (confirmPurchase) необходимо использовать,
если:**

-   Метод получения списка покупок (getPurchases) вернул покупку типа
    CONSUMABLE и со статусом PurchaseState.PAID.

FAQ по проблемам с платежами

**Q: Как исправить ошибку «Application is not verified yet»?**

А: Ошибка возникает в следующих случаях:

-   приложение не прошло модерацию в RuStore Консоли;

-   тестируемая разработчиком apk не совпадает с apk, загруженной в
    RuStore Консоли.

Второй пункт нужно перепроверить следующим образом:

-   applicationId, указанный в build.gradle, должен совпадать с
    applicationId apk-файла, который вы публиковали в RuStore Консоли.

-   подпись keystore должна совпадать с подписью, которой было подписано
    приложение, опубликованное в RuStore Консоли. Убедитесь, что
    используемый buildType (например, debug) использует такую же
    подпись, что и опубликованное приложение (например, release).

Для работы платежей нужно полностью опубликовать приложение, модерации
недостаточно. В скором времени логика будет переработана так, чтобы для
тестирования платежей достаточно было прохождения модерации.

**Q: Как исправить ошибку «Созданная ранее покупка продукта "..." в
количестве ... на сумму ... рублей оплачивается в другой сессии».**

A: Ошибка возникает при попытке купить продукт, покупка которого была
прекращена и не переведена в конечное состояние с помощью методов
deletePurchase и confirmPurchase.

Зачастую это происходит, когда процесс был прерван, а удаление или
потребление не было вызвано в purchaseProduct из-за некорректного
завершения процесса.

Для таких случаев необходимо произвести отмену или потребление
«подвисших» покупок при старте приложения или открытии магазина.

Ниже представлен пример реализации обработки списка покупок. Запускайте
данный код при старте приложения или при открытии экрана магазина:

  -------------------------------------------------------------------------------------------------------------------------------------------------
  val purchasesUseCase = billingClient.purchasesval purchases = purchasesUseCase.getPurchases().await().purchases.orEmpty()purchases.forEach {
  purchase -\>    val purchaseId = purchase.purchaseIdif(purchaseId != null) {        when (purchase.purchaseState)
  {                PurchaseState.CREATED, PurchaseState.INVOICE_CREATED -\>
  {                                        purchasesUseCase.deletePurchase(purchaseId).await()                }                PurchaseState.PAID
  -\> {                    purchasesUseCase.confirmPurchase(purchaseId).await()                }else-\> Unit        }    }}
  -------------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------------

Производить отмену или потребление покупки нужно также и в
purchaseProduct().

Обработку покупок в purchaseProduct(), которая переводила бы покупку в
финальное состояние, подтверждая или отменяя её, можно реализовать так:

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  privatefun purchaseProduct(product: Product) {    val purchasesUseCase = billingClient.purchases    purchasesUseCase.purchaseProduct(product.productId)        .addOnSuccessListener { paymentResult -\>            handlePaymentResult(paymentResult, product)        }        .addOnFailureListener {// Handle error        }}privatefun handlePaymentResult(paymentResult: PaymentResult,
  product: Product) {    when (paymentResult) {        is PaymentResult.InvalidPurchase -\> {            paymentResult.purchaseId?.let { deletePurchase(it) }        }        is PaymentResult.PurchaseResult -\> {            when (paymentResult.finishCode) {                PaymentFinishCode.SUCCESSFUL_PAYMENT -\> {if(product.productType == ProductType.CONSUMABLE)
  {                        confirmPurchase(paymentResult.purchaseId)                    }                }                PaymentFinishCode.CLOSED_BY_USER,                PaymentFinishCode.UNHANDLED_FORM_ERROR,                PaymentFinishCode.PAYMENT_TIMEOUT,                PaymentFinishCode.DECLINED_BY_SERVER,                PaymentFinishCode.RESULT_UNKNOWN,                -\>
  {                    deletePurchase(paymentResult.purchaseId)                }            }        }else-\> Unit    }}
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Как потреблять и отменять покупки описано в разделе «Сценарий
потребления и отмены покупки».

Ознакомиться со статусной моделью покупок можно в разделе «Получение
списка покупок».

**Q: Как провести серверную валидацию покупки?**

A: Сначала необходимо получить subscriptionToken, который является
уникальным идентификатором покупки пользователя, процесс описан в статье
«Серверная валидация покупки».

Далее, необходимо отправить subscriptionToken на ваш backend, где можно
запросить информацию о покупке, используя «Метод получения платежа по
его subscription token».

**Q: Как исправить 404 при вызове confirmPurchase или deletePurchase?**

A: Убедитесь, что передаете purchaseId в параметр методов
confirmPurchase и deletePurchase:

  ------------------------------------------------------------------------------
  val purchasesUseCase = billingClient.purchasesval purchases =
  purchasesUseCase.getPurchases().await().purchases.orEmpty()purchases.forEach {
  purchase -\>    val purchaseId = purchase.purchaseIdif(purchaseId != null)
  {        when (purchase.purchaseState) {                PurchaseState.CREATED,
  PurchaseState.INVOICE_CREATED -\> {//
  purchasesUseCase.deletePurchase(purchaseId = purchase.productId).await()
  WRONG                    purchasesUseCase.deletePurchase(purchaseId =
  purchaseId).await() //
  CORRECT                }                PurchaseState.PAID -\> {//
  purchasesUseCase.confirmPurchase(purchaseId = purchase.productId).await()
  WRONG                    purchasesUseCase.confirmPurchase(purchaseId =
  purchaseId).await() // CORRECT                }else-\> Unit        }    }}
  ------------------------------------------------------------------------------

  ------------------------------------------------------------------------------

**Q: Как исправить ошибку «Метод недоступен»**

A: consoleApplicationId должен совпадать с кодом приложения из RuStore
Консоли (пример: https://console.rustore.ru/apps/111111).

**Q: Как отменить подписку?**

A: Метода на отмену подписки нет, можно только отменить автопродление в
приложении RuStore.

Экран с подписками можно открыть по deeplink:

  -----------------------------------------------------------------------
  startActivity(Intent(Intent.ACTION_VIEW,
  Uri.parse("rustore://profile/subscriptions")))
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Ниже приведена страница со списком
deeplinks: https://help.rustore.ru/rustore/for_developers/developer-documentation/RuStore_deeplinks

**Q: Можно ли публиковать в Google Play, Huawei Store приложение с
RuStore SDK?**

A: Так как разработчики подписывают приложение в Google Play подписью от
Google, а в RuStore подписывают своей, то подписи всегда не будут
совпадать и RuStore SDK внутри Google Play (или другого магазина
приложений) работать не будет. Это значит, что для корректной
работы RuStore SDK пользователю нужно будет скачать приложение из
RuStore и оплатить подписку в нём.

**Q: Какой packageName у RuStore?**

A: ru.vk.store.

**Q: Как определить из какого магазина установлено приложение?**

A: Это можно сделать следующим образом:

  -----------------------------------------------------------------------
  val installerPackage =
  packageManager.getInstallerPackageName(applicationInfo.packageName)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

будет возвращаться ru.vk.store, но функция нестабильна:

-   Этот способ будет работать только для приложений, изначально
    установленных из RuStore. Если изначально приложение было
    установлено из Google Play или иными способами, то источником будет
    стандартный установщик пакетов.

-   Если для установки был использован режим совместимости (как на
    некоторых моделях Xiaomi), то источником установки будет системный
    установщик Xiaomi.

-   Если удалить RuStore, то источник установки будет полностью удалён.
    Переустановка не вернёт источник установки.

Рекомендуем делать отдельный buildFlavor для RuStore.

**Q: Почему падает timeout в методах оплаты?
(PayLibBackendFailure\$TimeoutError)**

A: Оплата RuStore SDK недоступна вне России. Также может мешать
включенный VPN.

**Q: Как тестировать платежи? На реальных картах?**

A: Тестировать можно только на реальных картах. Песочница для
тестирования находится в разработке.

**Q: Есть ли поддержка Java?**

A: Да, есть. У Kotlin есть обратная совместимость с Java, но с
некоторыми особенностями.

К примеру, возьмем сущность object из Kotlin, являющейся аналогом static
class в Java:

  -----------------------------------------------------------------------
  RuStoreReviewManagerFactory.create(context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Так будет выглядеть обращение к object RuStoreReviewManagerFactory в
Java:

  -----------------------------------------------------------------------
  RuStoreReviewManagerFactory.INSTANCE.create(getContext());
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подробнее об использовании Kotlin кода в Java классах можно узнать в
статье «Calling Kotlin from Java».

История изменений RuStore SDK платежей

Версия SDK 3.1.0 от 01.12.2023

-   Добавлен функционал песочницы платежей (sandbox)

-   Внутренние обновление SDK

Версия SDK 3.0.0 от 26.10.2023

-   Обновлён функционал по новой цветовой гамме тёмной темы;

-   Багфиксы.

Версия SDK 2.2.0 от 24.08.2023

-   Добавлен функционал динамической смены темы (светлая и тёмная);

-   Произведены работы по стабилизации работы библиотеки;

-   Исправлена проблема с восстановлением состояния после оплаты по
    deeplink.

Версия SDK 2.1.2 от 02.08.2023

-   Исправлены ошибки при отсутствии приложения RuStore на устройстве

Версия SDK 2.1.1 от 25.07.2023

-   Обновления безопасности

Версия SDK 2.1.0 от 09.06.2023

-   Изменены модели ответов:

    -   получения списка продуктов

    -   получения списка покупок

    -   покупки товара

    -   потребления покупки

    -   отмены покупки

<!-- -->

-   Доработан внешний вид диалога оплаты.

Версия SDK 1.1.1 от 03.05.2023

-   Исправлена работа метода *await()* для Task API

Версия SDK 1.1.0 от 19.04.2023

-   Оплата с помощью TinkoffPay.

-   Возможность сохранения карты при оплате.

-   Доработан внешний вид и поведение диалога оплаты.

-   Убраны лишние зависимости и uses permissions.

-   Модель PurchaseResult дополнена новым полем идентификатора счёта
    "invoiceId".

Версия SDK 1.0.0 от 11.04.2023

-   Переход от синглтона на создание инстанса:
    RuStoreBillingClient.init() заменен на
    RuStoreBillingClientFactory.create().

-   Методы работы с синглтоном (init, products, purchases, getSingleton)
    помечены как deprecated и будут удалены в следующих версиях.

-   Подробнее об изменениях в руководстве о миграции: \[Kotlin\]
    Миграция до платежей версии 1.0.0 / \[Java\] Миграция до платежей
    версии 1.0.0

-   Метод checkPurchasesAvailability() стал статичным - вы можете
    проверить доступность платежей без создания инстанса
    RuStoreBillingClient.

Версия SDK 0.1.8 от 13.03.2023

-   Добавлен метод
    RuStoreBillingClient.purchases.getPurchaseInfo("purchaseId"),
    возвращающий информацию о покупке.

-   Исправлена уязвимость "Intent Redirection vulnerability", не
    позволяющая опубликовать приложение в Google Play.

Версия SDK 0.1.7 от 10.02.2023

-   Внутреннее обновление SDK.

Версия SDK 0.1.6 от 03.02.2023

-   Добавлено поле subscriptionToken в сущности Purchase для серверной
    валидации покупки.

Версия SDK 0.1.5 от 30.01.2023

-   Переход на сертификаты Минцифры.

-   Исправлено отображение/ кнопки оплаты через СБП при быстром переходе
    в оферту и обратно.

-   Поле traceId: String у интерфейса ResponseWithCode было заменено на
    поле meta: RequestMeta, содержащее внутри traceId.

Версия SDK 0.1.4 от 20.01.2023

-   Добавлены ссылки на оферту для СБП и оплаты со счеты мобильного
    телефона.

-   Добавлен дополнительный дисклеймер для пользователя, если
    подтверждение оплаты занимает больше 15 секунд.

-   Исправлены ошибки при работе с OTP-кодами и отправкой СМС.

-   Исправлена генерация поля orderId для счета на стороне RuStore, если
    orderId передается в purchaseProduct() как null.

-   Добавлено отображение блокирующей ошибки, если приложение банка не
    поддерживает deeplink СБП.

-   Добавлен PurchaseResult.subscriptionToken, позволяющий произвести
    валидацию покупки на сервере.

Версия SDK 0.1.3 от 28.12.2022

-   Добавлена оплата по номеру телефона в purchaseProduct().

-   В инициализации параметр externalPaymentLogger был заменен на
    externalPayemtnLoggerFactory --- это фабрика, в которой необходимо
    создать реализацию ExternalPaymentLogger (см. раздел Логирование).

Версия SDK 0.1.2 от 20.12.2022

-   Добавлена система быстрых платежей (СБП).

-   Добавлен параметр deeplinkSсheme в методе init.

-   Удалён параметр deeplinkPrefix в методе init.

-   Исправлена ошибка потери данных в форме ввода данных карты после
    сворачивания приложения.

Версия SDK 0.1.1 от 25.11.2022

-   Удалён параметр "language" у методов:

    -   Получение списка продуктов --- "getProducts".

    -   Получение списка покупок --- "getPurchases".

    -   Потребление продукта --- "confirmPurchase".

    -   Отмена покупки --- "deletePurchase".

<!-- -->

-   Добавлено поле RuStoreBillingClient.isInitialized, возвращающее
    статус инициализации библиотеки.

Версия SDK 0.1.0 от 11.11.2022

-   Изменились параметры в init.

-   Добавлена проверка доступности работы с платежами --- метод
    "checkPurchasesAvailability".

-   Во всех методах параметр "language" стал опциональным.

-   Suspend методы заменены на task API в методах:

    -   Получение списка продуктов --- "getProducts".

    -   Получение списка покупок --- "getPurchases".

    -   Покупка продукта --- "purchaseProduct".

    -   Потребление продукта --- "confirmPurchase".

    -   Отмена покупки --- "deletePurchase".

<!-- -->

-   В методе покупки продукта "purchaseProduct" удалён параметр
    "context".

-   Удалён метод "resultObserver", теперь результат покупки возвращается
    "purchaseProduct".

-   В методе "resolveForBilling" удалён параметр "onFail".

Версии SDK 0.0.9 от 27.10.2022

-   Добавлены необязательные параметры "ExternalPaymentLogger" и
    "debugLogs" в функцию инициализации init.

Миграция SDK платежей c версии 1.x.x до версии 3.х.х

В версии 3.0.0 платежей были значительно изменены модели результата
покупки продуктов PaymentResult.

Для того, чтобы быстро и без особых проблем перейти на новую версию SDK,
используйте данную инструкцию по миграции.

Обновление зависимости

Для обновления зависимости, поднимите версию у billingclient в блоке
dependencies вашего build.gradle:

**build.gradle**

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:billingclient:3.1.0\" )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Изменение моделей

Получение списка продуктов

Изменилась модель результата получения списка продуктов. Теперь
метод **getProducts()** сразу возвращается список продуктов:

**Вызов метода getProducts**

  -----------------------------------------------------------------------
  val productsUseCase: ProductsUseCase =
  billingClient.productsproductsUseCase.getProducts(productIds = listOf(
  \"id1\" ,  \"id2\" ))    \`\`.addOnSuccessListener { products:
  List\<Product\> -\>        \`\`// Process
  success    \`\`}    \`\`.addOnFailureListener { throwable: Throwable
  -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Модель продукта и модели ошибок остались без изменений.

Получение списка покупок

Изменилась модель результата получения списка покупок. Теперь
метод **getPurchases()** сразу возвращается список покупок:

**Вызов метода получения списка покупок пользователя**

  --------------------------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.getPurchases()     \`\`.addOnSuccessListener {
  purchases: List\<Purchase\> -\>        \`\`// Process
  success    \`\`}    \`\`.addOnFailureListener { throwable: Throwable -\>        \`\`//
  Process error    \`\`}
  --------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------

Модель покупки и модели ошибок остались без изменений.

Получение информации о покупке

Изменилась модель результата получения информации о покупке. Теперь
метод **getPurchaseInfo()** сразу возвращается модель покупки:

**Вызов метода получения списка покупок пользователя**

  -----------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.getPurchaseInfo( \"purchaseId\"
  )     \`\`.addOnSuccessListener { purchase: Purchase -\>        \`\`//
  Process success    \`\`}    \`\`.addOnFailureListener { throwable:
  Throwable -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Модели ошибок остались без изменений.

Покупка продукта

Изменилась модель результата покупки продукта. Обновленная модель
представлена ниже:

**Структура результата покупки**

  -----------------------------------------------------------------------
  public sealed  interface PaymentResult {         \`\`public data  class
  Success(        \`\`val orderId: String?,        \`\`val purchaseId:
  String,        \`\`val productId: String,        \`\`val invoiceId:
  String,        \`\`val subscriptionToken: String? =  null ,    \`\`) :
  PaymentResult    \`\`public data  class Cancelled(        \`\`val
  purchaseId: String,    \`\`) : PaymentResult    \`\`public data  class
  Failure(        \`\`val purchaseId: String?,        \`\`val invoiceId:
  String?,        \`\`val orderId: String?,        \`\`val quantity:
  Int?,        \`\`val productId: String?,        \`\`val errorCode:
  Int?,    \`\`) : PaymentResult    \`\`public object InvalidPaymentState
  : PaymentResult()}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где:

-   Success - результат успешного завершения покупки цифрового товара.

-   Failure - результат ошибки покупки цифрового товара.

-   Cancelled - результат отмены покупки цифрового товара.

-   InvalidPaymentState - ошибка работы SDK платежей. Может возникнуть в
    случае некорректного обратного deeplink.

Особое внимание нужно обратить на сценарии потребления и отмены покупки!

Потребление (подтверждение) покупки

Изменилась модель результата потребления покупки. Теперь потребление
может либо закончиться успехом, либо ошибкой:

**Вызов метода подтверждения**

  -----------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.confirmPurchase(purchaseId = 
  \"purchaseId\" , developerPayload =  null
  )    \`\`.addOnSuccessListener {        \`\`// Process
  success    \`\`}.addOnFailureListener { throwable: Throwable
  -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отмена покупки

Изменилась модель результата отмены покупки. Теперь отмена покупки может
либо закончиться успехом, либо ошибкой:

**Вызов метода отмены покупки**

  -----------------------------------------------------------------------
  val purchasesUseCase: PurchasesUseCase =
  billingClient.purchasespurchasesUseCase.deletePurchase(purchaseId = 
  \"purchaseId\" )    \`\`.addOnSuccessListener {        \`\`// Process
  success    \`\`}.addOnFailureListener { throwable: Throwable
  -\>        \`\`// Process error    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Сценарий потребления и отмены покупки

В связи с тем, что изменилась модель результата покупки продукта,
изменилась и логика потребления и отмены покупки.

Метод отмены покупки (deletePurchase) необходимо использовать, если:

-   Метод получения списка покупок (getPurchases) вернул покупку со
    статусами PurchaseState.CREATED или PurchaseState.INVOICE_CREATED.

<!-- -->

-   В некоторых случаях, после оплаты через приложение банка (СБП,
    СберPay, TinkoffPay и т.д.), при последующем возврате обратно в
    AnyApp приложение, статус покупки может быть всё ещё
    PurchaseState.INVOICE_CREATED. Это связано с временем обработки
    покупки на стороне банка. Поэтому разработчику необходимо правильно
    связать логику получения списка покупок с ЖЦ экрана. Альтернативным
    вариантом решения данной проблемы является отмена покупки в статусе
    PurchaseState.INVOICE_CREATED только через взаимодействие
    пользователя с приложением. Например, вынести эту логику в отдельную
    кнопку.

-

<!-- -->

-   Метод покупки (purchaseProduct) вернул PaymentResult.Cancelled.

-   Метод покупки (purchaseProduct) вернул PaymentResult.Failure.

Метод потребления продукта (confirmPurchase) необходимо использовать,
если:

-   Метод получения списка покупок (getPurchases) вернул покупку типа
    CONSUMABLE и со статусом PurchaseState.PAID.

Java

Быстрый старт

Пример реализации

Ознакомьтесь с приложением-примером (на Kotlin), чтобы узнать, как
правильно интегрировать платежи.

Условия работы платежей

Для работы проведения платежей необходимо соблюдение всех условий:

-   На устройстве пользователя установлено приложение RuStore.

-   Пользователь авторизован в приложении RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения включена возможность покупок в системе RuStore
    Консоль.

Сервис имеет некоторые ограничения на работу за пределами РФ.

Добавление репозитория

Подключите репозиторий:

  ---------------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url 
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"    \`\`}}
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

Подключение зависимости

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation 
  \'ru.rustore.sdk:billingclient:3.1.0\'}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Чтобы узнать подробности подключения зависимости, ознакомьтесь
с информацией.

Инициализация библиотеки в проекте

Перед вызовом методов библиотеки необходимо выполнить ее инициализацию.

Создайте RuStoreBillingClient, используя
RuStoreBillingClientFactory.create():

**Создание RuStoreBillingClient**

  ----------------------------------------------------------------------------------------------------------------------------
  final Context context = getContext();final String consoleApplicationId =  \"111111\" ;final String deeplinkScheme = 
  \"yourappscheme\" ; // Опциональные параметрыfinal BillingClientThemeProvider themeProvider =  null ;final boolean debugLogs
  =  false ;final ExternalPaymentLoggerFactory externalPaymentLoggerFactory =  null ;  \`\`RuStoreBillingClient billingClient
  = RuStoreBillingClientFactory.INSTANCE.create(    \`\`context,    \`\`consoleApplicationId,    \`\`deeplinkScheme,    \`\`//
  Опциональные параметры    \`\`themeProvider,    \`\`debugLogs,    \`\`externalPaymentLoggerFactory \`\`);
  ----------------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------------

-   context --- контекст Android. Может быть любым, в реализации
    используется applicationContext.

-   consoleApplicationId --- код приложения из консоли разработчика
    RuStore (пример: https://console.rustore.ru/apps/111111).

-   deeplinkScheme --- cхема deeplink, необходимая для возврата в ваше
    приложение после оплаты через стороннее приложение (например,
    SberPay или СБП). SDK генерирует свой хост к данной схеме.

-   themeProvider --- интерфейс, который предоставляет тему
    BillingClientTheme. Возможны 2 реализации темы BillingClientTheme:
    светлая (Light) и тёмная (Dark). Данный интерфейс необязательный, по
    умолчанию применяться светлая тема.

-   externalPaymentLoggerFactory --- интерфейс, который предоставляет
    доступ ко внешнему логгеру. Логирование событий

-   debugLogs --- флаг регулирующий логирование (логи будут
    автоматически отключены для Release-сборок). Логирование событий

**Важно** ApplicationId, указанный в build.gradle, должен совпадать с
applicationId apk-файла, который вы публиковали в системе RuStore
Консоль.

Схема deeplink, передаваемая в deeplinkScheme, должна совпадать со
схемой, указанной в AndroidManifest.xml в разделе Обработка deeplink.

Подпись keystore должна совпадать с подписью, которой было подписано
приложение, опубликованное в системе RuStore Консоль. Убедитесь, что
используемый buildType (пр. debug) использует такую же подпись, что и
опубликованное приложение.

Библиотека поддерживает логирование событий, которое подключается
отдельно при инициализации библиотеки.

Чтобы узнать подробности инициализации библиотеки, ознакомьтесь
с информацией.

Обработка deeplink

Для возвращения в ваше приложение после оплаты через сторонние
приложения (СБП, SberPay и другие) необходимо правильно реализовать
обработку deeplink. Укажите в AndroidManifest.xml intent-filter с scheme
вашего проекта:

  ----------------------------------------------------------------------------
  \<activity    \`\`android:name= \".YourBillingActivity\"
  \>    \`\`\<intent-filter\>        \`\`\<action android:name=
  \"android.intent.action.MAIN\" /\>        \`\`\<category android:name=
  \"android.intent.category.LAUNCHER\"
  /\>    \`\`\</intent-filter\>    \`\`\<intent-filter\>        \`\`\<action
  android:name= \"android.intent.action.VIEW\" /\>        \`\`\<category
  android:name= \"android.intent.category.DEFAULT\" /\>        \`\`\<category
  android:name= \"android.intent.category.BROWSABLE\" /\>        \`\`\<data
  android:scheme= \"yourappscheme\" /\>    \`\`\</intent-filter\>\</activity\>
  ----------------------------------------------------------------------------

  ----------------------------------------------------------------------------

где «yourappscheme» --- схема вашего deeplink, может быть изменена на
другую. Эта схема должна совпадать с параметром deeplinkScheme,
передаваемым в init().

Также для успешного возврата в приложение нужно добавить следующий код:

  ------------------------------------------------------------------------------------------------------------------
  public class YourBillingActivityextends AppCompatActivity {        \`\`// Previously created with
  RuStoreBillingClientFactory.create();    \`\`RuStoreBillingClient billingClient =
  YourDependencyInjection.getBillingClient();        \`\`@Override    \`\`public void onCreate( \@Nullable Bundle
  savedInstanceState) {        \`\`super .onCreate(savedInstanceState);        \`\`if (savedInstanceState ==  null )
  {            \`\`billingClient.onNewIntent(getIntent());        \`\`}    \`\`}    \`\`@Override    \`\`protected
  void onNewIntent(Intent intent) {        \`\`super
  .onNewIntent(intent);        \`\`billingClient.onNewIntent(intent);    \`\`} }
  ------------------------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------------------------------

Чтобы узнать подробности обработки deeplink, ознакомьтесь с информацией.

Получение списка покупок

RuStore Billing SDK требует правильно обрабатывать состояния покупки,
чтобы предоставить наилучший сценарий использования. Так, купленные
потребляемые товары необходимо потребить, а незаконченные покупки ---
отменить, чтобы иметь возможность заново начать новую.

  ------------------------------------------------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.getPurchases().addOnSuccessListener(purchases -\> {    \`\`for
  (Purchase purchase: purchases) {        \`\`if (purchase.getPurchaseId() !=  null ) {            \`\`if
  (purchase.getPurchaseState() == PurchaseState.CREATED \|\| purchase.getPurchaseState() ==
  PurchaseState.INVOICE_CREATED) {              
   \`\`purchasesUseCase.deletePurchase(purchase.getPurchaseId());            \`\`}  else if
  (purchase.getPurchaseState() == PurchaseState.PAID) {              
   \`\`purchasesUseCase.confirmPurchase(purchase.getPurchaseId());            \`\`}        \`\`}    \`\`}});
  ------------------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------------------------

В некоторых случаях, после оплаты через приложение банка (СБП, СберPay,
TinkoffPay и т.д.), при последующем возврате обратно в AnyApp
приложение, статус покупки может быть всё ещё
PurchaseState.INVOICE_CREATED. Это связано с временем обработки покупки
на стороне банка. Поэтому разработчику необходимо правильно связать
логику получения списка покупок с ЖЦ экрана.

Альтернативным вариантом решения данной проблемы является отмена покупки
в статусе PurchaseState.INVOICE_CREATED только через взаимодействие
пользователя с приложением. Например, вынести эту логику в отдельную
кнопку.

Чтобы узнать подробности об обработке статусов покупок, ознакомьтесь
с информацией.

Чтобы узнать подробности получения списка покупок, ознакомьтесь
с информацией.

Покупка продукта

Обработать результат покупки необходимо следующим образом:

  --------------------------------------------------------------------------------------------------------------------------------------------------
  private void purchaseProduct(Product product) {    \`\`PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();    \`\`purchasesUseCase.purchaseProduct(product.getProductId())            \`\`.addOnSuccessListener(paymentResult
  -\> handlePaymentResult(paymentResult, product))            \`\`.addOnFailureListener(throwable -\> {  /\* Handle error \*/ });    \`\`}private
  void handlePaymentResult(PaymentResult paymentResult, Product product) {    \`\`PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();    \`\`if (paymentResult  instanceof PaymentResult.Cancelled) {        \`\`String purchaseId =
  ((PaymentResult.Cancelled) paymentResult).getPurchaseId();        \`\`purchasesUseCase.deletePurchase(purchaseId);    \`\`}  else if
  (paymentResult  instanceof PaymentResult.Success) {        \`\`PaymentResult.Success purchaseResult = ((PaymentResult.Success)
  paymentResult);        \`\`purchasesUseCase.confirmPurchase(purchaseResult.getPurchaseId());    \`\`}  else if (paymentResult  instanceof
  PaymentResult.Failure) {        \`\`String purchaseId = ((PaymentResult.Failure) paymentResult).getPurchaseId();        \`\`if (purchaseId != 
  null ) {            \`\`purchasesUseCase.deletePurchase(purchaseId);        \`\`}    \`\`}}
  --------------------------------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------------------------------

Чтобы узнать подробности о покупке продукта, ознакомьтесь с информацией.

Чтобы узнать подробности о обработке статусов покупок, ознакомьтесь
с информацией.

Общая информация

Вы можете ознакомиться с разделом для быстрой интеграции платежей в
приложение.

**Пример реализации**

Ознакомьтесь с приложением-примером чтобы узнать, как правильно
интегрировать платежи.

Методы SDK возвращают Task, асинхронную задачу, которая возвращает
ошибку или значение в соответствующих callback. Имейте это ввиду при
вызове callback для **синхронного** получения результата, их надо
использовать из фонового потока.

**Условия работы платежей**

Для работы проведения платежей необходимо соблюдение всех условий:

-   На устройстве пользователя установлено приложение RuStore.

-   Пользователь авторизован в приложении RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения включена возможность покупок в системе RuStore
    Консоль.

Сервис имеет некоторые ограничения на работу за пределами РФ.

Добавление репозитория

Подключите репозиторий:

  ---------------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url 
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"    \`\`}}
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

Подключение зависимости

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

  -----------------------------------------------------------------------
  ---

  dependencies {    \`\`implementation 
  \'ru.rustore.sdk:billingclient:3.1.0\'}
  -----------------------------------------------------------------------

Инициализация

Перед вызовом методов библиотеки необходимо выполнить ее инициализацию.

Создайте RuStoreBillingClient, используя
RuStoreBillingClientFactory.create():

**Создание RuStoreBillingClient**

  ----------------------------------------------------------------------------------------------------------------------------
  final Context context = getContext();final String consoleApplicationId =  \"111111\" ;final String deeplinkScheme = 
  \"yourappscheme\" ;// Опциональные параметрыfinal BillingClientThemeProvider themeProvider =  null ;final boolean debugLogs
  =  false ;final ExternalPaymentLoggerFactory externalPaymentLoggerFactory =  null ; \`\`RuStoreBillingClient billingClient =
  RuStoreBillingClientFactory.INSTANCE.create(    \`\`context,    \`\`consoleApplicationId,    \`\`deeplinkScheme,    \`\`//
  Опциональные параметры    \`\`themeProvider,    \`\`debugLogs,    \`\`externalPaymentLoggerFactory \`\`);
  ----------------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------------

-   context --- контекст Android. Может быть любым, в реализации
    используется applicationContext.

-   consoleApplicationId --- код приложения из консоли разработчика
    RuStore (пример: https://console.rustore.ru/apps/111111).

-   deeplinkScheme --- cхема deeplink, необходимая для возврата в ваше
    приложение после оплаты через стороннее приложение (например,
    SberPay или СБП). SDK генерирует свой хост к данной схеме.

-   themeProvider --- интерфейс, который предоставляет тему
    BillingClientTheme. Возможны 2 реализации темы BillingClientTheme:
    светлая (Light) и тёмная (Dark). Данный интерфейс необязательный, по
    умолчанию применяться светлая тема.

-   externalPaymentLoggerFactory --- интерфейс, который предоставляет
    доступ ко внешнему логгеру. Логирование событий

-   debugLogs --- флаг регулирующий логирование (логи будут
    автоматически отключены для Release-сборок). Логирование событий

**Важно** ApplicationId, указанный в build.gradle, должен совпадать с
applicationId apk-файла, который вы публиковали в системе RuStore
Консоль.

Схема deeplink, передаваемая в deeplinkScheme, должна совпадать со
схемой, указанной в AndroidManifest.xml в разделе Обработка deeplink.

Подпись keystore должна совпадать с подписью, которой было подписано
приложение, опубликованное в системе RuStore Консоль. Убедитесь, что
используемый buildType (пр. debug) использует такую же подпись, что и
опубликованное приложение (пр. release).

Обработка deeplink

Для корректной работы оплаты через сторонние приложения (СБП, SberPay и
другие) необходимо правильно реализовать обработку deeplink. Укажите в
AndroidManifest.xml intent-filter с scheme вашего проекта:

  -----------------------------------------------------------------------
  \< activity    \`\`android:name = \".YourBillingActivity\" \>    \`\`\<
  intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.MAIN\" /\>        \`\`\< category android:name
  = \"android.intent.category.LAUNCHER\" /\>    \`\`\</ intent-filter
  \>    \`\`\< intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.VIEW\" /\>        \`\`\< category android:name
  = \"android.intent.category.DEFAULT\" /\>        \`\`\< category
  android:name = \"android.intent.category.BROWSABLE\" /\>        \`\`\<
  data android:scheme = \"yourappscheme\" /\>    \`\`\</ intent-filter
  \>\</ activity \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где «yourappscheme» --- схема вашего deeplink, может быть изменена на
другую.

Эта схема должна совпадать с параметром deeplinkScheme, передаваемым в
init().

Далее в Activity, в которую необходимо вернуться после совершения оплаты
(ваша страница магазина), нужно добавить:

  --------------------------------------------------------------------------------------------------------------------------------------------------------------
  \<br\>\`public\` \`class\` \`YourBillingActivityextends AppCompatActivity {\`\<br\>\`    \`\<br\>\`    // Previously created with
  RuStoreBillingClientFactory.create();\<br\>    RuStoreBillingClient billingClient =
  YourDependencyInjection.getBillingClient();\`\<br\>\`    \`\<br\>\`    @Override\<br\>    public\` \`void\` \`onCreate(\` \`@Nullable\` \`Bundle
  savedInstanceState) {\`\<br\>\`        super.onCreate(savedInstanceState);\<br\>        if\` \`(savedInstanceState == \` \`null\` \`)
  {\`\<br\>\`            billingClient.onNewIntent(getIntent());\<br\>        }\`\<br\>\`    }\<br\>    @Override\`\<br\>\`    protectedvoidonNewIntent(Intent
  intent) {\<br\>        super\` \`.onNewIntent(intent);\`\<br\>\`        billingClient.onNewIntent(intent);\<br\>    \`} }
  --------------------------------------------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------------------------------------------

Для восстановления состояния вашего приложения при возврате с deeplink
необходимо добавить в AndroidManifest.xml:

android:launchMode="singleTask"

  -----------------------------------------------------------------------
  \<activity         \`\`android:name=
  \".YourBillingActivity\"         \`\`android:launchMode=
  \"singleTask\"         \`\`android:exported= \"true\"      
    \`\`android:screenOrientation=
  \"portrait\"         \`\`android:windowSoftInputMode= \"adjustResize\"
  \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка доступности работы с платежами

Для проверки доступности платежей, вызовите метод
checkPurchasesAvailability. При его вызове проверяются следующие
условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность платежей.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок в
    системе RuStore Консоль.

Если все условия выполняются, возвращается
FeatureAvailabilityResult.Available. Иначе, возвращается
FeatureAvailabilityResult.Unavailable(val cause: RuStoreException), где
cause --- это ошибка о невыполненном условии. Все возможные ошибки
RuStoreException описаны в разделе Обработка ошибок. Прочие ошибки
например, «Нет соединения с интернетом») возвращаются в onFailure.

  --------------------------------------------------------------------------------------
  RuStoreBillingClientExtKt.checkPurchasesAvailability(RuStoreBillingClient.Companion,
  getContext())        \`\`.addOnSuccessListener(result -\> {            \`\`if (result 
  instanceof FeatureAvailabilityResult.Available) {                \`\`// Hanlde
  purchases available            \`\`}  else {                \`\`RuStoreException
  exception = ((FeatureAvailabilityResult.Unavailable)
  result).getCause();                \`\`// Hanlde purchases
  unavailable            \`\`}        \`\`})        \`\`.addOnFailureListener(error -\>
  {            \`\`// Handle error        \`\`});
  --------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------

Получение списка продуктов

Для получения продуктов используйте метод getProducts:

  ------------------------------------------------------------------------
  ProductsUseCase productsUseCase =
  billingClient.getProducts();productsUseCase.getProducts(Arrays.asList(
  \"id1\" ,  \"id2\" )).addOnCompleteListener( new
  OnCompleteListener\<List\<Product\>\>() {    \`\`@Override    \`\`public
  void onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void
  onSuccess(List\<Product\> products) {        \`\`// Process
  success    \`\`}});
  ------------------------------------------------------------------------

  ------------------------------------------------------------------------

-   productIds: List --- список идентификаторов продуктов.

**Структура продукта**:

  -----------------------------------------------------------------------
  interface Product {    \`\`public String
  getProductId();    \`\`@Nullable    \`\`public ProductType
  getProductType();    \`\`public ProductStatus
  getProductStatus();    \`\`@Nullable    \`\`public String
  getPriceLabel();    \`\`@Nullable    \`\`public Integer
  getPrice();    \`\`@Nullable    \`\`public String
  getCurrency();    \`\`@Nullable    \`\`public String
  getLanguage();    \`\`@Nullable    \`\`public String
  getTitle();    \`\`@Nullable    \`\`public String
  getDescription();    \`\`@Nullable    \`\`public Uri
  getImageUrl();    \`\`@Nullable    \`\`public Uri
  getPromoImageUrl();    \`\`@Nullable    \`\`public ProductSubscription
  getProductSubscription();}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   getProductId() --- идентификатор продукта;

-   getProductType() --- тип продукта;

-   getProductStatus() --- статус продукта;

-   getPriceLabel() --- отформатированная цена товара, включая валютный
    знак на языке \[language\];

-   getPrice() --- цена в минимальных единицах (в копейках);

-   getCurrency() --- код валюты ISO 4217;

-   getLanguage() --- язык, указанный с помощью BCP 47 кодирования;

-   getTitle() --- название продукта на языке \[language\];

-   getDescription() --- описание продукта на языке \[language\];

-   getImageUrl() --- ссылка на картинку;

-   getPromoImageUrl() --- ссылка на промо картинку;

-   getSubscription() --- описание подписки, возвращается только для
    продуктов с типом subscription.

Структура подписки:

**Структура подписки**

  -----------------------------------------------------------------------
  interface ProductSubscription {    \`\`@Nullable    \`\`public
  SubscriptionPeriod
  getSubscriptionPeriod();    \`\`@Nullable    \`\`public
  SubscriptionPeriod getFreeTrialPeriod();    \`\`@Nullable    \`\`public
  SubscriptionPeriod getGracePeriod();    \`\`@Nullable    \`\`public
  String getIntroductoryPrice();    \`\`@Nullable    \`\`public String
  getIntroductoryPriceAmount();    \`\`@Nullable    \`\`public
  SubscriptionPeriod getIntroductoryPricePeriod();}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   getSubscriptionPeriod() --- период подписки;

-   getFreeTrialPeriod() --- пробный период подписки;

-   getGracePeriod() --- льготный период подписки;

-   getIntroductoryPrice() --- отформатированная вступительная цена
    подписки, включая знак валюты, на языке product:language;

-   getIntroductoryPriceAmount() --- вступительная цена в минимальных
    единицах валюты (в копейках);

-   getIntroductoryPricePeriod() --- расчетный период вступительной
    цены.

**Структура периода подписки**:

  -----------------------------------------------------------------------
  interface SubscriptionPeriod {    \`\`int getYears();    \`\`int
  getMonths();    \`\`int getDays();}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   getYears() --- количество лет;

-   getMonths() --- количество месяцев;

-   getDays() --- количество дней.

Получение списка покупок

Для получения списка покупок используйте метод getPurchases:

  -------------------------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.getPurchases().addOnCompleteListener(
  new OnCompleteListener\<List\<Purchase\>\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void onSuccess(List\<Purchase\>
  purchases) {        \`\`// Process success    \`\`}});
  -------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------

**Структура покупки**:

  -----------------------------------------------------------------------
  interface Purchase {    \`\`@Nullable    \`\`public String
  getPurchaseId();    \`\`public String
  getProductId();    \`\`@Nullable    \`\`public ProductType
  getProductType();    \`\`@Nullable    \`\`public String
  getInvoiceId();    \`\`@Nullable    \`\`public String
  getDescription();    \`\`@Nullable    \`\`public String
  getLanguage();    \`\`@Nullable    \`\`public Date
  getPurchaseTime();    \`\`@Nullable    \`\`public String
  getOrderId();    \`\`@Nullable    \`\`public String
  getAmountLabel();    \`\`@Nullable    \`\`public Integer
  getAmount();    \`\`@Nullable    \`\`public String
  getCurrency();    \`\`@Nullable    \`\`public Integer
  getQuantity();    \`\`@Nullable    \`\`public PurchaseState
  getPurchaseState();    \`\`@Nullable    \`\`public String
  getDeveloperPayload();    \`\`@Nullable    \`\`public String
  getSubscriptionToken();}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   getPurchaseId() --- идентификатор покупки.

-   getProductId() --- идентификатор продукта.

-   getProductType() --- тип продукта.

-   getInvoiceId() --- идентификатор счета.

-   getDescription() --- описание покупки.

-   getLanguage() --- язык, указанный с помощью BCP 47 кодирования.

-   getPurchaseTime() --- время покупки (в формате RFC 3339).

-   getOrderId() --- уникальный идентификатор оплаты, сформированный
    приложением (uuid).

-   getAmountLabel() --- отформатированная цена покупки, включая
    валютный знак на языке \[language\].

-   getAmount() --- цена в минимальных единицах валюты.

-   getCurrency() --- код валюты ISO 4217.

-   getQuantity() --- количество продукта.

-   getPurchaseState() --- состояние покупки:

-   возможные значения состояния покупки:

    -   CREATED --- создана;

    -   INVOICE_CREATED --- создана, ожидает оплаты;

    -   CONFIRMED --- подтверждена;

    -   PAID --- оплачена;

    -   CANCELLED --- покупка отменена;

    -   CONSUMED --- потребление покупки подтверждено;

    -   CLOSED --- подписка была отменена.

<!-- -->

-   getDeveloperPayload() --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе;

-   getSubscriptionToken() --- токен для валидации покупки на сервере.

**Статусная модель (purchaseState):**

Статусная модель покупки подписок (SUBSCRIPTIONS):

Статусная модель покупки непотребляемых продуктов (NON-CONSUMABLES):

Статусная модель покупки потребляемых продуктов (CONSUMABLES):

Получение информации о покупке

Для получения информации о покупке, используйте метод getPurchaseInfo:

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.getPurchaseInfo(
  \"purchaseId\" ).addOnCompleteListener( new
  OnCompleteListener\<Purchase\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void onSuccess(Purchase
  result) {        \`\`// Process success    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Структура покупки**:

  -----------------------------------------------------------------------
  interface Purchase {    \`\`@Nullable    \`\`public String
  getPurchaseId();    \`\`public String
  getProductId();    \`\`@Nullable    \`\`public ProductType
  getProductType();    \`\`@Nullable    \`\`public String
  getInvoiceId();    \`\`@Nullable    \`\`public String
  getDescription();    \`\`@Nullable    \`\`public String
  getLanguage();    \`\`@Nullable    \`\`public Date
  getPurchaseTime();    \`\`@Nullable    \`\`public String
  getOrderId();    \`\`@Nullable    \`\`public String
  getAmountLabel();    \`\`@Nullable    \`\`public Integer
  getAmount();    \`\`@Nullable    \`\`public String
  getCurrency();    \`\`@Nullable    \`\`public Integer
  getQuantity();    \`\`@Nullable    \`\`public PurchaseState
  getPurchaseState();    \`\`@Nullable    \`\`public String
  getDeveloperPayload();    \`\`@Nullable    \`\`public String
  getSubscriptionToken();} 
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   getPurchaseId() --- идентификатор покупки;

-   getProductId() --- идентификатор продукта;

-   getProductType() --- тип продукта;

-   getInvoiceId() --- идентификатор счета;

-   getDescription() --- описание покупки;

-   getLanguage() --- язык, указанный с помощью BCP 47 кодирования;

-   getPurchaseTime() --- время покупки (в формате RFC 3339);

-   getOrderId() --- уникальный идентификатор оплаты, сформированный
    приложением (uuid);

-   getAmountLabel() --- отформатированная цена покупки, включая
    валютный знак на языке \[language\];

-   getAmount() --- цена в минимальных единицах валюты;

-   getCurrency() --- код валюты ISO 4217;

-   getQuantity() --- количество продукта;

-   getPurchaseState() --- состояние покупки:

    -   возможные значения состояния покупки:

        -   CREATED --- создана;

        -   INVOICE_CREATED --- создана, ожидает оплаты;

        -   CONFIRMED --- подтверждена;

        -   PAID --- оплачена;

        -   CANCELLED --- покупка отменена;

        -   CONSUMED --- потребление покупки подтверждено;

        -   CLOSED --- подписка была отменена.

<!-- -->

-   getDeveloperPayload() --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе;

-   getDeveloperPayload() --- токен для валидации покупки на сервере.

**Статусная модель (purchaseState):**

Статусная модель покупки подписок (SUBSCRIPTIONS):

Статусная модель покупки непотребляемых продуктов (NON-CONSUMABLES):

Статусная модель покупки потребляемых продуктов (CONSUMABLES):

Покупка продукта

Для вызова покупки продукта используйте метод purchaseProduct:

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.purchaseProduct(
  \"productId\" ).addOnCompleteListener( new
  OnCompleteListener\<PaymentResult\>() {    \`\`@Override    \`\`public
  void onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void
  onSuccess(PaymentResult result) {        \`\`// Process
  PaymentResult    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   productId: String --- идентификатор продукта;

-   orderId: String --- идентификатор заказа, создаётся на стороне
    AnyApp (опционально. Если не указан, то генерируется автоматически);

-   quantity: Int --- количество продуктов (опционально);

-   developerPayload --- дополнительная информация от разработчика
    AnyApp (опционально).

**Структура результата покупки**:

  -----------------------------------------------------------------------
  interface PaymentResult {        \`\`interface Success  extends
  PaymentResult {        \`\`@Nullable        \`\`public String
  getOrderId();                \`\`public String
  getPurchaseId();                \`\`public String
  getProductId();        \`\`public String
  getInvoiceId();                \`\`@Nullable        \`\`public String
  getSubscriptionToken();    \`\`}        \`\`interface Failure  extends
  PaymentResult {        \`\`@Nullable        \`\`public String
  getPurchaseId();                \`\`@Nullable        \`\`public String
  getInvoiceId();                \`\`@Nullable        \`\`public String
  getOrderId();                \`\`@Nullable        \`\`public Integer
  getQuantity();                \`\`@Nullable        \`\`public String
  getProductId();        \`\`@Nullable        \`\`public Integer
  getErrorCode();    \`\`}    \`\`interface Cancelled  extends
  PaymentResult {        \`\`public String getPurchaseId();    \`\`}    
           \`\`interface InvalidPaymentState  extends PaymentResult {}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   Success --- результат успешного завершения покупки цифрового товара;

-   Failure --- результат ошибки покупки цифрового товара;

-   Cancelled --- результат отмены покупки цифрового товара;

-   InvalidPaymentState --- ошибка работы SDK платежей. Может
    возникнуть, в случае некорректного обратного deeplink.

Серверная валидация покупки

Если вам необходимо произвести валидацию успешной покупки на сервере, вы
можете использовать subscriptionToken в PurchaseResult, возвращаемой
purchaseProduct при успешной покупке продукта.

SubscriptionToken состоит из invoiceId покупки и userId RuStore,
записанных через точку: «userId».

  -------------------------------------------------------------------------------------------------------------
  ---

  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.purchaseProduct(productId).addOnSuccessListener(paymentResult
  -\> {    \`\`if (paymentResult  instanceof PaymentResult.Success) {        \`\`String subscriptionToken =
  ((PaymentResult.Success)
  paymentResult).getSubscriptionToken();        \`\`yourApi.validate(subscriptionToken);    \`\`}});
  -------------------------------------------------------------------------------------------------------------

Также можно получить subscriptionToken в сущности Purchase. Сущность
Purchase можно получить используя метод getPurchases():

  ---------------------------------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.getPurchases().addOnSuccessListener(purchases
  -\> {    \`\`for (Purchase purchase : purchases)
  {        \`\`yourApi.validate(purchase.getSubscriptionToken());    \`\`}});
  ---------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------

Потребление (подтверждение) покупки

RuStore содержит продукты следующих типов:

-   CONSUMABLE --- потребляемый (можно купить много раз, например,
    кристаллы в приложении);

-   NON_CONSUMABLE --- непотребляемый (можно купить один раз, например
    отключение рекламы в приложении);

-   SUBSCRIPTION --- подписка (можно купить на период времени, например
    подписка в стриминговом сервисе).

Потребления требуют только продукты типа CONSUMABLE, если они находятся
в состоянии PurchaseState.PAID.

Для потребления покупки вы можете использовать метод confirmPurchase:

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.confirmPurchase(
  \"purchaseId\" ,  \"developerPayload\" ).addOnCompleteListener( new
  OnCompleteListener\<Unit\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void onSuccess(Unit
  result) {        \`\`// Process success    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки.

-   developerPayload --- дополнительная информация от разработчика
    AnyApp (опционально).

Отмена покупки

Для отмены покупки вы можете использовать метод deletePurchase:

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.deletePurchase(
  \"purchaseId\" ).addOnCompleteListener( new
  OnCompleteListener\<Unit\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void onSuccess(Unit
  result) {        \`\`// Process success    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки.

Используйте этот метод, если у вас есть логика, завязанная на удалении
покупки. Покупка отменяется автоматически через таймаут в 20 минут, либо
при повторной покупке от того же клиента.

Сценарий потребления и отмены покупки

Обработка незавершённых платежей должна производиться разработчиком
AnyApp.

Метод отмены покупки (deletePurchase) необходимо использовать, если:

-   Метод получения списка покупок (getPurchases) вернул покупку со
    статусами PurchaseState.CREATED или PurchaseState.INVOICE_CREATED.

<!-- -->

-   В некоторых случаях, после оплаты через приложение банка (СБП,
    СберPay, TinkoffPay и т.д.), при последующем возврате обратно в
    AnyApp приложение, статус покупки может быть всё ещё
    PurchaseState.INVOICE_CREATED. Это связано с временем обработки
    покупки на стороне банка. Поэтому разработчику необходимо правильно
    связать логику получения списка покупок с ЖЦ экрана. Альтернативным
    вариантом решения данной проблемы является отмена покупки в статусе
    PurchaseState.INVOICE_CREATED только через взаимодействие
    пользователя с приложением. Например, вынести эту логику в отдельную
    кнопку.

-

<!-- -->

-   Метод покупки (purchaseProduct) вернул PaymentResult.Cancelled.

-   Метод покупки (purchaseProduct) вернул PaymentResult.Failure.

Метод потребления продукта (confirmPurchase) необходимо использовать,
если метод получения списка покупок (getPurchases) вернул покупку типа
CONSUMABLE и со статусом PurchaseState.PAID.

Логирование событий

Если вы хотите логировать события библиотеки платежей, добавьте в вызов
RuStoreBillingClient.init параметры externalPaymentLoggerFactory и
debugLogs (данные параметры являются необязательными для инициализации):

  --------------------------------------------------------------------------------------------------------------------
  final Context context = getContext();final String consoleApplicationId =  \"111111\" ;final String deeplinkScheme = 
  \"yourappscheme\" ;final ExternalPaymentLoggerFactory externalPaymentLoggerFactory = (tag) -\>  new
  PaymentLogger(tag);final boolean debugLogs =  true ;RuStoreBillingClient billingClient =
  RuStoreBillingClientFactory.INSTANCE.create(    \`\`context,    \`\`consoleApplicationId,    \`\`deeplinkScheme,  
   \`\`externalPaymentLoggerFactory,    \`\`debugLogs);public class PaymentLogger  implements ExternalPaymentLogger
  {    \`\`private final String tag;    \`\`public PaymentLogger(String tag) {        \`\`this .tag =
  tag;    \`\`}    \`\`@Override    \`\`public void d( \@Nullable Throwable throwable,  \@NonNull Function0\<String\>
  function0) {        \`\`Log.d(tag, function0.invoke());    \`\`}    \`\`@Override    \`\`public void e( \@Nullable
  Throwable throwable,  \@NonNull Function0\<String\> function0) {        \`\`Log.e(tag,
  function0.invoke());    \`\`}    \`\`@Override    \`\`public void i( \@Nullable Throwable throwable,  \@NonNull
  Function0\<String\> function0) {        \`\`Log.i(tag, function0.invoke());    \`\`}    \`\`@Override    \`\`public
  void v( \@Nullable Throwable throwable,  \@NonNull Function0\<String\> function0) {        \`\`Log.v(tag,
  function0.invoke());    \`\`}    \`\`@Override    \`\`public void w( \@Nullable Throwable throwable,  \@NonNull
  Function0\<String\> function0) {        \`\`Log.w(tag, function0.invoke());    \`\`}}
  --------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------

Параметры для включения логирования:

-   externalPaymentLoggerFactory --- интерфейс, позволяющий создать
    логгер, который пробрасывает логи библиотеки в приложение-хост;

-   debugLogs --- включить логи (логи будут автоматически отключены для
    Release-сборок).

Где PaymentLogger --- это пример реализации логирования событий
платежей.

Смена темы

SDK поддерживает динамическую смены темы через интерфейс провайдера
BillingClientThemeProvider:

  --------------------------------------------------------------------------------------------------------------------
  final Context context = getContext();final String consoleApplicationId =  \"111111\" ;final String deeplinkScheme = 
  \"yourappscheme\" ;final BillingClientThemeProvider themeProvider =
  BillingClientThemeProviderImpl();RuStoreBillingClient billingClient =
  RuStoreBillingClientFactory.INSTANCE.create(    \`\`context,    \`\`consoleApplicationId,    \`\`deeplinkScheme,  
   \`\`themeProvider);  public class BillingClientThemeProviderImpl  implements BillingClientThemeProvider
  {    \`\`@NonNull    \`\`@Override    \`\`public BillingClientTheme provide() {        \`\`// Тут должна размещаться
  логика по проверке установленной темы        \`\`boolean darkTheme = \...;        \`\`if (darkTheme)
  {            \`\`return BillingClientTheme.Dark;        \`\`}  else {            \`\`return
  BillingClientTheme.Light;        \`\`}    \`\`}}
  --------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------

Обработка ошибок

**Возможные ошибки**:

-   RuStoreNotInstalledException() --- на устройстве пользователя не
    установлен RuStore;

-   RuStoreOutdatedException() --- RuStore установленный на устройстве
    пользователя не поддерживает платежи;

-   RuStoreUserUnauthorizedException() --- пользователь не авторизован в
    RuStore;

-   RuStoreApplicationBannedException() --- приложение забанено в
    RuStore;

-   RuStoreUserBannedException() --- пользователь забанен в RuStore;

-   RuStoreException(message: String) --- базовая ошибка RuStore от
    которой наследуются остальные ошибки.

При вызове метода RuStoreBillingClient.purchases.purchaseProduct(),
ошибки обрабатываются автоматически.

Для показа диалога с ошибкой пользователю, вы можете использовать метод
resolveForBilling:

  -----------------------------------------------------------------------
  BillingRuStoreExceptionExtKt.resolveForBilling(exception,
  getContext());
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Миграция до платежей версии 2.2.0

Общая информация

В версии 2.2.0 платежей были значительно изменены модели результата
покупки продуктов PaymentResult.

Для того, чтобы быстро и без особых проблем перейти на новую версию SDK,
используйте данную инструкцию по миграции.

Обновление зависимости

Для обновления зависимости, поднимите версию у billingclient в блоке
dependencies вашего build.gradle:

**build.gradle**

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:billingclient:2.2.0\" )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Изменение моделей

**Получение списка продуктов**

Изменилась модель результата получения списка продуктов. Теперь
метод **getProducts()** сразу возвращается список продуктов:

  ------------------------------------------------------------------------
  ProductsUseCase productsUseCase =
  billingClient.getProducts();productsUseCase.getProducts(Arrays.asList(
  \"id1\" ,  \"id2\" )).addOnCompleteListener( new
  OnCompleteListener\<List\<Product\>\>() {    \`\`@Override    \`\`public
  void onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void
  onSuccess(List\<Product\> products) {        \`\`// Process
  success    \`\`}});
  ------------------------------------------------------------------------

  ------------------------------------------------------------------------

Модель продукта и модели ошибок остались без изменений.

Получение списка покупок

Изменилась модель результата получения списка покупок. Теперь
метод **getPurchases()** сразу возвращается список покупок:

  -------------------------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.getPurchases().addOnCompleteListener(
  new OnCompleteListener\<List\<Purchase\>\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void onSuccess(List\<Purchase\>
  purchases) {        \`\`// Process success    \`\`}});
  -------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------

Модель покупки и модели ошибок остались без изменений.

Получение информации о покупке

Изменилась модель результата получения информации о покупке. Теперь
метод **getPurchaseInfo()** сразу возвращается модель покупки:

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.getPurchaseInfo(
  \"purchaseId\" ).addOnCompleteListener( new
  OnCompleteListener\<Purchase\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void onSuccess(Purchase
  purchase) {        \`\`// Process success    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Модели ошибок остались без изменений.

Покупка продукта

Изменилась модель результата покупки продукта. Обновленная модель
представлена ниже:

  -----------------------------------------------------------------------
  interface PaymentResult {        \`\`interface Success  extends
  PaymentResult {        \`\`@Nullable        \`\`public String
  getOrderId();                \`\`public String
  getPurchaseId();                \`\`public String
  getProductId();        \`\`public String
  getInvoiceId();                \`\`@Nullable        \`\`public String
  getSubscriptionToken();     \`\`}        \`\`interface Failure  extends
  PaymentResult {        \`\`@Nullable        \`\`public String
  getPurchaseId();                \`\`@Nullable        \`\`public String
  getInvoiceId();                \`\`@Nullable        \`\`public String
  getOrderId();                \`\`@Nullable        \`\`public Integer
  getQuantity();                \`\`@Nullable        \`\`public String
  getProductId();        \`\`@Nullable        \`\`public Integer
  getErrorCode();    \`\`}    \`\`interface Cancelled  extends
  PaymentResult {        \`\`public String getPurchaseId();    \`\`}    
           \`\`interface InvalidPaymentState  extends PaymentResult {}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где:

-   Success --- результат успешного завершения покупки цифрового товара.

-   Failure --- результат ошибки покупки цифрового товара.

-   Cancelled --- результат отмены покупки цифрового товара.

-   InvalidPaymentState --- ошибка работы SDK платежей. Может
    возникнуть, в случае некоторретного обратного deeplink.

Обратите особое внимание на сценарии потребления и отмены покупки.

Потребление (подтверждение) покупки

Изменилась модель результата потребления покупки. Теперь потребление
может либо закончиться успехом, либо ошибкой:

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.confirmPurchase(
  \"purchaseId\" ,  \"developerPayload\" ).addOnCompleteListener( new
  OnCompleteListener\<Unit\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void onSuccess(Unit
  result) {        \`\`// Process success    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отмена покупки

Изменилась модель результата отмены покупки. Теперь отмена покупки может
либо закончиться успехом, либо ошибкой:

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.deletePurchase(
  \"purchaseId\" ).addOnCompleteListener( new
  OnCompleteListener\<Unit\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}    \`\`@Override    \`\`public void onSuccess(Unit
  result) {        \`\`// Process success    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Сценарий потребления и отмены покупки

В связи с тем, что изменилась модель результата покупки продукта,
изменилась и логика потребления и отмены покупки.

Метод отмены покупки (deletePurchase) необходимо использовать, если:

-   Метод получения списка покупок (getPurchases) вернул покупку со
    статусом:

-   PurchaseState.CREATED.

-   PurchaseState.INVOICE_CREATED.

-   Метод покупки (purchaseProduct) вернул PaymentResult.Cancelled.

-   Метод покупки (purchaseProduct) вернул PaymentResult.Failure.

Метод потребления продукта (confirmPurchase) необходимо использовать,
если метод получения списка покупок (getPurchases) вернул покупку типа
CONSUMABLE и со статусом PurchaseState.PAID.

Миграция SDK платежей c версии 1.x.x до версии 3.х.х

В версии 3.0.0 платежей были значительно изменены модели результата
покупки продуктов PaymentResult.

Для того, чтобы быстро и без особых проблем перейти на новую версию SDK,
используйте данную инструкцию по миграции.

Обновление зависимости

Для обновления зависимости, поднимите версию у billingclient в блоке
dependencies вашего build.gradle:

**build.gradle**

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:billingclient:3.1.0\" )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Изменение моделей

Получение списка продуктов

Изменилась модель результата получения списка продуктов. Теперь
метод **getProducts()** сразу возвращается список продуктов:

**Вызов метода getProducts**

  ------------------------------------------------------------------------
  ProductsUseCase productsUseCase =
  billingClient.getProducts();productsUseCase.getProducts(Arrays.asList(
  \"id1\" ,  \"id2\" )).addOnCompleteListener( new
  OnCompleteListener\<List\<Product\>\>() {    \`\`@Override    \`\`public
  void onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}     \`\`@Override    \`\`public void
  onSuccess(List\<Product\> products) {        \`\`// Process
  success    \`\`}});
  ------------------------------------------------------------------------

  ------------------------------------------------------------------------

Модель продукта и модели ошибок остались без изменений.

Получение списка покупок

Изменилась модель результата получения списка покупок. Теперь
метод **getPurchases()** сразу возвращается список покупок:

**Вызов метода получения списка покупок пользователя**

  -------------------------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.getPurchases().addOnCompleteListener(
  new OnCompleteListener\<List\<Purchase\>\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}     \`\`@Override    \`\`public void onSuccess(List\<Purchase\>
  purchases) {        \`\`// Process success    \`\`}});
  -------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------

Модель покупки и модели ошибок остались без изменений.

Получение информации о покупке

Изменилась модель результата получения информации о покупке. Теперь
метод **getPurchaseInfo()** сразу возвращается модель покупки:

**Вызов метода получения списка покупок пользователя**

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.getPurchaseInfo(
  \"purchaseId\" ).addOnCompleteListener( new
  OnCompleteListener\<Purchase\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}     \`\`@Override    \`\`public void onSuccess(Purchase
  purchase) {        \`\`// Process success    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Модели ошибок остались без изменений.

Покупка продукта

Изменилась модель результата покупки продукта. Обновленная модель
представлена ниже:

**Структура результата покупки**

  -----------------------------------------------------------------------
  interface PaymentResult {         \`\`interface Success  extends
  PaymentResult {        \`\`@Nullable        \`\`public String
  getOrderId();                 \`\`public String
  getPurchaseId();                 \`\`public String
  getProductId();         \`\`public String
  getInvoiceId();                 \`\`@Nullable        \`\`public String
  getSubscriptionToken();    \`\`}         \`\`interface Failure  extends
  PaymentResult {        \`\`@Nullable        \`\`public String
  getPurchaseId();                 \`\`@Nullable        \`\`public String
  getInvoiceId();                 \`\`@Nullable        \`\`public String
  getOrderId();                 \`\`@Nullable        \`\`public Integer
  getQuantity();                 \`\`@Nullable        \`\`public String
  getProductId();         \`\`@Nullable        \`\`public Integer
  getErrorCode();    \`\`}     \`\`interface Cancelled  extends
  PaymentResult {        \`\`public String
  getPurchaseId();    \`\`}              \`\`interface
  InvalidPaymentState  extends PaymentResult {}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где:

-   Success -- результат успешного завершения покупки цифрового товара.

-   Failure -- результат ошибки покупки цифрового товара.

-   Cancelled -- результат отмены покупки цифрового товара.

-   InvalidPaymentState -- ошибка работы SDK платежей. Может возникнуть,
    в случае некоторретного обратного deeplink.

Особое внимание нужно обратить на сценарии потребления и отмены покупки!

Потребление (подтверждение) покупки

Изменилась модель результата потребления покупки. Теперь потребление
может либо закончиться успехом, либо ошибкой:

**Вызов метода подтверждения**

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.confirmPurchase(
  \"purchaseId\" ,  \"developerPayload\" ).addOnCompleteListener( new
  OnCompleteListener\<Unit\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}     \`\`@Override    \`\`public void onSuccess(Unit
  result) {        \`\`// Process success    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отмена покупки

Изменилась модель результата отмены покупки. Теперь отмена покупки может
либо закончиться успехом, либо ошибкой:

**Вызов метода отмены покупки**

  -----------------------------------------------------------------------
  PurchasesUseCase purchasesUseCase =
  billingClient.getPurchases();purchasesUseCase.deletePurchase(
  \"purchaseId\" ).addOnCompleteListener( new
  OnCompleteListener\<Unit\>() {    \`\`@Override    \`\`public void
  onFailure( \@NonNull Throwable throwable) {        \`\`// Process
  error    \`\`}     \`\`@Override    \`\`public void onSuccess(Unit
  result) {        \`\`// Process success    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Сценарий потребления и отмены покупки

В связи с тем, что изменилась модель результата покупки продукта,
изменилась и логика потребления и отмены покупки.

Метод отмены покупки (deletePurchase) необходимо использовать, если:

-   Метод получения списка покупок (getPurchases) вернул покупку со
    статусами PurchaseState.CREATED или PurchaseState.INVOICE_CREATED.

В некоторых случаях, после оплаты через приложение банка (СБП, СберPay,
TinkoffPay и т.д.), при последующем возврате обратно в AnyApp
приложение, статус покупки может быть всё ещё
PurchaseState.INVOICE_CREATED. Это связано с временем обработки покупки
на стороне банка. Поэтому разработчику необходимо правильно связать
логику получения списка покупок с ЖЦ экрана. Альтернативным вариантом
решения данной проблемы является отмена покупки в статусе
PurchaseState.INVOICE_CREATED только через взаимодействие пользователя с
приложением. Например, вынести эту логику в отдельную кнопку.

-   Метод покупки (purchaseProduct) вернул PaymentResult.Cancelled.

-   Метод покупки (purchaseProduct) вернул PaymentResult.Failure.

Метод потребления продукта (confirmPurchase) необходимо использовать,
если:

-   Метод получения списка покупок (getPurchases) вернул покупку типа
    CONSUMABLE и со статусом PurchaseState.PAID.

История изменений RuStore SDK платежей

Версия SDK 2.2.0

-   Добавлен функционал динамической смены темы (светлая и тёмная);

-   Произведены работы по стабилизации работы библиотеки;

-   Исправлена проблема с восстановлением состояния после оплаты по
    deeplink.

Версия SDK 2.1.1

-   Обновления безопасности.

Версия SDK 2.1.0

-   Изменены модели ответов:

    -   получения списка продуктов

    -   получения списка покупок

    -   покупки товара

    -   потребления покупки

    -   отмены покупки

<!-- -->

-   Доработан внешний вид диалога оплаты.

Версия SDK 1.1.1

-   Исправлена работа методаawait()для Task API.

Версия SDK 1.1.0

-   Оплата с помощью TinkoffPay.

-   Возможность сохранения карты при оплате.

-   Доработан внешний вид и поведение диалога оплаты.

-   Убраны лишние зависимости и uses-permission-ы

-   Модель PurchaseResult дополнена новым полем идентификатора счёта
    invoiceId.

Версия SDK 1.0.0

-   Переход от синглтона на создание инстанса:
    RuStoreBillingClient.init() заменен на
    RuStoreBillingClientFactory.create().

-   Методы работы с синглтоном (init, products, purchases, getSingleton)
    помечены как deprecated и будут удалены в следующих версиях.

-   Подробнее об изменениях в руководстве о миграции: «Миграция до
    платежей версии 1.0.0»

-   Метод checkPurchasesAvailability() стал статичным --- можно
    проверить доступность платежей без создания инстанса
    RuStoreBillingClient.

Версия SDK 0.1.8

-   Добавлен метод
    RuStoreBillingClient.purchases.getPurchaseInfo("purchaseId"),
    возвращающий информацию о покупке.

-   Исправлена уязвимость "Intent Redirection vulnerability", не
    позволяющая опубликовать приложение в Google Play.

Версия SDK 0.1.7

-   Внутреннее обновление SDK.

Версия SDK 0.1.6

-   Добавлено поле subscriptionToken в сущности Purchase для серверной
    валидации покупки.

Версия SDK 0.1.5

-   Переход на сертификаты Минцифры.

-   Фикс отображения кнопки оплаты через СБП при быстром переходе в
    оферту и обратно.

-   Поле traceId: String у интерфейса ResponseWithCode было заменено на
    поле meta: RequestMeta, содержащее внутри traceId.

Версия SDK 0.1.4

-   Добавлены ссылки на оферту для СБП и оплаты со счеты мобильного
    телефона.

-   Добавлен дополнительный дисклеймер для пользователя, если
    подтверждение оплаты занимает больше 15 секунд.

-   Исправлены ошибки при работе с OTP-кодами и отправкой СМС.

-   Исправлена генерация поля orderId для счета на стороне RuStore, если
    orderId передается в purchaseProduct() как null.

-   Добавлено отображение блокирующей ошибки, если приложение банка не
    поддерживает deeplink СБП.

-   Добавлен PurchaseResult.subscriptionToken, позволяющий произвести
    валидацию покупки на сервере.

Версия SDK 0.1.3

-   Добавлена оплата по номеру телефона в purchaseProduct().

-   В инициализации параметр externalPaymentLogger был заменен на
    externalPayemtnLoggerFactory --- это фабрика, в которой необходимо
    создать реализацию ExternalPaymentLogger (см. раздел Логирование).

Версия SDK 0.1.2

-   Добавлена система быстрых платежей (СБП).

-   Добавлен параметр deeplinkSсheme в методе init.

-   Удалён параметр deeplinkPrefix в методе init.

-   Исправлена ошибка потери данных в форме ввода данных карты, после
    сворачивания приложения.

Версия SDK 0.1.1

-   Удалён параметр «language» у методов:

    -   Получение списка продуктов --- «getProducts».

    -   Получение списка покупок --- «getPurchases».

    -   Потребление продукта --- «confirmPurchase».

    -   Отмена покупки --- «deletePurchase».

<!-- -->

-   Добавлено поле RuStoreBillingClient.isInitialized, возвращающее
    статус инициализации библиотеки.

Версия SDK 0.1.0

-   Изменились параметры в init.

-   Добавлена проверка доступности работы с платежами --- метод
    «checkPurchasesAvailability».

-   Во всех методах параметр «language» стал опциональным.

-   Suspend методы заменены на task API в методах:

    -   Получение списка продуктов --- «getProducts».

    -   Получение списка покупок --- «getPurchases».

    -   Покупка продукта --- «purchaseProduct».

    -   Потребление продукта --- «confirmPurchase».

    -   Отмена покупки --- «deletePurchase».

<!-- -->

-   В методе покупки продукта «purchaseProduct« удалён параметр
    «context».

-   Удалён метод «resultObserver«, теперь результат покупки возвращается
    «purchaseProduct».

-   В методе «resolveForBilling« удалён параметр «onFail».

Версия SDK 0.0.9

-   Добавлены необязательные параметры «ExternalPaymentLogger» и
    «debugLogs» в функцию инициализации init.

Unity

Общая информация

Скачайте Unity-плагин для подключения платежей по ссылке.

Для работы проведения платежей необходимо соблюдение всех условий:

-   На устройстве пользователя установлено приложение RuStore.

-   Пользователь авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок
    в системе RuStore Консоль.

Сервис имеет некоторые ограничения на работу за пределами РФ.

Подключение в проект

Для подключения необходимо скачать RuStore Billing SDK и импортировать
его в проект (Assets → Import Package → Custom Package). Зависимости
подключаются автоматически с помощью External Dependency Manager
(включен в SDK).

Для корректной обработки зависимостей SDK необходимо установить
следующие настройки:

-   Edit -\> Project Settings -\> Player Settings -\> Publishing
    Settings включить Custom Main Gradle Template и Custom Gradle
    Properties Template

-   Assets -\> External Dependencies Manager -\> Android Resolver -\>
    Settings включить Use Jetifier, Patch mainTemplate.gradle, Patch
    gradleTemplate.properties

После настройки обязательно сделать Assets -\> External Dependencies
Manager -\> Android Resolver -\> Force Resolve.

Minimum API level должен быть установлен не ниже 24. Минификация
приложения (ProGuard/R8) в данный момент не поддерживается, необходимо
её отключить в настройках проекта (File → Build Settings → Player
Settings → Publishing Settings → Minify).

Обработка deeplink

При оплате пользователем через SberPay происходит переход в приложение
Сбербанк. После завершения оплаты должен быть переход обратно в
приложение с помощью deeplink. Для обработки deeplink необходимо указать
в AndroidManifest.xml intent-filter со scheme вашего проекта:

  -----------------------------------------------------------------------
  \< activity    \`\`android:name =
  \"ru.rustore.unitysdk.RuStoreUnityActivity\" android:theme =
  \"@style/UnityThemeSelector\" android:exported = \"true\" \>    \`\`\<
  intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.MAIN\" /\>        \`\`\< category android:name
  = \"android.intent.category.LAUNCHER\" /\>    \`\`\</ intent-filter
  \>    \`\`\< intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.VIEW\" /\>        \`\`\< category android:name
  = \"android.intent.category.DEFAULT\" /\>        \`\`\< category
  android:name = \"android.intent.category.BROWSABLE\" /\>        \`\`\<
  data android:scheme = \"yourappscheme\" /\>    \`\`\</ intent-filter
  \>\</ activity \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где «yourappscheme» --- схема вашего deeplink, может быть изменена на
другую.

Далее расширить класс UnityPlayerActivity и добавить обработку входящего
intent в onNewIntent:

  -------------------------------------------------------------------------------------------------------------
  package ru.rustore.unitysdk;import android.os.Bundle;import android.content.Intent;import
  ru.rustore.unitysdk.billingclient.RuStoreUnityBillingClient;import
  com.unity3d.player.UnityPlayerActivity;public class RuStoreUnityActivity  extends UnityPlayerActivity
  {    \`\`@Override protected void onCreate(Bundle savedInstanceState) {        \`\`super
  .onCreate(savedInstanceState);                \`\`if (savedInstanceState ==  null )
  {            \`\`RuStoreUnityBillingClient.onNewIntent(getIntent());        \`\`}    \`\`}    \`\`@Override
  protected void onNewIntent(Intent intent) {        \`\`super
  .onNewIntent(intent);        \`\`RuStoreUnityBillingClient.onNewIntent(intent);    \`\`}}
  -------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------

Java файл с кодом расширения UnityPlayerActivity нужно разместить в
папке Assets проекта. Если у вас уже есть свое расширение
UnityPlayerActivity, необходимо перенести в него код функций onCreate и
onNewIntent.

Инициализация

Перед вызовом методов библиотеки необходимо выполнить ее инициализацию.
Параметры, с которыми будет инициализироваться библиотека, настраиваются
в редакторе Unity. Выберите в меню редактора пункт Window → RuStoreSDK →
Settings → Billing Client.

  -----------------------------------------------------------------------
  RuStoreBillingClient.Instance.Init();\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если требуется инициализация с другими настройками, есть возможность
передать их непосредственно из кода:

  -----------------------------------------------------------------------
  var config =  new RuStoreBillingClientConfig()
  {    \`\`consoleApplicationId =  \"11111\" ,    \`\`deeplinkPrefix = 
  \"yourappscheme\" ,    \`\`allowNativeErrorHandling =  true, 
    enableLogs  =  true};RuStoreBillingClient.Instance.Init(config);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   consoleApplicationId --- код приложения из системы RuStore Консоль.
    (пример: https://console.rustore.ru/apps/111111);

-   deeplinkPrefix --- url для использования deeplink. В качестве
    названия может быть использовано любое уникальное имя (пример:
    yourappscheme);

-   allowNativeErrorHandling --- разрешить обработку ошибок в нативном
    SDK (см. подробнее в разделе Обработка ошибок);

-   enableLogs --- включить логи.

Важно, чтобы схема deeplink, передаваемая в deeplinkPrefix, совпадала
со схемой, указанной в AndroidManifest.xml.

Если вам нужно проверить факт инициализации библиотеки, используйте
свойство RuStoreBillingClient.Instance.isInitialized, его значение true,
если библиотека инициализирована, и false, если Init еще не был вызван.

  -----------------------------------------------------------------------
  var isInitialized = RuStoreBillingClient.Instance.IsIninialized;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка доступности работы с платежами

Для проверки доступности платежей, вызовите метод
CheckPurchasesAvailability. При его вызове проверяются следующие
условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность платежей.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок в
    системе RuStore Консоль.

Если все условия выполняются, в onSuccess возвращается
FeatureAvailabilityResult.isAvailable == true. Иначе, возвращается
FeatureAvailabilityResult.isAvailable == false, где
FeatureAvailabilityResult.cause --- это ошибка о невыполненном условии.
Все возможные ошибки RuStoreException описаны в разделе «Обработка
ошибок». Прочие ошибки (например, «Нет соединения с интернетом»)
возвращаются в onFailure.

  -----------------------------------------------------------------------------
  RuStoreBillingClient.Instance.CheckPurchasesAvailability(    \`\`onFailure:
  (error) =\> {        \`\`// Process error    \`\`},    \`\`onSuccess:
  (response) =\> {        \`\`if (response.isAvailable) {            \`\`//
  Process purchases available        \`\`}  else {            \`\`// Process
  purchases unavailable        \`\`}    \`\`});
  -----------------------------------------------------------------------------

  -----------------------------------------------------------------------------

Получение списка продуктов

Для получения продуктов необходимо использовать метод GetProducts:

  -------------------------------------------------------------------------
  RuStoreBillingClient.Instance.GetProducts(productIds,    \`\`onFailure:
  (error) =\> {        \`\`// Process error    \`\`},    \`\`onSuccess:
  (response) =\> {        \`\`// Process response    \`\`});
  -------------------------------------------------------------------------

  -------------------------------------------------------------------------

-   string\[\] productIds --- список идентификаторов продуктов.

Метод возвращает:

-   List response --- список продуктов.

Структура продукта:

  ----------------------------------------------------------------------------------------------------
  public class Product {    \`\`public enum ProductStatus
  {        \`\`ACTIVE,        \`\`INACTIVE    \`\`}    \`\`public enum ProductType
  {        \`\`NON_CONSUMABLE,        \`\`CONSUMABLE,        \`\`SUBSCRIPTION    \`\`}    \`\`public
  string productId;    \`\`public ProductType productType;    \`\`public ProductStatus
  productStatus;    \`\`public string priceLabel;    \`\`public int price;    \`\`public string
  currency;    \`\`public string language;    \`\`public string title;    \`\`public string
  description;    \`\`public string imageUrl;    \`\`public string promoImageUrl;    \`\`public
  ProductSubscription subscription;}
  ----------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------

-   productId --- идентификатор продукта;

-   productType --- тип продукта;

-   productStatus --- статус продукта;

-   priceLable --- отформатированная цена товара, включая валютный знак
    на языке \[language\];

-   price --- цена в минимальных единицах (копейках);

-   currency --- код валюты ISO 4217;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   title --- название продукта на языке \[language\];

-   description --- описание продукта на языке \[language\];

-   imageUrl --- ссылка на картинку;

-   promoImageUrl --- ссылка на промо картинку;

-   subscription --- описание подписки, возвращается только для
    продуктов с типом subscription.

Структура подписки:

  -----------------------------------------------------------------------
  public class ProductSubscription {    \`\`public SubscriptionPeriod
  subscriptionPeriod;    \`\`public SubscriptionPeriod
  freeTrialPeriod;    \`\`public SubscriptionPeriod
  gracePeriod;    \`\`public string introductoryPrice;    \`\`public
  string introductoryPriceAmount;    \`\`public SubscriptionPeriod
  introductoryPricePeriod;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   subscriptionPeriod --- период подписки;

-   freeTrialPeriod --- пробный период подписки;

-   gracePeriod --- льготный период подписки;

-   introductoryPrice --- отформатированная вступительная цена подписки,
    включая знак валюты, на языке product:language;

-   introductoryPriceAmount --- вступительная цена в минимальных
    единицах валюты (в копейках);

-   introductoryPricePeriod --- расчетный период вступительной цены.

Структура периода подписки:

  -----------------------------------------------------------------------
  public class SubscriptionPeriod {    \`\`public int
  years;    \`\`public int months;    \`\`public int days;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   years --- количество лет;

-   months --- количество месяцев;

-   days --- количество дней.

Получение списка покупок

Для получения списка покупок необходимо использовать метод GetPurchases:

  -----------------------------------------------------------------------
  RuStoreBillingClient.Instance.GetPurchases(    \`\`onFailure: (error)
  =\> {        \`\`// Process error    \`\`},    \`\`onSuccess:
  (response) =\> {        \`\`// Process response    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод возвращает:

-   List response --- список покупок.

Структура покупки:

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  public class Purchase {    \`\`public enum
  PurchaseState    \`\`{        \`\`CREATED,        \`\`INVOICE_CREATED,        \`\`CONFIRMED,        \`\`PAID,        \`\`CANCELLED,        \`\`CONSUMED,        \`\`CLOSED    \`\`}    \`\`public
  string purchaseId;    \`\`public string productId;    \`\`public string description;    \`\`public string invoiceId;    \`\`public string language;    \`\`public DateTime
  purchaseTime;    \`\`public string orderId;    \`\`public string amountLabel;    \`\`public int amount;    \`\`public string currency;    \`\`public int quantity;    \`\`public PurchaseState
  purchaseState;    \`\`public string developerPayload;    \`\`public string subscriptionToken;}
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-   purchaseId --- идентификатор покупки;

-   productId --- идентификатор продукта;

-   description --- описание покупки;

-   invoiceId ---идентификатор счета;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   purchaseTime --- время покупки;

-   orderId --- уникальный идентификатор оплаты, сформированный
    приложением (uuid);

-   amountLable --- отформатированная цена покупки, включая валютный
    знак на языке \[language\];

-   amount --- цена в минимальных единицах валюты;

-   currency --- код валюты ISO 4217;

-   quantity --- количество продукта;

-   purchaseState --- состояние покупки:

    -   Возможные значения состояния покупки:

        -   CREATED --- создана;

        -   INVOICE_CREATED --- создана, ожидает оплаты;

        -   CONFIRMED --- подтверждена;

        -   PAID --- оплачена;

        -   CANCELLED --- покупка отменена;

        -   CONSUMED --- потребление покупки подтверждено;

        -   CLOSED --- подписка была отменена;

        -   TERMINATED --- подписка завершена.

<!-- -->

-   developerPayload --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе;

-   subscriptionToken --- токен для валидации покупки на сервере.

**Статусная модель (purchaseState):**

Статусная модель покупки подписок (SUBSCRIPTIONS):

Статусная модель покупки непотребляемых продуктов (NON-CONSUMABLES):

Статусная модель покупки потребляемых продуктов (CONSUMABLES):

Покупка продукта

Для вызова покупки продукта используйте метод PurchaseProduct:

  -----------------------------------------------------------------------
  RuStoreBillingClient.Instance.PurchaseProduct(    \`\`productId: 
  \"productId\" ,    \`\`quantity: 1,    \`\`developerPayload:  \"\"
  ,    \`\`onFailure: (error) =\> {        \`\`// Process
  error    \`\`},    \`\`onSuccess: (response) =\> {        \`\`switch
  (response) {            \`\`case PaymentSuccess
  paymentSuccess:                \`\`// Process
  PaymentSuccess                \`\`break ;            \`\`case
  PaymentCancelled paymentCancelled:                \`\`// Process 
  PaymentCancelled                 \`\`break ;            \`\`case
  PaymentFailure paymentFailure:                \`\`// Process
  PaymentFailure                \`\`break ;            \`\`case
  InvalidPaymentState invalidPaymentState:                \`\`// Process
  InvalidPaymentState                \`\`break ;        \`\`} \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   string productId --- идентификатор продукта;

-   int quantity --- количество продуктов;

-   string developerPayload --- дополнительная информация от
    разработчика AnyApp.

Структура результата покупки:

  -----------------------------------------------------------------------
  public class PaymentResult {}public class PaymentSuccess :
  PaymentResult {        \`\`public string orderId;        \`\`public
  string purchaseId;        \`\`public string
  productId;        \`\`public string invoiceId;        \`\`public string
  subscriptionToken;}public class PaymentCancelled : PaymentResult
  {    \`\`public string purchaseId;}public class PaymentFailure :
  PaymentResult {    \`\`public string purchaseId;    \`\`public string
  invoiceId;    \`\`public string orderId;    \`\`public int
  quantity;    \`\`public string productId;    \`\`public int
  errorCode;}public class InvalidPaymentState : PaymentResult {}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   PaymentSuccess --- результат успешного завершения покупки цифрового
    товара;

-   PaymentCancelled --- результат отмены покупки цифрового товара;

-   PaymentFailure --- результат ошибки покупки цифрового товара;

-   InvalidPaymentState --- ошибка работы SDK платежей. Может возникнуть
    в случае некорректного обратного deeplink.

Потребление (подтверждение) покупки

RuStore содержит продукты следующих типов:

-   CONSUMABLE --- потребляемый (можно купить много раз, например
    кристаллы в приложении);

-   NON_CONSUMABLE --- непотребляемый (можно купить один раз, например
    отключение рекламы в приложении);

-   SUBSCRIPTION --- подписка (можно купить на период времени, например
    подписка в стриминговом сервисе).

Потребления требуют только продукты типа CONSUMABLE, если они находятся
в состоянии PurchaseState.PAID.

Для потребления покупки вы можете использовать метод ConfirmPurchase:

  -----------------------------------------------------------------------
  RuStoreBillingClient.Instance.ConfirmPurchase(    \`\`purchaseId: 
  \"purchaseId\" ,    \`\`onFailure: (error) =\> {        \`\`// Process
  error    \`\`},    \`\`onSuccess: () =\> {        \`\`// Process
  success    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки.

Отмена покупки

Для отмены покупки необходимо использовать метод DeletePurchase:

  -----------------------------------------------------------------------
  RuStoreBillingClient.Instance.DeletePurchase(    \`\`purchaseId: 
  \"purchaseId\" ,    \`\`onFailure: (error) =\> {        \`\`// Process
  error    \`\`},    \`\`onSuccess: () =\> {        \`\`// Process
  success    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки.

Используйте этот метод, если у вас есть логика, завязанная на удалении
покупки. Покупка отменяется автоматически через таймаут в 20 минут, либо
при повторной покупке от того же клиента.

Сценарий потребления и отмены покупки

Обработка незавершённых платежей должна производиться разработчиком
AnyApp.

Метод отмен покупки необходимо использовать, если:

-   Метод получения списка покупок вернул покупку со статусом:

    -   PurchaseState.CREATED;

    -   PurchaseState.INVOICE_CREATED.

<!-- -->

-   Если PurchaseProduct вернул InvalidPurchase.

-   Если PurchaseProduct вернул PurchaseResult, который содержит
    следующие PaymentFinishCode:

    -   CLOSED_BY_USER --- отменено пользователем;

    -   UNHANDLED_FORM_ERROR --- неизвестная ошибка;

    -   PAYMENT_TIMEOUT --- ошибка оплаты по таймауту;

    -   DECLINED_BY_SERVER --- отклонено сервером;

    -   RESULT_UNKNOWN --- неизвестный статус оплаты.

Метод потребления продукта необходимо использовать, если:

-   Метод получения списка покупок вернул покупку со статусом:

    -   PurchaseState.PAID.

<!-- -->

-   Если PurchaseProduct вернул PaymentResult.PurchaseResult, который
    содержит следующие PaymentFinishCode:

    -   SUCCESSFUL_PAYMENT --- успешная оплата.

Обработка ошибок

Возникающие ошибки передаются в обработчик onFailure методов SDK.

Структура ошибки:

  -----------------------------------------------------------------------
  public class RuStoreError {    \`\`public string name;    \`\`public
  string description;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   name --- название ошибки;

-   description --- описание ошибки.

Возможные ошибки:

-   RuStoreNotInstalledException --- на устройстве пользователя не
    установлен RuStore;

-   RuStoreOutdatedException --- RuStore установленный на устройстве
    пользователя не поддерживает платежи;

-   RuStoreUserUnauthorizedException --- пользователь не авторизован в
    RuStore;

-   RuStoreApplicationBannedException --- приложение забанено в RuStore;

-   RuStoreUserBannedException --- пользователь забанен в RuStore;

-   RuStoreException --- базовая ошибка RuStore от которой наследуются
    остальные ошибки.

При вызове метода PurchaseProduct ошибки обрабатываются автоматически.

Если при инициализации SDK был передан параметр allowNativeErrorHandling
== true, при возникновении ошибки кроме вызова соответствующего
обработчика onFailure она передается в метод resolveForBilling нативного
SDK для показа диалога с ошибкой пользователю:

  -----------------------------------------------------------------------
  public fun RuStoreException.resolveForBilling(context: Context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Изменить это поведение после инициализации можно установкой свойства
AllowNativeErrorHandling:

  -----------------------------------------------------------------------
  RuStoreBillingClient.Instance.AllowNativeErrorHandling =  false ;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

История изменений Unity плагина для подключения платежей

Версия плагина 2.2.0

-   Внутреннее обновление плагина.

Версия плагина 2.1.1

-   Изменён формат возвращаемого значения в методе получения списка
    продуктов GetProducts().

-   Изменён формат возвращаемого значения в методе получения списка
    покупок GetPurchases().

-   Изменён формат возвращаемого значения в методе получения информации
    о покупке GetPurchaseInfo().

-   Изменён формат возвращаемого значения в методе потребления покупки
    ConfirmPurchase().

-   Изменён формат возвращаемого значения в методе удаления покупки
    DeletePurchase().

-   Изменён формат возвращаемого значения в методе покупки продукта
    PurchaseProduct().

Версия плагина 1.1.1

-   Добавлена возможность настройки параметров SDK в редакторе Unity.

-   Параметр orderId в функции PurchaseProduct() сделан необязательным.

-   В классы Purchase и PurchaseResult добавлено поле
    invoiceId, идентификатор счёта.

-   Исправлена инициализация SDK из Activity.

Версия плагина 0.1.9

-   Добавлен флаг RuStoreBillingClientConfig.enableLogs, позволяющий
    включить логирование.

-   Исправлена ошибка инициализации CallbackHandler.

Версия плагина 0.1.8

-   Добавлено поле subscriptionToken в сущности Purchase для серверной
    валидации покупки.

Версия плагина 0.1.7

-   Внутреннее обновление плагина.

Общая информация

Пример реализации

Для того, чтобы узнать как правильно интегрировать платежи,
рекомендуется ознакомиться с приложением-примером:

https://gitflic.ru/project/rustore/godot-rustore-billing/file?file=example&branch=master

Условия работы платежей

Для работы проведения платежей необходимо соблюдение следующих условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок в RuStore
    Консоли.

Подключение в проект

Для подключения в ваш проект, нужно скачать архив со страницы
релизов https://gitflic.ru/project/rustore/godot-rustore-billing/release.

Распакуйте zip архив и добавьте файлы rustore-billing.aar и
RustoreBilling.gdap в папку вашего проекта /android/plugins

  ----------------------------------------------------------------------------------------------------------------------------
  example/    \`\`android/        \`\`plugins/            \`\`rustore-billing-release.aar            \`\`RustoreBilling.gdap
  ----------------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------------

Обработка deeplink

Для корректной работы оплаты через сторонние приложения (СБП или
SberPay), вам необходимо правильно реализовать обработку deeplink. Для
этого необходимо указать в android/build/AndroidManifest.xml
intent-filter со схемой вашего проекта:

  -----------------------------------------------------------------------------
  \<activity    \`\`android:name= \".sample.MainActivity\"
  \>     \`\`\<intent-filter\>        \`\`\<action android:name=
  \"android.intent.action.MAIN\" /\>        \`\`\<category android:name=
  \"android.intent.category.LAUNCHER\"
  /\>    \`\`\</intent-filter\>     \`\`\<intent-filter\>        \`\`\<action
  android:name= \"android.intent.action.VIEW\" /\>        \`\`\<category
  android:name= \"android.intent.category.DEFAULT\" /\>        \`\`\<category
  android:name= \"android.intent.category.BROWSABLE\" /\>        \`\`\<data
  android:scheme= \"yourappscheme\" /\>    \`\`\</intent-filter\> \</activity\>
  -----------------------------------------------------------------------------

  -----------------------------------------------------------------------------

где "yourappscheme" --- схема вашего deeplink, может быть изменена на
другую.

Эта схема должна совпадать со схемой, передаваемой в методе init().

Экспорт проекта с подклюенным плагином

Чтобы плагин стал доступным в вашем Godot проекте, его необходимо
включить в настройках экспорта.

После всех настроек вы можете использовать плагин в своем проекте.

Инициализация

Перед вызовом методов библиотеки необходимо выполнить ее инициализацию.
Для инициализации вызовите метод init():

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  if Engine.has_singleton( \"RustoreBilling\" ):        \`\`billing  = Engine.get_singleton( \"RustoreBilling\" )                \`\`billing.init( \"123456\" ,  \"yourappscheme://iamback\"
  )                \`\`billing.rustore_is_available.connect(\_on_availability)        \`\`billing.rustore_purchase_product.connect(\_on_purchase)        \`\`billing.rustore_delete_purchase.connect(\_on_delete)        \`\`billing.rustore_confirm_purchase.connect(\_on_confirm)        \`\`billing.rustore_get_purchases.connect(\_on_get_purchases)        \`\`billing.rustore_get_purchase.connect(\_on_get_purchase)        \`\`billing.rustore_get_products.connect(\_on_get_products)
  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-   123456 --- код приложения из RuStore Консоли
    (пример: https://console.rustore.ru/apps/123456).

-   yourappscheme://iamback--- cхема deeplink, необходимая для возврата
    в ваше приложение после оплаты через стороннее приложение (например,
    SberPay или СБП). SDK генерирует свой хост к данной схеме.

Важно, чтобы схема deeplink, передаваемая в deeplinkScheme, совпадала со
схемой, указанной в AndroidManifest.xml в разделе «Обработка deeplink».

После инициализации плагина выполняется подключение ко всем доступным
сигналам.

Проверка доступности работы с платежами

Для проверки доступности платежей необходимы следующие условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность платежей.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок в RuStore
    Консоли.

Если все условия выполняются, метод isAvailable() возвращает значение
true.

  -----------------------------------------------------------------------
  func \_availability():    \`\`if billing ! =
  null:        \`\`billing.isAvailable()func \_on_availability(data:
  Dictionary):    \`\`if data\[ \'status\' \]  = = \'success\'
  :        \`\`print ( \'success\' )        \`\`print (data\[ \'result\'
  \])    \`\`elif data\[ \'status\' \]  = = \'failure\'
  :        \`\`print ( \'failure\' )        \`\`print (data\[ \'message\'
  \])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод \_on_availability(data: Dictionary) --- это обработчик сигнала
rustore_is_available, который получает сообщение о доступности RuStore.

По ключу data\['status'\] хранится статус выполнения запроса. Возможные
значения:

-   success --- удачное выполнение запроса. В этом случае по ключу
    data\['result'\] будет храниться true, если RuStore доступен и
    false, если недоступен.

-   failure --- произошла ошибка запроса. В ключе data\['message'\]
    хранится сообщение ошибки.

Получение списка продуктов

Для получения продуктов необходимо использовать метод getProducts(ids):

  -----------------------------------------------------------------------
  func \_get_products():    \`\`if billing ! =
  null:        \`\`billing.getProducts(\[            \`\`\"example1\"
  ,            \`\`\"example2\"        \`\`\])func
  \_on_get_products(data: Dictionary):     \`\`if data\[ \'status\' \]  =
  = \'success\' and data.has( \'items\' ):        \`\`var items  = data\[
  \'items\' \]        \`\`for key  in items:            \`\`print
  (items\[key\])    \`\`elif data\[ \'status\' \]  = = \'failure\'
  :        \`\`print ( \'failure\' )        \`\`print (data\[ \'message\'
  \])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод \_on_get_products(data: Dictionary) --- это обработчик сигнала
rustore_get_products, который получает сообщение со списком доступных
товаров.

-   ids --- список идентификаторов продуктов.

По ключу data\['status'\]  хранится статус выполнения запроса. Возможные
значения:

-   success --- удачное выполнение запроса. В этом случае по ключу
    data\['items'\] будет храниться список доступных продуктов.

-   failure --- произошла ошибка запроса. В ключе data\['message'\]
    хранится сообщение ошибки.

Доступные поля продукта:

-   product_id --- идентификатор продукта;

-   product_type --- тип продукта;

-   product_status --- статус продукта;

-   price_lable --- отформатированная цена товара, включая валютный знак
    на языке \[language\];

-   price --- цена в минимальных единицах (в копейках);

-   currency --- код валюты ISO 4217;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   title --- название продукта на языке \[language\];

-   description --- описание продукта на языке \[language\];

-   image_url --- ссылка на картинку;

-   promo_image_url --- ссылка на промо картинку;

-   subscription --- описание подписки, возвращается только для
    продуктов с типом subscription.

Доступные поля subscription

-   subscription_period --- период подписки;

-   free_trial_period --- пробный период подписки;

-   grace_period --- льготный период подписки;

-   introductory_price --- отформатированная вступительная цена
    подписки, включая знак валюты, на языке product:language;

-   introductory_price_amount --- вступительная цена в минимальных
    единицах валюты (в копейках);

-   introductory_price_period --- расчетный период вступительной цены.

Доступные поля для кючей  subscription_period, free_trial_period,
grace_period и introductory_price_period

-   years --- количество лет;

-   months --- количество месяцев;

-   days --- количество дней.

Получение списка покупок

Для получения списка покупок необходимо использовать метод
getPurchases():

  -----------------------------------------------------------------------
  func \_get_purchases():    \`\`if billing ! =
  null:        \`\`billing.getPurchases()func \_on_get_purchases(data:
  Dictionary):    \`\`if data\[ \'status\' \]  = = \'success\' and
  data.has( \'items\' ):        \`\`var items  = data\[ \'items\'
  \]        \`\`for key  in items:            \`\`print
  (items\[key\])    \`\`elif data\[ \'status\' \]  = = \'failure\'
  :        \`\`print ( \'failure\' )        \`\`print (data\[ \'message\'
  \])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод \_on_get_purchases(data: Dictionary) --- это обработчик сигнала
rustore_get_purchases, который получает сообщение со списком покупок.

По ключу data\['status'\]  хранится статус выполнения запроса. Возможные
значения:

-   success --- удачное выполнение запроса. В этом случае по ключу
    data\['items'\] будет храниться список покупок.

-   failure --- произошла ошибка запроса. В ключе data\['message'\]
    хранится сообщение ошибки.

Доступные поля покупки

-   purchase_id --- идентификатор покупки;

-   product_id --- идентификатор продукта;

-   product_type --- тип продукта;

-   invoice_id --- идентификатор счета;

-   description --- описание покупки;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   purchase_time --- время покупки (в формате RFC 3339);

-   order_id --- уникальный идентификатор оплаты, сформированный
    приложением (uuid);

-   amount_lable --- отформатированная цена покупки, включая валютный
    знак на языке \[language\];

-   amount --- цена в минимальных единицах валюты;

-   currency --- код валюты ISO 4217;

-   quantity --- количество продукта;

-   purchase_state --- состояние покупки;

-   developer_payload --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе;

-   subscription_token --- токен для валидации покупки на сервере.
    Подробнее о валидации покупки на сервере читайте в
    разделе «Серверная валидация покупки».

Возможные значения состояния покупки:

-   CREATED --- создана;

-   INVOICE_CREATED --- создана, ожидает оплаты;

-   CONFIRMED --- подтверждена;

-   PAID --- оплачена;

-   CANCELLED --- покупка отменена;

-   CONSUMED --- потребление покупки подтверждено;

-   CLOSED --- подписка была отменена.

Подробнее о статусной модели покупки читайте в разделе «Получение списка
покупок пользователя».

Получение информации о покупке

Для получения списка покупок необходимо использовать метод
purchaseInfo():

  -----------------------------------------------------------------------
  func \_purchase_info( id : String):    \`\`if billing ! =
  null:        \`\`billing.purchaseInfo( id )func \_on_get_purchase(data:
  Dictionary):    \`\`if data\[ \'status\' \]  = = \'success\'
  :        \`\`print ( \'success\' )        \`\`print (data\[
  \'purchase\' \])    \`\`elif data\[ \'status\' \]  = = \'failure\'
  :        \`\`print ( \'failure\' )        \`\`print (data\[ \'message\'
  \])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод \_on_get_purchase(data: Dictionary) --- это обработчик сигнала
rustore_get_purchase, который получает сообщение с информацией о
покупке.

-   id --- идентификатор покупки.

По ключу data\['status'\] хранится статус выполнения запроса. Возможные
значения:

-   success --- удачное выполнение запроса. В этом случае по ключу
    data\['items'\] будет храниться список покупок.

-   failure --- произошла ошибка запроса. В ключе data\['message'\]
    хранится сообщение ошибки.

Доступные поля покупки data\['purchase'\]

-   purchase_id --- идентификатор покупки;

-   product_id --- идентификатор продукта;

-   product_type --- тип продукта;

-   invoice_id --- идентификатор счета;

-   description --- описание покупки;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   purchase_time --- время покупки (в формате RFC 3339);

-   order_id --- уникальный идентификатор оплаты, сформированный
    приложением (uuid);

-   amount_lable --- отформатированная цена покупки, включая валютный
    знак на языке \[language\];

-   amount --- цена в минимальных единицах валюты;

-   currency --- код валюты ISO 4217;

-   quantity --- количество продукта;

-   purchase_state --- состояние покупки;

-   developer_payload --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе;

-   subscription_token --- токен для валидации покупки на сервере.
    Подробнее о валидации покупки на сервере читайте в
    разделе «Серверная валидация покупки».

<!-- -->

-   Возможные значения состояния покупки:

<!-- -->

-   CREATED --- создана;

-   INVOICE_CREATED --- создана, ожидает оплаты;

-   CONFIRMED --- подтверждена;

-   PAID --- оплачена;

-   CANCELLED --- покупка отменена;

-   CONSUMED --- потребление покупки подтверждено;

-   CLOSED --- подписка была отменена.

Подробнее о статусной модели покупки читайте в разделе «Получение списка
покупок пользователя».

Покупка продукта

Для совершения покупки вы можете использовать метод purchaseProduct(id):

  -----------------------------------------------------------------------
  func \_purchase( id : String):    \`\`var params  =
  {        \`\`\"order_id\" :  \"1234\" ,        \`\`\"quantity\" :  1
  ,        \`\`\"payload\" :  \"example\"    \`\`}    \`\`if billing ! =
  null:        \`\`billing.purchaseProduct( id , params)func
  \_on_purchase(data: Dictionary):    \`\`if data\[ \'status\' \]  = =
  \'cancelled\' :        \`\`print ( \'cancelled\' )        \`\`if data\[
  \'purchase\' \] ! = \'\':            \`\`\_delete(data\[ \'purchase\'
  \])    \`\`elif data\[ \'status\' \]  = = \'success\'
  :        \`\`print ( \'success\' )        \`\`print (data)    \`\`elif
  data\[ \'status\' \]  = = \'failure\' :        \`\`print ( \'failure\'
  )        \`\`print (data\[ \'message\' \])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод \_on_purchase(data: Dictionary) --- это обработчик сигнала
rustore_purchase_product, который получает сообщение с информацией о
покупке.

-   id --- идентификатор продукта;

-   order_id --- идентификатор заказа, создаётся на стороне AnyApp
    (опционально. Если не указан, то генерируется автоматически);

-   quantity --- количество продуктов (опционально);

-   payload --- дополнительная информация от разработчика AnyApp
    (опционально).

По ключу data\['status'\] хранится статус выполнения запроса. Возможные
значения:

-   success --- удачное выполнение запроса.

-   failure --- произошла ошибка запроса. В ключе data\['message'\]
    хранится сообщение ошибки.

-   cancelled --- пользователь отменил покупку.

Доступные поля покупки

-   purchase_id --- идентификатор покупки;

-   order_id --- идентификатор заказа, создаётся на стороне AnyApp
    (опционально. Если не указан, то генерируется автоматически);

-   invoice_id --- идентификатор счета;

-   product_id --- идентификатор продукта;

-   quantity --- количество продуктов (опционально);

-   payload --- дополнительная информация от разработчика AnyApp
    (опционально).

-   error_code --- код ошибки, если запрос в статусе failure.

Подтверждение покупки

RuStore содержит продукты следующих типов:

-   CONSUMABLE --- потребляемый (можно купить много раз, например,
    кристаллы в приложении).

-   NON_CONSUMABLE - непотребляемый (можно купить один раз, например,
    отключение рекламы в приложении).

-   SUBSCRIPTION --- подписка (можно купить на период времени, например,
    подписка в стриминговом сервисе).

Потребления требуют только продукты типа CONSUMABLE, если они находятся
в состоянии purchase_state == "PAID".

Для потребления покупки вы можете использовать метод
confirmPurchase(id):

  -----------------------------------------------------------------------
  func \_confirm( id : String):    \`\`var params  =
  {        \`\`\"payload\" :  \"123\"    \`\`}    \`\`if billing ! =
  null:        \`\`billing.confirmPurchase( id , params)func
  \_on_confirm(data: Dictionary):    \`\`print (data)    \`\`if data\[
  \'status\' \]  = = \'success\' :        \`\`print ( \'success\' )
       \`\`elif data\[ \'status\' \]  = = \'failure\' :        \`\`print
  ( \'failure\' )        \`\`print (data\[ \'message\' \])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод \_on_confirm(data: Dictionary) это обработчик сигнала
rustore_get_purchase, который получает сообщение с информацией о
покупке.

-   id --- идентификатор покупки.

-   payload --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе (опционально).

По ключу data\['status'\] хранится статус выполнения запроса. Возможные
значения:

-   success --- удачное выполнение запроса.

-   failure --- произошла ошибка запроса. В ключе data\['message'\]
    хранится сообщение ошибки

Отмена покупки

Для отмены покупки вы можете использовать метод deletePurchase(id):

  -----------------------------------------------------------------------
  func \_delete( id : String):    \`\`if billing ! =
  null:        \`\`billing.deletePurchase( id )func \_on_delete(data:
  Dictionary):    \`\`print (data)    \`\`if data\[ \'status\' \]  = =
  \'success\' :        \`\`print ( \'success\' )    \`\`elif data\[
  \'status\' \]  = = \'failure\' :        \`\`print ( \'failure\'
  )        \`\`print (data\[ \'message\' \])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод \_on_delete(data: Dictionary) --- это обработчик сигнала
rustore_delete_purchase, который получает сообщение об удалении покупки.

-   id --- идентификатор покупки.

По ключу data\['status'\] хранится статус выполнения запроса. Возможные
значения:

-   success --- удачное выполнение запроса.

-   failure --- произошла ошибка запроса. В ключе data\['message'\]
    хранится сообщение ошибки.

Используйте этот метод, если у вас есть логика, завязанная на удалении
покупки. Покупка отменяется автоматически через таймаут в 20 минут, либо
при повторной покупке от того же клиента.

React Native

Общая информация

Пример реализации

Для того, чтобы узнать как правильно интегрировать платежи,
рекомендуется ознакомиться с приложением-примером в папке example:

https://gitflic.ru/project/rustore/react-native-rustore-billing-sdk/file?file=example

Условия работы платежей

Для работы проведения платежей необходимо соблюдение следующих условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок в RuStore
    Консоли.

Подключение в проект

Для подключения пакета к проекту нужно выполнить команду:

  -----------------------------------------------------------------------
  // HTTPSnpm  install git+https: //git \@gitflic.ru:rustore
  /react-native-rustore-billing-sdk .git// SSHnpm  install git+ ssh :
  //git \@gitflic.ru:rustore /react-native-rustore-billing-sdk .git
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка deeplink

Для корректной работы оплаты через сторонние приложения (СБП или
SberPay), вам необходимо правильно реализовать обработку deeplink. Для
этого необходимо указать в AndroidManifest.xml intent-filter со схемой
вашего проекта:

  -----------------------------------------------------------------------
  \< activity    \`\`android:name = \".sample.MainActivity\"
  \>     \`\`\< intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.MAIN\" /\>        \`\`\< category android:name
  = \"android.intent.category.LAUNCHER\" /\>    \`\`\</ intent-filter
  \>     \`\`\< intent-filter \>        \`\`\< action android:name =
  \"android.intent.action.VIEW\" /\>        \`\`\< category android:name
  = \"android.intent.category.DEFAULT\" /\>        \`\`\< category
  android:name = \"android.intent.category.BROWSABLE\" /\>        \`\`\<
  data android:scheme = \"yourappscheme\" /\>    \`\`\</ intent-filter
  \> \</ activity \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где "yourappscheme" --- схема вашего deeplink, может быть изменена на
другую.

Эта схема должна совпадать со схемой, передаваемой в методе
RustoreBillingClient. initialize() .

Инициализация

Перед вызовом методов библиотеки необходимо выполнить ее инициализацию.
Для инициализации вызовете метод RustoreBillingClient.initialize():

  ------------------------------------------------------------------------
  try
  {  \`\`RustoreBillingClient.initialize({    \`\`consoleApplicationId: 
  \'appId\' ,    \`\`deeplinkScheme:  \'scheme\'
  ,  \`\`});  \`\`\`console.log(initialize success:
  \${result});\`\`\<br\>} catch(err) {\<br\>  \`console.log(\`initialize
  err: \${err}\`);}
  ------------------------------------------------------------------------

  ------------------------------------------------------------------------

-   consoleApplicationId --- код приложения из консоли разработчика
    RuStore (пример: https://console.rustore.ru/apps/123456).

-   deeplinkScheme --- cхема deeplink, необходимая для возврата в ваше
    приложение после оплаты через стороннее приложение (например,
    SberPay или СБП). SDK генерирует свой хост к данной схеме.

Важно, чтобы схема deeplink, передаваемая в deeplinkScheme, совпадала со
схемой, указанной в AndroidManifest.xml в разделе «Обработка deeplink»
выше.

Проверка доступности работы с платежами

Для проверки доступности платежей необходимы следующие условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность платежей.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок в RuStore
    Консоли.

Если все условия выполняются, метод
RustoreBillingClient.checkPurchasesAvailability() возвращает значение
true.

  ---------------------------------------------------------------------------------
  try {  \`\`const isAvailable = await
  RustoreBillingClient.checkPurchasesAvailability();  \`\`\`console.log(available
  success \${isAvailable});\`\`\<br\>} catch(err)
  {\<br\>  \`console.log(\`available error \${err}\`);} 
  ---------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------

Получение списка продуктов

Для получения продуктов необходимо использовать метод
RustoreBillingClient.getProducts(productIds):

  -----------------------------------------------------------------------
  try {  \`\`const products = await
  RustoreBillingClient.getProducts(productIds);  \`\`for (const product
  of products) {    \`\`console.log(product?.productId);  \`\`}}  catch
  (err) {  \`\`\`console.log(products err: \${err});\`\`\<br\>}\`
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   productIds --- список идентификаторов продуктов.

Метод возвращает список продуктов \`Product\[\]\`. Ниже представлена
модель продукта:

  -----------------------------------------------------------------------
  interface Product {    \`\`productId: string;    \`\`productType?:
  ProductType;    \`\`productStatus: ProductStatus;    \`\`priceLabel?:
  string;    \`\`price?: number;    \`\`currency?:
  string;    \`\`language?: string;    \`\`title?:
  string;    \`\`description?: string;    \`\`imageUrl?:
  string;    \`\`promoImageUrl?: string;    \`\`subscription?:
  ProductSubscription;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   productId --- идентификатор продукта.

-   productType --- тип продукта.

-   productStatus --- статус продукта.

-   priceLabel --- отформатированная цена товара, включая валютный знак
    на языке \[language\].

-   price --- цена в минимальных единицах.

-   currency --- код валюты ISO 4217.

-   language --- язык, указанный с помощью BCP 47 кодирования.

-   title --- название продукта на языке \[language\].

-   description --- описание продукта на языке \[language\].

-   imageUrl --- ссылка на картинку.

-   promoImageUrl --- ссылка на промо картинку.

-   subscription --- описание подписки, возвращается только для
    продуктов с типом subscription.

Структура подписки Subscription:

  -----------------------------------------------------------------------
  interface ProductSubscription {  \`\`subscriptionPeriod?:
  SubscriptionPeriod;  \`\`freeTrialPeriod?:
  SubscriptionPeriod;  \`\`gracePeriod?:
  SubscriptionPeriod;  \`\`introductoryPrice?:
  string;  \`\`introductoryPriceAmount?:
  string;  \`\`introductoryPricePeriod?: SubscriptionPeriod;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   subscriptionPeriod --- период подписки.

-   freeTrialPeriod --- пробный период подписки.

-   gracePeriod --- льготный период подписки.

-   introductoryPrice --- отформатированная вступительная цена подписки,
    включая знак валюты, на языке product:language.

-   introductoryPriceAmount  --- вступительная цена в минимальных
    единицах валюты (в копейках).

-   introductoryPricePeriod --- расчетный период вступительной цены.

Структура периода подписки SubscriptionPeriod:

  -----------------------------------------------------------------------
  interface SubscriptionPeriod {    \`\`years: number;    \`\`months:
  number;    \`\`days: number;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   years --- количество лет.

-   months --- количество месяцев.

-   days --- количество дней.

Получение списка покупок

Для получения списка покупок необходимо использовать метод
RustoreBillingClient.getPurchases():

  -----------------------------------------------------------------------
  try {  \`\`const purchases = await
  RustoreBillingClient.getPurchases();  \`\`for (const purchase of
  purchases) {    \`\`console.log(purchase?.purchaseId);  \`\`}}  catch
  (err) {  \`\`\`console.log(purchase err: \${err});\`\`\<br\>}\`
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод возвращает список покупок \`Purchase\[\]\`. Ниже представлена
модель покупки:

  -----------------------------------------------------------------------
  interface Purchase {    \`\`purchaseId?: string;  \`\`productId:
  string;  \`\`productType?: ProductType;  \`\`invoiceId?:
  string;  \`\`description?: string;  \`\`language?:
  string;  \`\`purchaseTime?: string;  \`\`orderId?:
  string;  \`\`amountLabel?: string;  \`\`amount?:
  number;  \`\`currency?: string;  \`\`quantity?:
  number;  \`\`purchaseState?: PurchaseState;  \`\`developerPayload?:
  string;  \`\`subscriptionToken?: string;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки.

-   productId --- идентификатор продукта.

-   productType --- тип продукта.

-   invoiceId --- идентификатор счета.

-   description --- описание покупки.

-   language --- язык, указанный с помощью BCP 47 кодирования.

-   purchaseTime --- время покупки (в формате RFC 3339).

-   orderId --- уникальный идентификатор оплаты, сформированный
    приложением (uuid).

-   amountLable --- отформатированная цена покупки, включая валютный
    знак на языке \[language\].

-   amount --- цена в минимальных единицах валюты.

-   currency --- код валюты ISO 4217.

-   quantity --- количество продукта.

-   purchaseState - состояние покупки.

    -   Возможные значения состояния покупки:

        -   CREATED --- создана.

        -   INVOICE_CREATED --- создана, ожидает оплаты.

        -   CONFIRMED --- подтверждена.

        -   PAID --- оплачена.

        -   CANCELLED --- покупка отменена.

        -   CONSUMED --- потребление покупки подтверждено.

        -   CLOSED --- подписка была отменена.

        -   TERMINATED--- подписка завершена.

<!-- -->

-   developerPayload --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе.

-   subscriptionToken --- токен для валидации покупки на сервере.

Получение конкретной покупки

Для получения конкретной покупки необходимо использовать метод
RustoreBillingClient.getPurchaseInfo(purchaseId):

  -----------------------------------------------------------------------
  try {  \`\`const purchase = await RustoreBillingClient.getPurchaseInfo(
  \'purchaseId\' );  \`\`console.log(purchase?.purchaseId);}  catch (err)
  {  \`\`\`console.log(purchase err: \${err});\`\`\<br\>}\`
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки.

Метод возвращает Purchase, который описан выше.

Покупка продукта

Для вызова покупки продукта используйте метод
\`RustoreBillingClient.purchaseProduct({...})\`:

  -----------------------------------------------------------------------
  try {  \`\`const response = await
  RustoreBillingClient.purchaseProduct({    \`\`productId:  \'productId\'
  ,    \`\`orderId:  \'orderId\' ,    \`\`quantity:
  0,    \`\`developerPayload: 
  \'developerPayload\'  \`\`});  \`\`\`console.log(purchase success:
  \${response});\`\`\<br\>} catch(err) {\<br\>  \`console.log(\`purchase
  err: \${err}\`);}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   productId --- идентификатор продукта.

-   orderId --- идентификатор заказа, создаётся на стороне AnyApp
    (опционально. Если не указан, то генерируется автоматически).

-   quantity --- количество продуктов (опционально).

-   developerPayload --- дополнительная информация от разработчика
    AnyApp (опционально).

Результатом покупки может быть один из следующих интерфейсов:
SuccessPayment, CancelledPayment или FailurePayment:

  -----------------------------------------------------------------------
  enum PaymentResult {  \`\`SUCCESS =  \'SUCCESS\' ,  \`\`CANCELLED = 
  \'CANCELLED\' ,  \`\`FAILURE =  \'FAILURE\' ,}interface
  SuccessPaymentResult {  \`\`orderId?: string;  \`\`purchaseId:
  string;  \`\`productId: string;  \`\`invoiceId:
  string;  \`\`subscriptionToken?: string;}interface SuccessPayment
  {  \`\`type: PaymentResult.SUCCESS;  \`\`result:
  SuccessPaymentResult;}interface CancelledPaymentResult
  {  \`\`purchaseId: string;}interface CancelledPayment {  \`\`type:
  PaymentResult.CANCELLED;  \`\`result: CancelledPaymentResult;}interface
  FailurePaymentResult {  \`\`purchaseId?: string;  \`\`invoiceId?:
  string;  \`\`orderId?: string;  \`\`quantity?: number;  \`\`productId?:
  string;  \`\`errorCode?: number;}interface FailurePayment {  \`\`type:
  PaymentResult.FAILURE;  \`\`result: FailurePaymentResult;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   SuccessPayment --- результат успешного завершения покупки цифрового
    товара.

-   FailurePayment --- результат ошибки покупки цифрового товара.

-   CancelledPayment --- результат отмены покупки цифрового товара.

Подтверждение покупки

RuStore содержит продукты следующих типов:

-   CONSUMABLE --- потребляемый (можно купить много раз, например
    кристаллы в приложении).

-   NON_CONSUMABLE --- непотребляемый (можно купить один раз, например
    отключение рекламы в приложении).

-   SUBSCRIPTION --- подписка (можно купить на период времени, например
    подписка в стриминговом сервисе).

Потребления требуют только продукты типа CONSUMABLE, если они находятся
в состоянии PurchaseState.PAID.

Для потребления покупки вы можете использовать метод
RustoreBillingClient.confirmPurchase({...}):

  -----------------------------------------------------------------------
  try {  \`\`const isConfirmed = await
  RustoreBillingClient.confirmPurchase({    \`\`purchaseId: 
  \'purchaseId\' ,    \`\`developerPayload: 
  \'developerPayload\'  \`\`})  \`\`\`console.log(confirm success:
  \${isConfirmed});\`\`\<br\>} catch(err)
  {\<br\>  \`console.log(\`confirm err: \${err}\`);}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки.

-   developerPayload --- указанная разработчиком строка, содержащая
    дополнительную информацию.

Если все условия выполняются, метод
RustoreBillingClient.confirmPurchase() возвращает значение true.

Отмена покупки

Для отмены покупки вы можете использовать метод
RustoreBillingClient.deletePurchase(purchaseId):

  -----------------------------------------------------------------------
  try {  \`\`const isDeleted = await
  RustoreBillingClient.deletePurchase(purchaseId)  \`\`\`console.log(
  \`delete\`success: \${isDeleted});\`\`\<br\>} catch(err)
  {\<br\>  \`console.log(\` delete err: \${err}\`);}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки.

Если все условия выполняются, метод
RustoreBillingClient.deletePurchase() возвращает значение true.

Используйте этот метод, если у вас есть логика, завязанная на удалении
покупки. Покупка отменяется автоматически через таймаут в 20 минут, либо
при повторной покупке от того же клиента.

Сценарий потребления и отмены покупки

Обработка незавершённых платежей должна производиться разработчиком
AnyApp.

Метод отмены покупки (deletePurchase) необходимо использовать, если:

-   Метод получения списка покупок (getPurchases) вернул покупку со
    статусом:

    -   PurchaseState.CREATED.

    -   PurchaseState.INVOICE_CREATED.

<!-- -->

-   Метод покупки (purchaseProduct) вернул PaymentResult.Cancelled.

-   Метод покупки (purchaseProduct) вернул PaymentResult.Failure.

Метод потребления продукта (confirmPurchase) необходимо использовать,
если метод получения списка покупок (getPurchases) вернул покупку типа
CONSUMABLE со статусом PurchaseState.PAID.

Flutter

Общая информация

**Пример реализации**

Чтобы узнать как правильно интегрировать платежи, ознакомьтесь
с приложением-примером: https://gitflic.ru/project/rustore/flutter-rustore-billing

**Условия работы платежей**

Для работы проведения платежей необходимо соблюдение всех условий:

-   На устройстве пользователя установлено приложение RuStore.

-   Пользователь авторизован в приложении RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения включена возможность покупок в системе RuStore
    Консоль.

Сервис имеет некоторые ограничения на работу за пределами РФ.

Подключение в проект

Для подключения пакета платежей к проекту выполните команду:

  -----------------------------------------------------------------------
  flutter pub add flutter_rustore_billing
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Эта команда добавит строчку в файл pubspec.yaml.

  -----------------------------------------------------------------------
  dependencies:  \`\`flutter_rustore_billing: \^3 .0 .0
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка deeplink

Для корректной работы оплаты через сторонние приложения (СБП или
SberPay) вам необходимо правильно реализовать обработку deeplink. Для
этого укажите в AndroidManifest.xml intent-filter с scheme вашего
проекта:

  -----------------------------------------------------------------------------
  \<activity    \`\`android:name= \".sample.MainActivity\"
  \>     \`\`\<intent-filter\>        \`\`\<action android:name=
  \"android.intent.action.MAIN\" /\>        \`\`\<category android:name=
  \"android.intent.category.LAUNCHER\"
  /\>    \`\`\</intent-filter\>     \`\`\<intent-filter\>        \`\`\<action
  android:name= \"android.intent.action.VIEW\" /\>        \`\`\<category
  android:name= \"android.intent.category.DEFAULT\" /\>        \`\`\<category
  android:name= \"android.intent.category.BROWSABLE\" /\>        \`\`\<data
  android:scheme= \"yourappscheme\" /\>    \`\`\</intent-filter\> \</activity\>
  -----------------------------------------------------------------------------

  -----------------------------------------------------------------------------

где «yourappscheme» --- схема вашего deeplink, может быть изменена на
другую.

Эта схема должна совпадать со схемой, передаваемым в методе
initialize().

Инициализация

Перед вызовом методов библиотеки необходимо выполнить ее инициализацию.
Для инициализации вызовете метод RustoreBillingClient.initialize():

  -----------------------------------------------------------------------
  RustoreBillingClient.initialize(      \`\`\"123456\"
  ,      \`\`\"yourappscheme://iamback\" ,    \`\`).then((value)
  {      \`\`print( \"initialize success: \$value\" );    \`\`}, onError:
  (err) {      \`\`print( \"initialize err: \$err\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   123456 --- код приложения из консоли разработчика RuStore
    (пример: https://console.rustore.ru/apps/123456).

-   yourappscheme://iamback --- cхема deeplink, необходимая для возврата
    в ваше приложение после оплаты через стороннее приложение (например,
    SberPay или СБП). SDK генерирует свой хост к данной схеме.

Важно, чтобы схема deeplink, передаваемая в deeplinkScheme, совпадала со
схемой, указанной в AndroidManifest.xml в разделе «Обработка deeplink».

Проверка доступности работы с платежами

Для проверки доступности платежей необходимы следующие условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность платежей.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок
    в системе RuStore Консоль.

Если все условия выполняются, метод RustoreBillingClient.available()
возвращает значение true.

  -----------------------------------------------------------------------
  RustoreBillingClient.available().then((value) {        \`\`print(
  \"available success \$value\" );}, onError: (err) {        \`\`print(
  \"available err: \$err\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Получение списка продуктов

Для получения продуктов необходимо использовать метод
RustoreBillingClient.products(ids):

  -----------------------------------------------------------------------
  RustoreBillingClient.products(ids).then((response) {      \`\`for (
  final product in response.products)
  {        \`\`print(product?.productId);      \`\`}}, onError: (err)
  {      \`\`print( \"products err: \$err\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   ids: List\<String?\> --- список идентификаторов продуктов.

Метод возвращает ProductsResponse:

  -----------------------------------------------------------------------
  class ProductsResponse {  \`\`int code;  \`\`String?
  errorMessage;  \`\`String? errorDescription;  \`\`String?
  traceId;  \`\`List\<Product?\>
  products;  \`\`List\<DigitalShopGeneralError?\> errors;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   code --- код ответа;

-   errorMessage --- сообщение об ошибке;

-   errorDescription --- описание ошибки;

-   traceId --- идентификатор ошибки;

-   errors --- список ошибок;

-   products --- список продуктов.

Структура ошибки DigitalShopGeneralError:

  -----------------------------------------------------------------------
  class DigitalShopGeneralError {  \`\`String? name;  \`\`int ?
  code;  \`\`String? description}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   name --- имя ошибки;

-   code --- код ошибки;

-   description --- описание ошибки.

Структура продукта Product:

  -----------------------------------------------------------------------
  class Product {  \`\`String productId;  \`\`String?
  productType;  \`\`String productStatus;  \`\`String?
  priceLabel;  \`\`int ? price;  \`\`String? currency;  \`\`String?
  language;  \`\`String? title;  \`\`String? description;  \`\`String?
  imageUrl;  \`\`String? promoImageUrl;  \`\`Subscription? subscription;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   productId --- идентификатор продукта;

-   productType --- тип продукта;

-   productStatus --- статус продукта;

-   priceLable --- отформатированная цена товара, включая валютный знак
    на языке \[language\];

-   price --- цена в минимальных единицах (в копейках);

-   currency --- код валюты ISO 4217;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   title --- название продукта на языке \[language\];

-   description --- описание продукта на языке \[language\];

-   imageUrl --- ссылка на картинку;

-   promoImageUrl --- ссылка на промо картинку;

-   subscription --- описание подписки, возвращается только для
    продуктов с типом subscription.

Структура подписки Subscription:

  -----------------------------------------------------------------------
  class Subscription {  \`\`SubscriptionPeriod?
  subscriptionPeriod;  \`\`SubscriptionPeriod?
  freeTrialPeriod;  \`\`SubscriptionPeriod? gracePeriod;  \`\`String?
  introductoryPrice;  \`\`String?
  introductoryPriceAmount;  \`\`SubscriptionPeriod?
  introductoryPricePeriod;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   subscriptionPeriod --- период подписки;

-   freeTrialPeriod --- пробный период подписки;

-   gracePeriod --- льготный период подписки;

-   introductoryPrice --- отформатированная вступительная цена подписки,
    включая знак валюты, на языке product:language;

-   introductoryPriceAmount --- вступительная цена в минимальных
    единицах валюты (в копейках);

-   introductoryPricePeriod --- расчетный период вступительной цены.

Структура периода подписки SubscriptionPeriod:

  -----------------------------------------------------------------------
  class SubscriptionPeriod {  \`\`int years;  \`\`int months;  \`\`int
  days;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   years --- количество лет;

-   months --- количество месяцев;

-   days --- количество дней.

Получение списка покупок

Для получения списка покупок необходимо использовать метод
RustoreBillingClient.purchases():

  -----------------------------------------------------------------------
  RustoreBillingClient.purchases().then((response) {      \`\`for ( final
  product in response.purchases)
  {        \`\`print(product?.purchaseId);      \`\`}}, onError: (err)
  {      \`\`print( \"purchases err: \$err\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод возвращает PurchasesResponse:

  -----------------------------------------------------------------------
  class PurchasesResponse {  \`\`int code;  \`\`String?
  errorMessage;  \`\`String? errorDescription;  \`\`String?
  traceId;  \`\`List\<Purchase?\>
  purchases;  \`\`List\<DigitalShopGeneralError?\> errors;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   code --- код ответа;

-   errorMessage --- сообщение об ошибке;

-   errorDescription --- описание ошибки;

-   traceId --- идентификатор ошибки;

-   errors --- список ошибок;

-   purchases --- список покупок.

Структура ошибки DigitalShopGeneralError:

  -----------------------------------------------------------------------
  class DigitalShopGeneralError {  \`\`String? name;  \`\`int ?
  code;  \`\`String? description;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   name --- наименование ошибки;

-   code --- код ошибки;

-   description --- описание ошибки.

Структура покупки Purchase:

  -----------------------------------------------------------------------
  class Purchase {  \`\`String? purchaseId;  \`\`String?
  productId;  \`\`String? description;  \`\`String?
  language;  \`\`String? purchaseTime;  \`\`String? orderId;  \`\`String?
  amountLabel;  \`\`int ? amount;  \`\`String? currency;  \`\`int ?
  quantity;  \`\`String? purchaseState;  \`\`String?
  developerPayload;  \`\`String? invoiceId;  \`\`String?
  subscriptionToken;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   purchaseId --- идентификатор покупки;

-   productId --- идентификатор продукта;

-   description --- описание покупки;

-   language --- язык, указанный с помощью BCP 47 кодирования;

-   purchaseTime --- время покупки;

-   orderId --- уникальный идентификатор оплаты, сформированный
    приложением (uuid);

-   amountLable --- отформатированная цена покупки, включая валютный
    знак на языке \[language\];

-   amount --- цена в минимальных единицах валюты (копейках);

-   currency --- код валюты ISO 4217;

-   quantity --- количество продукта;

-   purchaseState --- состояние покупки:

    -   возможные значения состояния покупки:

        -   CREATED --- создана;

        -   INVOICE_CREATED --- создана, ожидает оплаты;

        -   CONFIRMED --- подтверждена;

        -   PAID --- оплачена;

        -   CANCELLED --- покупка отменена;

        -   CONSUMED --- потребление покупки подтверждено;

        -   CLOSED --- подписка была отменена.

<!-- -->

-   developerPayload --- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе;

-   invoiceId --- идентификатор счёта;

-   subscriptionToken --- токен для валидации покупки на сервере.

Покупка продукта

Для вызова покупки продукта используйте метод
RustoreBillingClient.purchase(id):

  -----------------------------------------------------------------------
  RustoreBillingClient.purchase(id).then((response) {      \`\`print(
  \"purchase success: \$response\" );    \`\`}, onError: (err)
  {      \`\`print( \"purchase err: \$err\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   id --- идентификатор продукта.

Структура результата покупки PaymentResult:

  -----------------------------------------------------------------------
  class PaymentResult {  \`\`SuccessInvoice?
  successInvoice;  \`\`InvalidInvoice?
  invalidInvoice;  \`\`SuccessPurchase?
  successPurchase;  \`\`InvalidPurchase? invalidPurchase;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Структура  SuccessInvoice:

  -----------------------------------------------------------------------
  class SuccessInvoice {  \`\`String invoiceId;  \`\`String finishCode;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Структура InvalidInvoice:

  -----------------------------------------------------------------------
  class InvalidInvoice {  \`\`String? invoiceId;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Структура SuccessPurchase:

  -----------------------------------------------------------------------
  class SuccessPurchase {  \`\`String finishCode;  \`\`String?
  orderId;  \`\`String purchaseId;  \`\`String productId;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Структура InvalidPurchase:

  -----------------------------------------------------------------------
  class InvalidPurchase {  \`\`String? purchaseId;  \`\`String?
  invoiceId;  \`\`String? orderId;  \`\`int? quantity;  \`\`String?
  productId;  \`\`int? errorCode;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   SuccessInvoice --- платежи завершились с результатом;

-   InvalidInvoice --- платежи завершились без указания инвойса.
    Вероятно, они были запущены с некорректным инвойсом (пустая строка,
    например);

-   SuccessPurchase --- результат успешного завершения покупки цифрового
    товара;

-   InvalidPurchase --- при оплате цифрового товара платежи завершились
    c ошибкой.

Возможные статусы, которые может содержать finishCode:

-   SUCCESSFUL_PAYMENT --- успешная оплата;

-   CLOSED_BY_USER --- отменено пользователем;

-   UNHANDLED_FORM_ERROR --- неизвестная ошибка;

-   PAYMENT_TIMEOUT --- ошибка оплаты по таймауту;

-   DECLINED_BY_SERVER --- отклонено сервером;

-   RESULT_UNKNOWN --- неизвестный статус оплаты.

Потребление (подтверждение) покупки

Приложение RuStore содержит продукты следующих типов:

-   CONSUMABLE --- потребляемый (можно купить много раз, например
    кристаллы в приложении);

-   NON_CONSUMABLE --- непотребляемый (можно купить один раз, например
    отключение рекламы в приложении);

-   SUBSCRIPTION --- подписка (можно купить на период времени, например
    подписка в стриминговом сервисе).

Потребления требуют только продукты типа CONSUMABLE, если они находятся
в состоянии PurchaseState.PAID.

Для потребления покупки вы можете использовать
метод RustoreBillingClient.confirm(id):

  -----------------------------------------------------------------------
  RustoreBillingClient.confirm(id).then((response) {      \`\`print(
  \"confirm success: \$response\" );    \`\`}, onError: (err)
  {      \`\`print( \"confirm err: \$err\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   id --- идентификатор покупки.

Метод возвращает ConfirmPurchaseResponse:

  -----------------------------------------------------------------------
  class ConfirmPurchaseResponse {  \`\`int code;  \`\`String?
  errorMessage;  \`\`String? errorDescription;  \`\`String?
  traceId;  \`\`List\<DigitalShopGeneralError?\> errors;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   code --- код ответа;

-   errorMessage --- сообщение об ошибке для пользователя;

-   errorDescription --- расшифровка сообщения об ошибке;

-   traceId --- идентификатор ошибочного сообщения;

-   errors --- список ошибок.

Структура ошибки DigitalShopGeneralError:

  -----------------------------------------------------------------------
  class DigitalShopGeneralError {  \`\`String? name;  \`\`int ?
  code;  \`\`String? description;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   name --- наименование атрибута ошибки;

-   code --- код ошибки;

-   description --- описание ошибки.

Unreal Engine

Общая информация

Для работы платежей необходимо соблюдение следующих условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок
    в системе RuStore Консоль.

-   Версия Unreal Engine 4.26 или выше.

Подключение в проект

-   Скопируйте содержимое папки *"Plugins"* из официального
    репозитория RuStore на gitflic в папку *"Plugins"* внутри своего
    проекта. Перезапустите Unreal Engine, в списке плагинов (Edit →
    Plugins → Project → Mobile) отметьте плагины "RuStoreBilling" и
    "RuStoreCore".

-   Подключите модули модули "RuStoreCore" и "RuStoreBilling"
    d файле *"YourProject.Build.cs"* в списке
    PublicDependencyModuleNames.

-   В настройках проекта (Edit → Project Settings → Android) установите
    параметр Minimum SDK Version на уровень не ниже 24 и параметр Target
    SDK Version -- не ниже 31.

Обработка deeplink 

При оплате пользователем через SberPay происходит переход в приложение
Сбер. После завершения оплаты, должен быть переход обратно в приложение
с помощью deeplink. Для обработки deeplink плагин RuStore Billing
автоматически добавит в AndroidManifest.xml атрибут
android:exported="true" для главной activity и следующий intent-filter:

**AndroidManifest.xml**

  -----------------------------------------------------------------------
  \< intent-filter \>    \`\`\< action android:name =
  \"android.intent.action.VIEW\" /\>    \`\`\< category android:name =
  \"android.intent.category.DEFAULT\" /\>    \`\`\< category android:name
  = \"android.intent.category.BROWSABLE\" /\>    \`\`\< data
  android:scheme = \"yourscheme\" /\>\</ intent-filter \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где «yourscheme» --- схема вашего deeplink может быть изменена на
другую, и должна совпадать со значением deeplinkSheme указываемым при
инициализации библиотеки billing-клиента.

Изменить «yourscheme» на вашу схема можно в файле
«RuStoreCore_UPL_Android.xml».

Инициализация

Перед вызовом методов библиотеки необходимо выполнить ее инициализацию.
Параметры, с которыми будет выполняться инициализация, настраиваются с
помощью структуры FURuStoreBillingClientConfig.

**Инициализация**

  -----------------------------------------------------------------------
  FURuStoreBillingClientConfig config;config.consoleApplicationId = 
  \"111111\" ;config.deeplinkScheme =  \"yourscheme\"
  ;URuStoreBillingClient::Instance()-\>Init(config);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Все операции с клиентом также доступны из Blueprints. Пример
инициализации:

-   consoleApplicationId --- код приложения из консоли разработчика
    RuStore (пример: https://console.rustore.ru/apps/111111).

-   deeplinkSheme --- url для использования deeplink. В качестве
    названия может быть использовано любое уникальное имя (пример:
    yourappscheme).

-   allowNativeErrorHandling --- разрешить обработку ошибок в нативном
    SDK (см. подробнее в разделе Обработка ошибок)

-   enableLogs --- включить логгирование событий.

Важно:

-   Схема deeplink, передаваемая в deeplinkPrefix, совпадала с схемой,
    указанной в AndroidManifest.xml (подробнее в разделе «Обработка
    deeplink»).

-   Вызов Init() привязывает объект к корню сцены, и, если дальнейшая
    работа с объектом больше не планируется, для освобождения памяти
    необходимо выполнить метод Dispose().

Вызов метода Dispose() отвяжет объект от корня и безопасно завершит все
отправленные запросы.

**Деинициализация**

  -----------------------------------------------------------------------
  URuStoreBillingClient::Instance()-\>Dispose();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если вам нужно проверить факт инициализации библиотеки, используйте
свойство URuStoreBillingClient::Instance()-\>getIsInitialized(), его
значение true, если библиотека инициализирована, и false, если Init еще
не был вызван.

**Проверка инициализации**

  -----------------------------------------------------------------------
  bool isInitialized =
  URuStoreBillingClient::Instance()-\>IsIninialized();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка доступности работы с платежами

Для проверки доступности платежей, вызовите метод
CheckPurchasesAvailability. При его вызове проверяются следующие
условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность платежей.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Для приложения должна быть включена возможность покупок в
    системе RuStore Консоль.

Каждый запрос CheckPurchasesAvailability() возвращает уникальный в
рамках одного запуска приложения requestId. Каждое событие возвращает
requestId запроса, породившего это событие.

**Вызов метода CheckPurchasesAvailability**

  ------------------------------------------------------------------------------
  long requestId =
  URuStoreBillingClient::Instance()-\>CheckPurchasesAvailability(    \`\`\[\](
  long requestId, TSharedPtr\<FURuStoreFeatureAvailabilityResult,
  ESPMode::ThreadSafe\> response) {        \`\`// Process
  response    \`\`},    \`\`\[\]( long requestId, TSharedPtr\<FURuStoreError,
  ESPMode::ThreadSafe\> error) {        \`\`// Process error    \`\`});
  ------------------------------------------------------------------------------

  ------------------------------------------------------------------------------

Blueprint-реализация:

Колбэк Success возвращает структуру FURuStoreFeatureAvailabilityResult в
параметре Response:

**Ответ CheckPurchasesAvailability**

  -------------------------------------------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreFeatureAvailabilityResult{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreFeatureAvailabilityResult()    \`\`{        \`\`isAvailable
  =  false ;    \`\`}    \`\`UPROPERTY(BlueprintReadWrite)    \`\`bool isAvailable;        \`\`UPROPERTY(BlueprintReadWrite)    \`\`FURuStoreError
  cause;};
  -------------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------------

isAvailable -- выполнение условий выполнения платежей.

cause -- информация об ошибке.

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error. Все возможные ошибки FURuStoreException
описаны в разделе Обработка ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name -- имя ошибки.

-   description -- описание ошибки.

Получение списка продуктов

Для получения продуктов используйте метод GetProducts().

**Вызов метода GetProducts**

  ----------------------------------------------------------------------------------
  long requestId =
  URuStoreBillingClient::Instance()-\>GetProducts(    \`\`productIds,    \`\`\[\](
  long requestId, TSharedPtr\<FURuStoreProductsResponse, ESPMode::ThreadSafe\>
  response) {        \`\`// Process response    \`\`},    \`\`\[\]( long requestId,
  TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error) {        \`\`// Process
  error    \`\`});
  ----------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------

-   TArray productIds -- список идентификаторов продуктов.

Blueprint-реализация:

Колбэк Success возвращает структуру FURuStoreProductsResponse в
параметре Response:

**Ответ GetProducts**

  ----------------------------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct
  FURuStoreProductsResponse{    \`\`GENERATED_USTRUCT_BODY()    \`\`UPROPERTY(BlueprintReadOnly)    \`\`TArray\<FURuStoreProduct\>
  products;};
  ----------------------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------------------

-   products -- список продуктов.

**Структура продукта**

  -----------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct
  FURuStoreProduct{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreProduct()    \`\`{        \`\`productId
  =  \"\" ;        \`\`productType = EURuStoreProductType::NON_CONSUMABLE;        \`\`productStatus =
  EURuStoreProductStatus::INACTIVE;        \`\`priceLabel =  \"\" ;        \`\`price = 0;        \`\`currency
  =  \"\" ;        \`\`language =  \"\" ;        \`\`title =  \"\" ;        \`\`description =  \"\"
  ;        \`\`imageUrl =  \"\" ;        \`\`promoImageUrl =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  productId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`EURuStoreProductType
  productType;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`EURuStoreProductStatus
  productStatus;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  priceLabel;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int
  price;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  currency;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  language;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  title;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  description;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  imageUrl;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  promoImageUrl;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FURuStoreProductSubscription subscription;};
  -----------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------

-   productId - идентификатор продукта.

-   productType - тип продукта.

-   productStatus - статус продукта.

-   priceLable - отформатированная цена товара, включая валютный знак на
    языке FURuStoreProduct::language.

-   price - цена в минимальных единицах (копейках).

-   currency - код валюты ISO 4217.

-   language - язык, указанный с помощью BCP 47 кодирования.

-   title - название продукта на языке FURuStoreProduct::language.

-   description - описание продукта на языке FURuStoreProduct::language.

-   imageUrl - ссылка на картинку.

-   promoImageUrl - ссылка на промо картинку.

-   subscription - описание подписки, возвращается только для продуктов
    с типом subscription.

**Тип продукта**

  -----------------------------------------------------------------------
  UENUM(BlueprintType)enum class EURuStoreProductType :
  uint8{    \`\`NON_CONSUMABLE UMETA(DisplayName =  \"NON_CONSUMABLE\"
  ),    \`\`CONSUMABLE UMETA(DisplayName =  \"CONSUMABLE\"
  ),    \`\`SUBSCRIPTION UMETA(DisplayName =  \"SUBSCRIPTION\" )};  
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Статус продукта**

  -----------------------------------------------------------------------
  UENUM(BlueprintType)enum class EURuStoreProductStatus :
  uint8{    \`\`ACTIVE UMETA(DisplayName =  \"ACTIVE\" ),    \`\`INACTIVE
  UMETA(DisplayName =  \"INACTIVE\" )};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Структура подписки**

  -------------------------------------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct
  FURuStoreProductSubscription{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreProductSubscription()    \`\`{        \`\`introductoryPrice
  =  \"\" ;        \`\`introductoryPriceAmount =  \"\" ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FURuStoreSubscriptionPeriod
  subscriptionPeriod;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FURuStoreSubscriptionPeriod
  freeTrialPeriod;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FURuStoreSubscriptionPeriod
  gracePeriod;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString introductoryPrice;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  introductoryPriceAmount;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FURuStoreSubscriptionPeriod introductoryPricePeriod;};  
  -------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------

-   subscriptionPeriod -- период подписки.

-   freeTrialPeriod -- пробный период подписки.

-   gracePeriod -- льготный период подписки.

-   introductoryPrice -- отформатированная вступительная цена подписки,
    включая знак валюты, на языке FURuStoreProduct::language.

-   introductoryPriceAmount -- вступительная цена в минимальных единицах
    валюты (в копейках).

-   introductoryPricePeriod -- расчетный период вступительной цены.

**Структура для сроков периода подписки**

  -----------------------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct
  FURuStoreSubscriptionPeriod{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreSubscriptionPeriod()    \`\`{        \`\`years =
  1970;        \`\`months = 1;        \`\`days = 1;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int
  years;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int months;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int days;};
  -----------------------------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------------------------

-   years -- количество лет.

-   months -- количество месяцев.

-   days -- количество дней.

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error.

Все возможные ошибки FURuStoreException описаны в разделе Обработка
ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name -- имя ошибки.

-   description -- описание ошибки.

Получение списка покупок

Для получения списка покупок необходимо использовать метод
GetPurchases().

**Вызов метода получения списка покупок пользователя**

  -----------------------------------------------------------------------
  long requestId =
  URuStoreBillingClient::Instance()-\>GetPurchases(    \`\`\[\]( long
  requestId, TSharedPtr\<FURuStorePurchasesResponse,
  ESPMode::ThreadSafe\> response) {        \`\`// Process
  response    \`\`},    \`\`\[\]( long requestId,
  TSharedPtr\<FURuStoreRuStoreError, ESPMode::ThreadSafe\> error)
  {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Blueprint-реализация:

Колбэк Success возвращает структуру FURuStorePurchasesResponse в
параметре Response:

**Ответ GetPurchases**

  ------------------------------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct
  FURuStorePurchasesResponse{    \`\`GENERATED_USTRUCT_BODY()    \`\`UPROPERTY(BlueprintReadOnly)    \`\`TArray\<FURuStorePurchase\>
  purchases;};
  ------------------------------------------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------------------------------------------------

-   purchases -- список покупок.

**Структура с информацией о покупке**

  --------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct
  FURuStorePurchase{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStorePurchase()    \`\`{        \`\`purchaseId
  =  \"\" ;        \`\`productId =  \"\" ;        \`\`invoiceId =  \"\" ;        \`\`description =  \"\"
  ;        \`\`language =  \"\" ;        \`\`purchaseTime = FDateTime(0);        \`\`orderId =  \"\"
  ;        \`\`amountLabel =  \"\" ;        \`\`amount = 0;        \`\`currency =  \"\" ;        \`\`quantity =
  0;        \`\`purchaseState = EURuStorePurchaseState::CANCELLED;        \`\`developerPayload =  \"\"
  ;        \`\`subscriptionToken =  \"\" ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  purchaseId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  productId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  invoiceId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  description;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  language;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FDateTime
  purchaseTime;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  purchaseTimeLabel;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  orderId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  amountLabel;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int
  amount;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  currency;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int
  quantity;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`EURuStorePurchaseState
  purchaseState;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  developerPayload;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString subscriptionToken;};
  --------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------

-   purchaseId -- идентификатор покупки.

-   productId -- идентификатор продукта.

-   description -- описание покупки.

-   invoiceId -- идентификатор счета.

-   language -- язык, указанный с помощью BCP 47 кодирования.

-   purchaseTime -- время покупки

-   purchaseTimeLabel -- время покупки в формате DD.MM.YYYY HH:MM:SS

-   orderId -- уникальный идентификатор оплаты, сформированный
    приложением (uuid).

-   amountLable -- отформатированная цена покупки, включая валютный знак
    на языке FURuStorePurchase::language.

-   amount -- цена в минимальных единицах валюты.

-   currency -- код валюты ISO 4217.

-   quantity -- количество продукта.

-   purchaseState -- состояние покупки.

-   developerPayload -- указанная разработчиком строка, содержащая
    дополнительную информацию о заказе.

-   subscriptionToken -- токен для валидации покупки на сервере.

**Состояние покупки**

  -----------------------------------------------------------------------
  UENUM(BlueprintType)enum class EURuStorePurchaseState :
  uint8{    \`\`CREATED UMETA(DisplayName =  \"CREATED\"
  ),    \`\`INVOICE_CREATED UMETA(DisplayName =  \"INVOICE_CREATED\"
  ),    \`\`CONFIRMED UMETA(DisplayName =  \"CONFIRMED\" ),    \`\`PAID
  UMETA(DisplayName =  \"PAID UMETA\" ),    \`\`CANCELLED
  UMETA(DisplayName =  \"CANCELLED\" ),    \`\`CONSUMED UMETA(DisplayName
  =  \"CONSUMED\" ),    \`\`CLOSED UMETA(DisplayName =  \"CLOSED\" )};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   CREATED - создана.

-   INVOICE_CREATED - создана, ожидает оплаты.

-   CONFIRMED - подтверждена.

-   PAID - оплачена.

-   CANCELLED - покупка отменена.

-   CONSUMED - потребление покупки подтверждено.

-   CLOSED - подписка была отменена.

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error.

Все возможные ошибки FURuStoreException описаны в разделе Обработка
ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name -- имя ошибки.

-   description -- описание ошибки.

Получение информации о покупке

Для получения информации о покупке используйте метод GetPurchaseInfo:

**Вызов метода отмены покупки**

  --------------------------------------------------------------------------------------
  long requestId =
  URuStoreBillingClient::Instance()-\>GetPurchaseInfo(    \`\`purchaseId,    \`\`\[\](
  long requestId, TSharedPtr\<FURuStorePurchase, ESPMode::ThreadSafe\> response)
  {        \`\`// Process response    \`\`},       \`\`\[\]( long requestId,
  TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error) {        \`\`// Process
  error    \`\`});
  --------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------

-   purchaseId -- идентификатор покупки.

Blueprint-реализация:

Колбэк Success возвращает структуру FURuStorePurchase в параметре
Response:

**Структура с информацией о покупке**

  --------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct
  FURuStorePurchase{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStorePurchase()    \`\`{        \`\`purchaseId
  =  \"\" ;        \`\`productId =  \"\" ;        \`\`invoiceId =  \"\" ;        \`\`description =  \"\"
  ;        \`\`language =  \"\" ;        \`\`purchaseTime = FDateTime(0);        \`\`orderId =  \"\"
  ;        \`\`amountLabel =  \"\" ;        \`\`amount = 0;        \`\`currency =  \"\" ;        \`\`quantity =
  0;        \`\`purchaseState = EURuStorePurchaseState::CANCELLED;        \`\`developerPayload =  \"\"
  ;        \`\`subscriptionToken =  \"\" ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  purchaseId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  productId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  invoiceId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  description;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  language;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FDateTime
  purchaseTime;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  purchaseTimeLabel;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  orderId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  amountLabel;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int
  amount;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  currency;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int
  quantity;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`EURuStorePurchaseState
  purchaseState;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  developerPayload;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString subscriptionToken;};
  --------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке.

Все возможные ошибки FURuStoreException описаны в разделе Обработка
ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name -- имя ошибки.

-   description -- описание ошибки.

Покупка продукта

Для вызова покупки продукта необходимо использовать метод
PurchaseProduct().

**Вызов метода покупки продукта**

  -----------------------------------------------------------------------------------------------------------------------------------------------
  long requestId =
  URuStoreBillingClient::Instance()-\>PurchaseProduct(    \`\`productId,    \`\`orderId,    \`\`quantity,    \`\`developerPayload,    \`\`\[\](
  long requestId, TShardPtr\<FURuStorePaymentResult, ESPMode::ThreadSafe\> response) {        \`\`// Process response    \`\`},    \`\`\[\]( long
  requestId, TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error) {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------------------------------------------

-   string productId -- идентификатор продукта.

-   int quantity -- количество продуктов.

-   string developerPayload -- дополнительная информация от разработчика
    AnyApp.

Blueprint реализация:

Колбэк Success возвращает управляемый UE указатель (не требует ручного
удаления) на класс URuStorePaymentResultClass в параметре Response:

**Структура результата покупки**

  ------------------------------------------------------------------------
  UCLASS(BlueprintType)class RUSTOREBILLING_API URuStorePaymentResultClass
  :  public UObject{    \`\`GENERATED_BODY()};USTRUCT(BlueprintType)struct
  RUSTOREBILLING_API
  FURuStorePaymentResult{    \`\`GENERATED_USTRUCT_BODY()    \`\`virtual
  \~FURuStorePaymentResult() {}    \`\`virtual FString GetTypeName() { 
  return \"FURuStorePaymentResult\" ; }};
  ------------------------------------------------------------------------

  ------------------------------------------------------------------------

**Структура результата покупки**

  ---------------------------------------------------------------------------------------------------------------
  UCLASS(BlueprintType)class RUSTOREBILLING_API URuStoreSuccess :  public
  URuStorePaymentResultClass{    \`\`GENERATED_BODY()public
  :    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FURuStoreSuccess value;};USTRUCT(BlueprintType)struct
  RUSTOREBILLING_API FURuStoreSuccess :  public
  FURuStorePaymentResult{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreSuccess()    \`\`{        \`\`orderId
  =  \"\" ;        \`\`purchaseId =  \"\" ;        \`\`productId =  \"\" ;        \`\`invoiceId =  \"\"
  ;        \`\`subscriptionToken =  \"\" ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  orderId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  purchaseId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  productId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  invoiceId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString subscriptionToken;    \`\`virtual FString
  GetTypeName() override {  return \"FURuStoreSuccess\" ; }};
  ---------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------

**Структура результата покупки**

  --------------------------------------------------------------------------------------------------------------------
  UCLASS(BlueprintType)class RUSTOREBILLING_API URuStoreCancelled :  public
  URuStorePaymentResultClass{    \`\`GENERATED_BODY()public
  :    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FURuStoreCancelled value;};USTRUCT(BlueprintType)struct
  RUSTOREBILLING_API FURuStoreCancelled :  public
  FURuStorePaymentResult{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreCancelled()    \`\`{        \`\`purchaseId
  =  \"\" ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString purchaseId;    \`\`virtual FString
  GetTypeName() override {  return \"FURuStoreCancelled\" ; }};
  --------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------

**Структура результата покупки**

  -----------------------------------------------------------------------
  UCLASS(BlueprintType)class RUSTOREBILLING_API URuStoreFailure :  public
  URuStorePaymentResultClass{    \`\`GENERATED_BODY()public
  :    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FURuStoreFailure
  value;};USTRUCT(BlueprintType)struct RUSTOREBILLING_API
  FURuStoreFailure :  public
  FURuStorePaymentResult{    \`\`GENERATED_USTRUCT_BODY()public
  :    \`\`FURuStoreFailure()    \`\`{        \`\`purchaseId =  \"\"
  ;        \`\`invoiceId =  \"\" ;        \`\`orderId =  \"\"
  ;        \`\`quantity = 0;        \`\`productId =  \"\"
  ;        \`\`errorCode =
  0;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  purchaseId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  invoiceId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  orderId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int
  quantity;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  productId;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`int
  errorCode;    \`\`virtual FString GetTypeName() override {  return
  \"FURuStoreFailure\" ; }};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Структура результата покупки**

  ----------------------------------------------------------------------------
  UCLASS(BlueprintType)class RUSTOREBILLING_API URuStoreInvalidPaymentState : 
  public URuStorePaymentResultBase{    \`\`GENERATED_BODY()public
  :    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FURuStoreInvalidPaymentState
  value;};USTRUCT(BlueprintType)struct RUSTOREBILLING_API
  FURuStoreInvalidPaymentState :  public
  FURuStorePaymentResult{    \`\`GENERATED_USTRUCT_BODY()        \`\`virtual
  FString GetTypeName() override {  return \"FURuStoreInvalidPaymentState\" ;
  }};
  ----------------------------------------------------------------------------

  ----------------------------------------------------------------------------

-   Success -- результат успешного завершения покупки цифрового товара.

-   Failure -- результат ошибки покупки цифрового товара.

-   Cancelled -- результат отмены покупки цифрового товара.

-   InvalidPaymentState -- ошибка работы SDK платежей. Может возникнуть,
    в случае некорректного обратного deeplink.

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error.

Все возможные ошибки FURuStoreException описаны в разделе Обработка
ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name -- имя ошибки.

-   description -- описание ошибки.

Потребление (подтверждение) покупки

RuStore содержит продукты следующих типов:

-   CONSUMABLE -- потребляемый (можно купить много раз, например
    кристаллы в приложении).

-   NON_CONSUMABLE -- непотребляемый (можно купить один раз, например
    отключение рекламы в приложении).

-   SUBSCRIPTION -- подписка (можно купить на период времени, например
    подписка в стриминговом сервисе).

Потребления требуют только продукты типа CONSUMABLE, если они находятся
в состоянии PurchaseState.PAID.

Для потребления покупки вы можете использовать метод ConfirmPurchase:

**Вызов метода подтверждения**

  -------------------------------------------------------------------------------------
  long requestId =
  RuStoreBillingClient::Instance()-\>ConfirmPurchase(    \`\`purchaseId,    \`\`\[\](
  long requestId) {        \`\`// Process error    \`\`},    \`\`\[\]( long requestId,
  TSharedPtr\<FURuStoreConfirmPurchaseResponse, ESPMode::ThreadSafe\> response)
  {        \`\`// Process response    \`\`});
  -------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------

-   purchaseId -- идентификатор покупки.

Blueprint реализация:

Колбэк Failure возвращает структуру FURuStoreError c информацией об
ошибке в параметре Error.

Все возможные ошибки FURuStoreException описаны в разделе Обработка
ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name -- имя ошибки.

-   description -- описание ошибки.

Отмена покупки

Для отмены покупки используйте метод DeletePurchase:

**Вызов метода отмены покупки**

  -------------------------------------------------------------------------------------
  long requestId =
  URuStoreBillingClient::Instance()-\>DeletePurchase(    \`\`purchaseId,    \`\`\[\](
  long requestId) {        \`\`// Process response    \`\`},       \`\`\[\]( long
  requestId, TSharedPtr\<FURuStoreRuStoreError, ESPMode::ThreadSafe\> error)
  {        \`\`// Process error    \`\`});
  -------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------

-   purchaseId -- идентификатор покупки.

Используйте метод если у вас есть логика, завязанная на удалении
покупки.

Покупка отменяется автоматически через таймаут в 20 минут, либо при
повторной покупке от того же клиента.

Blueprint-реализация:

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error.

Все возможные ошибки FURuStoreException описаны в разделе Обработка
ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name -- имя ошибки.

-   description -- описание ошибки.

Сценарий потребления и отмены покупки

В связи с тем, что изменилась модель результата покупки продукта,
изменилась и логика потребления и отмены покупки.

Метод отмены покупки DeletePurchase() необходимо использовать, если:

-   Метод получения списка покупок GetPurchases() вернул покупку со
    статусом:

    -   FURuStorePurchaseState::CREATED.

    -   FURuStorePurchaseState::INVOICE_CREATED.

<!-- -->

-   Метод покупки PurchaseProduct() вернул
    FURuStorePaymentResult::CANCELLED.

-   Метод покупки PurchaseProduct() вернул
    FURuStorePaymentResult::FAILURE.

Метод потребления продукта ConfirmPurchase() необходимо использовать,
если метод получения списка покупок GetPurchases() вернул покупку типа
CONSUMABLE и со статусом FURuStorePurchaseState::PAID.

Обработка ошибок

Возникающие ошибки передаются в обработчик onFailure методов SDK.

**Структура ошибки**

  ----------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreRuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreRuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\" ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  ----------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------

-   name -- название ошибки.

-   description -- описание ошибки.

Возможные ошибки:

-   RuStoreNotInstalledException -- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException -- приложение RuStore, установленное на
    устройстве пользователя, не поддерживает платежи.

-   RuStoreUserUnauthorizedException -- пользователь не авторизован в
    RuStore.

-   RuStoreApplicationBannedException -- приложение забанено в RuStore.

-   RuStoreUserBannedException -- пользователь забанен в RuStore.

-   RuStoreException -- базовая ошибка RuStore, от которой наследуются
    остальные ошибки.

При вызове метода PurchaseProduct ошибки обрабатываются автоматически.

Если при инициализации SDK был передан параметр allowNativeErrorHandling
== true, при возникновении ошибки кроме вызова соответствующего
обработчика onFailure она передается в метод resolveForBilling нативного
SDK для показа диалога с ошибкой пользователю:

**Обработка ошибок**

  -----------------------------------------------------------------------
  public fun RuStoreException.resolveForBilling(context: Context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Изменить это поведение после инициализации можно установкой свойства
AllowNativeErrorHandling:

**Запрет нативной обработки ошибок**

  -----------------------------------------------------------------------
  RuStoreBillingClient::Instance()-\>SetAllowNativeErrorHandling( false
  );
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Смена темы

Для динамической смены темы необходимо использовать метод SetTheme:

**Вызов метода установки темы**

  ---------------------------------------------------------------------------
  EURuStoreTheme theme =
  EURuStoreTheme::DARK;URuStoreBillingClient::Instance()-\>SetTheme(theme);
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

-   theme -- тип темы из перечисления EURuStoreTheme.

Blueprint-реализация:

Получить информацию об установленной теме можно используя метод
GetTheme:

**Вызов метода установки темы**

  -----------------------------------------------------------------------
  EURuStoreTheme theme = URuStoreBillingClient::Instance()-\>GetTheme();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Blueprint-реализация:

**Тип темы**

  -----------------------------------------------------------------------
  UENUM(BlueprintType)enum class EURuStoreTheme : uint8{    \`\`DARK
  UMETA(DisplayName =  \"DARK\" ),    \`\`LIGHT UMETA(DisplayName = 
  \"LIGHT\" )};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

История изменений

Версия плагина 3.0

-   Добавлены асинхронные варианты blueprint-методов вместо подписок на
    события.

-   Добавлен функционал изменения темы (темная/светлая).

-   В структуре FURuStoreProduct значение по умолчанию для поля
    productType изменено с CONSUMABLE на NON_CONSUMABLE.

-   RuStoreBilling_UPL_Android.xml больше не добавляет атрибут
    android:exported к GameActivity и SplashActivity.

-   Багфиксы.

Версия плагина 0.3

-   Внутреннее обновление плагина.

Список зависимостей для in-app платежейtoc: true

RuStore SDK для подключения пуш-уведомлений

Узнайте, как подключить пуш-уведомления в вашем приложении в зависимости
от вашей среды разработки:

Kotlin

keywords: RuStore разработчики документация RuStoreSDK подключение
пуш-уведомлений

Общая информация

Для работы пуш-уведомлений необходимо соблюдение следующих условий:

-   На устройстве пользователя должно быть установлено приложение
    RuStore.

-   Приложение RuStore должно поддерживать функциональность
    пуш-уведомлений.

-   Приложению RuStore разрешен доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в приложении RuStore.

-   Отпечаток подписи приложения должен совпадать с отпечатком,
    добавленным в консоль разработчика.

Добавление репозитория

Подключите локальный репозиторий:

  -----------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"
  )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подключение зависимости

Для подключения зависимости добавьте в конфигурационный файл код:

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:pushclient:1.2.0\" )}\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Редактирование манифеста вашего приложения

Объявите службу, расширяющую RuStoreMessagingService:

  -----------------------------------------------------------------------
  \< service    \`\`android:name =
  \".MyRuStoreMessagingService\"    \`\`android:exported =
  \"true\"    \`\`tools:ignore = \"ExportedService\" \>    \`\`\<
  intent-filter \>        \`\`\< action android:name =
  \"ru.rustore.sdk.pushclient.MESSAGING_EVENT\" /\>    \`\`\</
  intent-filter \>\</ service \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Вы можете добавить следующие метаданные, если вы хотите изменить иконку
или цвет стандартной нотификации:

  --------------------------------------------------------------------------------------------------------------------------
  \`\<\`
  \`meta-data\`\<br\>\`    android:name="ru.rustore.sdk.pushclient.default_notification_icon"\<br\>    android:resource\`
  \`=\` \`\"@drawable/ic_baseline_android_24\"\` \`/\>\`\<br\>\`\<\`
  \`meta-data\`\<br\>\`    android:name="ru.rustore.sdk.pushclient.default_notification_color"\<br\>    \`android:resource =
  \"@color/your_favorite_color\" /\> \<br\>
  --------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------

Вы можете добавить следующие метаданные для переопределения канала
уведомлений:

  ------------------------------------------------------------------------------------
  \< meta-data    \`\`android:name =
  \"ru.rustore.sdk.pushclient.default_notification_channel_id\"    \`\`android:value =
  \"@string/pushes_notification_channel_id\" /\>
  ------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------

При добавлении канала пуш-уведомлений вы должны создать канал
самостоятельно.

Инициализация

Для инициализации понадобится ID проекта, который можно получить в
системе RuStore Консоль. Для этого на странице приложения перейдите в
раздел «Push-уведомления» и выберите «Проекты».

Для инициализации добавьте в Application вашего проекта следующий код:

  ---------------------------------------------------------------------------
  class App : Application() {    \`\`override fun onCreate()
  {        \`\`super
  .onCreate()        \`\`RuStorePushClient.init(            \`\`application
  =  this ,            \`\`projectId =  \"i5UTx96jw6c1C9LvdlE4cdNrWHMNyRBt\"
  ,            \`\`logger = DefaultLogger()        \`\`)    \`\`}}
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

-   application --- экземпляр класса Application;

-   projectId --- идентификатор вашего проекта в системе VKPNS;

-   logger --- логгер, по умолчанию используется вывод в logcat.

Логирование событий

Если вы хотите логировать события библиотеки push-уведомлений, то
добавьте в вызов RuStorePushClient.init параметр logger (данный параметр
является необязательным для инициализации).

Для этого необходимо реализовать интерфейс Logger:

**Интерфейс Logger**

  -----------------------------------------------------------------------
  interface Logger {    \`\`fun verbose(message: String, throwable:
  Throwable? =  null )    \`\`fun debug(message: String, throwable:
  Throwable? =  null )    \`\`fun info(message: String, throwable:
  Throwable? =  null )    \`\`fun warn(message: String, throwable:
  Throwable? =  null )    \`\`fun error(message: String, throwable:
  Throwable? =  null )    \`\`fun createLogger(tag: String): Logger}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если Logger не будет передан, то будет использоваться реализация по
умолчанию, использующая AndroidLog.

**Пример реализации логгера**

  -----------------------------------------------------------------------
  public class DefaultLogger(    \`\`private val tag: String? =  null ,)
  : Logger {    \`\`override fun verbose(message: String, throwable:
  Throwable?) {        \`\`Log.v(tag, message,
  throwable)    \`\`}    \`\`override fun debug(message: String,
  throwable: Throwable?) {        \`\`Log.d(tag, message,
  throwable)    \`\`}    \`\`override fun info(message: String,
  throwable: Throwable?) {        \`\`Log.i(tag, message,
  throwable)    \`\`}    \`\`override fun warn(message: String,
  throwable: Throwable?) {        \`\`Log.w(tag, message,
  throwable)    \`\`}    \`\`override fun error(message: String,
  throwable: Throwable?) {        \`\`Log.e(tag, message,
  throwable)    \`\`}    \`\`override fun createLogger(tag: String):
  Logger {        \`\`val newTag =  if ( this .tag !=  null )
  {            \`\`\"\${this.tag}:\$tag\"        \`\`}  else
  {            \`\`tag        \`\`}        \`\`return
  DefaultLogger(newTag)    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка возможности получения пуш-уведомления

keywords: RuStore разработчики документация RuStoreSDK пуш-уведомления
проверка получения пуш-уведомленийДля работы push-уведомлений необходимо
соблюдать несколько условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность push-уведомлений.

-   Приложению RuStore разрешён доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в RuStore.

Для проверки наличия установленного RuStore на девайсе можно
воспользоваться методом RuStorePushClient.checkPushAvailability:

  -----------------------------------------------------------------------------------------------------------------------------------------------
  RuStorePushClient.checkPushAvailability()    \`\`.addOnCompleteListener(object : OnCompleteListener\<FeatureAvailabilityResult\>
  {        \`\`override fun onSuccess(result: FeatureAvailabilityResult) {            \`\`when (result)
  {                \`\`FeatureAvailabilityResult.Available -\> {                    \`\`// Process push
  available                \`\`}                \`\`is FeatureAvailabilityResult.Unavailable -\>
  {                    \`\`result.cause.resolveForPush(requireContext())                \`\`}            \`\`}        \`\`}        \`\`override
  fun onFailure(throwable: Throwable) {            \`\`// Process error        \`\`}    \`\`})
  -----------------------------------------------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------------------------------------------

Методы для работы с пуш-токеном

keywords: RuStore разработчики документация RuStoreSDK пуш-уведомления
работа пуш-токеном пуш-токен##### Получение пуш-токена пользователя

После инициализации библиотеки вы можете использовать метод
RuStorePushClient.getToken(), для получения текущего push-токена
пользователя.

Если у пользователя отсутствует пуш-токен, то метод создаст и вернёт
новый пуш-токен.

  -----------------------------------------------------------------------
  RuStorePushClient.getToken().addOnCompleteListener(object :
  OnCompleteListener\<String?\> {    \`\`override fun
  onFailure(throwable: Throwable) {        \`\`// Process
  error    \`\`}    \`\`override fun onSuccess(result: String?)
  {        \`\`// Process success    \`\`}})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Удаление пуш-токена пользователя

После инициализации библиотеки вы можете использовать метод
RuStorePushClient.deleteToken(), для удаления текущего push-токена
пользователя.

  -----------------------------------------------------------------------
  RuStorePushClient.deleteToken().addOnCompleteListener(object :
  OnCompleteListener\<Unit\> {    \`\`override fun onFailure(throwable:
  Throwable) {        \`\`// Process error    \`\`}    \`\`override fun
  onSuccess(result: Unit) {        \`\`// Process success    \`\`}})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы для работы с пуш-топиками

Подписка на push-уведомления по топику

После инициализации библиотеки вы можете использовать метод
RuStorePushClient.subscribeToTopic("your_topic_name") для подписки на
топик.

  -----------------------------------------------------------------------
  RuStorePushClient.subscribeToTopic( \"your_topic_name\"
  ).addOnCompleteListener(object : OnCompleteListener\<Unit\>
  {    \`\`override fun onFailure(throwable: Throwable) {        \`\`//
  Process subscribe error    \`\`}    \`\`override fun onSuccess(result:
  Unit) {        \`\`// Process subscribe success    \`\`}})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отписка на push-уведомления по топику

После инициализации библиотеки вы можете использовать
метод RuStorePushClient.unsubscribeFromTopic("your_topic_name") для
отписки от топика.

  -----------------------------------------------------------------------
  RuStorePushClient.unsubscribeFromTopic( \"your_topic_name\"
  ).addOnCompleteListener(object : OnCompleteListener\<Unit\>
  {    \`\`override fun onFailure(throwable: Throwable) {        \`\`//
  Process unsubscribe error    \`\`}    \`\`override fun
  onSuccess(result: Unit) {        \`\`// Process unsubscribe
  success    \`\`}})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Получение данных от RuStore SDK

keywords: RuStore разработчики документация RuStoreSDK пуш-уведомления
данные получение данныхДля получения данных от RuStoreSDK создайте свой
сервис, который наследуется от RuStoreMessagingService:

  -----------------------------------------------------------------------
  class MessagingService: RuStoreMessagingService()
  {            \`\`override fun onNewToken(token: String)
  {        \`\`}            \`\`override fun onMessageReceived(message:
  RemoteMessage) {        \`\`}            \`\`override fun
  onDeletedMessages() {        \`\`}        \`\`override fun
  onError(errors: List\<RuStorePushClientException\>)
  {        \`\`}    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

-   **onNewToken** --- будет вызван при получении нового пуш-токена.
    После вызова данного метода ваше приложение ответственно за то,
    чтобы передать новый пуш-токен на свой серве.

-   **onMessageReceived** --- будет вызван при получении нового
    пуш-уведомления. Если в объекте notification есть данные, то
    RuStoreSDK сама отобразит уведомление. Если вы не хотите, чтобы
    RuStoreSDK самостоятельно отображала уведомление, то используйте
    объект data, а объект notification оставляйте пустым. Однако метод
    onMessageReceived будет вызван в любом случае. Получить payload
    пуш-уведомления (Map\<String, String\>) можно из поля message.data.

-   **onDeletedMessages** --- будет вызван в случае, если одно или
    несколько пуш-уведомлений не были доставлены на устройство. Это
    может произойти, например, по причине истечения времени жизни
    уведомления до того, как оно будет доставлено на устройство. При
    вызове этого метода рекомендуется синхронизироваться со своим
    сервером, чтобы не пропустить данные.

-   **onError** --- будет вызван при возникновении ошибки в момент
    инициализации.

Возможные ошибки

-   UnauthorizedException --- пользователь не авторизован в приложении
    RuStore.

-   HostAppNotInstalledException --- приложение RuStore отсутствует на
    устройстве пользователя.

-   HostAppBackgroundWorkPermissionNotGranted --- у приложения RuStore
    нет разрешения на работу в фоновом режиме.

Все методы будут вызваны в фоновом режиме.

Структура уведомления

keywords: RuStore разработчики документация RuStoreSDK пуш-уведомления
структура \##### Структура полного уведомления

  -----------------------------------------------------------------------
  public data  class RemoteMessage(    \`\`val messageId:
  String?,    \`\`val priority: Int,    \`\`val ttl: Int,    \`\`val
  collapseKey: String?,    \`\`val data: Map\<String,
  String\>,    \`\`val rawData: ByteArray?,    \`\`val notification:
  Notification?)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   messageId --- уникальный ID сообщения. Является идентификатором
    каждого сообщения;

-   priority --- возвращает значение приоритетности **(на данный момент
    не учитывается)**. Возможны следующие варианты:

    -   0 --- UNKNOWN:

    -   1 - HIGH;

    -   2 - NORMAL.

<!-- -->

-   ttl --- возвращает время жизни пуш-уведомления типа Int в секундах;

-   collapseKey --- идентификатор группы уведомлений **(на данный момент
    не учитывается)**;

-   data --- словарь, в который можно передать дополнительные данные для
    уведомления;

-   rawData --- словарь data в виде бинарного массива;

-   notification --- объект уведомления.

Структура объекта Notification

  -----------------------------------------------------------------------
  public data  class Notification(    \`\`val \#### String?,    \`\`val
  body: String?,    \`\`val channelId: String?,    \`\`val imageUrl:
  Uri?,    \`\`val color: String?,    \`\`val icon: String?,     \`\`val
  clickAction: String?  \`\`)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   title --- заголовок уведомления;

-   body --- тело уведомления;

-   channelId --- возможность задать канал, в который будет отправлено
    уведомление (актуально для Android 8.0 и выше);

-   imageUrl --- прямая ссылка на изображение для вставки в уведомление
    (изображение должно быть не более 1 мегабайта);

-   color --- цвет уведомления (Notification.color). Цвет необходимо
    передать в hex-формате, строкой (Пример: «#A52A2A»);

-   icon --- иконка уведомления. Иконка должна лежать в ресурсах
    приложения (res/drawable). Значение параметра - строка, которая
    совпадает с названием ресурса:

    -   в res/drawable лежит иконка small_icon.xml, которая в коде
        доступна через R.drawable.small_icon. Для отображения данной
        иконки в уведомлении сервер должен поместить в параметр «icon»
        значение «small_icon».

<!-- -->

-   clickAction --- intent action, с помощью которого будет открыта
    активити при нажатии на уведомление.

Создание канала для отправки уведомления

Для канала, в который будет отправлено уведомление действует следующий
порядок приоритета:

-   Если в пуш-уведомлении есть поле channelId, то RuStoreSDK отправит
    уведомление в данный канал. При этом ваше приложение ответственно за
    то, чтобы создать этот канал заранее.

-   Если поля channelId нет в пуш-уведомлении, но ваше приложение
    указало параметр с каналом в AndroidManifest.xml, то будет
    использован канал из AndroidManifest.xml. Ваше приложение
    ответственно за создание канала.

-   Если поля channelId нет в пуш-уведомлении, и канал по умолчанию не
    задан в AndroidManifest.xml вашего приложения, то RuStoreSDK
    самостоятельно создаст канал и отправит в него уведомление. В
    дальнейшем все уведомления без заданного канала будут отправляться в
    этот канал.

Открытие Activity при нажатии на уведомление

По умолчанию при нажатии на уведомление RuStoreSDK открывает активити с
action «android.intent.action.MAIN». Если поле clickAction присутствует,
то RuStoreSDK откроет активити, которая попадает под Intent filter с
указанным action.

Чтобы при нажатии на уведомление (относится и к активити по умолчанию) в
RuStoreSDK открывалась активити, в манифесте приложения в
соответствующем элементе у активити добавьте строку . Без этой строчки в
RuStoreSDK активити не откроется.

Логирование событий

keywords: RuStore разработчики документация RuStoreSDK подключение
пуш-уведомлений логирование событийЕсли вы хотите логировать события
библиотеки push-уведомлений, то добавьте в вызов RuStorePushClient.init
параметр logger --- данный параметр является необязательным для
инициализации.

Для этого необходимо реализовать интерфейс Logger:

  -----------------------------------------------------------------------
  interface Logger {    \`\`fun verbose(message: String, throwable:
  Throwable? =  null )    \`\`fun debug(message: String, throwable:
  Throwable? =  null )    \`\`fun info(message: String, throwable:
  Throwable? =  null )    \`\`fun warn(message: String, throwable:
  Throwable? =  null )    \`\`fun error(message: String, throwable:
  Throwable? =  null )    \`\`fun createLogger(tag: String): Logger}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если Logger не будет передан, то будет использоваться реализация по
умолчанию, использующая AndroidLog.

  -----------------------------------------------------------------------
  public class DefaultLogger(    \`\`private val tag: String? =  null ,)
  : Logger {    \`\`override fun verbose(message: String, throwable:
  Throwable?) {        \`\`Log.v(tag, message,
  throwable)    \`\`}    \`\`override fun debug(message: String,
  throwable: Throwable?) {        \`\`Log.d(tag, message,
  throwable)    \`\`}    \`\`override fun info(message: String,
  throwable: Throwable?) {        \`\`Log.i(tag, message,
  throwable)    \`\`}    \`\`override fun warn(message: String,
  throwable: Throwable?) {        \`\`Log.w(tag, message,
  throwable)    \`\`}    \`\`override fun error(message: String,
  throwable: Throwable?) {        \`\`Log.e(tag, message,
  throwable)    \`\`}    \`\`override fun createLogger(tag: String):
  Logger {        \`\`val newTag =  if ( this .tag !=  null )
  {            \`\`\"\${this.tag}:\$tag\"        \`\`}  else
  {            \`\`tag        \`\`}        \`\`return
  DefaultLogger(newTag)    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка ошибок

Возможные ошибки:

-   RuStoreNotInstalledException() --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException() --- RuStore установленный на
    устройстве пользователя не поддерживает функционал push-уведомлений.

-   RuStoreUserUnauthorizedException() --- пользователь не авторизован в
    RuStore.

-   RuStoreFeatureUnavailableException() --- RuStore не имеет разрешения
    на работу в фоне.

-   RuStoreException(message: String) ---  базовая ошибка RuStore, от
    которой наследуются остальные ошибки.

Если вы хотите использовать UI интерфейс для работы с ошибками, то
используйте метод resolveForPush:

  -----------------------------------------------------------------------
  fun RuStoreException.resolveForPush(context: Context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

E2E Тестирование интеграции SDK push-уведомлений

Для работы тестирования необходимо соблюдение следующих условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность push-уведомлений.

-   Приложению RuStore разрешён доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в RuStore.

Для начала тестирования SDK нужно включить тестовый режим:

  -----------------------------------------------------------------------
  RuStorePushClient.init(    \`\`application =  this ,    \`\`projectId
  =  \"some_project_id\" ,    \`\`testModeEnabled =  true)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

В тестовом режиме формируется тестовый push-токен и работает доставка
только тестовых push-уведомлений, отправленных с помощью метода:

  ------------------------------------------------------------------------------------------------
  val testNotificationPayload = TestNotificationPayload(     \`\`title =  \"Test notification
  title\" ,     \`\`body =  \"Test notification message\" ,     \`\`imgUrl = 
  \"some_image_http_url\" ,     \`\`data = mapOf( \"some_key\" to  \"some_value\"
  ))RuStorePushClient.sendTestNotification(testNotificationPayload).addOnCompleteListener(object :
  OnCompleteListener\<Unit\> {    \`\`override fun onFailure(throwable: Throwable) {        \`\`//
  Process send test push error    \`\`}    \`\`override fun onSuccess(result: Unit)
  {        \`\`// Process send test push success    \`\`}})
  ------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------------

История изменений RuStore SDK пуш-уведомлений

Версия SDK 1.1.0

-   Багфикс.

Версия SDK 1.0.0

-   Обновлены библиотеки sdk: core и analytics до 1.0.0

-   pushclient разбит на несколько модулей, которые подключаются
    транзитивно:

    -   ru.rustore.sdk:push-common

    -   ru.rustore.sdk:push-core

    -   ru.rustore.sdk:push-core-network

Версия SDK 0.7.0

-   Исправлена некорректная работа метода "checkPushAvailability".

-   Метод "checkPushAvailability(context: Context)" помечен как
    deprecated и в будущем будет удален. Вместо него используйте версию
    без аргументов "checkPushAvailability()".

-   В метод "RuStorePushClient.init" добавлен
    параметр analyticsCallback: AnalyticsCallback?. Параметр нужен для
    работы будущей функции "Рассылка по таргетингам"

-   Другие багфиксы.

Версия SDK 0.6.0

-   Багфикс.

Версия SDK 0.5.0

-   Багфикс.

Версия SDK 0.4.0

-   Обновлён порядок работы с пуш-уведомлениями. Больше не нужно
    добавлять правило ProGuard -keep public class com.vk.push.\*\*
    extends android.os.Parcelable, его можно удалить.Все необходимые
    правила поставляются с SDK;

-   Изменена структура обфускации. Теперь обфусцированные классы не
    вылезают за пределы корневного пакета Push SDK.

Версия SDK 0.3.0

-   Багфикс;

-   Добавлены E2E Тестирование интеграции SDK push-уведомлений.

Версия SDK 0.2.0

-   Багфиксы;

-   Добавлены методы для работы с пуш-топиками.

Версия SDK 0.1.9

-   Внутреннее обновление SDK.

Версия SDK 0.1.8

-   Исправлена работа методаawait()для Task API.

Версия SDK 0.1.7

-   Внутреннее обновление SDK.

Версия SDK 0.1.6

-   Внутреннее обновление SDK.

Версия SDK 0.1.5

-   Внутреннее обновление SDK.

Версия SDK 0.1.4

-   Исправлена уязвимость «Intent Redirection vulnerability», не
    позволяющая опубликовать приложение в Google Play.

Версия SDK 0.1.3

-   Внутреннее обновление SDK.

Версия SDK 0.1.2

-   Внутреннее обновление SDK.

Версия SDK 0.1.1

-   Внутреннее обновление SDK.

-   Метод «getToken», при отсутствии пуш-токена создаст и вернёт новый
    пуш-токен.

-   Метод «deleteToken», теперь не создаёт новый пуш-токен после
    удаления текущего.

Версия SDK 0.1.0

-   Suspend методы заменены на task API в методах:

    -   Проверка возможности получения пуш-уведомления ---
        «checkPushAvailability».

    -   Получение пуш-токена пользователя --- «getToken».

    -   Удаление пуш-токена пользователя --- «deleteToken».

<!-- -->

-   Теперь метод «checkPushAvailability» возвращает объект
    «FeatureAvailabilityResult».

Версия SDK 0.0.9

-   Внутреннее обновление SDK.

Java

Общая информация

**Пример реализации**

Ознакомьтесь с приложением-примером чтобы узнать, как правильно
интегрировать пуш-уведомления.

**Условия работы пуш-уведомлений**

Для работы пуш-уведомлений необходимо соблюдение следующих условий:

-   На устройстве пользователя должно быть установлено приложение
    RuStore.

-   Приложение RuStore должно поддерживать функциональность
    пуш-уведомлений.

-   Приложению RuStore разрешён доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в приложении RuStore.

-   Отпечаток подписи приложения должен совпадать с отпечатком,
    добавленным в системуRuStore Консоль.

Добавление репозитория

Подключите локальный репозиторий:

  -----------------------------------------------------------------------
  \`repositories { \`\<br\>\`    maven {\<br\>        url = uri(\`
  \`\"https://artifactory-external.vkpartner.ru/artifactory/maven\"\`
  \`)\`\<br\>\`    }\<br\>}\`
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подключение зависимости

Для подключения зависимости добавьте в свой конфигурационный файл
следующий код:

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \"ru.rustore.sdk:pushclient:1.2.0\" )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Редактирование манифеста вашего приложения

Объявите службу, расширяющую RuStoreMessagingService:

  -----------------------------------------------------------------------
  \< service    \`\`android:name =
  \".MyRuStoreMessagingService\"    \`\`android:exported =
  \"true\"    \`\`tools:ignore = \"ExportedService\" \>    \`\`\<
  intent-filter \>        \`\`\< action android:name =
  \"ru.rustore.sdk.pushclient.MESSAGING_EVENT\" /\>    \`\`\</
  intent-filter \>\</ service \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Вы можете добавить следующие метаданные, если хотите изменить иконку или
цвет стандартной нотификации:

  --------------------------------------------------------------------------------------------------------------------------
  \`\<\`
  \`meta-data\`\<br\>\`    android:name="ru.rustore.sdk.pushclient.default_notification_icon"\<br\>    android:resource\`
  \`=\` \`\"@drawable/ic_baseline_android_24\"\` \`/\>\`\<br\>\`\<\`
  \`meta-data\`\<br\>\`    android:name="ru.rustore.sdk.pushclient.default_notification_color"\<br\>    \`android:resource =
  \"@color/your_favorite_color\" /\> \<br\>
  --------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------

Вы можете добавить следующие метаданные для переопределения канала
уведомлений:

  ------------------------------------------------------------------------------------
  \< meta-data    \`\`android:name =
  \"ru.rustore.sdk.pushclient.default_notification_channel_id\"    \`\`android:value =
  \"@string/pushes_notification_channel_id\" /\>
  ------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------

При добавлении канала пуш-уведомлений вы должны создать канал
самостоятельно.

Инициализация

Для инициализации понадобится ID проекта, который можно получить в
системе RuStore Консоль. Для этого на странице приложения перейдите в
раздел «Push-уведомления» и выберите «Проекты».

Для инициализации добавьте в Application вашего проекта следующий код:

  ------------------------------------------------------------------------
  class App : Application() {    \`\`@Override    \`\`public void
  onCreate() {        \`\`super .onCreate()      
            \`\`RuStorePushClient.INSTANCE.init(                \`\`this
  ,                \`\`\"i5UTx96jw6c1C9LvdlE4cdNrWHMNyRBt\" ,            
     \`\`DefaultLogger()        \`\`);         \`\`}}
  ------------------------------------------------------------------------

  ------------------------------------------------------------------------

-   application --- экземпляр класса Application;

-   projectId --- идентификатор вашего проекта в консоли разработчика
    RuStore;

-   logger --- логгер, по умолчанию используется вывод в logcat
    (опционально).

Логирование событий

Если вы хотите логировать события библиотеки push-уведомлений, то
добавьте в вызов RuStorePushClient.init параметр logger --- данный
параметр является необязательным для инициализации.

Для этого необходимо реализовать интерфейс Logger:

  -----------------------------------------------------------------------
  public interface Logger {    \`\`void verbose(String message, Throwable
  throwable);    \`\`void debug(String message, Throwable
  throwable);    \`\`void info(String message, Throwable
  throwable);    \`\`void warn(String message, Throwable
  throwable);    \`\`void error(String message, Throwable
  throwable);    \`\`Logger createLogger(String tag);}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если Logger не будет передан, то будет использоваться реализация по
умолчанию, использующая AndroidLog.

  -------------------------------------------------------------------------------------------
  \`public\` \`class\` \`PushLogger \` \`implements\` \`Logger
  {\`\<br\>\`    privatefinalString tag;\<br\>    public\` \`PushLogger(String tag)
  {\`\<br\>\`        this.tag = tag;\<br\>    }\`\<br\>\`    @Override\<br\>    public\`
  \`void\` \`debug(\` \`@NonNull\` \`String message, Throwable throwable)
  {\`\<br\>\`        Log.d(tag, message,
  throwable);\<br\>    }\`\<br\>\`    @Override\<br\>    public\` \`void\` \`error(\`
  \`@NonNull\` \`String message, Throwable throwable) {\`\<br\>\`        Log.e(tag, message,
  throwable);\<br\>    }\`\<br\>\`    @Override\<br\>    public\` \`void\` \`info(\`
  \`@NonNull\` \`String message, \` \`@Nullable\` \`Throwable throwable)
  {\`\<br\>\`        Log.i(tag, message,
  throwable);\<br\>    }\`\<br\>\`    @Override\<br\>    public\` \`void\` \`verbose(\`
  \`@NonNull\` \`String message, \` \`@Nullable\` \`Throwable throwable)
  {\`\<br\>\`        Log.v(tag, message,
  throwable);\<br\>    }\`\<br\>\`    @Override\<br\>    public\` \`void\` \`warn(\`
  \`@NonNull\` \`String message, \` \`@Nullable\` \`Throwable throwable)
  {\`\<br\>\`        Log.w(tag, message,
  throwable);\<br\>    }\`\<br\>\`    @NonNull\<br\>    @Override\`\<br\>\`    publicLogger
  createLogger(@NonNullString newTag) {\<br\>        String combinedTag = (tag != \` \`null\`
  \`) ? tag + \` \`\":\"\` \`+ newTag :
  newTag;\`\<br\>\`        returnnewPushLogger(combinedTag);\<br\>    \`}}
  -------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------

Методы для работы с пуш-топиками

Подписка на пуш-уведомления по топику

После инициализации библиотеки вы можете использовать метод
RuStorePushClient.subscribeToTopic("your_topic_name") для подписки на
топик.

  -----------------------------------------------------------------------
  RuStorePushClient.INSTANCE.subscribeToTopic( \"your_topic_name\"
  ).addOnCompleteListener( new OnCompleteListener\<Void\>()
  {    \`\`@Override    \`\`public void onComplete(Task\<Void\> task)
  {        \`\`if (task.isSuccessful()) {            \`\`// Process
  subscribe success        \`\`}  else {            \`\`Exception
  exception = task.getException();            \`\`// Process subscribe
  error        \`\`}    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отписка на пуш-уведомления по топику

После инициализации библиотеки вы можете использовать
метод RuStorePushClient.unsubscribeFromTopic("your_topic_name") для
отписки от топика.

  -----------------------------------------------------------------------
  RuStorePushClient.INSTANCE.unsubscribeFromTopic( \"your_topic_name\"
  ).addOnCompleteListener( new OnCompleteListener\<Void\>()
  {    \`\`@Override    \`\`public void onComplete(Task\<Void\> task)
  {        \`\`if (task.isSuccessful()) {            \`\`// Process
  unsubscribe success        \`\`}  else {            \`\`Exception
  exception = task.getException();            \`\`// Process unsubscribe
  error        \`\`}    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Работа с RuStoreMessagingService

**RuStoreMessagingService**

  -----------------------------------------------------------------------
  public class MessagingService  extends RuStoreMessagingService
  {        \`\`@Override    \`\`public void onNewToken(String token)
  {            \`\`}        \`\`@Override    \`\`public void
  onMessageReceived(RemoteMessage message)
  {                \`\`}        \`\`@Override    \`\`public void
  onDeletedMessages() {            \`\`}    \`\`@Override    \`\`public
  void onError(List\<RuStorePushClientException\> errors)
  {            \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**onNewToken** --- будет вызван при получении нового push-токена.

После вызова данного метода ваше приложение ответственно за то, чтобы
передать новый push-токен на свой сервер.

**onMessageReceived** --- будет вызван при получении нового
пуш-уведомления.

Если в объекте notification есть данные, то SDK сама попробует
отобразить уведомление.

Если вы не хотите, чтобы SDK самостоятельно отображала уведомление, то
используйте объект data, а объект notification оставляйте пустым. Однако
метод onMessageReceived будет вызван в любом случае.

Получить payload пуш-уведомления (Map\<String, String\>) можно из поля
message.data.

**onDeletedMessages** --- будет вызван в случае, если один или несколько
пуш-уведомлений не были доставлены на устройство.

Это может произойти, например, по причине истечения времени жизни
уведомления до того, как оно будет доставлено на устройство.

При вызове этого метода рекомендуется синхронизироваться со своим
сервером, чтобы не пропустить данные.

**onError** --- будет вызван при возникновении ошибки в момент
инициализации.

Возможные ошибки:

-   UnauthorizedException --- пользователь не авторизован в RuStore.

-   HostAppNotInstalledException --- RuStore отсутствует на устройстве
    пользователя.

-   HostAppBackgroundWorkPermissionNotGranted --- у RuStore нет
    разрешения на работу в фоне.

Все вышеперечисленные методы будут вызваны на фоновом потоке.

Структура уведомления

Структура полного уведомления

  -----------------------------------------------------------------------
  public RemoteMessage(    \`\`String messageId,    \`\`int
  priority,    \`\`int ttl,    \`\`String
  collapseKey,    \`\`Map\<String, String\> data,    \`\`byte \[\]
  rawData,    \`\`Notification notification) {   \`\`this .messageId =
  messageId;   \`\`this .priority = priority;   \`\`this .ttl =
  ttl;   \`\`this .collapseKey = collapseKey;   \`\`this .data =
  data;   \`\`this .rawData = rawData;        \`\`this .notification =
  notification;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   messageId --- уникальный ID сообщения. Является идентификатором
    каждого сообщения;

-   priority --- возвращает значение приоритетности **(на данный момент
    не учитывается)**. Возможны следующие варианты:

    -   0 --- UNKNOWN:

    -   1 - HIGH;

    -   2 - NORMAL.

<!-- -->

-   ttl --- возвращает время жизни пуш-уведомления типа Int в секундах;

-   collapseKey --- идентификатор группы уведомлений **(на данный момент
    не учитывается)**;

-   data --- словарь, в который можно передать дополнительные данные для
    уведомления;

-   rawData --- словарь data в виде бинарного массива;

-   notification --- объект уведомления.

Структура объекта Notification

  -----------------------------------------------------------------------
  public Notification(    \`\`String title,    \`\`String
  body,    \`\`String channelId,    \`\`Uri imageUrl,    \`\`String
  color,    \`\`String icon,    \`\`String clickAction) {   \`\`this
  .title = title;   \`\`this .body = body;   \`\`this .channelId =
  channelId;   \`\`this .imageUrl = imageUrl;   \`\`this .color =
  color;   \`\`this .icon = icon;   \`\`this .clickAction = clickAction;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   title --- заголовок уведомления;

-   body --- тело уведомления;

-   channelId --- возможность задать канал, в который будет отправлено
    уведомление (актуально для Android 8.0 и выше);

-   imageUrl --- прямая ссылка на изображение для вставки в уведомление
    (изображение должно быть не более 1 мегабайта);

-   color --- цвет уведомления (Notification.color). Цвет необходимо
    передать в hex-формате, строкой (Пример: «#A52A2A»);

-   icon --- иконка уведомления. Иконка должна лежать в ресурсах
    приложения (res/drawable). Значение параметра --- строка, которая
    совпадает с названием ресурса:

    -   в res/drawable лежит иконка small_icon.xml, которая в коде
        доступна через R.drawable.small_icon. Для отображения данной
        иконки в уведомлении сервер должен поместить в параметр «icon»
        значение «small_icon».

<!-- -->

-   clickAction --- intent action, с помощью которого будет открыта
    активити при нажатии на уведомление.

Создание канала для отправки уведомления

Для канала, в который будет отправлено уведомление действует следующий
порядок приоритета:

-   Если в пуш-уведомлении есть поле channelId, то RuStoreSDK отправит
    уведомление в данный канал. При этом ваше приложение ответственно за
    то, чтобы создать этот канал заранее.

-   Если поля channelId нет в пуш-уведомлении, но ваше приложение
    указало параметр с каналом в AndroidManifest.xml, то будет
    использован канал из AndroidManifest.xml. Ваше приложение
    ответственно за создание канала.

-   Если поля channelId нет в пуш-уведомлении, и канал по умолчанию не
    задан в AndroidManifest.xml вашего приложения, то RuStoreSDK
    самостоятельно создаст канал и отправит в него уведомление. В
    дальнейшем все уведомления без заданного канала будут отправляться в
    этот канал.

Открытие Activity при нажатии на уведомление

По умолчанию при нажатии на уведомление RuStoreSDK открывает активити с
action «android.intent.action.MAIN». Если поле clickAction присутствует,
то RuStoreSDK откроет активити, которая попадает под Intent filter с
указанным action.

Чтобы при нажатии на уведомление (относится и к активити по умолчанию) в
RuStoreSDK открывалась активити, в манифесте приложения в
соответствующем элементе у активити добавьте строку . Без этой строчки в
RuStoreSDK активити не откроется.

Обработка ошибок

Возможные ошибки:

-   RuStoreNotInstalledException() --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException() --- RuStore на устройстве пользователя не
    поддерживает функционал пуш-уведомлений.

-   RuStoreUserUnauthorizedException() --- пользователь не авторизован в
    RuStore.

-   RuStoreFeatureUnavailableException() --- RuStore не имеет разрешения
    на работу в фоновом режиме.

-   RuStoreException(message: String) ---  базовая ошибка RuStore, от
    которой наследуются остальные ошибки.

Если вы хотите использовать UI интерфейс для работы с ошибками, то
используйте метод resolveForPush():

  -----------------------------------------------------------------------
  \`public\` \`class\` \`RuStoreExceptionExtension
  {\`\<br\>\`    publicstaticvoidresolveForPush(RuStoreException
  exception, Context context) {\<br\>        // Your implementation here
  to resolve the exception for push\`\<br\>\`    }\<br\>}\`
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

E2E Тестирование интеграции SDK пуш-уведомлений

Для работы тестирования необходимо соблюдение следующих условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность пуш-уведомлений.

-   Приложению RuStore разрешён доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в RuStore.

Для начала тестирования SDK нужно включить тестовый режим:

  -----------------------------------------------------------------------
  RuStorePushClient.INSTANCE.init(    \`\`this
  ,    \`\`\"some_project_id\" ,    \`\`true)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

В тестовом режиме формируется тестовый пуш-токен и работает доставка
только тестовых пуш-уведомлений, отправленных с помощью метода:

  ------------------------------------------------------------------------------------------------------------------------
  TestNotificationPayload testNotificationPayload =  new TestNotificationPayload(    \`\`\"Test notification title\"
  ,    \`\`\"Test notification message\" ,    \`\`\"some_image_http_url\"
  ,    \`\`data);RuStorePushClient.INSTANCE.sendTestNotification(testNotificationPayload)    \`\`.addOnCompleteListener(
  new OnCompleteListener\<Void\>() {        \`\`@Override        \`\`public void onComplete(Task\<Void\> task)
  {            \`\`if (task.isSuccessful()) {                \`\`// Process send test push success            \`\`}  else
  {                \`\`Exception exception = task.getException();                \`\`// Process send test push
  error            \`\`}        \`\`}    \`\`});
  ------------------------------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------------------------------------

Unreal

Общая информация

Для работы push-уведомлений необходимо соблюдение следующих условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность push-уведомлений.

-   Приложению RuStore разрешён доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в RuStore.

-   Отпечаток подписи приложения должен совпадать с отпечатком,
    указанным в RuStore Консоль.

-   Версия Unreal Engine 4.26 или выше.

Подключение в проект

-   Скопируйте содержимое папки *"Plugins"* из официального
    репозитория RuStore на gitflic в папку *"Plugins"* внутри своего
    проекта. Перезапустите Unreal Engine, в списке плагинов (Edit →
    Plugins → Project → Mobile) отметьте плагины "RuStorePush" и
    "RuStoreCore".

-   В файле *"YourProject.Build.cs"* в списке
    PublicDependencyModuleNames подключите модули модули "RuStoreCore" и
    "RuStorePush".

-   В настройках проекта (Edit → Project Settings → Android) установите
    параметр Minimum SDK Version на уровень не ниже 24 и параметр Target
    SDK Version - не ниже 31.

Редактирование манифеста вашего приложения

Плагин "RuStorePush" объявит службу RuStoreUnityMessagingService:

**AndroidManifest.xml**

  -----------------------------------------------------------------------------------------
  \< service    \`\`android:name =
  \"ru.rustore.unitysdk.pushclient.RuStoreUnityMessagingService\"    \`\`android:exported =
  \"true\"    \`\`tools:ignore = \"ExportedService\" \>    \`\`\< intent-filter
  \>        \`\`\< action android:name = \"ru.rustore.sdk.pushclient.MESSAGING_EVENT\"
  /\>    \`\`\</ intent-filter \>\</ service \>
  -----------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------

Вы можете добавить следующие метаданные, если вы хотите изменить иконку
или цвет стандартной нотификации:

**AndroidManifest.xml**

  ----------------------------------------------------------------------------------
  \< meta-data    \`\`android:name =
  \"ru.rustore.sdk.pushclient.default_notification_icon\"    \`\`android:resource =
  \"@drawable/ic_baseline_android_24\" /\>\< meta-data    \`\`android:name =
  \"ru.rustore.sdk.pushclient.default_notification_color\"    \`\`android:resource =
  \"@color/your_favorite_color\" /\>
  ----------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------

Вы можете добавить следующие метаданные для переопределения канала
уведомлений:

**AndroidManifest.xml**

  ------------------------------------------------------------------------------------
  \< meta-data    \`\`android:name =
  \"ru.rustore.sdk.pushclient.default_notification_channel_id\"    \`\`android:value =
  \"@string/pushes_notification_channel_id\" /\>
  ------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------

При добавлении своего канала для push-уведомлений вы должны создать
канал самостоятельно.

Инициализация

Перед вызовом методов библиотеки необходимо вызвать её инициализацию:

**Инициализация**

  -----------------------------------------------------------------------
  FURuStorePushClientConfig config;config.allowNativeErrorHandling = 
  true ;config.messagingServiceListener =
  pushMessagingServiceListener;config.logListener =
  pushLogListener;FURuStorePushClient::Instance()-\>Init(сonfig);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Все операции с клиентом также доступны из Blueprints. Пример
инициализации:

-   allowNativeErrorHandling -- разрешить обработку ошибок в нативном
    SDK.

-   messagingServiceListener -- объект класса, реализующего интерфейс
    IRuStoreMessagingServiceListenerInterface.

-   logListener -- объект класса, реализующего интерфейс
    IRuStoreLogListenerInterface

-   projectId -- идентификатор вашего проекта в RuStore Консоль

Классы URuStoreMessagingServiceListener и URuStoreLogListener реализуют
соответственно интерфейсы IRuStoreMessagingServiceListenerInterface и
IRuStoreLogListenerInterface. Их применение позволяет обрабатывать
события интерфейсов непосредственно из blueprint.

Инициализация URuStoreMessagingServiceListener и URuStoreLogListener
совместно с URuStorePushClient:

**Интерфейс IRuStoreMessagingServiceListenerInterface**

  ------------------------------------------------------------------------------
  class RUSTOREPUSH_API
  IRuStoreMessagingServiceListenerInterface{    \`\`GENERATED_BODY()    public
  :    \`\`UFUNCTION(BlueprintCallable, BlueprintNativeEvent, Category = 
  \"RuStore Messaging Service Listener Interface\" )    \`\`void
  NewTokenResponse(int64 requestId, FString&
  token);    \`\`UFUNCTION(BlueprintCallable, BlueprintNativeEvent, Category = 
  \"RuStore Messaging Service Listener Interface\" )    \`\`void
  MessageReceivedResponse(int64 requestId, FURuStoreRemoteMessage&
  message);    \`\`UFUNCTION(BlueprintCallable, BlueprintNativeEvent, Category
  =  \"RuStore Messaging Service Listener Interface\" )    \`\`void
  DeletedMessagesResponse(int64 requestId);    \`\`UFUNCTION(BlueprintCallable,
  BlueprintNativeEvent, Category =  \"RuStore Messaging Service Listener
  Interface\" )    \`\`void ErrorResponse(int64 requestId,
  TArray\<FURuStoreError\>& errors);};
  ------------------------------------------------------------------------------

  ------------------------------------------------------------------------------

-   **NewTokenResponseResponse** -- будет вызван при получении нового
    push-токена. После вызова данного метода ваше приложение
    ответственно за то, чтобы передать новый push-токен на свой сервер.

-   **MessageReceivedResponse** -- будет вызван при получении нового
    push-уведомления.

-   **DeletedMessagesResponse** -- будет вызван в случае, если один или
    несколько push-уведомлений не были доставлены на устройство. Это
    может произойти, например, по причине истечения времени жизни
    уведомления до того, как оно будет доставлено на устройство. При
    вызове этого метода рекомендуется синхронизироваться со своим
    сервером, чтобы не пропустить данные.

-   **ErrorResponse** -- будет вызван при возникновении ошибки в момент
    инициализации.

Возможные ошибки:

-   UnauthorizedException -- пользователь не авторизован в RuStore.

-   HostAppNotInstalledException -- RuStore отсутствует на устройстве
    пользователя.

-   HostAppBackgroundWorkPermissionNotGranted -- у RuStore нет
    разрешения на работу в фоне.

Структура уведомления.

**Структура полного уведомления**

  -----------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTOREPUSH_API
  FURuStoreRemoteMessage{    \`\`GENERATED_USTRUCT_BODY()public
  :    \`\`UPROPERTY()    \`\`FString
  collapseKey;        \`\`UPROPERTY()    \`\`TMap\<FString, FString\>
  data;        \`\`UPROPERTY()    \`\`FString
  messageId;        \`\`UPROPERTY()    \`\`FURuStoreNotification
  notification;        \`\`UPROPERTY()    \`\`int
  priority;        \`\`char \* rawData;        \`\`UPROPERTY()    \`\`int
  ttl;};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   messageId -- уникальный ID сообщения. Является идентификатором
    каждого сообщения.

-   priority - ( **на данный момент не учитывается**) возвращает
    значение приоритетности. Сейчас заложены следующие варианты:

    -   0 - UNKNOWN.

    -   1 - HIGH.

    -   2 - NORMAL.

<!-- -->

-   ttl - время жизни push-уведомления типа Int в секундах.

-   collapseKey - ( **на данный момент не учитывается**) идентификатор
    группы уведомлений.

-   data - словарь, в который можно передать дополнительные данные для
    уведомления.

-   rawData - словарь data в виде массива байтов.

-   notification - объект уведомления.

**Структура объекта Notification**

  -----------------------------------------------------------------------
  USTRUCT(Blueprintable)struct RUSTOREPUSH_API
  FURuStoreNotification{    \`\`GENERATED_USTRUCT_BODY()public
  :    \`\`FURuStoreNotification()    \`\`{        \`\`title =  \"0\"
  ;        \`\`body =  \"0\" ;        \`\`channelId =  \"0\"
  ;        \`\`imageUrl =  \"0\" ;        \`\`color =  \"0\"
  ;        \`\`icon =  \"0\" ;        \`\`clickAction =  \"0\"
  ;    \`\`}    \`\`UPROPERTY()    \`\`FString
  title;    \`\`UPROPERTY()    \`\`FString
  body;    \`\`UPROPERTY()    \`\`FString
  channelId;    \`\`UPROPERTY()    \`\`FString
  imageUrl;    \`\`UPROPERTY()    \`\`FString
  color;    \`\`UPROPERTY()    \`\`FString
  icon;    \`\`UPROPERTY()    \`\`FString clickAction;};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   title - заголовок уведомления.

-   body - тело уведомления.

-   channelId - возможность задать канал, в который будет отправлено
    уведомление (актуально для Android 8.0 и выше).

-   imageUrl - прямая ссылка на изображение для вставки в уведомление
    (изображение должно быть не более 1 мегабайта).

-   color - цвет уведомления (Notification.color). Цвет необходимо
    передать в hex-формате, строкой. Пример: "#A52A2A".

-   icon - иконка уведомления. Иконка должна находиться в ресурсах
    приложения (res/drawable). Значение параметра - строка, которая
    совпадает с названием ресурса. Пример: в res/drawable находится
    иконка small_icon.xml, которая в коде доступна через
    R.drawable.small_icon. Для отображения данной иконки в уведомлении
    сервер должен поместить в параметр "icon" значение "small_icon".

-   clickAction - intent action, с помощью которого будет открыта
    activity при клике на уведомление.

**Интерфейс IRuStoreLogListenerInterface**

  -----------------------------------------------------------------------
  class RUSTOREPUSH_API
  IRuStoreLogListenerInterface{    \`\`GENERATED_BODY()public
  :    \`\`UFUNCTION(BlueprintCallable, BlueprintNativeEvent, Category = 
  \"RuStore Log Listener Interface\" )    \`\`void LogResponse(int64
  requestId, FString& logString);    \`\`UFUNCTION(BlueprintCallable,
  BlueprintNativeEvent, Category =  \"RuStore Log Listener Interface\"
  )    \`\`void LogWarningResponse(int64 requestId, FString&
  logString);    \`\`UFUNCTION(BlueprintCallable, BlueprintNativeEvent,
  Category =  \"RuStore Log Listener Interface\" )    \`\`void
  LogErrorResponse(int64 requestId, FString&
  logString);    \`\`UFUNCTION(BlueprintCallable, BlueprintNativeEvent,
  Category =  \"RuStore Log Listener Interface\" )    \`\`void
  LogExceptionResponse(int64 requestId, FURuStoreError& error);};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   LogResponse - будет вызван при появлении обычных записей
    в журнале событий.

-   LogWarningResponse - будет вызван при появлении записей о
    предупреждениях в журнале событий.

-   LogErrorResponse - будет вызван при появлении записей об ошибках
    в журнале событий.

-   LogExceptionResponse - будет вызван при появлении записей об
    исключениях в журнале событий.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name - имя ошибки.

-   description - описание ошибки.

Вызов Init() для URuStorePushClient, URuStoreMessagingServiceListener,
URuStoreLogListener привязывает объекты к корню сцены. Если дальнейшая
работа с объектами больше не планируется, для освобождения памяти
необходимо выполнить метод Dispose(). Вызов метода Dispose() отвяжет
объекты от корня и безопасно завершит все отправленные запросы.

**Деинициализация**

  --------------------------------------------------------------------------------------------------------------------------------------------------
  URuStorePushClient::Instance()-\>Dispose();URuStoreMessagingServiceListener::Instance()-\>Dispose();URuStoreLogListener::Instance()-\>Dispose();
  --------------------------------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------------------------------

Проверка возможности получения пуш-уведомления

Для проверки доступности платежей, необходимо использовать метод
CheckPushAvailability(). При его вызове проверяются следующие условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность push-уведомлений.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Отпечаток подписи приложения должен совпадать с отпечатком,
    указанным в RuStore Консоль.

Каждый запрос CheckPushAvailability() возвращает уникальный в рамках
одного запуска приложения requestId. Каждое событие возвращает requestId
запроса, породившего это событие.

**Пример реализации RuStorePushClient.CheckPushAvailability**

  -----------------------------------------------------------------------
  long responseId =
  URuStorePushClient::Instance()-\>CheckPushAvailability(    \`\`\[\](
  long responseId, TSharedPtr\<FUFeatureAvailabilityResult,
  ESPMode::ThreadSafe\> response) {        \`\`// Process
  response    \`\`},    \`\`\[\]( long responseId,
  TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error)
  {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Blueprint-реализация:

Колбэк Success возвращает структуру FURuStoreFeatureAvailabilityResult в
параметре Response:

**Ответ CheckPushAvailability**

  -------------------------------------------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreFeatureAvailabilityResult{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreFeatureAvailabilityResult()    \`\`{        \`\`isAvailable
  =  false ;    \`\`}    \`\`UPROPERTY(BlueprintReadWrite)    \`\`bool isAvailable;        \`\`UPROPERTY(BlueprintReadWrite)    \`\`FURuStoreError
  cause;};
  -------------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------------

isAvailable - выполнение условий выполнения платежей.

cause - информация об ошибке.

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error. Все возможные ошибки FURuStoreException
описаны в разделе «Обработка ошибок».

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name - имя ошибки.

-   description - описание ошибки.

Методы для работы с push-токеном

Получение push-токена пользователя

После инициализации библиотеки вы можете использовать метод
URuStorePushClient::Instance()-\>GetToken() для получения текущего
push-токена пользователя. Если у пользователя отсутствует push-токен, то
метод создаст и вернёт новый push-токен.

**Пример реализации RuStorePushClient.GetToken**

  -----------------------------------------------------------------------
  long responseId =
  URuStorePushClient::Instance()-\>GetToken(    \`\`\[\]( long
  responseId, FString response) {        \`\`// Process
  response    \`\`},    \`\`\[\]( long responseId,
  TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error)
  {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Blueprint-реализация:

Колбэк Success возвращает токен в виде строки в параметре Response:

**Ответ GetProducts**

  -----------------------------------------------------------------------
  FString response
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   response - текущий push-токен.

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error. Все возможные ошибки FURuStoreException
описаны в разделе Обработка ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name - имя ошибки.

-   description - описание ошибки.

Удаление push-токена пользователя

После инициализации библиотеки вы можете использовать метод
RuStorePushClientt::Instance()-\>DeleteToken() для удаления текущего
push-токена пользователя.

**Пример реализации RuStorePushClient.DeleteToken**

  -----------------------------------------------------------------------
  long responseId =
  URuStorePushClient::Instance()-\>DeleteToken(    \`\`\[\]( long
  responseId) {        \`\`// Process success    \`\`},    \`\`\[\]( long
  responseId, TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error)
  {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Blueprint-реализация:

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error. Все возможные ошибки FURuStoreException
описаны в разделе Обработка ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name - имя ошибки.

-   description - описание ошибки.

Методы для работы с push-топиками

Подписка на push-уведомления по топику

После инициализации библиотеки вы можете использовать
метод URuStorePushClientt::Instance()-\>SubscribeToTopic() для подписки
на топик.

**Пример реализации RuStorePushClient.GetToken**

  -----------------------------------------------------------------------------------
  long requestId =
  URuStorePushClient::Instance()-\>SubscribeToTopic(    \`\`topicName,    \`\`\[\](
  long requestId) {      \`\`// Process error    \`\`},    \`\`\[\]( long requestId,
  TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error) {      \`\`// Process
  error    \`\`});
  -----------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------

Blueprint-реализация:

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error. Все возможные ошибки FURuStoreException
описаны в разделе Обработка ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name - имя ошибки.

-   description - описание ошибки.

Отписка на push-уведомления по топику

После инициализации библиотеки вы можете использовать метод
RuStorePushClientt::Instance()-\>UnsubscribeToTopic() для отписки от
топика.

**Пример реализации RuStorePushClient.DeleteToken**

  -----------------------------------------------------------------------
  long responseId =
  URuStorePushClient::Instance()-\>UnsubscribeFromTopic(    \`\`\[\](
  long responseId) {        \`\`// Process success    \`\`},    \`\`\[\](
  long responseId, TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\>
  error) {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Blueprint-реализация:

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error. Все возможные ошибки FURuStoreException
описаны в разделе Обработка ошибок.

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name - имя ошибки.

-   description - описание ошибки.

Создание канала для отправки уведомления

Для канала, в который будет отправлено уведомление действует следующий
порядок приоритета:

1. Если в push-уведомлении есть поле channelId, то SDK отправит
уведомление в данный канал. При этом ваше приложение ответственно за то,
чтобы создать этот канал заранее.

2\. Если поля channelId нет в push-уведомлении, но ваше приложение
указало параметр с каналом в AndroidManifest.xml, то будет использован
канал из AndroidManifest.xml. Ваше приложение ответственно за создание
канала.

3\. Если поля channelId нет в push-уведомлении, и канал по умолчанию не
задан в AndroidManifest.xml вашего приложения, то SDK самостоятельно
создаст канал и отправит в него уведомление. В дальнейшем все
уведомления без заданного канала будут отправляться в этот канал.

Открытие Activity при тапе на уведомление

По умолчанию, при тапе на уведомление SDK открывает activity с action
"android.intent.action.MAIN". Если поле clickAction присутствует, то SDK
откроет activity, которая попадает под Intent filter с указанным action.

Чтобы SDK мог открыть activity при тапе на уведомление (это относится и
к activity по умолчанию), в соответствующем элементе в манифесте
приложения у activity необходимо добавить строку . Без этой строки
открыть activity SDK не сможет.

Обработка ошибок

Возможные ошибки:

-   RuStoreNotInstalledException -- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException -- RuStore установленный на устройстве
    пользователя не поддерживает функционал push-уведомлений.

-   RuStoreUserUnauthorizedException -- пользователь не авторизован в
    RuStore.

-   RuStoreFeatureUnavailableException -- RuStore не имеет разрешения на
    работу в фоне.

-   RuStoreException -- базовая ошибка RuStore от которой наследуются
    остальные ошибки.

Если при инициализации SDK был передан параметр allowNativeErrorHandling
== true, при возникновении ошибки кроме вызова соответствующего
обработчика onFailure она передается в метод resolveForPush нативного
SDK для показа диалога с ошибкой пользователю:

**resolveForPush**

  -----------------------------------------------------------------------
  fun RuStoreException.resolveForPush(context: Context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Изменить это поведение после инициализации можно установкой свойства
AllowNativeErrorHandling:

**Запрет нативной обработки ошибок**

  -----------------------------------------------------------------------
  URuStorePushClient::Instance()-\>SetAllowNativeErrorHandling( false );
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Unity

Общая информация

Для работы пуш-уведомлений необходимо соблюдение следующих условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность пуш-уведомлений.

-   Приложению RuStore разрешён доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в RuStore.

-   Отпечаток подписи приложения должен совпадать с отпечатком,
    добавленным в RuStore Консоль.

Подключение в проект

Для подключения необходимо скачать RuStore Push SDK и импортировать его
в проект (Assets → Import Package → Custom Package). Зависимости
подключаются автоматически с помощью External Dependency Manager
(включен в SDK).

Minimum API level должен быть установлен не ниже 24. Минификация
приложения (ProGuard/R8) в данный момент не поддерживается, необходимо
её отключить в настройках проекта (File → Build Settings → Player
Settings → Publishing Settings → Minify).

Редактирование манифеста приложения

Вы должны объявить службу RuStoreUnityMessagingService:

  -----------------------------------------------------------------------------------------
  \< service    \`\`android:name =
  \"ru.rustore.unitysdk.pushclient.RuStoreUnityMessagingService\"    \`\`android:exported =
  \"true\"    \`\`tools:ignore = \"ExportedService\" \>    \`\`\< intent-filter
  \>        \`\`\< action android:name = \"ru.rustore.sdk.pushclient.MESSAGING_EVENT\"
  /\>    \`\`\</ intent-filter \>\</ service \>
  -----------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------

Вы можете добавить следующие метаданные, если вы хотите изменить иконку
или цвет стандартной нотификации:

  ----------------------------------------------------------------------------------
  \< meta-data    \`\`android:name =
  \"ru.rustore.sdk.pushclient.default_notification_icon\"    \`\`android:resource =
  \"@drawable/ic_baseline_android_24\" /\>\< meta-data    \`\`android:name =
  \"ru.rustore.sdk.pushclient.default_notification_color\"    \`\`android:resource =
  \"@color/your_favorite_color\" /\>
  ----------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------

Вы можете добавить следующие метаданные для переопределения канала
уведомлений:

  ------------------------------------------------------------------------------------
  \< meta-data    \`\`android:name =
  \"ru.rustore.sdk.pushclient.default_notification_channel_id\"    \`\`android:value =
  \"@string/pushes_notification_channel_id\" /\>
  ------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------

При добавлении своего канала для push-уведомлений вы должны создать
канал самостоятельно.

Инициализация

Для инициализации необходимо переопределить в проекте класс Application.
Необходимый исходный код уже содержится в файле
Assets/RuStoreSDK/PushClient/Android/RuStoreUnityApplication.java:

  ----------------------------------------------------------------------------------
  package ru.rustore.unitysdk;import android.app.Application;import
  ru.rustore.unitysdk.pushclient.RuStoreUnityPushClient;public class
  RuStoreUnityApplication  extends Application {    \`\`@Override public void
  onCreate() {         \`\`super
  .onCreate();         \`\`RuStoreUnityPushClient.init(            \`\`application
  =  this         \`\`);    \`\`}}
  ----------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------

-   application --- экземпляр класса Application.

Этот класс нужно указать AndroidManifest.xml проекта:

  -----------------------------------------------------------------------
  \< application android:name =
  \"ru.rustore.unitysdk.RuStoreUnityApplication\" \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Параметры, с которыми будет инициализироваться библиотека, настраиваются
в редакторе Unity. Выберите в меню редактора пункт Window → RuStoreSDK →
Settings → Push Client:

-   VKPNS Project Id --- идентификатор вашего проекта в консоли
    разработчика RuStore;

-   Allow Native Error Handling --- разрешить обработку ошибок в
    нативном SDK. Обработка ошибок

Перед вызовом методов библиотеки из C#### кода необходимо вызвать её
инициализацию:

  -----------------------------------------------------------------------
  var сonfig =  new RuStorePushClientConfig()
  {    \`\`allowNativeErrorHandling =  true
  ,    \`\`messagingServiceListener =
  pushServiceListener,    \`\`logListener =
  pushLogListener};RuStorePushClient.Instance.Init(сonfig);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   allowNativeErrorHandling --- разрешить обработку ошибок в нативном
    SDK; Обработка ошибок

-   messagingServiceListener --- объект класса, реализующего интерфейс
    IMessagingServiceListener;

-   logListener --- объект класса, реализующего интерфейс ILogListener.

Проверка возможности получения пуш-уведомления

Для работы пуш-уведомлений необходимо соблюдать несколько условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность пуш-уведомлений.

-   Приложению RuStore разрешён доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в RuStore.

Для проверки вышеперечисленных условий можно воспользоваться методом
RuStorePushClient.checkPushAvailability:

  -----------------------------------------------------------------------
  RuStorePushClient.Instance.CheckPushAvailability(    \`\`onFailure:
  (error) =\> {        \`\`// Process error    \`\`},    \`\`onSuccess:
  (response) =\> {        \`\`if (!response.isAvailable)
  {            \`\`// Process push unavailable        \`\`}    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы для работы с пуш-токеном

Получение пуш-токена пользователя

После инициализации библиотеки вы можете использовать метод
RuStorePushClient.GetToken(), для получения текущего пуш-токена
пользователя. Если у пользователя отсутствует пуш-токен, то метод
создаст и вернёт новый пуш-токен .

  -----------------------------------------------------------------------
  RuStorePushClient.Instance.GetToken(    \`\`onFailure: (error) =\>
  {        \`\`// Process error     \`\`},    \`\`onSuccess: (token) =\>
  {        \`\`// Process success     \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Удаление пуш-токена пользователя

После инициализации библиотеки вы можете использовать метод
RuStorePushClient.DeleteToken(), для удаления текущего пуш-токена
пользователя.

  -----------------------------------------------------------------------
  RuStorePushClient.Instance.DeleteToken(    \`\`onFailure: (error) =\>
  {        \`\`// Process error    \`\`},    \`\`onSuccess: () =\>
  {        \`\`// Process success    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы для работы с пуш-топиками

Подписка на пуш-уведомления по топику

После инициализации библиотеки вы можете использовать метод
SubscribeToTopic("your_topic_name") для подписки на топик.

  -----------------------------------------------------------------------
  RuStorePushClient.Instance.SubscribeToTopic(    \`\`topicName: 
  \"your_topic_name\" ,    \`\`onFailure: (error) =\> {        \`\`//
  Process error    \`\`},    \`\`onSuccess: () =\> {        \`\`//
  Process success    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отписка от пуш-уведомлений по топику

После инициализации библиотеки вы можете использовать метод
UnsubscribeFromTopic("your_topic_name") для отписки от топика.

  -----------------------------------------------------------------------
  RuStorePushClient.Instance.UnsubscribeFromTopic(    \`\`topicName: 
  \"your_topic_name\" ,    \`\`onFailure: (error) =\> {        \`\`//
  Process error    \`\`},    \`\`onSuccess: () =\> {        \`\`//
  Process success    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Работа с RuStoreMessagingService

  -----------------------------------------------------------------------
  public interface IMessagingServiceListener {    \`\`public void
  OnNewToken( string token);    \`\`public void
  OnMessageReceived(RemoteMessage message);    \`\`public void
  OnDeletedMessages();    \`\`public void OnError(List\<RuStoreError\>
  errors);}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**OnNewToken** --- будет вызван при получении нового пуш-токена.

После вызова данного метода ваше приложение ответственно за то, чтобы
передать новый пуш-токен на свой сервер.

**OnMessageReceived** --- будет вызван при получении нового
пуш-уведомления.

Получить payload пуш-уведомления (Dictionary\<string, string\>) можно из
поля message.data.

**OnDeletedMessages** --- будет вызван в случае, если один или несколько
пуш-уведомлений не были доставлены на устройство.

Это может произойти, например, по причине истечения времени жизни
уведомления до того, как оно будет доставлено на устройство.

При вызове этого метода рекомендуется синхронизироваться со своим
сервером, чтобы не пропустить данные.

**OnError** --- будет вызван при возникновении ошибки в момент
инициализации.

Возможные ошибки:

-   UnauthorizedException --- пользователь не авторизован в RuStore.

-   HostAppNotInstalledException --- RuStore отсутствует на устройстве
    пользователя.

-   HostAppBackgroundWorkPermissionNotGranted --- у RuStore нет
    разрешения на работу в фоне.

Все вышеперечисленные методы будут вызваны на фоновом потоке.

Структура уведомления

Структура полного уведомления

  -----------------------------------------------------------------------
  public class RemoteMessage  {    \`\`public string
  collapseKey;    \`\`public Dictionary\< string ,  string \>
  data;    \`\`public string messageId;    \`\`public Notification
  notification;    \`\`public int priority;    \`\`public sbyte \[\]
  rawData;    \`\`public int ttl;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   messageId --- уникальный ID сообщения. Является идентификатором
    каждого сообщения.

-   priority --- ( **на данный момент не учитывается**) возвращает
    значение приоритетности. Сейчас заложены следующие варианты:

    -   0 --- UNKNOWN.

    -   1 --- HIGH.

    -   2 --- NORMAL.

<!-- -->

-   ttl --- время жизни push-уведомления типа Int в секундах.

-   collapseKey --- ( **на данный момент не учитывается**) идентификатор
    группы уведомлений.

-   data --- словарь, в который можно передать дополнительные данные для
    уведомления.

-   rawData --- словарь data в виде массива байтов.

-   notification --- объект уведомления.

  -----------------------------------------------------------------------
  public class Notification {    \`\`public string title;    \`\`public
  string body;    \`\`public string channelId;    \`\`public string
  imageUrl;    \`\`public string color;    \`\`public string
  icon;    \`\`public string clickAction;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   title --- заголовок уведомления;

-   body --- тело уведомления;

-   channelId --- возможность задать канал, в который будет отправлено
    уведомление (актуально для Android 8.0 и выше);

-   imageUrl --- прямая ссылка на изображение для вставки в уведомление
    (изображение должно быть не более 1 МБ);

-   color --- цвет уведомления (Notification.color). Цвет необходимо
    передать в hex-формате, строкой (Пример: "#A52A2A");

-   icon --- иконка уведомления. Иконка должна лежать в ресурсах
    приложения (res/drawable). Значение параметра --- строка, которая
    совпадает с названием ресурса;

    -   Пример: в res/drawable лежит иконка small_icon.xml, которая в
        коде доступна через R.drawable.small_icon. Для отображения
        данной иконки в уведомлении сервер должен поместить в параметр
        "icon" значение "small_icon".

<!-- -->

-   clickAction --- intent action, с помощью которого будет открыта
    активити при клике на уведомление.

Создание канала для отправки уведомления

Для канала, в который будет отправлено уведомление действует следующий
порядок приоритета:

1. Если в push-уведомлении есть поле channelId, то SDK отправит
уведомление в данный канал. При этом ваше приложение ответственно за то,
чтобы создать этот канал заранее.

2\. Если поля channelId нет в пуш-уведомлении, но ваше приложение
указало параметр с каналом в AndroidManifest.xml, то будет использован
канал из AndroidManifest.xml. Ваше приложение ответственно за создание
канала.

3\. Если поля channelId нет в пуш-уведомлении, и канал по умолчанию не
задан в AndroidManifest.xml вашего приложения, то SDK самостоятельно
создаст канал и отправит в него уведомление. В дальнейшем все
уведомления без заданного канала будут отправляться в этот канал.

Открытие Activity при тапе на уведомление

По умолчанию, при тапе на уведомление SDK открывает активити с action
"android.intent.action.MAIN". Если поле clickAction присутствует, то SDK
откроет активити, которая попадает под Intent filter с указанным action.

Чтобы SDK мог открыть активити при тапе на уведомление (это относится и
к активити по-умолчанию), в манифесте приложения, в соответствующем
элементе у активити необходимо добавить строку . Без этой строчки
открыть активити SDK не сможет.

Обработка ошибок

Возможные ошибки:

-   RuStoreNotInstalledException --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException --- RuStore установленный на устройстве
    пользователя не поддерживает функционал пуш-уведомлений.

-   RuStoreUserUnauthorizedException --- пользователь не авторизован в
    RuStore.

-   RuStoreFeatureUnavailableException --- RuStore не имеет разрешения
    на работу в фоне.

-   RuStoreException --- базовая ошибка RuStore от которой наследуются
    остальные ошибки.

Если при инициализации SDK был передан параметр allowNativeErrorHandling
== true, при возникновении ошибки кроме вызова соответствующего
обработчика onFailure она передается в метод resolveForPush нативного
SDK для показа диалога с ошибкой пользователю:

  -----------------------------------------------------------------------
  fun RuStoreException.resolveForPush(context: Context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Изменить это поведение после инициализации можно установкой свойства
AllowNativeErrorHandling:

  -----------------------------------------------------------------------
  RuStorePushClient.Instance.AllowNativeErrorHandling =  false ;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Defold

Общая информация

Пример реализации

Для того, чтобы узнать как правильно интегрировать пакет для работы с
push-уведомлениями, рекомендуется ознакомиться с приложением-примером.

Необходимые условия

Для работы push-уведомлений необходимо соблюдение следующих условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность push-уведомлений.

-   Приложению RuStore разрешён доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в RuStore.

-   Отпечаток подписи приложения должна совпадать с отпечатком,
    добавленным в систему RuStore Консоль.

Подключение в проект

Для подключения пакета к проекту требуется добавить его в зависимости:

https://gitflic.ru/project/rustore/defold-extension-rustore-push/file/downloadAll?branch=master

Лучше указывать на определённый
релиз https://gitflic.ru/project/rustore/defold-extension-rustore-push/release/

Инициализация

Для инициализации сервиса пуш-уведомлений необходимо добавить значение в
game_project вашего проекта. Открываем его любым удобным текстовым
редактором и в секции \[android\] добавляем

  -----------------------------------------------------------------------
  \[android\]rustore_project_id = %your project id%package = %your
  package%
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Тут **%your project id%** --- это идентификатор проекта, **%your
package%** --- это Android пакет. В консоле разработчика поле называется
«‎ID проекта»‎ и «‎Android Package Name»‎ на странице «‎Push-уведомления»‎ -\>
«‎Проекты»‎.

Настройки по умолчанию для Заголовка и Тела пуш сообщения

Можно добавить дефолтные значения для заголовка и тела пуша, если их нет
в data сообщения

  -----------------------------------------------------------------------
  \[android\]push_field_title = default push titlepush_field_text =
  default push body
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Сервис пуш уведомлений запускается автоматически на Android устройствах
при вызове ruStorePush.set_on_token()

Методы для работы с push-токеном и сообщением

Получение push-токена пользователя

Для получения пуш-токенов, надо добавить callback в
listener ruStorePush.set_on_token()

Если у пользователя отсутствует push-токен, то метод вернёт новый
push-токен.

  -----------------------------------------------------------------------------------------
  local function new_token(self, token, error)    \`\`if token
  then       \`\`print(token)    \`\`else       \`\`print(error.error)    \`\`endendlocal
  function push_android()    \`\`ruStorePush.set_on_token(new_token)end
  -----------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------

События изменения токена

Периодически старый токен может становиться невалидным. Токен может
выписываться заново. Эти события приходят в
callback ruStorePush.set_on_token()

Работа с push-сообщением

Для получения информации из push-уведомления необходимо добавить
коллбек ruStorePush.set_on_message()

  -----------------------------------------------------------------------
  local function listener(self, payload, activated)    \`\`\-- The
  payload arrives here.    \`\`pprint(payload)endlocal function
  push_android()    \`\`ruStorePush.set_on_message(listener)end
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Структура листенера

-   payload  → поле data пуш уведомления (lua table)

-   activated → перешёл ли пользователь по нажатию на пуш в приложение
    (bool)

Полный пример

  -------------------------------------------------------------------------------------------------------------------------
  local function listener(self, payload, activated)    \`\`\-- The payload arrives here.    \`\`pprint(payload)endlocal
  function new_token(self, token, error)    \`\`if token
  then       \`\`print(token)    \`\`else       \`\`print(error.error)    \`\`endendlocal function
  push_android()    \`\`ruStorePush.set_on_token(new_token)    \`\`ruStorePush.set_on_message(listener)        \`\`print(
  \"Rustore pushes registered\" )endfunction init(self)    \`\`local sysinfo = sys.get_sys_info()    \`\`if
  sysinfo.system_name ==  \"Android\" then        \`\`push_android()    \`\`else        \`\`print( \"Notifications work
  only Android\" )    \`\`end    \`\`msg.post( \".\" ,  \"acquire_input_focus\" )end
  -------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------

Важно

Не отправляйте push-сообщения с notification и
android.notification.title, они будут обработаны RuStore. И не работают
должным образом, по ним не перейти в приложение.

Отправляйте data push со следующими полями

-   **title** --- для заголовка push сообщения;

-   **message** --- для тела push сообщения.

Flutter

Общая информация

**Пример реализации**

Ознакомьтесь с приложением-примером чтобы узнать, как правильно
интегрировать пакет для работы с
пуш-уведомлениями: https://gitflic.ru/project/rustore/flutter-rustore-push

**Условия работы пуш-уведомлений**

Для работы пуш-уведомлений необходимо соблюдение следующих условий:

-   На устройстве пользователя должно быть установлено приложение
    RuStore.

-   Приложение RuStore должно поддерживать функциональность
    пуш-уведомлений.

-   Приложению RuStore разрешен доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в приложении RuStore.

-   Отпечаток подписи приложения должен совпадать с отпечатком,
    добавленным в RuStore Консоль.

Подключение в проект

Для подключения пакета к проекту выполните команду:

  -----------------------------------------------------------------------
  flutter pub add flutter_rustore_push
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Эта команда добавит строчку в файл pubspec.yaml.

  -----------------------------------------------------------------------
  dependencies:  \`\`flutter_rustore_push: \^1.0.0
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Инициализация

Для инициализации сервиса пуш-уведомлений добавьте значение в values
вашего android проекта:

  -----------------------------------------------------------------------
  \<resources\>    \`\`\<string name= \"flutter_rustore_push_project\"
  translatable= \"false\" \>xxx\</string\>\</resources\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**xxx** --- это идентификатор проекта. В системе RuStore Консоль поле
называется «ID проекта» в разделе «Push-уведомления -\> Проекты».

Для запуска сервиса пуш-уведомлений необходимо добавить класс
Application наследованный от FlutterRustoreApplication.

Пример как это сделать на Kotlin:

  -----------------------------------------------------------------------
  package ru.rustore.flutter_rustore_push_exampleimport
  ru.rustore.flutter_rustore_push.FlutterRustoreApplicationopen class
  Application: FlutterRustoreApplication() {}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

В AndroidManifest.xml необходимо указать этот класс:

  -----------------------------------------------------------------------
  \<application        \`\`android:label=
  \"flutter_rustore_push_example\"        \`\`android:name=
  \".Application\"        \`\`android:icon= \"@mipmap/ic_launcher\"
  \>        \`\`// \... \`\`\</application\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Настройка ProGuard

Для настройки ProGuard добавьте следующее правило:

  -----------------------------------------------------------------------
  -keep public class com.vk.push.\*\* extends android.os.Parcelable
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

В файле android/app/build.gradle добавьте:

  -----------------------------------------------------------------------
  buildTypes {        \`\`release {            \`\`//
  \...            \`\`proguardFiles getDefaultProguardFile(
  \'proguard-android.txt\' ),
  \'proguard-rules.pro\'        \`\`}        \`\`// \...}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка возможности получения пуш-уведомления

Для работы push-уведомлений необходимо соблюдать несколько условий:

-   На устройстве пользователя должен быть установлен RuStore.

-   RuStore должен поддерживать функциональность push-уведомлений.

-   Приложению RuStore разрешён доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в RuStore.

Для проверки вышеперечисленных условий можно воспользоваться методом
RustorePushClient.available():

  -----------------------------------------------------------------------
  RustorePushClient.available().then((value) {      \`\`print(
  \"available success: \${value}\" );}, onError: (err) {      \`\`print(
  \"available error: \${err}\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы для работы с пуш-токеном и пуш-уведомлением

Получение пуш-токена пользователя

После инициализации библиотеки вы можете использовать метод
RustorePushClient.getToken() для получения текущего push-токена
пользователя.

Если у пользователя отсутствует пуш-токен, то метод создаст и вернёт
новый пуш-токен.

  -----------------------------------------------------------------------
  RustorePushClient.getToken().then((value) {      \`\`print( \"get token
  success: \${value}\" );}, onError: (err) {      \`\`print( \"get token
  error: \${err}\" );})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Удаление пуш-токена пользователя

Вы можете использовать метод RustorePushClient.deleteToken() для
удаления текущего push-токена пользователя.

  -----------------------------------------------------------------------
  RustorePushClient.deleteToken().then(() {      \`\`print( \"delete
  success:\" );}, onError: (err) {      \`\`print( \"delete error:
  \${err}\" );})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

События изменения токена

Периодически старый токен может становиться невалидным. Токен может
выписываться заново. Чтобы понять, что выписался новый токен, нужно
использовать коллбек RustorePushClient.onNewToken().

  -----------------------------------------------------------------------
  RustorePushClient.onNewToken((value) {      \`\`print( \"on new token
  success: \${value}\" );}, error: (err) {      \`\`print( \"on new token
  err: \${err}\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Работа с пуш-уведомлением

Для получения информации из push-уведомления необходимо добавить коллбек
RustorePushClient.onMessageReceived().

  -----------------------------------------------------------------------
  RustorePushClient.onMessageReceived((value) {      \`\`print( \"on
  message received success: id=\${value.messageId}, data=\${value.data},
  notification.body: \${value.notification?.body}\" );}, error: (err)
  {      \`\`print( \"on message received error: \${err}\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Удаление пуш-уведомления

Для удаления push-уведомления необходимо добавить коллбек
RustorePushClient.onDeletedMessages().

  -----------------------------------------------------------------------
  RustorePushClient.onDeletedMessages(() {      \`\`print( \"deleted
  messages\" );}, error: (err) {      \`\`print( \"on message received
  error: \${err}\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка ошибок

Для обработки ошибок необходимо использовать
коллбек RustorePushClient.onError().

  -----------------------------------------------------------------------
  RustorePushClient.onError((err) {      \`\`print( \"on error: \${err}\"
  );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Структура уведомления

Структура уведомления

  -----------------------------------------------------------------------
  class Message {  \`\`String? messageId;  \`\`int priority;  \`\`int
  ttl;  \`\`String? collapseKey;  \`\`Map\<String?, String?\>
  data;  \`\`Notification? notification;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   messageId --- уникальный ID сообщения. Является идентификатором
    каждого сообщения;

-   priority --- возвращает значение приоритетности. Сейчас заложены
    следующие варианты:

    -   0 --- UNKNOWN.

    -   1 --- HIGH.

    -   2 --- NORMAL.

<!-- -->

-   ttl --- время жизни push-уведомления типа Int в секундах;

-   collapseKey --- идентификатор группы уведомлений;

-   data --- словарь, в который можно передать дополнительные данные для
    уведомления;

-   notification --- объект уведомления.

Структура Notification

  -----------------------------------------------------------------------
  class Notification {  \`\`String? title;  \`\`String?
  body;  \`\`String? channelId;  \`\`String? imageUrl;  \`\`String?
  color;  \`\`String? icon;  \`\`String? clickAction;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   title --- заголовок уведомления;

-   body --- тело уведомления;

-   channelId --- возможность задать канал, в который будет отправлено
    уведомление (актуально для Android 8.0 и выше);

-   imageUrl --- прямая ссылка на изображение для вставки в уведомление
    (изображение должно быть не более 1 мегабайта);

-   color --- цвет уведомления (Notification.color). Цвет необходимо
    передать в hex-формате, строкой (Пример: «#A52A2A»);

-   icon --- иконка уведомления. Иконка должна лежать в ресурсах
    приложения (res/drawable). Значение параметра - строка, которая
    совпадает с названием ресурса:

    -   в res/drawable лежит иконка small_icon.xml, которая в коде
        доступна через R.drawable.small_icon. Для отображения данной
        иконки в уведомлении сервер должен поместить в параметр «icon»
        значение «small_icon».

<!-- -->

-   clickAction --- intent action, с помощью которого будет открыта
    активити при нажатии на уведомление.

Отправка пуш-уведомлений

keywords: RuStore разработчики документация RuStoreSDK пуш-уведомления
отправка пуш-уведомленийAPI разрабатывалось с целью предоставлять
возможность drop-in replacement для Firebase.

Для отправки пуш-уведомления используйте метод
POST https://vkpns.rustore.ru/v1/projects/\$project_id/messages:send.

Укажите «ID проекта» и «Сервисный токен», чтобы отправить
пуш-уведомление. Эти значения вы можете получить в системе RuStore
Консоль. Для этого на странице приложения перейдите в раздел
«Push-уведомления» и выберите «Проекты».

Сервисный токен нужно указывать в заголовке «Authorization: Bearer
{service-token}».

**Тело запроса**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  validate_only            bool                    Произвести валидацию
                                                   запроса, не отправляя
                                                   пуш-уведомление

  message                  object (message)        Структура
                                                   пуш-уведомления
  ------------------------------------------------------------------------

**message**

  -------------------------------------------------------------------------
  Параметр                 Тип                      Описание
  ------------------------ ------------------------ -----------------------
  token                    string                   Пуш токен пользователя,
                                                    полученный в приложении

  data                     map                      Объект, содержащий
                                                    пары «key»: value

  notification             object                   Базовый шаблон
                           (message.notification)   уведомления для
                                                    использования на всех
                                                    платформах

  android                  object (message.android) Специальные параметры
                                                    Android для сообщений
  -------------------------------------------------------------------------

**message.notification**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  title                    string                  Название уведомления

  body                     string                  Основной текст
                                                   уведомления

  image                    string                  Содержит URL-адрес
                                                   изображения, которое
                                                   будет отображаться в
                                                   уведомлении
  ------------------------------------------------------------------------

**message.android**

  -----------------------------------------------------------------------------------
  Параметр                 Тип                              Описание
  ------------------------ -------------------------------- -------------------------
  ttl                      string (duration format)         Как долго (в секундах)
                                                            сообщение должно
                                                            храниться в
                                                            хранилище.Пример:«3.5s»

  notification             object                           Уведомление для отправки
                           (message.android.notification)   на устройства Android
  -----------------------------------------------------------------------------------

**message.android.notification**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  title                    string                  Название уведомления

  body                     string                  Основной текст
                                                   уведомления

  icon                     string                  Значок уведомления

  color                    string                  Цвет значка уведомления
                                                   в формате #rrggbb

  image                    string                  Содержит URL-адрес
                                                   изображения, которое
                                                   будет отображаться в
                                                   уведомлении

  channel_id               string                  Идентификатор канала
                                                   уведомления

  click_action             string                  Действие, связанное с
                                                   кликом пользователя по
                                                   уведомлению
  ------------------------------------------------------------------------

В структуре message на данный момент поддерживаются только
представленные выше поля.

**Тело успешного ответа**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  ---                      ---                     В случае успешного
                                                   ответа возвращается
                                                   сообщение с пустым
                                                   payload

  ------------------------------------------------------------------------

**Тело ответа ошибки**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  error                    object (error)          Ошибка

  ------------------------------------------------------------------------

**error**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  code                     int                     Числовой код ошибки
                                                   (404, 400, 403, 401,
                                                   ...)

  message                  string                  Детальное описание
                                                   ошибки

  status                   string                  Код ошибки в текстовом
                                                   формате
                                                   (INVALID_ARGUMENT,
                                                   UNREGISTERED, ...)
  ------------------------------------------------------------------------

HTTP status соответствует полю code.

**Возможные ошибки при отправке сообщения:**

-   INVALID_ARGUMENT--- неправильно указаны параметры запроса при
    отправке сообщения.

-   INTERNAL--- внутренняя ошибка сервиса.

-   TOO_MANY_REQUESTS--- превышено количество попыток отправить
    сообщение.

-   PERMISSION_DENIED--- неправильно указан сервисный ключ.

-   NOT_FOUND --- неправильно указан пуш токен пользователя.

**Алгоритм валидации Message**

-   Если есть непустой payload message.data (есть хотя бы одна пара
    ключ-значение внутри), то сообщение валидно. Секции
    message.notification и message.android могут отсутствовать.

-   Если поля message.data нет, то обязательно должен быть notification.
    В этом случае проверяется наличие либо поля message.notification,
    либо message.android.notification. Хотя бы одно из этих полей должно
    присутствовать, но могут присутствовать оба (если присутствуют оба,
    то некоторые поля перезаписываются).

**Ограничения**

-   Если в пуше нет поля ttl или оно равно 0, то учитывается дефолтное
    значение равное 4 неделям. Если в пуше отсутствует секция
    message.android, то она добавляется с полем ttl.

-   Максимальный объем сообщения 4096 байт.

Примеры отправки пуш-уведомлений

keywords: RuStore разработчики документация RuStoreSDK пуш-уведомления
отправка пуш-уведомлений примеры невалидный S2S-токен пуш-токен истекшим
сроком действия**Пример успешного запроса**

  -----------------------------------------------------------------------
  POST https:
  //vkpns.rustore.ru/v1/projects/myproject-b5ae1/messages:send
  HTTP/2Content-Type: application/jsonAuthorization: Bearer
  \$ss_token{   \`\`\"message\" :{      \`\`\"token\" :
  \"bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1\...\"
  ,      \`\`\"notification\" :{        \`\`\"body\" : \"This is a
  notification message!\" ,        \`\`\"title\" : \"Message\"
  ,        \`\`\"image\" :
  \"https://image-hosting.org/284239234.jpeg\"      \`\`}   \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример запроса с невалидным пуш-токеном**

  -------------------------------------------------------------------------------------
  POST https:
  //vkpns.rustore.ru/v1/projects/U95076bdd5KDJ3LjYkNp91o05Y6LkfQk/messages:send
  HTTP/2Content-Type: application/jsonAuthorization: Bearer
  Fw9FgDx9FQtya6k-7UkSOnzpHYhDq0SQY4-8QKJ6wKZI9OUPiCCYyNmS-CV2-ZQ5{   \`\`\"message\" :
  {      \`\`\"token\" :  \"bad-push-token\" ,      \`\`\"notification\" :
  {        \`\`\"body\" :  \"This is a notification message!\" ,        \`\`\"title\"
  :  \"Message\" ,        \`\`\"image\" : 
  \"https://image-hosting.org/284239234.jpeg\"      \`\`}   \`\`}}
  -------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 400{    \`\`\"error\" : {        \`\`\"code\" :  400
  ,        \`\`\"message\" :  \"The registration token is not a valid FCM
  registration token\" ,        \`\`\"status\" : 
  \"INVALID_ARGUMENT\"    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример запроса с валидным пуш-токеном с истекшим сроком действия**

  -------------------------------------------------------------------------------------
  POST https:
  //vkpns.rustore.ru/v1/projects/U95076bdd5KDJ3LjYkNp91o05Y6LkfQk/messages:send
  HTTP/2Content-Type: application/jsonAuthorization: Bearer
  Fw9FgDx9FQtya6k-7UkSOnzpHYhDq0SQY4-8QKJ6wKZI9OUPiCCYyNmS-CV2-ZQ5{   \`\`\"message\" :
  {      \`\`\"token\" :  \"eH4tgqKEfFKqH6cMJ2WLttVibgQO9hfn\"
  ,      \`\`\"notification\" : {        \`\`\"body\" :  \"This is a notification
  message!\" ,        \`\`\"title\" :  \"Message\" ,        \`\`\"image\" : 
  \"https://image-hosting.org/284239234.jpeg\"      \`\`}   \`\`}}
  -------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 404{    \`\`\"error\" : {        \`\`\"code\" :  404
  ,        \`\`\"message\" :  \"Requested entity was not found.\"
  ,        \`\`\"status\" :  \"NOT_FOUND\"    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отправка push-уведомлений по топикам

Для работы с топиками потребуются следующие артефакты:

-   **project_id** (ID проекта), **ss_token** (сервисный токен) --- Эти
    значения можно получить в консоли разработчика. Для этого нужно
    перейти в раздел «Push-уведомления», открыть вкладку «Проекты» на
    странице приложения. Подробнее смотрите в разделе Отправка
    push-уведомлений.

-   **push_token ---** Пуш-токен(ы) устройств для подписки на рассылку
    по топику и отписки от неё.

-   **topic ---** Топик в проекте.

Отправка push-уведомления в топик

Требуется наличие заголовка Authorization: **Authorization: Bearer
\$ss_token**.

**Тело запроса**

  -------------------------------------------------------------------------
  Параметр                 Тип                      Описание
  ------------------------ ------------------------ -----------------------
  data                     map                      Объект, содержащий
                                                    пары « key»: value

  notification             object                   Базовый шаблон
                           (message.notification)   уведомления для
                                                    использования на всех
                                                    платформах

  android                  object (message.android) Специальные параметры
                                                    Android для сообщений
  -------------------------------------------------------------------------

**Тело успешного ответа**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  message                  text                    Сообщение об успешной
                                                   отправке пуша

  ------------------------------------------------------------------------

**Тело ответа ошибки**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  code                     int                     Код ошибки

  status                   text                    Статус

  message                  text                    Подробная ошибка
  ------------------------------------------------------------------------

Подписка на push-уведомления по топику

Требуется наличие заголовка Authorization: **Authorization: Bearer
\$ss_token**.

**Тело запроса**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  push_tokens              array (string)          Пуш-токены, которые
                                                   нужно подписать на
                                                   топик

  ------------------------------------------------------------------------

**Тело успешного ответа**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  message                  text                    Сообщение об успешной
                                                   подписке или наличии
                                                   ошибок

  errors                   object array (Тело      Ошибки по токенам
                           ошибки по токену)
  ------------------------------------------------------------------------

**Тело ошибки по токену**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  push_token               text                    Пуш-токен

  error                    object (Тело ответа     Ошибка
                           ошибки)
  ------------------------------------------------------------------------

**Тело ответа ошибки**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  code                     int                     Код ошибки

  status                   text                    Статус

  message                  text                    Подробная ошибка
  ------------------------------------------------------------------------

Отписка от push-уведомлений по топику

Требуется наличие заголовка Authorization: **Authorization: Bearer
\$ss_token**.

**Тело запроса**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  push_tokens              string array            Пуш-токены, которые
                                                   нужно отписать от
                                                   топика

  ------------------------------------------------------------------------

**Тело успешного ответа**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  message                  text                    Сообщение об успешной
                                                   подписке или наличии
                                                   ошибок

  errors                   object array (Тело      Ошибки по токенам
                           ошибки по токену)
  ------------------------------------------------------------------------

**Тело ошибки по** **токену**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  push_token               text                    Пуш-токен

  error                    object (Тело ответа     Ошибка
                           ошибки)
  ------------------------------------------------------------------------

**Тело ответа ошибки**

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  code                     int                     Код ошибки

  status                   text                    Статус

  message                  text                    Подробная ошибка
  ------------------------------------------------------------------------

Примеры отправки push-уведомлений по топикам

**Подписка на топик hello**

  ---------------------------------------------------------------------------------------------
  POST 
  \'https://vkpns-topics.rustore.ru/v1/projects/{project_id}/topics/{topic}/batch_subscribe\'
  HTTP /2Content-Type: application /jsonAuthorization: Bearer
  \$ss_token{    \`\`\"push_tokens\" : \[        \`\`\"kHrfTow3AjqdgUeCJLwbIHd7c0\...\...\"
  ,        \`\`\"9mbJVS0-2e0cCcIx7X5nxMIgp8\...\...\"    \`\`\]}
  ---------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------

**Успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"message\" :  \"success\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Частично успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"message\" :  \"1 error(s)\" ,    \`\`\"errors\" :
  \[        \`\`{            \`\`\"push_token\" : 
  \"9mbJVS0-2e0cCcIx7X5nxMIgp8\...\...\" ,             \`\`\"error\" :
  {                \`\`\"code\" :  1001 ,              \`\`\"status\" : 
  \"FORBIDDEN\" ,                \`\`\"message\" :  \"s2s token
  invalid\"            \`\`}        \`\`}    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Отписка от топика hello**

  -----------------------------------------------------------------------------------------------
  POST 
  \'https://vkpns-topics.rustore.ru/v1/projects/{project_id}/topics/{topic}/batch_unsubscribe\'
  HTTP /2Content-Type: application /jsonAuthorization: Bearer \$ss_token{    \`\`\"push_tokens\"
  : \[        \`\`\"kHrfTow3AjqdgUeCJLwbIHd7c0\...\...\"
  ,        \`\`\"9mbJVS0-2e0cCcIx7X5nxMIgp8\...\...\"    \`\`\]}
  -----------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------

**Успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"message\" :  \"success\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Частично успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"message\" :  \"1 error(s)\" ,    \`\`\"errors\" :
  \[        \`\`{            \`\`\"push_token\" : 
  \"9mbJVS0-2e0cCcIx7X5nxMIgp8\...\...\" ,             \`\`\"error\" :
  {                \`\`\"code\" :  1001 ,              \`\`\"status\" : 
  \"FORBIDDEN\" ,                \`\`\"message\" :  \"s2s token
  invalid\"            \`\`}        \`\`}    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Отправка сообщения в топик hello**

  -------------------------------------------------------------------------------------------------------
  POST 
  \'https://vkpns-topics.rustore.ru/v1/projects/Lpvk29a2Al2P6tWu-a-aN3PKwO6-qvXZ/topics/hello/publish\'
  HTTP /2Content-Type: application /jsonAuthorization: Bearer \$ss_token{    \`\`\"message\" :
  {        \`\`\"notification\" :{            \`\`\"body\" : \"This is a notification message!\"
  ,            \`\`\"title\" : \"Message\" ,            \`\`\"image\" :
  \"https://image-hosting.org/284239234.jpeg\"        \`\`}    \`\`}}
  -------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------

**Успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"message\" :  \"payload has been successfully
  published to topic hello\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример ошибки BAD_REQUEST**

  -----------------------------------------------------------------------
  HTTP/ 2 400{    \`\`\"code\" :  2000 ,    \`\`\"status\" : 
  \"BAD_REQUEST\" ,    \`\`\"message\" :  \"failed to parse request:
  invalid character \'s\' after object key:value pair\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример ошибки FORBIDDEN**

  -----------------------------------------------------------------------
  HTTP/ 2 403{    \`\`\"code\" :  1001 ,    \`\`\"status\" : 
  \"FORBIDDEN\" ,    \`\`\"message\" :  \"s2s token invalid\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Рассылка пуш-уведомлений по группам пользователей

Часто существует необходимость рассылать пуши определенным группам
пользователей. Это можно сделать с помощью пушей RuStore и MyTracker.

В приложение необходимо подключить SDK Push и MyTracker. В документации
подробно описано как это сделать.

Используя эти SDK, вы сможете совершать рассылку по сегментам
пользователей.

Сегмент --- это группа пользователей, отобранных по заданным вами
параметрам. Например, пользователи, которые приносят наибольший доход
или зарегистрированные пользователи со старой версией Android.

Сегмент, как инструмент аналитики MyTracker, предоставляет все
возможности для работы с аудиторией продукта:

-   позволяет оценить размер и динамику отдельных групп пользователей;

-   выбрать целевую аудиторию для таргетированной рекламы;

-   передать идентификаторы устройств и пользователей, входящих в
    сегмент, в стороннюю систему аналитики или партнёру;

-   строить отчёты любой сложности по одному или нескольким сегментам,
    не перегружая статистику лишними данными.

API пуш-уведомлений для работы с сегментам

Общая информация

Для работы с сегментами потребуются следующие артефакты:

-   **project_id** (ID проекта), **ss_token** (сервисный токен). Эти
    значения можно получить в консоли разработчика. Для этого нужно
    перейти в раздел «Пуш-уведомления» \> «Проекты» на странице
    приложения.Отправка пушицы-уведомлений

-   **push_token**. Пуш токен(ы) устройств для подписки на рассылку по
    топику и отписки от неё.

-   **mt_api_user_id**. ***API User ID*** из myTracker.

-   **mt_secret_key**. ***Секретный ключ к API*** из myTracker.

-   **mt_segment_id**. Идентификатор сегмента из myTracker.

-   **mt_app_id**. Идентификатор приложения.

-   **export_project_id (uuid)**. Идентификатор проекта с настройками
    экспорта.

-   **export_segment_id (uuid)**. Идентификатор сегмента для экспорта.

Создание проекта с настройками экспорта

**POST**https://vkpns-segments.rustore.ru/v1/export_settings/project/create

Требуется наличие заголовка Authorization: **Authorization: Bearer
\$ss_token**

Тело запроса

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  Параметр                 Тип                     Описание

  ---                      ---                     ---

  project                  text                    **project_id**

  api_user_id              text                    **mt_api_user_id**

  secret_key               text                    **mt_secret_key**

  app_id                   int                     **mt_app_id**
  ------------------------------------------------------------------------

Тело успешного ответа

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  export_project_id        text                    **export_project_id**

  ------------------------------------------------------------------------

Тело ответа ошибки

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  code                     int                     Код ошибки

  status                   text                    Статус

  message                  text                    Подробная ошибка
  ------------------------------------------------------------------------

Получение настроек экспорта проекта

**POST**
https://vkpns-segments.rustore.ru/v1/export_settings/project/get

Требуется наличие заголовка Authorization: **Authorization: Bearer
\$ss_token**

Тело запроса

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  id                       text                    **export_project_id**

  ------------------------------------------------------------------------

Тело успешного ответа

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  id                       text                    **export_project_id**

  project                  text                    **project_id**

  app_id                   int                     **mt_app_id**
  ------------------------------------------------------------------------

Тело ответа ошибки

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  code                     int                     Код ошибки

  status                   text                    Статус

  message                  text                    Подробная ошибка
  ------------------------------------------------------------------------

Создание сегмента для экспорта

**POST**https://segments-vkpns.rustore.ru/v1/export_settings/project//segments/create

Требуется наличие заголовка Authorization: **Authorization: Bearer
\$ss_token**

Тело запроса

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  period                   int                     периодичность выгрузки
                                                   в часах

  segment                  text                    **mt_segment_id**
  ------------------------------------------------------------------------

Тело успешного ответа

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  export_segment_id        text                    **export_segment_id**

  ------------------------------------------------------------------------

Тело ответа ошибки

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  code                     int                     Код ошибки

  status                   text                    Статус

  message                  text                    Подробная ошибка
  ------------------------------------------------------------------------

Получение данных сегментов для экспорта

**POST**https://segments-vkpns.rustore.ru/v1/export_settings/project//segments/get

Требуется наличие заголовка Authorization: **Authorization: Bearer
\$ss_token**

Тело успешного ответа

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  segments                 array                   Массив с сегментами

  ------------------------------------------------------------------------

Segment

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  id                       text                    **export_segment_id**

  segment                  text                    **mt_segment_id**

  period                   int                     периодичность выгрузки
                                                   в часах

  is_enabled               boolean                 флаг, включен данный
                                                   сегмент или нет
  ------------------------------------------------------------------------

Тело ответа ошибки

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  code                     int                     Код ошибки

  status                   text                    Статус

  message                  text                    Подробная ошибка
  ------------------------------------------------------------------------

Отправка push-уведомления в сегмент

**POST**
https://segments-vkpns.rustore.ru/v1/projects//segments//publish

Требуется наличие заголовка Authorization: **Authorization: Bearer
\$ss_token**

Тело запроса

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  message                  object (message)        Сообщение

  ------------------------------------------------------------------------

Тело успешного ответа

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  message                  text                    Сообщение об успешной
                                                   отправке пуша

  ------------------------------------------------------------------------

Тело ответа ошибки

  ------------------------------------------------------------------------
  Параметр                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  code                     int                     Код ошибки

  status                   text                    Статус

  message                  text                    Подробная ошибка
  ------------------------------------------------------------------------

Примеры

**Создание проекта с настройками экспорта**

  -------------------------------------------------------------------------
  curl \--location 
  \'https://vkpns-segments.rustore.ru/v1/export_settings/project/create\'
  \\\--header  \'Content-Type: application/json\' \\\--header  \'Accept:
  application/json\' \\\--header  \'Authorization: Bearer \<ss_token\>\'
  \\\--data \'{  \`\`\"project\" :  \"\<project_id\>\"
  ,  \`\`\"api_user_id\" :  \"\<mt_api_user_id\>\" ,  \`\`\"secret_key\" : 
  \"\<mt_secret_key\>\" ,  \`\`\"app_id\" : \<mt_app_id\>}\'
  -------------------------------------------------------------------------

  -------------------------------------------------------------------------

**Успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"project_id\" : 
  \"b04b48ab-3125-444f-94eb-aad511c074e7\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Невалидный s2s-токен**

  -----------------------------------------------------------------------
  HTTP/ 2 400{    \`\`\"code\" :  2000 ,    \`\`\"status\" : 
  \"BAD_REQUEST\" ,    \`\`\"message\" :  \"Invalid S2S token\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Получение настроек экспорта проекта**

  -----------------------------------------------------------------------
  curl \--location 
  \'https://segments-vkpns.rustore.ru/v1/export_settings/project/get\'
  \\\--header  \'Content-Type: application/json\' \\\--header  \'Accept:
  application/json\' \\\--header  \'Authorization: Bearer \<ss_token\>\'
  \\\--data \'{  \`\`\"id\" :  \"\<export_project_id\>\"}\'
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"id\" :  \"\<export_project_id\>\"
  ,    \`\`\"app_id\" : \<mt_app_id\>,    \`\`\"project\" : 
  \"\<project_id\>\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Создание сегмента для экспорта**

  --------------------------------------------------------------------------------------------------------
  curl \--location 
  \'https://segments-vkpns.rustore.ru/v1/export_settings/project/\<export_project_id\>/segments/create\'
  \\\--header  \'Content-Type: application/json\' \\\--header  \'Accept: application/json\' \\\--header 
  \'Authorization: Bearer \<ss_token\>\' \\\--data \'{  \`\`\"period\" : 24,  \`\`\"segment\" : 
  \"\<mt_segment_id\>\"}\'
  --------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------

**Успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"segment_id\" :  \"\<export_segment_id\>\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Получение данных сегмента для экспорта**

  -----------------------------------------------------------------------------------------------------
  curl \--location \--request POST 
  \'https://segments-vkpns.rustore.ru/v1/export_settings/project/\<export_project_id\>/segments/get\'
  \\\--header  \'Accept: application/json\' \\\--header  \'Authorization: Bearer \<ss_token\>\'
  -----------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------

**Успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"segments\" :
  \[        \`\`{            \`\`\"id\" :  \"\<export_segment_id\>\"
  ,            \`\`\"segment\" :  \"\<mt_segment_id\>\"
  ,            \`\`\"period\" :  24 ,            \`\`\"is_enabled\" : 
  true        \`\`}    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Отправка сообщения в сегмент**

  -----------------------------------------------------------------------------------------------------
  curl \--location 
  \'https://segments-vkpns.rustore.ru/v1/projects/\<project_id\>/segments/\<mt_segment_id\>/publish\'
  \\\--header  \'Content-Type: application/json\' \\\--header  \'Accept: application/json\'
  \\ \`\`\--header  \'Authorization: Bearer \<ss_token\>\' \\\--data \'{    \`\`\"message\" :
  {        \`\`\"notification\" :{        \`\`\"body\" : \"This is a notification message!\"
  ,        \`\`\"title\" : \"Message\" ,        \`\`\"image\" :
  \"https://image-hosting.org/284239234.jpeg\"      \`\`}     \`\`}}\'
  -----------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------

**Успешный ответ**

  -----------------------------------------------------------------------
  HTTP/ 2 200{    \`\`\"message\" :  \"payload has been successfully
  published to segment \<mt_segment_id\>\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Работа с сегментами в MyTracker

Подключение MyTracker в приложение

Для рассылки пуш-уведомлений по сегментам, вам необходимо
интегрировать SDK MyTracker и SDK Пуш-уведомлений в ваше приложение

Создание сегментов

Пуш-уведомления от рустора предоставляют возможность рассылать пуши по
разным сегментам пользователя. Для этого необходимо интегрироваться с
MyTracker

-   Настроить SDK MyTracker в приложении

-   Настроить сбор сегментов в интерфейсе MyTracker

Сегмент --- это группа пользователей, отобранных по заданным вами
параметрам. Например, пользователи, которые приносят наибольший доход
или зарегистрированные пользователи со старой версией Android.

Сегмент, как инструмент аналитики MyTracker, предоставляет все
возможности для работы с аудиторией продукта:

-   позволяет оценить размер и динамику отдельных групп пользователей;

-   выбрать целевую аудиторию для таргетированной рекламы;

-   передать идентификаторы устройств и пользователей, входящих в
    сегмент, в стороннюю систему аналитики или партнёру;

-   строить отчёты любой сложности по одному или нескольким сегментам,
    не перегружая статистику лишними данными.

Подробная информация по сегментам описана в документации
MyTracker https://docs.tracker.my.com/reports/segments

MyTracker считает размер сегмента исходя из заданных вами параметров.
Расчёт производится ежедневно, поэтому на страницах сегментов легко
проследить динамику изменений. А ключевые данные по размерам, датам
последних расчётов и связанным приложениям отображены на странице Список
сегментов.

На странице Список сегментов нажмите «Добавить».

За основу вы можете взять уже готовый сегмент. Для этого откройте
страницу сегмента и нажмите 'Дублировать'.

Заполните форму:

-   Название\* --- название сегмента, которое будет отображено в списках
    и отчётах MyTracker.

-   Тип аудитории\* --- тип аудитории, по которой будет построен
    сегмент: по физическим устройствам, по учётным записям
    пользователей.

-   Аккаунт\*--- аккаунт, в который будет добавлен сегмент. Если у вас
    всего один аккаунт, он будет выбран автоматически. Подробнее
    смотрите разделАккаунт.

-   Проекты --- один или несколько проектов, по приложениям которых
    будет сформирован сегмент. Подробнее смотрите раздел Проект.

-   Приложения --- одно или несколько приложений, по аудитории которых
    будет сформирован сегмент.

Подключение API MyTracker

Для работы с сегментами необходимо подключить API MyTracker. Необходимо
получить токен на странице профиля пользователя.

Нажмите кнопку «Показать». Скопируйте токен и укажите его при создании
настроек в API пуш-уведомлений для работы с сегментами в
поле secret_key.

После создания проекта вы можете добавлять новые сегменты в экспорт. Для
этого вам нужен ID сегмента, который вы укажете в запросе. Этот ID можно
получить из url после перехода на страницу сегмента.

Скопируйте idSegment из url и используйте его в запросе.

  --------------------------------------------------------------------------------------------------------
  curl \--location 
  \'https://segments-vkpns.rustore.ru/v1/export_settings/project/\<export_project_id\>/segments/create\'
  \\\--header  \'Content-Type: application/json\' \\\--header  \'Accept: application/json\' \\\--header 
  \'Authorization: Bearer \<ss_token\>\' \\\--data \'{  \`\`\"period\" :  24 ,  \`\`\"segment\" : 
  \"\<mt_segment_id\>\"}\'
  --------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------

**export_project_id** --- ID проекта, полученный на первом шаге.

**mt_segment_id** --- ID сегмента, полученный из MyTracker.

**ss_token** --- сервисный токен для авторизации, полученный из консоли
разработчика со страницы проекта пушей.

RuStore SDK для универсальных пуш-уведомлений

Kotlin

Общая информация

RuStore SDK для универсальных пуш-уведомлений --- это набор пакетов для
работы с пуш-уведомлениями. Отправляйте и получайте сообщения через
несколько каналов:

-   FCM --- Firebase Cloud Messaging;

-   HMS --- Huawei Mobile Services;

-   RuStore.

Используйте SDK в связке с уже настроенными сервисами HMS и FCM.

**Пример реализации**

Ознакомьтесь с приложением-примером чтобы узнать, как правильно
интегрировать универсальные пуш-уведомления.

**Условия работы пуш-уведомлений**

Для работы универсальных пуш-уведомлений необходимо соблюдение следующих
условий:

-   На устройстве пользователя должно быть установлено приложение
    RuStore.

-   Приложение RuStore должно поддерживать функциональность
    пуш-уведомлений.

-   Приложению RuStore разрешен доступ к работе в фоновом режиме.

-   Пользователь должен быть авторизован в приложении RuStore.

-   Отпечаток подписи приложения должен совпадать с отпечатком,
    добавленным в консоль разработчика.

**Настройка приложения**

Для инициализации понадобится ID проекта, который можно получить в
«RuStore Консоль». На странице приложения перейдите в раздел
«Push-уведомления» и выберите «Проекты».

Подключение в проект

Подключите репозитории в файле settings.gradle:

  -------------------------------------------------------------------------------------------
  dependencyResolutionManagement
  {    \`\`repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)    \`\`repositories
  {        \`\`google()        \`\`mavenCentral()        \`\`maven {url = uri(
  \"https://developer.huawei.com/repo/\" )}        \`\`maven {            \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\" )        \`\`}    \`\`}}
  -------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------

**Подключение зависимостей**

Для подключения зависимости добавьте в свой файл build.gradle на уровне
app следующий код:

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \'ru.rustore.sdk:universalpush:0.1.2\' )    \`\`implementation(
  \'ru.rustore.sdk:universalrustore:0.1.2\' )    \`\`implementation(
  \'ru.rustore.sdk:universalhms:0.1.2\' )    \`\`implementation(
  \'ru.rustore.sdk:universalfcm:0.1.2\' )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

При использовании RuStore Push SDK в вашем приложении вместе с ProGuard
добавьте следующее правило:

  -----------------------------------------------------------------------
  -keep public class com.vk.push.\*\* extends android.os.Parcelable
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Это необходимо только для работы пакета ru.rustore.sdk:universalrustore.

Для работы с FCM и HMS нужно:

-   добавить в build.gradle на уровне app

  -----------------------------------------------------------------------
  plugins {    \`\`// \...    \`\`// нужно для fcm    \`\`id 
  \'com.google.gms.google-services\'    \`\`// нужно для hms    \`\`id 
  \'com.huawei.agconnect\'}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   добавить в build.gradle на корневом уровне

  -----------------------------------------------------------------------
  dependencies {    \`\`// нужно для fcm    \`\`classpath 
  \'com.google.gms:google-services:4.3.15\'    \`\`// нужно для
  hms    \`\`classpath 
  \'com.huawei.agconnect:agcp:1.6.0.300\'    \`\`classpath 
  \'com.android.tools.build:gradle:7.4.0\'}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   добавить в settings.gradle на корневом уровне

  -----------------------------------------------------------------------------------
  pluginManagement {    \`\`repositories
  {        \`\`google()        \`\`mavenCentral()        \`\`gradlePluginPortal()    
     \`\`//  нужно для работы hms        \`\`maven {url = uri(
  \"https://developer.huawei.com/repo/\" )}    \`\`}}
  -----------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------

Google Play

Настройка приложения

Для публикации приложения в Google Play нужно добавлять только
зависимости для работы пушей через FCM и RuStore. Чтобы начать работать
с FCM, настройте проект в сервисе Firebase.

-   Создайте новый проект в Firebase Console.

-   В Firebase Console выберите проект, для которого вы планируете
    подключить пуш-уведомления.

-   В меню слева, рядом с названием проекта, нажмите значок шестеренки и
    перейдите в раздел Project Settings.

-   Перейдите к разделу Your apps и скачайте файл google-services.json.

-   Поместите файл google-services.json в app/google-services.json.

Подключение в проект

Для публикации приложения в Goole Play вам нужно использовать только
пакеты  universalfcm, universalrustore и universalpush.

Подключите репозиторий в settings.gradle на корневом уровне:

  -------------------------------------------------------------------------------------------
  dependencyResolutionManagement
  {    \`\`repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)    \`\`repositories
  {        \`\`google()        \`\`mavenCentral()        \`\`//  нужно для работы
  rustore        \`\`maven {            \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\" )        \`\`}    \`\`}}
  -------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------

**Подключение зависимостей**

Для подключения зависимости добавьте в свой файл build.gradle на уровне
app следующий код:

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \'ru.rustore.sdk:universalpush:0.1.1\' )    \`\`implementation(
  \'ru.rustore.sdk:universalrustore:0.1.0\' )    \`\`implementation(
  \'ru.rustore.sdk:universalfcm:0.1.0\' )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

При использовании SDK в вашем приложении вместе с ProGuard добавьте
следующее правило:

  -------------------------------------------------------------------------
  -keep public class com.vk.push.\*\* extends android.os.Parcelable\<br\>
  -------------------------------------------------------------------------

  -------------------------------------------------------------------------

Для работы с FCM нужно:

-   добавить в build.gradle на уровне app

  -----------------------------------------------------------------------
  plugins {    \`\`// \...    \`\`// нужно для fcm    \`\`id 
  \'com.google.gms.google-services\'}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   добавить в build.gradle на корневом уровне

  -----------------------------------------------------------------------
  buildscript {    \`\`dependencies {        \`\`// нужно для
  fcm        \`\`classpath 
  \'com.google.gms:google-services:4.3.15\'    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Huawei Mobile Services

Настройка приложения

Для публикации приложения в AppGallery нужно добавлять только
зависимости для работы пушей через HMS и RuStore. Чтобы начать работать
с HMS, настройте проект в сервисе developer.huawei.com.

-   Создайте новый проект в developer.huawei.com.

-   В AppGallery Connect выберите проект, для которого вы планируете
    подключить пуш-уведомления

-   Перейдите на страницу Настройки проекта и затем на вкладку Основная
    информация.

-   Перейдите к разделу Данные приложения и скачайте файл
    agconnect-services.json.

-   Поместите файл agconnect-services.json в
    app/agconnect-services.json.

Подключение в проект

Для публикации приложения в AppGallery вам нужно использовать только
пакеты universalhms, universalrustore и universalpush.

Подключите репозиторий в файле settings.gradle:

  -------------------------------------------------------------------------------------------
  dependencyResolutionManagement
  {    \`\`repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)    \`\`repositories
  {        \`\`google()        \`\`mavenCentral()        \`\`maven {url = uri(
  \"https://developer.huawei.com/repo/\" )}        \`\`maven {            \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\" )        \`\`}    \`\`}}
  -------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------

**Подключение зависимостей**

Для подключения зависимости добавьте в свой файл build.gradle на уровне
app следующий код:

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation(
  \'ru.rustore.sdk:universalpush:0.1.1\' )    \`\`implementation(
  \'ru.rustore.sdk:universalrustore:0.1.0\' )    \`\`implementation(
  \'ru.rustore.sdk:universalhms:0.1.0\' )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

При использовании SDK в вашем приложении вместе с ProGuard добавьте
следующее правило:

  -----------------------------------------------------------------------
  -keep public class com.vk.push.\*\* extends android.os.Parcelable
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для работы с HMS нужно:

-   добавить в build.gradle на уровне app

  -----------------------------------------------------------------------
  plugins {    \`\`// \...    \`\`// нужно для hms    \`\`id 
  \'com.huawei.agconnect\'}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   добавить в build.gradle на корневом уровне

  -----------------------------------------------------------------------
  dependencies {    \`\`// нужно для hms    \`\`classpath 
  \'com.huawei.agconnect:agcp:1.6.0.300\'    \`\`classpath 
  \'com.android.tools.build:gradle:7.4.0\'}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   добавить в settings.gradle на корневом уровне

  -----------------------------------------------------------------------------------
  pluginManagement {    \`\`repositories
  {        \`\`google()        \`\`mavenCentral()        \`\`gradlePluginPortal()    
     \`\`//  нужно для работы hms        \`\`maven {url = uri(
  \"https://developer.huawei.com/repo/\" )}    \`\`}}
  -----------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------

Инициализация

Для инициализации нужно в файле App.kt прописать следующий код:

  --------------------------------------------------------------------------------------------------
  import android.app.Applicationimport ru.rustore.sdk.universalpush.RuStoreUniversalPushClientimport
  ru.rustore.sdk.universalpush.firebase.provides.FirebasePushProviderimport
  ru.rustore.sdk.universalpush.hms.providers.HmsPushProviderimport
  ru.rustore.sdk.universalpush.rustore.logger.DefaultLoggerimport
  ru.rustore.sdk.universalpush.rustore.providers.RuStorePushProviderclass App: Application()
  {    \`\`private val tag =  \"UniversalPushExampleApp\"    \`\`override fun onCreate()
  {        \`\`super.onCreate()        \`\`RuStoreUniversalPushClient.init(            \`\`context =
  this,            \`\`rustore = RuStorePushProvider(                \`\`application =
  this,                \`\`projectId =  \"m3Id6aPeXq36mp\...\" ,                \`\`logger =
  DefaultLogger(tag = tag),            \`\`),            \`\`firebase =
  FirebasePushProvider(                \`\`context = this,            \`\`),            \`\`hms =
  HmsPushProvider(                \`\`context = this,                \`\`appid =  \"108003365\"
  ,            \`\`),        \`\`)    \`\`}}
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

Если вы используете только несколько провайдеров для пуш-уведомлений, то
можно инициализировать только используемые.

  -----------------------------------------------------------------------
  RuStoreUniversalPushClient.init(    \`\`context = this,    \`\`rustore
  = RuStorePushProvider(        \`\`application =
  this,        \`\`projectId =  \"m3Id6aPeXq36mp\...\"
  ,        \`\`logger = DefaultLogger(tag = tag),    \`\`),    \`\`hms =
  HmsPushProvider(        \`\`context = this,        \`\`appid = 
  \"108003365\" ,    \`\`),)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка возможности работы с пуш-уведомлениями

Для проверки доступности провайдеров пуш-уведомлений нужно вызвать метод
checkAvailability (context).

  -------------------------------------------------------------------------------------------------
  RuStoreUniversalPushClient.checkAvailability(this)            \`\`.addOnCompleteListener(object :
  OnCompleteListener\<Map\<String, Boolean\>\> {                \`\`override fun onSuccess(result:
  Map\<String, Boolean\>) {                    \`\`Log.w(tag,  \"get availability success
  \${result}\" )                \`\`}                \`\`override fun onFailure(throwable:
  Throwable) {                    \`\`Log.e(tag,  \"get tokens err: \${throwable}\"
  )                \`\`}            \`\`})
  -------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------

**result** --- это словарь с ключами:

  -----------------------------------------------------------------------
  public const val UNIVERSAL_FCM_PROVIDER: String =  \"firebase\"public
  const val UNIVERSAL_HMS_PROVIDER: String =  \"hms\"public const val
  UNIVERSAL_RUSTORE_PROVIDER: String =  \"rustore\"
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверить доступность конкретного провайдера пуш-уведомлений можно так:

  -----------------------------------------------------------------------
  if (result\[UNIVERSAL_HMS_PROVIDER\] ?:  false ) {    \`\`// hms
  провайдер доступен}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Работа с токенами

**Получение токенов**

Для получения списка токенов по всем провайдерам нужно вызвать метод
getTokens().

  -------------------------------------------------------------------------------------
  RuStoreUniversalPushClient.getTokens()            \`\`.addOnCompleteListener(object :
  OnCompleteListener\<Map\<String, Boolean\>\> {                \`\`override fun
  onSuccess(result: Map\<String, Boolean\>) {                    \`\`Log.w(tag,  \"get
  availability success \${result}\" )                \`\`}                \`\`override
  fun onFailure(throwable: Throwable) {                    \`\`Log.e(tag,  \"get tokens
  err: \${throwable}\" )                \`\`}            \`\`})
  -------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------

**result** --- это словарь с ключами:

  -----------------------------------------------------------------------
  public const val UNIVERSAL_FCM_PROVIDER: String =  \"firebase\"public
  const val UNIVERSAL_HMS_PROVIDER: String =  \"hms\"public const val
  UNIVERSAL_RUSTORE_PROVIDER: String =  \"rustore\"
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для получения конкретного токена используйте код:

  -----------------------------------------------------------------------
  result\[UNIVERSAL_FCM_PROVIDER\].orEmpty()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Удаление токенов**

Для удаления токенов нужно вызвать метод deleteTokens(token) и передать
словарь со списком токенов.

  ----------------------------------------------------------------------------------------------
  RuStoreUniversalPushClient.deleteTokens(    \`\`mapOf(        \`\`UNIVERSAL_RUSTORE_PROVIDER
  to  \"xxx\" ,        \`\`UNIVERSAL_FCM_PROVIDER to  \"yyy\"
  ,        \`\`UNIVERSAL_HMS_PROVIDER to  \"zzz\"    \`\`))
  ----------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------

где **xxx**, **yyy**, **zzz** --- это токены от разных провайдеров
пуш-уведомлений.

Работа с топиками

**Подписка на топик**

Для подписки на топик нужно вызвать метод subscribeToTopic ("topic").

  -----------------------------------------------------------------------
  RuStoreUniversalPushClient.subscribeToTopic(\"some_topic\")
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Отписка от топика**

Для отписки от топика нужно вызвать метод unsubscribeToTopic ("topic").

  -----------------------------------------------------------------------
  RuStoreUniversalPushClient.unsubscribeFromTopic(\"some_topic\")\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка события

Обработка события onDeletedMessages

Для обработки события onDeletedMessages вам нужно добавить коллбэк
OnDeletedMessagesListener в App классе после инициализации
RuStoreUniversalPushClient. При событии onDeletedMessages будет вызван
коллбэк с параметром providerType, который позволяет понять какой
пуш-провайдер вызвал событие.

  -----------------------------------------------------------------------
  RuStoreUniversalPushClient.setOnDeletedMessagesListener { providerType
  -\>    \`\`// process event}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка события onNewToken

Для обработки события onNewToken вам нужно добавить коллбэк
OnNewTokenListener в App классе после инициализации
RuStoreUniversalPushClient. При событии onNewToken будет вызван коллбэк
с параметрами:

-   providerType --- позволяет понять какой пуш-провайдер вызвал
    событие.

-   token --- новый пуш-токен.

  -----------------------------------------------------------------------
  RuStoreUniversalPushClient.setOnNewTokenListener {  providerType, token
  -\>     \`\`// process event}  
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка уведомлений

Для получения уведомлений вам нужно добавить коллбэк
OnMessageReceiveListener в App классе после инициализации
RuStoreUniversalPushClient. Если уведомления отправлены через universal
api, то они будут дедублицированы на клиенте и коллбэк получения
уведомлений вызовется 1 раз.

Если в объекте notification есть данные, то RuStoreSDK сама отобразит
уведомление. Если вы не хотите, чтобы RuStoreSDK самостоятельно
отображала уведомление, то используйте объект data, а объект
notification оставляйте пустым. Однако коллбэк OnMessageReceiveListener
будет вызван в любом случае. Получить payload пуш-уведомления
(Map\<String, String\>) можно из поля remoteMessage.data.

  -----------------------------------------------------------------------
  RuStoreUniversalPushClient.setOnMessageReceiveListener { remoteMessage
  -\>    \`\`// process message}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка ошибок пуш-провайдеров

Для обработки ошибок вам нужно добавить коллбэк
OnPushClientErrorListener в App классе после инициализации
RuStoreUniversalPushClient. При появлении ошибок будет вызван коллбек с
параметрами:

-   providerType --- позволяет понять какой пуш-провайдер вызвал
    событие.

-   errors --- список ошибок.

  -----------------------------------------------------------------------
  RuStoreUniversalPushClient.setOnPushClientErrorListener { providerType,
  error -\>     \`\`// process error}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если уже используется HMS/FCM

Если используете в приложениях сервисы FCM/HMS, добавьте дополнительный
код в сервисы.

FCM

Добавьте следующий код в сервис для FCM:

  ---------------------------------------------------------------------------------------------------------------------------------------------
  import ru.rustore.sdk.universalpush.firebase.messaging.toNotificationPayloadclass MyFirebaseMessagingService: FirebaseMessagingService()
  {    \`\`override fun onMessageReceived(message: RemoteMessage) {        \`\`super
  .onMessageReceived(message)        \`\`RuStoreUniversalPushManager.processMessage(message.toNotificationPayload())    \`\`}    \`\`override
  fun onNewToken(token: String) {        \`\`super .onNewToken(token)        \`\`RuStoreUniversalPushManager.processToken(token)    \`\`}}
  ---------------------------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------------------------

HMS

Добавьте следующий код в сервис для HMS:

  -------------------------------------------------------------------------------------------------------------------------------------
  import ru.rustore.sdk.universalpush.hms.messaging.toNotificationPayloadclass MyMessagePushService: HmsMessageService()
  {    \`\`override fun onMessageReceived(msg: RemoteMessage?) {        \`\`super
  .onMessageReceived(msg)        \`\`RuStoreUniversalPushManager.processMessage(msg.toNotificationPayload())    \`\`}    \`\`override
  fun onNewToken(token: String?) {        \`\`super
  .onNewToken(token)        \`\`RuStoreUniversalPushManager.processToken(token)    \`\`}}
  -------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------

История изменений

Версия SDK 1.0.0

-   Добавлена дедубликация push-уведомлений

-   Добавлены коллбэки для:

    -   Обработка уведомлений

    -   Обработка события onDeletedMessages

    -   Обработка события onNewToken

    -   Обработка ошибок пуш-провайдеров

Отправка универсальных пуш-уведомлений

API разрабатывалось с целью предоставлять возможность отправки push
уведомлений через нескольких пуш провайдеров одновременно.

Для отправки push-уведомления необходимо использовать
метод POST https://vkpns-universal.rustore.ru/v1/send.

Чтобы отправить пуш-уведомление, укажите «ID проекта» и «Авторизационный
токен» для каждого провайдера, по которому планируется отправка пуша.

RuStore

Используйте **project_id** (ID проекта) и **ss_token** (сервисный
токен). Эти значения вы можете получить в системе RuStore Консоль. Для
этого на странице приложения перейдите в раздел «Push-уведомления» и
выберите «Проекты».

В качестве «Авторизационного токена» используйте «сервисный токен».

FCM

Эти значения можно получить в системе RuStore Консоль. Примеры получения
токена описаны в документации FCM.

-   https://firebase.google.com/docs/cloud-messaging/migrate-v1#use-credentials-to-mint-access-tokens

-   https://firebase.google.com/docs/cloud-messaging/auth-server

RuStore не хранит «ID проекта» и «Авторизационный токен». Проверяйте
токен самостоятельно.

HMS

Эти значения можно получить в системе RuStore Консоль. Пример получения
«Авторизационного токена» есть в документации. «ID проекта» можно
получить в консоли разработчика, не путать с «ID приложения», описание
есть в документации.

RuStore не хранит «ID проекта» и «Авторизационный токен». Проверяйте
токен самостоятельно.

Тело запроса

  -----------------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ ---------------------------
  providers          object            да                 Провайдеры для
                     (providers)                          отправки push-уведомлений

  tokens             object (tokens)   да                 Push-токены по провайдерам

  message            object (message)  да                 Структура push-уведомления
  -----------------------------------------------------------------------------------

providers

  -------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ -----------------
  rustore            object (provider) нет                Провайдер RuStore

  fcm                object (provider) нет                Провайдер
                                                          Firebase

  hms                object (provider) нет                провайдер Huawei
  -------------------------------------------------------------------------

providers.provider

  -------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ -----------------
  project_id         string            да                 ID проекта

  auth_token         string            да                 Авторизационный
                                                          токен
  -------------------------------------------------------------------------

tokens

  -------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ -----------------
  rustore            array (string)    нет                Push-токены
                                                          RuStore

  fcm                array (string)    нет                Push-токены
                                                          Firebase

  hms                array (string)    нет                Push-токены
                                                          Huawei
  -------------------------------------------------------------------------

message

  --------------------------------------------------------------------------------
  **Параметр**       **Тип**                  **Обязательное**   **Описание**
  ------------------ ------------------------ ------------------ -----------------
  data               map                      нет                Объект,
                                                                 содержащий пары «
                                                                 key»: value

  notification       object                   да                 Базовый шаблон
                     (message.notification)                      уведомления для
                                                                 использования на
                                                                 всех платформах

  android            object (message.android) \*нет              Специальные
                                                                 параметры Android
                                                                 для сообщений
  --------------------------------------------------------------------------------

\*в hms обязательное.

message.notification

  -------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ -----------------
  title              string            да                 Название
                                                          уведомления

  body               string            да                 Основной текст
                                                          уведомления

  image              string            нет                Содержит
                                                          URL-адрес
                                                          изображения,
                                                          которое будет
                                                          отображаться в
                                                          уведомлении
  -------------------------------------------------------------------------

message.android

  --------------------------------------------------------------------------------------------
  **Параметр**       **Тип**                          **Обязательное**   **Описание**
  ------------------ -------------------------------- ------------------ ---------------------
  ttl                string (duration format)         нет                Как долго (в
                                                                         секундах) сообщение
                                                                         должно храниться в
                                                                         хранилище.Пример: «
                                                                         3.5s».

  notification       object                           \*нет              Уведомление для
                     (message.android.notification)                      отправки на
                                                                         устройства Android
  --------------------------------------------------------------------------------------------

\*в hms обязательное.

message.android.notification

  -------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ -----------------
  title              string            да                 Название
                                                          уведомления

  body               string            да                 Основной текст
                                                          уведомления

  icon               string            нет                Значок
                                                          уведомления

  color              string            нет                Цвет значка
                                                          уведомления в
                                                          формате #rrggbb

  image              string            нет                Содержит
                                                          URL-адрес
                                                          изображения,
                                                          которое будет
                                                          отображаться в
                                                          уведомлении

  channel_id         string            нет                Идентификатор
                                                          канала
                                                          уведомления

  \*click_action     string            нет                Действие,
                                                          связанное с
                                                          кликом
                                                          пользователя по
                                                          уведомлению
  -------------------------------------------------------------------------

\*в hms по дефолту стоит тип 1 (intent).

В структуре message поддерживаются только представленные выше поля.

Тело успешного ответа

  ------------------------------------------------------------------------
  **Параметр**             **Тип**                 **Описание**
  ------------------------ ----------------------- -----------------------
  status                   string                  В случае успешного
                                                   ответа возвращается
                                                   сообщение со статусом
                                                   «OK»

  ------------------------------------------------------------------------

Тело ошибки

  ------------------------------------------------------------------------
  **Параметр**             **Тип**                 **Описание**
  ------------------------ ----------------------- -----------------------
  code                     int                     Числовой код ошибки
                                                   (404, 400, 403, 401,
                                                   ...)

  status                   string                  Общее описание ошибки

  errors                   array (string)          Ошибки по провайдерам
                                                   или ошибки валидации
  ------------------------------------------------------------------------

HTTP status соответствует полю code.

**Ошибки делятся на три типа**

-   Ошибки валидации сообщения.

-   Ошибки отправки по провайдерам.

-   Ошибки сервиса.

**Возможные ошибки при отправке сообщения**

-   VALIDATION_ERROR --- неправильно указаны параметры запроса при
    отправке сообщения.

-   PROVIDER_ERROR --- ошибка отправки в провайдер пушей.

-   INTERNAL_ERROR --- внутренняя ошибка сервиса.

**Возможные ошибки валидации при отправке сообщения**

-   providers.%provider_name% --- ошибка в провайдере.

-   tokens.%provider_name% --- ошибка в токене провайдера.

-   message.%field% --- ошибка в сообщении.

**Возможные ошибки провайдеров при отправке сообщения, имеют формат
%provider_name%: %error%**

-   internal --- внутренняя ошибка провайдера.

-   validation error --- ошибка валидации на стороне провадейра.

-   invalid auth token --- ошибка auth токена.

-   too many requests --- слишком много запросов.

-   invalid tokens --- ошибка в push токенах, будет список через запятую
    обрезанных токенов (первые 6 символов).

Алгоритм валидации

Провайдер обязан иметь токены.

**Providers**

-   Должен быть хотя-бы один провайдер, без провайдеров запрос не
    валиден.

**Tokens**

-   Должен быть хотя-бы один push-токен на провайдера.

**Message**

-   Если есть непустой payload **message.data** (то есть хотя бы одна
    пара ключ-значение внутри), то сообщение валидно.
    Секции **message.notification** и **message.android** могут
    отсутствовать.

-   Если поля **message.** **data** нет, то обязательно должен
    быть **notification**. В этом случае проверяется наличие либо
    поля **message.** **notification**, либо **message.**
    **android.notification**. Хотя бы что-то одно из этих полей должно
    присутствовать, но могут присутствовать оба (если присутствуют оба,
    то некоторые поля перезаписываются).

**Ограничения**

-   Если в уведомлении нет поля **ttl** или оно равно 0, то учитывается
    дефолтное значение равное 4 неделям. Если отсутствует
    секция **message.android,** то она добавляется с полем **ttl**.

-   Максимальный объем сообщения **4096 байт**.

Примеры отправки универсальных пуш-уведомлений

**Пример успешного запроса**

  -----------------------------------------------------------------------
  POST https: //vkpns-universal.rustore.ru/v1/send HTTP/2Content-Type:
  application/json{    \`\`\"providers\" :{        \`\`\"rustore\" :
  {            \`\`\"auth_token\" :  \"AAAbbbCC123\"
  ,            \`\`\"project_id\" : 
  \"aabbcc\"        \`\`},        \`\`\"fcm\" :
  {            \`\`\"auth_token\" :  \"321CCbbAAA\"
  ,            \`\`\"project_id\" : 
  \"ccbbaa\"        \`\`}    \`\`},    \`\`\"tokens\" :
  {        \`\`\"rustore\" :\[ \"bk3RNwTe3H\" \],        \`\`\"fcm\" :\[
  \"CI2k_HHwgIpoDKC\" \]    \`\`},    \`\`\"message\"
  :{        \`\`\"notification\" :{            \`\`\"body\" : \"This is a
  notification message!\" ,            \`\`\"title\" :
  \"Message\"      \`\`}   \`\`}}HTTP/2 200Content-Type:
  application/json{    \`\`\"Status\" :  \"OK\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример невалидного провайдера**

  -----------------------------------------------------------------------
  POST https: //vkpns-universal.rustore.ru/v1/send HTTP/2Content-Type:
  application/json{    \`\`\"providers\" :{        \`\`\"rustore\" :
  {            \`\`\"auth_token\" :  \"AAAbbbCC123\"
  ,            \`\`\"project_id\" : 
  \"aabbcc\"        \`\`},        \`\`\"fcm\" :
  {        \`\`}    \`\`},    \`\`\"tokens\" : {        \`\`\"rustore\"
  :\[ \"bk3RNwTe3H\" \],        \`\`\"fcm\" :\[ \"CI2k_HHwgIpoDKC\"
  \]    \`\`},    \`\`\"message\" :{        \`\`\"notification\"
  :{            \`\`\"body\" : \"This is a notification message!\"
  ,            \`\`\"title\" : \"Message\"      \`\`}   \`\`}}HTTP/2
  400Content-Type: application/json {    \`\`\"status\" : 
  \"VALIDATION_ERROR\" ,    \`\`\"code\" : 400,    \`\`\"errors\" :
  \[        \`\`\"providers.fcm: project_id is a required field\"
  ,        \`\`\"providers.fcm: auth_token is a required
  field\"    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример невалидного сообщения**

  -----------------------------------------------------------------------
  POST https: //vkpns-universal.rustore.ru/v1/send HTTP/2Content-Type:
  application/json{    \`\`\"providers\" :{        \`\`\"rustore\" :
  {            \`\`\"auth_token\" :  \"AAAbbbCC123\"
  ,            \`\`\"project_id\" : 
  \"aabbcc\"        \`\`},         \`\`\"fcm\" :
  {            \`\`\"auth_token\" :  \"321CCbbAAA\"
  ,            \`\`\"project_id\" : 
  \"ccbbaa\"        \`\`}    \`\`},    \`\`\"tokens\" :
  {        \`\`\"rustore\" :\[ \"bk3RNwTe3H\" \],        \`\`\"fcm\" :\[
  \"CI2k_HHwgIpoDKC\" \]    \`\`},    \`\`\"message\"
  :{        \`\`\"notification\" :{      \`\`}   \`\`}}HTTP/2
  400Content-Type: application/json  {    \`\`\"status\" : 
  \"VALIDATION_ERROR\" ,    \`\`\"code\" : 400,    \`\`\"errors\" :
  \[        \`\`\"message.notification: title is a required field\"
  ,        \`\`\"message.notification: body is a required
  field\"    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример ошибки провайдера**

  -----------------------------------------------------------------------
  POST https: //vkpns-universal.rustore.ru/v1/send HTTP/2Content-Type:
  application/json{    \`\`\"providers\" :{        \`\`\"rustore\" :
  {            \`\`\"auth_token\" :  \"AAAbbbCC123\"
  ,            \`\`\"project_id\" : 
  \"aabbcc\"        \`\`},         \`\`\"fcm\" :
  {            \`\`\"auth_token\" :  \"321CCbbAAA\"
  ,            \`\`\"project_id\" : 
  \"ccbbaa\"        \`\`}    \`\`},    \`\`\"tokens\" :
  {        \`\`\"rustore\" :\[ \"bk3RNwTe3H\" \],        \`\`\"fcm\" :\[
  \"CI2k_HHwgIpoDKC\" \]    \`\`},    \`\`\"message\"
  :{        \`\`\"data\" :{ \"test\" : \"test\"
  }      \`\`}   \`\`}}HTTP/2 400Content-Type: application/json
   {    \`\`\"status\" :  \"PROVIDER_ERROR\" ,    \`\`\"code\" :
  400,    \`\`\"errors\" : \[        \`\`\"fcm: invalid auth
  token\"    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отправка универсальных пуш-уведомлений по топикам

API разрабатывалось с целью предоставлять возможность отправки
пуш-уведомлений по топикам через нескольких пуш-провайдеров
одновременно.

Для отправки пуш-уведомления необходимо использовать
метод POST https://vkpns-universal.rustore.ru/v1/send/topic.

Чтобы отправить пуш-уведомление в топик необходимо указать «ID проекта»
и «Авторизационный токен» для каждого провайдера, по которому
планируется отправка пуша.

RuStore

Используйте **project_id** (ID проекта) и **ss_token** (сервисный
токен). Эти значения вы можете получить в системе RuStore Консоль. Для
этого на странице приложения перейдите в раздел «Push-уведомления» и
выберите «Проекты». Отправка пуш-уведомлений

FCM

Эти значения можно получить в системе RuStore Консоль. Примеры получения
токена описаны в документации FCM.

-   https://firebase.google.com/docs/cloud-messaging/migrate-v1#use-credentials-to-mint-access-tokens

-   https://firebase.google.com/docs/cloud-messaging/auth-server

RuStore не хранит «ID проекта» и «Авторизационный токен». Проверяйте
токен самостоятельно.

HMS

Эти значения можно получить в системе RuStore Консоль. Пример получения
«Авторизационного токена» есть в документации. «ID проекта» можно
получить в консоли разработчика, не путать с «ID приложения», описание
есть в документации.

RuStore не хранит «ID проекта» и «Авторизационный токен». Проверяйте
токен самостоятельно.

Тело запроса

  -----------------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ ---------------------------
  providers          object            да                 Провайдеры для
                     (providers)                          отправки push-уведомлений

  topic              string            да                 Имя топика

  message            object (message)  да                 Структура push-уведомления
  -----------------------------------------------------------------------------------

providers

  -------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ -----------------
  rustore            object (provider) нет                Провайдер RuStore

  fcm                object (provider) нет                Провайдер
                                                          Firebase

  hms                object (provider) нет                провайдер Huawei
  -------------------------------------------------------------------------

providers.provider

  -------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ -----------------
  project_id         string            да                 ID проекта

  auth_token         string            да                 Авторизационный
                                                          токен
  -------------------------------------------------------------------------

message

  --------------------------------------------------------------------------------
  **Параметр**       **Тип**                  **Обязательное**   **Описание**
  ------------------ ------------------------ ------------------ -----------------
  data               map                      нет                Объект,
                                                                 содержащий пары «
                                                                 key»: value

  notification       object                   да                 Базовый шаблон
                     (message.notification)                      уведомления для
                                                                 использования на
                                                                 всех платформах

  android            object (message.android) \*нет              Специальные
                                                                 параметры Android
                                                                 для сообщений
  --------------------------------------------------------------------------------

\*в hms обязательное.

message.notification

  -------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ -----------------
  title              string            да                 Название
                                                          уведомления

  body               string            да                 Основной текст
                                                          уведомления

  image              string            нет                Содержит
                                                          URL-адрес
                                                          изображения,
                                                          которое будет
                                                          отображаться в
                                                          уведомлении
  -------------------------------------------------------------------------

message.android

  --------------------------------------------------------------------------------------------
  **Параметр**       **Тип**                          **Обязательное**   **Описание**
  ------------------ -------------------------------- ------------------ ---------------------
  ttl                string (duration format)         нет                Как долго (в
                                                                         секундах) сообщение
                                                                         должно храниться в
                                                                         хранилище.Пример: «
                                                                         3.5s».

  notification       object                           \*нет              Уведомление для
                     (message.android.notification)                      отправки на
                                                                         устройства Android
  --------------------------------------------------------------------------------------------

\*в hms обязательное.

message.android.notification

  -------------------------------------------------------------------------
  **Параметр**       **Тип**           **Обязательное**   **Описание**
  ------------------ ----------------- ------------------ -----------------
  title              string            да                 Название
                                                          уведомления

  body               string            да                 Основной текст
                                                          уведомления

  icon               string            нет                Значок
                                                          уведомления

  color              string            нет                Цвет значка
                                                          уведомления в
                                                          формате #rrggbb

  image              string            нет                Содержит
                                                          URL-адрес
                                                          изображения,
                                                          которое будет
                                                          отображаться в
                                                          уведомлении

  channel_id         string            нет                Идентификатор
                                                          канала
                                                          уведомления

  \*click_action     string            нет                Действие,
                                                          связанное с
                                                          кликом
                                                          пользователя по
                                                          уведомлению
  -------------------------------------------------------------------------

\*в hms по дефолту стоит тип 1 (intent).

В структуре message поддерживаются только представленные выше поля.

Тело успешного ответа

  ------------------------------------------------------------------------
  **Параметр**             **Тип**                 **Описание**
  ------------------------ ----------------------- -----------------------
  status                   string                  В случае успешного
                                                   ответа возвращается
                                                   сообщение со статусом
                                                   «OK»

  ------------------------------------------------------------------------

Тело ошибки

  ------------------------------------------------------------------------
  **Параметр**             **Тип**                 **Описание**
  ------------------------ ----------------------- -----------------------
  code                     int                     Числовой код ошибки
                                                   (404, 400, 403, 401,
                                                   ...)

  status                   string                  Общее описание ошибки

  errors                   array (string)          Ошибки по провайдерам
                                                   или ошибки валидации
  ------------------------------------------------------------------------

HTTP status соответствует полю code.

**Ошибки делятся на три типа**

-   Ошибки валидации сообщения.

-   Ошибки отправки по провайдерам.

-   Ошибки сервиса.

**Возможные ошибки при отправке сообщения**

-   VALIDATION_ERROR --- неправильно указаны параметры запроса при
    отправке сообщения.

-   PROVIDER_ERROR --- ошибка отправки в провайдер пушей.

-   INTERNAL_ERROR --- внутренняя ошибка сервиса.

**Возможные ошибки валидации при отправке сообщения**

-   providers.%provider_name% --- ошибка в провайдере.

-   message.%field% --- ошибка в сообщении.

**Возможные ошибки провайдеров при отправке сообщения, имеют формат
%provider_name%: %error%**

-   internal --- внутренняя ошибка провайдера.

-   validation error --- ошибка валидации на стороне провадейра.

-   invalid auth token --- ошибка auth токена.

-   too many requests --- слишком много запросов.

Алгоритм валидации

Провайдер обязан иметь токены.

**Providers**

-   Должен быть хотя бы один провайдер, без провайдеров запрос не
    валиден.

**Message**

-   Если есть непустой payload **message.data** (то есть хотя бы одна
    пара ключ-значение внутри), то сообщение валидно.
    Секции **message.notification** и **message.android** могут
    отсутствовать.

-   Если поля **message.** **data** нет, то обязательно должен
    быть **notification**. В этом случае проверяется наличие либо
    поля **message.** **notification**, либо **message.**
    **android.notification**. Хотя бы что-то одно из этих полей должно
    присутствовать, но могут присутствовать оба (если присутствуют оба,
    то некоторые поля перезаписываются).

**Ограничения**

-   Если в уведомлении нет поля **ttl** или оно равно 0, то учитывается
    дефолтное значение равное 4 неделям. Если отсутствует
    секция **message.android,** то она добавляется с полем **ttl**.

-   Максимальный объем сообщения **4096 байт**.

Примеры отправки универсальных пуш-уведомлений по топикам

**Пример успешного запроса**

  -----------------------------------------------------------------------
  POST https: //vkpns-universal.rustore.ru/v1/send/topic
  HTTP/2Content-Type: application/json{    \`\`\"providers\"
  :{        \`\`\"rustore\" : {            \`\`\"auth_token\" : 
  \"AAAbbbCC123\" ,            \`\`\"project_id\" : 
  \"aabbcc\"        \`\`},        \`\`\"fcm\" :
  {            \`\`\"auth_token\" :  \"321CCbbAAA\"
  ,            \`\`\"project_id\" : 
  \"ccbbaa\"        \`\`}    \`\`},    \`\`\"topic\" : \"test\"
  ,    \`\`\"message\" :{        \`\`\"notification\"
  :{            \`\`\"body\" : \"This is a notification message!\"
  ,            \`\`\"title\" : \"Message\"      \`\`}   \`\`}}HTTP/2
  200Content-Type: application/json{    \`\`\"Status\" :  \"OK\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример невалидного провайдера**

  -----------------------------------------------------------------------
  POST https: //vkpns-universal.rustore.ru/v1/send/topic
  HTTP/2Content-Type: application/json{    \`\`\"providers\"
  :{        \`\`\"rustore\" : {            \`\`\"auth_token\" : 
  \"AAAbbbCC123\" ,            \`\`\"project_id\" : 
  \"aabbcc\"        \`\`},        \`\`\"fcm\" : {        \`\`}    \`\`},
       \`\`\"topic\" :  \"test\" ,     \`\`\"message\"
  :{        \`\`\"notification\" :{            \`\`\"body\" : \"This is a
  notification message!\" ,            \`\`\"title\" :
  \"Message\"      \`\`}   \`\`}}HTTP/2 400Content-Type:
  application/json {    \`\`\"status\" :  \"VALIDATION_ERROR\"
  ,    \`\`\"code\" : 400,    \`\`\"errors\" :
  \[        \`\`\"providers.fcm: project_id is a required field\"
  ,        \`\`\"providers.fcm: auth_token is a required
  field\"    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример невалидного сообщения**

  -----------------------------------------------------------------------
  POST https: //vkpns-universal.rustore.ru/v1/send/topic
  HTTP/2Content-Type: application/json{    \`\`\"providers\"
  :{        \`\`\"rustore\" : {            \`\`\"auth_token\" : 
  \"AAAbbbCC123\" ,            \`\`\"project_id\" : 
  \"aabbcc\"        \`\`},         \`\`\"fcm\" :
  {            \`\`\"auth_token\" :  \"321CCbbAAA\"
  ,            \`\`\"project_id\" : 
  \"ccbbaa\"        \`\`}    \`\`},    \`\`\"topic\" :  \"test\"
  ,    \`\`\"message\" :{        \`\`\"notification\"
  :{      \`\`}   \`\`}}HTTP/2 400Content-Type: application/json
   {    \`\`\"status\" :  \"VALIDATION_ERROR\" ,    \`\`\"code\" :
  400,    \`\`\"errors\" : \[        \`\`\"message.notification: title is
  a required field\" ,        \`\`\"message.notification: body is a
  required field\"    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Пример ошибки провайдера**

  -----------------------------------------------------------------------
  POST https: //vkpns-universal.rustore.ru/v1/send/topic
  HTTP/2Content-Type: application/json{    \`\`\"providers\"
  :{        \`\`\"rustore\" : {            \`\`\"auth_token\" : 
  \"AAAbbbCC123\" ,            \`\`\"project_id\" : 
  \"aabbcc\"        \`\`},         \`\`\"fcm\" :
  {            \`\`\"auth_token\" :  \"321CCbbAAA\"
  ,            \`\`\"project_id\" : 
  \"ccbbaa\"        \`\`}    \`\`},    \`\`\"topic\" :  \"test\"
  ,    \`\`\"message\" :{        \`\`\"data\" :{ \"test\" : \"test\"
  }      \`\`}   \`\`}}HTTP/2 400Content-Type: application/json
   {    \`\`\"status\" :  \"PROVIDER_ERROR\" ,    \`\`\"code\" :
  400,    \`\`\"errors\" : \[        \`\`\"fcm: invalid auth
  token\"    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

RuStore SDK для подключения отзывов и оценок

Kotlin

Общая информация

RuStore In-app Review SDK предлагает пользователю оставить оценку и
отзыв о вашем приложении в RuStore, не выходя из приложения.

Пользовательский сценарий оценки и отзыва может быть запущен в любое
время на протяжении всего пути пользователя в вашем приложении.
Пользователь может оценить ваше приложение по шкале от 1 до 5 и оставить
отзыв. Отзыв является опциональным.

Пример реализации

Ознакомьтесь с приложением-примером чтобы узнать, как правильно
интегрировать SDK оценок и отзывов.

Пример пользовательского сценария

Условия корректной работы SDK

Для работы SDK оценок и отзывов необходимо соблюдение следующих условий:

-   ОС Android версии 6.0 или выше.

-   На устройстве пользователя установлено приложение RuStore.

-   Версия RuStoreApp на устройстве пользователя актуальная.

-   Пользователь авторизован в приложении RuStore.

-   Приложение должно быть опубликовано в RuStore.

Когда запрашивать оценку и отзыв

Следуйте рекомендациям, чтобы решить, в какой момент запросить оценку и
отзыв о приложении у пользователя:

-   Запускайте процесс после того, как пользователь достаточно
    использовал ваше приложение.

-   Не запускайте процесс слишком часто --- это ухудшит опыт
    пользователя вашего приложения и ограничит использование SDK оценок.

-   Не используйте призывы к действию, например, кнопку «Оценить
    приложение» --- пользователь уже мог исчерпать лимит запуска
    процесса.

-   Ваше приложение не должно задавать какие-либо вопросы пользователю
    перед запуском или во время процесса, в том числе вопросы об их
    мнении (например, «Вам нравится приложение?») или прогнозирующие
    вопросы (например, «Вы бы поставили этому приложению 5 звёзд?»).

Рекомендации к дизайну

Следуйте рекомендациям, чтобы решить, как интегрировать процесс:

-   Отображайте процесс как есть, без какого-либо вмешательства или
    изменения текущего дизайна, включая размер, непрозрачность, форму и
    другие свойства.

-   Ничего не добавляйте поверх или по краям процесса.

-   Процесс должен открываться поверх всех слоёв. После запуска процесса
    не закрывайте его. Процесс завершится самостоятельно после явного
    действия пользователя.

Подключение в проект

Подключите репозиторий:

  -----------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"
  )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подключение зависимости

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation( \"ru.rustore.sdk:review:1.0.1\"
  )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Создание RuStoreReviewManager

Для работы с оценками необходимо создать RuStoreReviewManager с помощью
RuStoreReviewManagerFactory:

  -----------------------------------------------------------------------
  val manager = RuStoreReviewManagerFactory.create(context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Получение объекта ReviewInfo

Вызовите requestReviewFlow() заранее перед вызовом
launchReviewFlow(reviewInfo), чтобы подготовить необходимую информацию
для отображения экрана.

ReviewInfo имеет свой срок жизни --- около пяти минут.

  -----------------------------------------------------------------------
  manager.requestReviewFlow().addOnCompleteListener(object :
  OnCompleteListener\<ReviewInfo\> {    \`\`override fun
  onFailure(throwable: Throwable) {        \`\`// Handle
  error    \`\`}    \`\`override fun onSuccess(result: ReviewInfo)
  {        \`\`// Save reviewInfo    \`\`}})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если получен ответ onSuccess, то необходимо локально сохранить
ReviewInfo, для последующего вызова launchReviewFlow(reviewInfo).

Если получен ответ onFailure, то не рекомендуем самостоятельно
отображать ошибку пользователю, так как пользователь не запускал данный
процесс.

Возможные ошибки

Запуск оценки приложения

Для запуска формы запроса оценки и отзыва о приложении у
пользователя вызовите метод launchReviewFlow(reviewInfo), используя
ранее полученный ReviewInfo.

  -----------------------------------------------------------------------
  manager.launchReviewFlow(reviewInfo).addOnCompleteListener(object:
  OnCompleteListener\<Unit\> {    \`\`override fun onFailure(throwable:
  Throwable) {        \`\`// Review flow has finished, continue your app
  flow.    \`\`}    \`\`override fun onSuccess(result: Unit)
  {        \`\`// Review flow has finished, continue your app
  flow.    \`\`}})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Дождитесь уведомления о завершении формы пользователем в onSuccess или
onFailure, чтобы продолжить работу приложения.

После завершения формы оценки, вне зависимости от результата (onSuccess
или onFailure), мы не рекомендуем отображать какие-либо дополнительные
формы, связанные с оценкой и отзывом.

Частый вызов launchReviewFlow не повлечёт за собой отображения формы
оценки для пользователя, допустимое отображение регулируется на стороне
RuStore.

Возможные ошибки

Возможные ошибки, которые вы можете получить в onFailure:

-   RuStoreNotInstalledException() --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException() --- RuStore, установленный на устройстве
    пользователя, не поддерживает запуск процесса оценки и отзыва.

-   RuStoreUserUnauthorizedException() --- пользователь не авторизован в
    RuStore.

-   RuStoreRequestLimitReached() --- с момента последнего отображения
    процесса прошло слишком мало времени.

-   RuStoreReviewExists() --- этот пользователь уже оценил ваше
    приложение.

-   RuStoreInvalidReviewInfo() --- проблемы с ReviewInfo.

-   RuStoreException(message: String) --- базовая ошибка RuStore, от
    которой наследуются все остальные ошибки.

История изменений RuStore SDK отзывов и оценок

Версия SDK 1.0.1

-   Внутреннее обновление SDK.

Версия SDK 1.0.0

-   Внутреннее обновление SDK.

Версия SDK 0.2.0

-   Пакеты классов приведены к единому виду ru.rustore.\*\*

Версия SDK 0.1.6

-   Исправлена работа методаawait()для Task API.

Версия SDK 0.1.5

-   Исправлена уязвимость «Intent Redirection vulnerability», не
    позволяющая опубликовать приложение в Google Play.

Версия SDK 0.1.4

-   Внутреннее обновление SDK.

Версия SDK 0.1.3

-   Метод launchReviewFlow(activity, reviewInfo) помечен как deprecated.
    Используйте launchReviewFlow(reviewInfo).

Java

Общая информация

RuStore In-app Review SDK предлагает пользователю оставить оценку и
отзыв о вашем приложении в RuStore, не выходя из приложения.

Пользовательский сценарий оценки и отзыва может быть запущен в любое
время на протяжении всего пути пользователя. Пользователь может оценить
ваше приложение по шкале от 1 до 5. Отзыв является опциональным.

Пример реализации

Ознакомьтесь с приложением-примером чтобы узнать, как правильно
интегрировать SDK оценок и отзывов.

Пример пользовательского сценария

Условия корректной работы SDK

Для работы SDK оценок и отзывов необходимо соблюдение следующих условий:

-   ОС Android версии 6.0 или выше.

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStore на устройстве пользователя, должна быть актуальной.

-   Пользователь должен быть авторизован в RuStore.

-   Приложение должно быть опубликовано в RuStore.

Когда запрашивать оценку и отзыв

Следуйте этим рекомендациям, чтобы решить в какой момент запросить
оценку и отзыв о приложении у пользователя:

-   Запускайте процесс после того, как пользователь достаточно
    использовал ваше приложение.

-   Не запускайте процесс слишком часто, иначе это ухудшит опыт
    пользователя и ограничит использование SDK оценок.

-   Не используйте призывы к действию, например, кнопку «Оценить
    приложение», так как пользователь уже мог исчерпать лимит запуска
    процесса.

-   Ваше приложение не должно задавать какие-либо вопросы пользователю
    перед запуском или во время процесса, в том числе вопросы об их
    мнении (пример: «Вам нравится приложение?») или прогнозирующие
    вопросы (пример: «Вы бы поставили этому приложению 5 звёзд?»).

Рекомендации к дизайну

Следуйте этим рекомендациям, чтобы решить, как интегрировать процесс:

-   Отображайте процесс как есть, без какого-либо вмешательства или
    изменения текущего дизайна, включая размер, непрозрачность, форму и
    другие свойства.

-   Ничего не добавляйте поверх или по краям процесса.

-   Процесс должен открываться поверх всех слоёв. После запуска процесса
    не закрывайте его. Процесс завершится самостоятельно после явного
    действия пользователя.

Подключение в проект

Подключение репозитория

**build.gradle**

  -----------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"
  )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подключение зависимости

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

**build.gradle**

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation( \"ru.rustore.sdk:review:1.0.1\"
  )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Создание RuStoreReviewManager

Для работы с оценками необходимо создать RuStoreReviewManager с помощью
RuStoreReviewManagerFactory:

**Инициализация**

  -----------------------------------------------------------------------
  RuStoreReviewManager manager =
  RuStoreReviewManagerFactory.INSTANCE.create(context);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Получение объекта ReviewInfo

Вызовите requestReviewFlow() заранее, перед
вызовом launchReviewFlow(reviewInfo), чтобы подготовить необходимую
информацию для отображения экрана.

ReviewInfo имеет свой срок жизни --- около пяти минут.

**requestReviewFlow**

  -----------------------------------------------------------------------
  manager.requestReviewFlow().addOnCompleteListener( new
  OnCompleteListener\<ReviewInfo\>() {        \`\`@Override    \`\`public
  void onFailure(throwable: Throwable) {        \`\`// Handle
  error    \`\`}    \`\`@Override    \`\`public void onSuccess(result:
  ReviewInfo) {        \`\`// Save reviewInfo    \`\`}})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если получен ответ onSuccess, то необходимо локально сохранить
ReviewInfo, для последующего вызова launchReviewFlow(reviewInfo).

Если получен ответ onFailure, то не рекомендуем самостоятельно
отображать ошибку пользователю, так как пользователь не запускал данный
процесс.

Возможные ошибки

Запуск оценки приложения

Используя ранее полученный ReviewInfo, вызовите метод
launchReviewFlow(reviewInfo) для запуска процесса запроса оценки и
отзыва о приложении у пользователя.

**launchReviewFlow(reviewInfo)**

  -----------------------------------------------------------------------
  manager.launchReviewFlow(reviewInfo).addOnCompleteListener( new
  OnCompleteListener\<Unit\>() {            \`\`@Override    \`\`public
  void onFailure(throwable: Throwable) {        \`\`// Review flow has
  finished, continue your app
  flow.    \`\`}    \`\`@Override    \`\`public void onSuccess(result:
  Unit) {        \`\`// Review flow has finished, continue your app
  flow.    \`\`}})
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Чтобы продолжить процесс приложения, дождитесь уведомления о завершении
процесс пользователем в onSuccess или onFailure.

После завершения процесса оценки, вне зависимости от результата
(onSuccess или onFailure), мы не рекомендуем отображать какие-либо
дополнительные процессы, связанные с оценкой и отзывом.

Частый вызов launchReviewFlow не повлечёт за собой отображения процесса
оценки для пользователя, так как квота отображения регулируется на
стороне RuStore.

Возможные ошибки

Возможные ошибки, которые вы можете получить в onFailure:

-   RuStoreNotInstalledException() --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException() --- RuStore, установленный на устройстве
    пользователя, не поддерживает запуск процесса оценки и отзыва.

-   RuStoreUserUnauthorizedException() --- пользователь не авторизован в
    RuStore.

-   RuStoreRequestLimitReached() --- с момента последнего отображения
    процесса прошло слишком мало времени.

-   RuStoreReviewExists() --- этот пользователь уже оценил ваше
    приложение.

-   RuStoreInvalidReviewInfo() --- с ReviewInfo что-то не так.

-   RuStoreException(message: String) --- базовая ошибка RuStore, от
    которой наследуются все остальные ошибки.

История изменений RuStore SDK отзывов и оценок

Версия SDK 1.0.1

-   Внутреннее обновление SDK.

Версия SDK 1.0.0

-   Внутреннее обновление SDK.

Версия SDK 0.2.0

-   Пакеты классов приведены к единому виду ru.rustore.\*\*

Версия SDK 0.1.6

-   Исправлена работа метода *await()* для Task API.

Версия SDK 0.1.5

-   Исправлена уязвимость Intent Redirection vulnerability, не
    позволяющая опубликовать приложение в Google Play.

Версия SDK 0.1.4

-   Внутреннее обновление SDK.

Версия SDK 0.1.3

-   Метод launchReviewFlow(activity, reviewInfo) помечен как deprecated.
    Используйте launchReviewFlow(reviewInfo).

Версия SDK 0.1.2

-   Внутреннее обновление SDK.

Версия SDK 0.1.1

-   Релиз

Unity

Общая информация

RuStore In-app Review SDK предлагает пользователю оставить оценку и
отзыв о вашем приложении в RuStore, не выходя из приложения.

Пользовательский сценарий оценки и отзыва может быть запущен в любое
время на протяжении всего пути пользователя в вашем приложении.
Пользователь может оценить ваше приложение по шкале от 1 до 5 и оставить
отзыв. Отзыв является опциональным.

Пример пользовательского сценария

Условия корректной работы SDK

Для работы SDK оценок и отзывов необходимо соблюдение следующих условий:

-   ОС Android версии 7.0 или выше.

-   На устройстве пользователя установлено приложение RuStore.

-   Версия RuStoreApp на устройстве пользователя актуальная.

-   Пользователь авторизован в приложении RuStore.

-   Приложение должно быть опубликовано в RuStore.

Когда запрашивать оценку и отзыв

Следуйте рекомендациям, чтобы решить, в какой момент запросить оценку и
отзыв о приложении у пользователя:

-   Запускайте процесс после того, как пользователь достаточно
    использовал ваше приложение.

-   Не запускайте процесс слишком часто --- это ухудшит опыт
    пользователя вашего приложения и ограничит использование SDK оценок.

-   Не используйте призывы к действию, например, кнопку «Оценить
    приложение» --- пользователь уже мог исчерпать лимит запуска
    процесса.

-   Ваше приложение не должно задавать какие-либо вопросы пользователю
    перед запуском или во время процесса, в том числе вопросы об их
    мнении (например, «Вам нравится приложение?») или прогнозирующие
    вопросы (например, «Вы бы поставили этому приложению 5 звёзд?»).

Рекомендации к дизайну

Следуйте рекомендациям, чтобы решить, как интегрировать процесс:

-   Отображайте процесс как есть, без какого-либо вмешательства или
    изменения текущего дизайна, включая размер, непрозрачность, форму и
    другие свойства.

-   Ничего не добавляйте поверх или по краям процесса.

-   Процесс должен открываться поверх всех слоёв. После запуска процесса
    не закрывайте его. Процесс завершится самостоятельно после явного
    действия пользователя.

Подключение в проект

Для подключения необходимо скачать RuStore Review SDK и импортировать
его в проект (Assets → Import Package → Custom Package). Зависимости
подключаются автоматически с помощью External Dependency Manager
(включен в SDK).

Minimum API level должен быть установлен не ниже 24. Минификация
приложения (ProGuard/R8) в данный момент не поддерживается, необходимо
её отключить в настройках проекта (File → Build Settings → Player
Settings → Publishing Settings → Minify).

Создание RuStoreReviewManager

Для работы с оценками необходимо создать RuStoreReviewManager с помощью
RuStoreReviewManagerFactory:

  -----------------------------------------------------------------------
  RuStoreReviewManager.Instance.Init();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подготовка к запуску оценки приложения

Вызовите RequestReviewFlow() заранее, перед вызовом LaunchReviewFlow(),
чтобы подготовить необходимую информацию для отображения экрана.

  -----------------------------------------------------------------------
  RuStoreReviewManager.Instance.RequestReviewFlow(    \`\`onFailure:
  (error) =\> {         \`\`// Handle error     \`\`},    \`\`onSuccess:
  () =\> {         \`\`// Handle success     \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если получен ответ onSuccess, то можно в течение примерно пяти минут
запустить процесс запроса оценки и отзыва о приложении
LaunchReviewFlow().

Если получен ответ onFailure, то не рекомендуем самостоятельно
отображать ошибку пользователю, так как пользователь не запускал данный
процесс.

Возможные ошибки

Запуск оценки приложения

Для запуска процесса запроса оценки и отзыва о приложении у пользователя
вызовите метод LaunchReviewFlow().

  -----------------------------------------------------------------------
  RuStoreReviewManager.Instance.LaunchReviewFlow(    \`\`onFailure:
  (error) =\> {         \`\`// Handle error    \`\`},    \`\`onSuccess:
  () =\> {         \`\`// Handle success    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Дождитесь уведомления о завершении формы пользователем в onSuccess или
onFailure, чтобы продолжить работу приложения.

После завершения формы оценки, вне зависимости от результата (onSuccess
или onFailure), мы не рекомендуем отображать какие-либо дополнительные
формы, связанные с оценкой и отзывом.

Частый вызов launchReviewFlow не повлечёт за собой отображения формы
оценки для пользователя, допустимое отображение регулируется на стороне
RuStore.

Обработка ошибок

Возникающие ошибки передаются в обработчик onFailure методов SDK.

Структура ошибки:

  -----------------------------------------------------------------------
  public class RuStoreError {    \`\`public string name;    \`\`public
  string description;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   name --- название ошибки;

-   description --- описание ошибки.

Возможные ошибки, которые вы можете получить в onFailure:

-   RuStoreNotInstalledException --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException --- RuStore, установленный на устройстве
    пользователя, не поддерживает запуск процесса оценки и отзыва.

-   RuStoreUserUnauthorizedException --- пользователь не авторизован в
    RuStore.

-   RuStoreRequestLimitReached --- с момента последнего отображения
    процесса прошло слишком мало времени.

-   RuStoreReviewExists --- этот пользователь уже оценил ваше
    приложение.

-   RuStoreInvalidReviewInfo --- проблемы с ReviewInfo.

-   RuStoreException --- базовая ошибка RuStore, от которой наследуются
    все остальные ошибки.

Unreal

Общая информация

RuStore In-app Review SDK предлагает пользователю оставить оценку и
отзыв о вашем приложении в RuStore, не выходя из приложения.

Пользовательский сценарий оценки и отзыва может быть запущен в любое
время на протяжении всего пути пользователя в вашем приложении.
Пользователь может оценить ваше приложение по шкале от 1 до 5 и оставить
отзыв (отзыв является опциональным).

Условия корректной работы SDK

Для работы SDK оценок и отзывов необходимо соблюдение следующих условий:

-   ОС Android версии 7.0 или выше.

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStoreApp на устройстве пользователя, должна быть
    актуальной.

-   Пользователь должен быть авторизован в RuStore.

-   Приложение должно быть опубликовано в RuStore.

Когда запрашивать оценку и отзыв

Следуйте этим рекомендациям, чтобы решить в какой момент запросить
оценку и отзыв о приложении у пользователя:

-   Запускайте флоу после того, как пользователь достаточно использовал
    ваше приложение.

-   Не запускайте флоу слишком часто, иначе это ухудшит опыт
    пользователя вашего приложения и ограничит использование SDK оценок.

-   Не используйте призывы к действию, например, кнопку "Оценить
    приложение", так как пользователь уже мог исчерпать лимит запуска
    флоу.

-   Ваше приложение не должно задавать какие-либо вопросы пользователю
    перед запуском или во время флоу, в том числе вопросы об их мнении
    (пример: "Вам нравится приложение?") или прогнозирующие вопросы
    (пример: "Вы бы поставили этому приложению 5 звёзд?").

Рекомендации к дизайну

Следуйте этим рекомендациям, чтобы решить, как интегрировать флоу:

-   Отображайте флоу как есть, без какого-либо вмешательства или
    изменения текущего дизайна, включая размер, непрозрачность, форму и
    другие свойства.

-   Ничего не добавляйте поверх или по краям флоу.

-   Флоу должен открываться поверх всех слоёв. После запуска флоу не
    закрывайте его. Флоу завершится самостоятельно после явного действия
    пользователя.

Подключение в проект

-   Скопируйте содержимое папки Plugins из официального
    репозитория RuStore на GitFlic в папку Plugins внутри своего
    проекта.

-   Перезапустите Unreal Engine.

-   В списке плагинов (Edit → Plugins → Project → Mobile) отметьте
    плагины RuStoreReview и RuStoreCore.

-   В файле YourProject.Build.csв списке PublicDependencyModuleNames
    подключите модули модули RuStoreCore и RuStoreReview.

-   В настройках проекта (Edit → Project Settings → Android) установите
    параметр Minimum SDK Version на уровень не ниже 24 и параметр Target
    SDK Version --- не ниже 31.

Инициализация RuStoreReviewManager

Для работы с оценками необходимо инициализировать RuStoreReviewManager:

**Инициализация**

  -----------------------------------------------------------------------
  URuStoreReviewManager::Instance()-\>Init();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример использования в Blueprints:

Важно:

-   Вызов Init() привязывает объект к корню сцены, и, если дальнейшая
    работа с объектом больше не планируется, для освобождения памяти
    необходимо выполнить метод Dispose().

Вызов метода Dispose отвяжет объект от корня и безопасно завершит все
отправленные запросы.

**Инициализация**

  -----------------------------------------------------------------------
  URuStoreReviewManager::Instance()-\>Dispose();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если вам нужно проверить факт инициализации библиотеки, используйте
метод getIsInitialized(), его значение true, если библиотека
инициализирована, и false, если Init еще не был вызван.

Подготовка к запуску оценки приложения

Вызовите RequestReviewFlow() заранее, перед вызовом LaunchReviewFlow(),
чтобы подготовить необходимую информацию для отображения экрана.

**RequestReviewFlow**

  -----------------------------------------------------------------------
  long requestId =
  URuStoreReviewManager::Instance()-\>RequestReviewFlow(    \`\`\[\](
  long requestId) {        \`\`// Process response    \`\`},    \`\`\[\](
  long requestId, TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\>
  error) {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример использования в Blueprints:

Если получен колбэк Success, то примерно через пять минут можно
запустить flow запроса оценки и отзыва о приложении LaunchReviewFlow().

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error. Все возможные ошибки FURuStoreException
описаны в разделе Возможные ошибки

Запуск оценки приложения

Вызовите метод LaunchReviewFlow() для запуска flow запроса оценки и
отзыва о приложении у пользователя (Рисунок 1.).

Каждый запрос получает уникальный в рамках одного запуска приложения
requestId. Каждое событие возвращает requestId запроса, породившего это
событие.

**LaunchReviewFlow**

  -----------------------------------------------------------------------
  long requestId =
  URuStoreReviewManager::Instance()-\>LaunchReviewFlow(    \`\`\[\]( long
  requestId) {        \`\`// Process response    \`\`},      \`\`\[\](
  long requestId, TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\>
  error) {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример использования в Blueprints:

Чтобы продолжить flow приложения, дождитесь уведомления о завершении
flow пользователем в onSuccess или onFailure.

После завершения flow оценки, вне зависимости от результата (onSuccess
или onFailure), мы не рекомендуем отображать какие-либо дополнительные
flow, связанные с оценкой и отзывом.

Частый вызов LaunchReviewFlow не повлечёт за собой отображения flow
оценки для пользователя, так как квота отображения регулируется на
стороне RuStore.

Возможные ошибки

Возникающие ошибки передаются в обработчик onFailure методов SDK.

Структура ошибки:

**Структура ошибки**

  --------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreError{    \`\`GENERATED_USTRUCT_BODY()    \`\`FURuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\"
  ;    \`\`}    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;    \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------

-   name --- название ошибки.

-   description --- описание ошибки.

Возможные ошибки, которые вы можете получить в onFailure:

-   RuStoreNotInstalledException --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException --- RuStore, установленный на устройстве
    пользователя, не поддерживает запуск flow оценки и отзыва.

-   RuStoreUserUnauthorizedException --- пользователь не авторизован в
    RuStore.

-   RuStoreRequestLimitReached --- с момента последнего отображения flow
    прошло слишком мало времени.

-   RuStoreReviewExists --- этот пользователь уже оценил ваше
    приложение.

-   RuStoreInvalidReviewInfo --- с ReviewInfo что-то не так.

-   RuStoreException --- базовая ошибка RuStore, от которой наследуются
    все остальные ошибки.

История изменений RuStore SDK отзывов и оценок

Версия SDK 1.0

-   Добавлены асинхронные варианты blueprint-методов вместо подписок на
    события.

-   Багфиксы.

Flutter

Общая информация

RuStore In-app Review SDK предлагает пользователю оставить оценку и
отзыв о вашем приложении в RuStore, не выходя из приложения.

Пользовательский сценарий оценки и отзыва может быть запущен в любое
время на протяжении всего пути пользователя в вашем приложении.
Пользователь может оценить ваше приложение по шкале от 1 до 5 и оставить
отзыв. Отзыв является опциональным.

Ознакомьтесь с приложением-примером, чтобы узнать как правильно
интегрировать SDK оценок и
отзывов: https://gitflic.ru/project/rustore/flutter-rustore-review

Пример пользовательского сценария

Условия корректной работы SDK

Для работы SDK оценок и отзывов необходимо соблюдение следующих условий:

-   ОС Android версии 7.0 или выше.

-   На устройстве пользователя установлено приложение RuStore.

-   Версия RuStoreApp на устройстве пользователя актуальная.

-   Пользователь авторизован в приложении RuStore.

-   Приложение должно быть опубликовано в RuStore.

Когда запрашивать оценку и отзыв

Следуйте рекомендациям, чтобы решить, в какой момент запросить оценку и
отзыв о приложении у пользователя:

-   Запускайте процесс после того, как пользователь достаточно
    использовал ваше приложение.

-   Не запускайте процесс слишком часто --- это ухудшит опыт
    пользователя вашего приложения и ограничит использование SDK оценок.

-   Не используйте призывы к действию, например, кнопку «Оценить
    приложение» --- пользователь уже мог исчерпать лимит запуска
    процесса.

-   Ваше приложение не должно задавать какие-либо вопросы пользователю
    перед запуском или во время процесса, в том числе вопросы об их
    мнении (например, «Вам нравится приложение?») или прогнозирующие
    вопросы (например, «Вы бы поставили этому приложению 5 звёзд?»).

Рекомендации к дизайну

Следуйте рекомендациям, чтобы решить, как интегрировать процесс:

-   Отображайте процесс как есть, без какого-либо вмешательства или
    изменения текущего дизайна, включая размер, непрозрачность, форму и
    другие свойства.

-   Ничего не добавляйте поверх или по краям процесса.

-   Процесс должен открываться поверх всех слоёв. После запуска процесса
    не закрывайте его. Процесс завершится самостоятельно после явного
    действия пользователя.

Подключение в проект

Для подключения пакета к проекту необходимо выполнить команду:

  -----------------------------------------------------------------------
  flutter pub add flutter_rustore_review
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подключение зависимости

Эта команда добавит строчку в файл pubspec.yaml.

  -----------------------------------------------------------------------
  dependencies:    \`\`flutter_rustore_review: \^ 0.0 .3 \<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Запрос оценки

Для отображения окна с оценкой и формой для отзыва необходимо выполнить
инициализацию плагина:

  -----------------------------------------------------------------------
  RustoreReviewClient.initialize();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

После инициализации можно делать запрос и показ формы.

  -----------------------------------------------------------------------
  RustoreReviewClient.request().then((value)
  {  \`\`RustoreReviewClient.review().then((value) {    \`\`print(
  \"success review\" );  \`\`}, onError: (err) {    \`\`print( \"on err
  \${err}\" );  \`\`});});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

React Native

Общая информация

Пример реализации

Ознакомьтесь с приложением-примером, чтобы узнать, как правильно
интегрировать отзывы.

Условия корректной работы SDK

Для работы SDK оценок и отзывов необходимо соблюдение следующих условий:

-   ОС Android версии 7.0 или выше.

-   На устройстве пользователя установлено приложение RuStore.

-   Версия RuStoreApp на устройстве пользователя актуальная.

-   Пользователь авторизован в приложении RuStore.

-   Приложение должно быть опубликовано в RuStore.

Когда запрашивать оценку и отзыв

Чтобы решить в какой момент запросить оценку и отзыв о приложении у
пользователя, следуйте рекомендациям:

-   Запускайте флоу после того, как пользователь достаточно использовал
    ваше приложение.

-   Не запускайте флоу слишком часто --- это ухудшит опыт пользователя
    вашего приложения и ограничит использование SDK оценок.

-   Не используйте призывы к действию, например, кнопку «Оценить
    приложение» --- пользователь уже мог исчерпать лимит запуска флоу.

-   Ваше приложение не должно задавать какие-либо вопросы пользователю
    перед запуском или во время флоу, в том числе вопросы об их мнении
    (например, «Вам нравится приложение?») или прогнозирующие вопросы
    (например, «Вы бы поставили этому приложению 5 звёзд?»).

Рекомендации к дизайну

Следуйте этим рекомендациям, чтобы решить, как интегрировать флоу:

-   Отображайте флоу как есть, без какого-либо вмешательства или
    изменения текущего дизайна, включая размер, непрозрачность, форму и
    другие свойства.

-   Ничего не добавляйте поверх или по краям флоу.

-   Флоу должен открываться поверх всех слоёв. После запуска флоу не
    закрывайте его. Флоу завершится самостоятельно после явного действия
    пользователя.

Подключение в проект

Для подключения пакета к проекту нужно выполнить команду:

  -----------------------------------------------------------------------
  // HTTPSnpm  install git+https: //git \@gitflic.ru:rustore
  /react-native-rustore-review-sdk .git// SSHnpm  install git+ ssh :
  //git \@gitflic.ru:rustore /react-native-rustore-review-sdk .git
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Запрос оценки

Для отображения окна с оценкой и формой для отзыва, необходимо выполнить
инициализацию плагина.

  -----------------------------------------------------------------------
  RustoreReviewClient.init();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

После инициализации можно делать запрос и показ формы.

  -----------------------------------------------------------------------
  try {  \`\`const isRequested = await
  RustoreReviewClient.requestReviewFlow();  \`\`if (isRequested)
  {    \`\`await RustoreReviewClient.launchReviewFlow();  \`\`}}  catch
  (err) {  \`\`console.log(err);}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

RuStore SDK для обновления приложения

Kotlin

Общая информация

RuStore In-app updates SDK поддерживает актуальную версию приложения на
устройстве пользователя. Это помогает пользователю увидеть обновления,
оценить улучшение производительности и результат исправления ошибок.

Используйте RuStore In-app updates SDK для реализации различных способов
обновлений. В настоящий момент поддерживаются: отложенное, тихое (без UI
от RuStore) и принудительное обновление.

Пример пользовательского сценария

Условия корректной работы SDK

Для работы RuStore In-app updates SDK необходимо соблюдение следующих
условий:

-   ОС Android версии 6.0 или выше.

-   На устройстве пользователя установлен RuStore.

-   Актуальная версия RuStore на устройстве пользователя.

-   Приложению RuStore разрешена установка приложений.

Подключение в проект

Подключите репозиторий:

  -----------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"
  )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подключение зависимости

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

**build.gradle**

  -----------------------------------------------------------------------
  \<br\>dependencies {    \`\`implementation( \`"ru.rustore.sdk:appup
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Создание менеджера обновлений

Перед вызовом методов библиотеки необходимо создать менеджер обновлений
при помощи фабрики.

  -----------------------------------------------------------------------
  val updateManager = RuStoreAppUpdateManagerFactory.create(context)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка наличия обновлений

Прежде чем запрашивать обновление, проверьте, доступно ли обновление для
вашего приложения. Для проверки наличия обновлений вызовите
метод getAppUpdateInfo(). При вызове данного метода проверяются
следующие условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStoreApp на устройстве пользователя должна быть актуальной.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

В ответ на данный метод вы получите объект AppUpdateInfo, который будет
содержать в себе информацию о необходимости обновления. Запросите данный
объект заранее и закэшируйте его, чтобы запросить у пользователя запуск
скачивания обновления без задержки и в удобный для пользователя момент
времени.

  ---------------------------------------------------------------------------
  var appUpdateInfo: AppUpdateInfo? = 
  nullupdateManager    \`\`.getAppUpdateInfo()    \`\`.addOnSuccessListener {
  info -\>        \`\`appUpdateInfo =
  info                   \`\`}    \`\`.addOnFailureListener { throwable
  -\>                    \`\`}
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

Объект AppUpdateInfo содержит набор параметров, необходимых для
определения доступности обновления:

-   updateAvailability --- доступность обновления:

    -   UPDATE_NOT_AVAILABLE (Int == 1) --- обновление не нужно.

    -   UPDATE_AVAILABLE (Int == 2) --- обновление требуется загрузить
        или обновление уже загружено на устройство пользователя.

    -   DEVELOPER_TRIGGERED_UPDATE_IN_PROGRESS (Int == 3) --- обновление
        уже скачивается или установка уже запущена.

    -   UNKNOWN (Int == 0) --- статус по умолчанию.

<!-- -->

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   DOWNLOADED (Int == 1) --- скачано.

    -   DOWNLOADING (Int == 2) --- скачивается.

    -   FAILED (Int == 3) --- ошибка.

    -   INSTALLING (Int == 4) --- устанавливается.

    -   PENDING (Int == 5) --- в ожидании.

    -   UNKNOWN (Int == 0) --- по умолчанию.

Запуск загрузки обновления возможен только в том случае, если поле
updateAvailability содержит значение UPDATE_AVAILABLE.

Метод может вернуть ошибку. Возможные ошибки

Сценарии обновления

Принудительное обновление

Проверка доступности

После получения AppUpdateInfo можно проверить доступность
принудительного обновления.

Пример вызова метода registerListener()

  -----------------------------------------------------------------------
  if (appUpdateInfo.isUpdateTypeAllowed(IMMEDIATE)) {    \`\`TODO()}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Результат функции isUpdateTypeAllowed рекомендуется использовать для
принятия решения о запуске принудительного обновления, но данный
результат не влияет на возможность запуска сценария. Необходимость
запуска сценария обновления может происходить по вашей внутренней
логике.

Запуск сценария

Пример вызова метода startUpdateFlow()

  -------------------------------------------------------------------------------------------
  updateManager    \`\`.startUpdateFlow(appUpdateInfo,
  AppUpdateOptions.Builder().appUpdateType(IMMEDIATE).build())    \`\`.addOnSuccessListener {
  resultCode -\>    \`\`}    \`\`.addOnFailureListener { throwable -\>    \`\`}
  -------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------

resultCode (Int) :

-   Activity.RESULT_OK (-1) --- обновление выполнено, код может не быть
    получен, т.к. приложение в момент обновления завершается.

-   Activity.RESULT_CANCELED (0) --- флоу прервано пользователем или
    произошла ошибка. Предполагается, что при получении этого кода
    следует завершить работу приложения.

-   ActivityResult.ACTIVITY_NOT_FOUND (2) --- RuStore не установлен,
    либо установлена версия, которая не поддерживает принудительное
    обновление (RuStore versionCode \< 191)

throwable --- ошибка старта сценария обновления. Детальнее со списком
ошибок можно ознакомиться в разделе Возможные ошибки

Отложенное обновление

Скачивание обновления

После подтверждения доступности обновления, вы можете запустить сценарий
отложенного обновления, первым шагом которого является фоновое
скачивание обновления.

Для отслеживания процесса скачивания необходимо добавить слушатель,
используя метод registerListener()

Пример вызова метода registerListener()

  -----------------------------------------------------------------------
  updateManager.registerListener { state -\>    \`\`if
  (state.installStatus == InstallStatus.DOWNLOADED) {        \`\`//
  Update is ready to install    \`\`}           }
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Объект state описывает текущий статус скачивания обновления. Объект
содержит:

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   DOWNLOADED (1) --- скачано.

    -   DOWNLOADING (2) --- скачивается.

    -   FAILED (3) --- ошибка.

    -   INSTALLING (4) - устанавливается.

    -   PENDING (5) --- в ожидании.

    -   UNKNOWN (0) --- по умолчанию.

<!-- -->

-   bytesDownloaded --- количество загруженных байт.

-   totalBytesToDownload --- общее количество байт, которое необходимо
    скачать.

-   installErrorCode --- код ошибки во время скачивания. Детальнее с
    возможными ошибками можно ознакомиться в разделе Возможные ошибки.

Если необходимости в слушателе больше нет, то воспользуйтесь методом
удаления слушателя unregisterListener(), передав в метод ранее
зарегистрированный слушатель.

Пример вызова метода unregisterListener()

  -----------------------------------------------------------------------
  updateManager.unregisterListener(listener)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для запуска скачивания обновления приложения вызовите метод
startUpdateFlow(), поместив в него объект AppUpdateInfo, полученный в
методе getAppUpdateInfo().

Объект AppUpdateInfo после однократного использования становится
невалидным. Для повторного вызова метода startUpdateFlow() запросите
AppUpdateInfo повторно используя метод getAppUpdateInfo().

Пример вызова метода startUpdateFlow()

  -----------------------------------------------------------------------
  updateManager    \`\`.startUpdateFlow(appUpdateInfo,
  AppUpdateOptions.Builder().build())    \`\`.addOnSuccessListener {
  resultCode -\>    \`\`}    \`\`.addOnFailureListener { throwable
  -\>    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если пользователь подтвердил скачивание обновления, то resultCode =
Activity.RESULT_OK, если отказался, то resultCode =
Activity.RESULT_CANCEL.

Метод может вернуть ошибку. Возможные ошибки

После получения статуса "DOWNLOADED" в слушателе возможно вызвать метод
установки обновления. Рекомендуется уведомить пользователя о том, что
обновление готово к установке.

Установка обновления

Для запуска установки обновления вызовите метод completeUpdate().

Пример вызова метода completeUpdate()

  -----------------------------------------------------------------------
  updateManager    \`\`.completeUpdate()    \`\`.addOnFailureListener {
  throwable -\>                    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обновление происходит через нативный инструмент android. В случае
успешного обновления приложение закроется.

На этапе обновления могут возникнуть ошибки. Возможные ошибки

Тихое обновление

Скачивание обновления

Рекомендуем реализовать свой интерфейс для работы с обновлением.

После подтверждения доступности обновления, вы можете запустить сценарий
тихого обновления, первым шагом которого является фоновое скачивание
обновления.

Для отслеживания процесса скачивания необходимо добавить слушатель,
используя метод registerListener()

Пример вызова метода registerListener()

  -----------------------------------------------------------------------
  updateManager.registerListener { state -\>    \`\`if
  (state.installStatus == InstallStatus.DOWNLOADED) {        \`\`//
  Update is ready to install    \`\`}           }
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Объект state описывает текущий статус скачивания обновления. Объект
содержит:

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   DOWNLOADED (1) --- скачано.

    -   DOWNLOADING (2) --- скачивается.

    -   FAILED (3) --- ошибка.

    -   INSTALLING (4) --- устанавливается.

    -   PENDING (5) --- в ожидании.

    -   UNKNOWN (0) --- по умолчанию.

<!-- -->

-   bytesDownloaded --- количество загруженных байт.

-   totalBytesToDownload --- общее количество байт, которое необходимо
    скачать.

-   installErrorCode --- код ошибки во время скачивания. Детальнее с
    возможными ошибками можно ознакомиться в разделе Возможные ошибки

Если необходимости в слушателе больше нет, то воспользуйтесь методом
удаления слушателя unregisterListener(), передав в метод ранее
зарегистрированный слушатель.

Пример вызова метода unregisterListener()

  -----------------------------------------------------------------------
  updateManager.unregisterListener(listener)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для запуска скачивания обновления приложения необходимо вызвать метод
startUpdateFlow() с аргументом AppUpdateInfo, полученный в методе
getAppUpdateInfo(), и установить тип обновления в AppUpdateOptions в
значение SILENT.

Объект AppUpdateInfo после однократного использования становится
невалидным. Для повторного вызова метода startUpdateFlow() запросите
AppUpdateInfo повторно используя метод getAppUpdateInfo().

Пример вызова метода startUpdateFlow()

  --------------------------------------------------------------------------------------------------------------
  val appUpdateOptions =
  AppUpdateOptions.Builder().appUpdateType(SILENT).build()updateManager    \`\`.startUpdateFlow(appUpdateInfo,
  appUpdateOptions)    \`\`.addOnSuccessListener { resultCode -\>    \`\`}    \`\`.addOnFailureListener {
  throwable -\>    \`\`}
  --------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------

При вызове onSuccessListener с resultCode = Activity.RESULT_OK будет
зарегистрирована задача на скачивание обновления.

В данном сценарии может быть вызван только onSuccessListener с
resultCode = Activity.RESULT_OK, либо onFailureListener, детальнее со
списком ошибок можно ознакомиться в разделе Возможные ошибки.

После получения статуса "DOWNLOADED" в слушателе возможно вызвать метод
установки обновления. Рекомендуется уведомить пользователя о том, что
обновление готово к установке.

Установка обновления

Для запуска установки обновления вызовите метод completeUpdate().

Пример вызова метода completeUpdate()

  -----------------------------------------------------------------------
  updateManager    \`\`.completeUpdate()    \`\`.addOnFailureListener {
  throwable -\>                    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обновление происходит через нативный инструмент android. В случае
успешного обновления приложение закроется.

На этапе обновления могут возникнуть ошибки. Возможные ошибки

Возможные ошибки

Если вы получили в ответ onFailure, то не рекомендуем самостоятельно
отображать ошибку пользователю. Отображение ошибки может негативно
повлиять на пользовательский опыт.

Список возможных ошибок:

-   RuStoreNotInstalledException() --- на устройстве пользователя не
    установлен RuStore;

-   RuStoreOutdatedException() --- RuStore установленный на устройстве
    пользователя, не поддерживает обновление приложений;

-   RuStoreUserUnauthorizedException() --- пользователь не авторизован в
    RuStore. Авторизация необходима для обновления платных приложений;

-   RuStoreException(message: String) --- базовая ошибка RuStore, от
    которой наследуются все остальные ошибки.

-   RuStoreInstallException(code: Int) --- ошибка скачивания и
    установки:

    -   Коды ошибки: - ERROR_UNKNOWN(Int = 4001) --- Неизвестная ошибка;

        -   ERROR_DOWNLOAD(Int = 4002) --- Ошибка при скачивании;

        -   ERROR_BLOCKED(Int = 4003) --- Установка заблокированна
            системой;

        -   ERROR_INVALID_APK(Int = 4004) --- Некорректный APK-файл
            обновления;

        -   ERROR_CONFLICT(Int = 4005) --- Конфликт с текущей версией
            приложения;

        -   ERROR_STORAGE(Int = 4006) --- Недостаточно памяти на
            устройстве;

        -   ERROR_INCOMPATIBLE(Int = 4007) --- Несовместимо с
            устройством;

        -   ERROR_APP_NOT_OWNED(Int = 4008) --- Приложение не куплено;

        -   ERROR_INTERNAL_ERROR(Int = 4009) --- Внутренняя ошибка;

        -   ERROR_ABORTED(Int = 4010) --- Пользователь отказался от
            установки обновления;

        -   ERROR_APK_NOT_FOUND(Int = 4011) --- APK-файл для запуска
            установки не найден;

        -   ERROR_EXTERNAL_SOURCE_DENIED(Int = 4012) --- Запуск
            обновления запрещён. Например, в первом методе вернулся
            ответ о том, что обновление недоступно, но пользователь
            вызывает второй метод.

        -   ERROR_ACTIVITY_SEND_INTENT(Int = 9901) --- Ошибка отправки
            intent на открытие активити

        -   ERROR_ACTIVITY_UNKNOWN(Int = 9902) --- Неизвестная ошибка
            отрытия активити

История изменений RuStore SDK для обновления приложения

Версия SDK 1.0.1

-   Внутреннее обновление SDK.

Версия SDK 1.0.0

-   Внутреннее обновление SDK.

Версия SDK 0.2.0

-   Добавили флоу форс апдейтов.

-   Поддержали передачу VersionCode с типом Long.

Версия SDK 0.1.2

-   Добавлен функционал Silent обновлений.

Версия SDK 0.1.1

-   Исправлена работа метода *await()* для Task API.

Java

Общая информация

RuStore In-app updates SDK помогает поддерживать актуальную версию
вашего приложения на устройстве пользователя.

Когда пользователи поддерживают приложение в актуальном состоянии, они
могут опробовать новые функции, а также воспользоваться улучшениями
производительности и исправлениями ошибок.

Вы можете использовать RuStore In-app updates SDK для реализации
различных способов обновлений. В настоящий момент поддерживаются:
отложенное, тихое (без UI от RuStore), принудительное обновление.

Пример пользовательского сценария

Условия корректной работы SDK

Для работы RuStore In-app updates SDK необходимо соблюдение следующих
условий:

-   ОС Android версии 6.0 или выше.

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStoreApp на устройстве пользователя должна быть актуальной.

-   Приложению RuStore должна быть разрешена установка приложений.

Подключение в проект

Подключение репозитория

**build.gradle**

  -----------------------------------------------------------------------
  repositories {    \`\`maven {        \`\`url = uri(
  \"https://artifactory-external.vkpartner.ru/artifactory/maven\"
  )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Подключение зависимости

Добавьте следующий код в свой конфигурационный файл для подключения
зависимости:

**build.gradle**

  -----------------------------------------------------------------------
  dependencies {    \`\`implementation( \"ru.rustore.sdk:review:1.0.1\"
  )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Создание менеджера обновлений

Перед вызовом методов библиотеки необходимо создать менеджер обновлений
при помощи фабрики.

  -----------------------------------------------------------------------
  RuStoreAppUpdateManager ruStoreAppUpdateManager =
  RuStoreAppUpdateManagerFactory.INSTANCE.create(context);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка наличия обновлений

Прежде чем запускать сценарий обновления, проверьте, доступно ли
обновление для вашего приложения. Для проверки наличия обновлений
вызовите метод getAppUpdateInfo(). При вызове данного метода проверяются
следующие условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStoreApp на устройстве пользователя должна быть актуальной.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

В ответ на данный метод вы получите объект AppUpdateInfo, который будет
содержать в себе информацию о необходимости обновления. Запросите данный
объект заранее и закэшируйте его, чтобы запросить у пользователя запуск
скачивания обновления без задержки и в удобный для пользователя момент
времени.

**Пример вызова метода getAppUpdateInfo()**

  ----------------------------------------------------------------------------------------------
  AppUpdateInfo appUpdateInfo = 
  nullruStoreAppUpdateManager      \`\`.getAppUpdateInfo()      \`\`.addOnSuccessListener(info
  -\> {              \`\`appupdateInfo = info           \`\`.addOnFailureListener(throwable
  -\>                              \`\`);
  ----------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------

Объект AppUpdateInfo содержит набор параметров, необходимых для
определения доступности обновления:

-   updateAvailability --- доступность обновления:

    -   UPDATE_NOT_AVAILABLE (Int == 1) --- обновление не нужно.

    -   UPDATE_AVAILABLE (Int == 2) --- обновление требуется загрузить
        или обновление уже загружено на устройство пользователя.

    -   DEVELOPER_TRIGGERED_UPDATE_IN_PROGRESS (Int == 3) --- обновление
        уже скачивается или установка уже запущена.

    -   UNKNOWN (Int == 0) --- статус по умолчанию.

<!-- -->

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   DOWNLOADED (Int == 1) --- скачано.

    -   DOWNLOADING (Int == 2) --- скачивается.

    -   FAILED (Int == 3) --- ошибка.

    -   INSTALLING (Int == 4) --- устанавливается.

    -   PENDING (Int == 5) --- в ожидании.

    -   UNKNOWN (Int == 0) --- по умолчанию.

Запуск сценария обновления возможен только в том случае, если поле
updateAvailability содержит значение UPDATE_AVAILABLE.

Возможные ошибки

Сценарии обновления

Принудительное обновление

Проверка доступности

После получения AppUpdateInfo можно проверить доступность
принудительного обновления.

**Пример вызова метода registerListener()**

  -----------------------------------------------------------------------
  if (appUpdateInfo.isUpdateTypeAllowed(IMMEDIATE)) {    \`\`TODO()}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Результат функции isUpdateTypeAllowed рекомендуется использовать для
принятия решения о запуске принудительного обновления, но данный
результат не влияет на возможность запуска сценария. Необходимость
запуска сценария обновления может происходить по Вашей внутренней
логике.

Запуск сценария

**Пример вызова метода startUpdateFlow()**

  --------------------------------------------------------------------------------
  IruStoreAppUpdateManager       \`\`.startUpdateFlow(appUpdateInfo,  new
  AppUpdateOptions.Builder().build())       \`\`.addOnSuccessListener(resultCode
  -\> {                    \`\`})        \`\`.addOnFailureListener(throwable
  -\>                    \`\`);
  --------------------------------------------------------------------------------

  --------------------------------------------------------------------------------

resultCode (Int) :

-   Activity.RESULT_OK (-1) --- обновление выполнено, код может быть не
    получен, т.к. приложение в момент обновления завершается.

-   Activity.RESULT_CANCELED (0) --- процесс прерван пользователем или
    произошла ошибка. Предполагается, что при получении этого кода,
    следует завершить работу приложения.

-   ActivityResult.ACTIVITY_NOT_FOUND (2) --- RuStore не установлен,
    либо установлена версия, которая не поддерживает принудительное
    обновление (RuStore versionCode \< 191)

throwable --- ошибка старта сценария обновления.

Возможные ошибки

Отложенное обновление с UI от RuStore

Скачивание обновления

После подтверждения доступности обновления, вы можете запустить сценарий
отложенного обновления, первый шагом которого является фоновое
скачивание обновления.

Для отслеживания процесса скачивания необходимо добавить слушатель,
используя метод registerListener().

**Пример вызова метода registerListener()**

  -----------------------------------------------------------------------
  ruStoreAppUpdateManager.registerListener(installState -\>
  {       \`\`if (installState.getInstallStatus() ==
  InstallStatus.DOWNLOADED) {            \`\`// Обновление готово к
  установке       \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Объект state описывает текущий статус скачивания обновления. Объект
содержит:

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   DOWNLOADED (1) --- скачано.

    -   DOWNLOADING (2) --- скачивается.

    -   FAILED (3) --- ошибка.

    -   INSTALLING (4) --- устанавливается.

    -   PENDING (5) --- в ожидании.

    -   UNKNOWN (0) --- по умолчанию.

<!-- -->

-   bytesDownloaded --- количество загруженных байт.

-   totalBytesToDownload --- общее количество байт, которое необходимо
    скачать.

-   installErrorCode --- код ошибки во время скачивания.

Возможные ошибки

Если необходимости в слушателе больше нет, то воспользуйтесь методом
удаления слушателя unregisterListener(), передав в метод ранее
зарегистрированный слушатель.

**Пример вызова метода unregisterListener()**

  -------------------------------------------------------------------------
  ruStoreAppUpdateManager.unregisterListener(installStateUpdateListener);
  -------------------------------------------------------------------------

  -------------------------------------------------------------------------

Для запуска скачивания обновления приложения вызовите метод
startUpdateFlow(), поместив в него объект AppUpdateInfo, полученный в
методе getAppUpdateInfo().

**Объект AppUpdateInfo после однократного использования становится
невалидным. Для повторного вызова метода startUpdateFlow() запросите
AppUpdateInfo повторно используя метод getAppUpdateInfo().**

**Пример вызова метода startUpdateFlow()**

  ------------------------------------------------------------------------------
  updateManager    \`\`.startUpdateFlow(appUpdateInfo,
  AppUpdateOptions.Builder().build())    \`\`.addOnSuccessListener { resultCode
  -\>    \`\`}    \`\`.addOnFailureListener { throwable
  -\>    \`\`}ruStoreAppUpdateManager     \`\`.startUpdateFlow(appUpdateInfo, 
  new
  AppUpdateOptions.Builder().build())     \`\`.addOnSuccessListener(resultCode
  -\> {                  \`\`})      \`\`.addOnFailureListener(throwable
  -\>              \`\`);
  ------------------------------------------------------------------------------

  ------------------------------------------------------------------------------

Если пользователь подтвердил скачивание обновления, то resultCode =
Activity.RESULT_OK, если отказался, то resultCode =
Activity.RESULT_CANCEL.

Возможные ошибки

После получения статуса DOWNLOADED в слушателе возможно вызвать метод
установки обновления. Рекомендуется уведомить пользователя о том, что
обновление готово к установке.

Установка обновления

Для запуска установки обновления вызовите метод completeUpdate().

**Пример вызова метода completeUpdate()**

  -----------------------------------------------------------------------------------------
  ruStoreAppUpdateManager    \`\`.completeUpdate()    \`\`.addOnFailureListener(throwable
  -\> {                        \`\`});
  -----------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------

Обновление происходит через нативный инструмент android. В случае
успешного обновления приложение закроется.

На этапе обновления могут возникнуть ошибки.

Возможные ошибки

Тихое обновление без UI от RuStore

Скачивание обновления

Рекомендуем реализовать свой интерфейс для работы с обновлением, что бы
не портить пользовательский опыт в Вашем приложении.

После подтверждения доступности обновления, вы можете запустить сценарий
тихого обновления, первый шагом которого является фоновое скачивание
обновления. Для отслеживания процесса скачивания необходимо добавить
слушатель, используя метод registerListener().

**Пример вызова метода registerListener()**

  -----------------------------------------------------------------------
  ruStoreAppUpdateManager.registerListener { state -\>    \`\`if
  (state.installStatus == InstallStatus.DOWNLOADED) {        \`\`//
  Update is ready to install    \`\`}           }
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Объект state описывает текущий статус скачивания обновления. Объект
содержит:

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   DOWNLOADED (1) --- скачано.

    -   DOWNLOADING (2) --- скачивается.

    -   FAILED (3) --- ошибка.

    -   INSTALLING (4) --- устанавливается.

    -   PENDING (5) --- в ожидании.

    -   UNKNOWN (0) --- по умолчанию.

<!-- -->

-   bytesDownloaded --- количество загруженных байт.

-   totalBytesToDownload --- общее количество байт, которое необходимо
    скачать.

-   installErrorCode --- код ошибки во время скачивания.

Возможные ошибки

Если необходимости в слушателе больше нет, то воспользуйтесь методом
удаления слушателя unregisterListener(), передав в метод ранее
зарегистрированный слушатель.

**Пример вызова метода unregisterListener()**

  -----------------------------------------------------------------------
  ruStoreAppUpdateManager.unregisterListener(listener)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для запуска скачивания обновления приложения необходимо вызвать метод
startUpdateFlow() с аргументом AppUpdateInfo, полученный в методе
getAppUpdateInfo(), и установить тип обновления в AppUpdateOptions в
значение SILENT.

Объект AppUpdateInfo после однократного использования становится
невалидным. Для повторного вызова метода startUpdateFlow() запросите
AppUpdateInfo повторно используя метод getAppUpdateInfo().

**Пример вызова метода startUpdateFlow()**

  -----------------------------------------------------------------------
  val appUpdateOptions =
  AppUpdateOptions.Builder().appUpdateType(SILENT).build()
   ruStoreAppUpdateManager      \`\`.startUpdateFlow(appUpdateInfo,
  appUpdateOptions)    \`\`.addOnSuccessListener { resultCode
  -\>    \`\`}    \`\`.addOnFailureListener { throwable -\>    \`\`}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

При вызове onSuccessListener с resultCode = Activity.RESULT_OK будет
зарегистрирована задача на скачивание обновления.

В данном сценарии может быть вызван только onSuccessListener с
resultCode = Activity.RESULT_OK, либо onFailureListener **.**

Возможные ошибки

После получения статуса DOWNLOADED в слушателе возможно вызвать метод
установки обновления. Рекомендуется уведомить пользователя о том, что
обновление готово к установке.

Установка обновления

Для запуска установки обновления вызовите метод completeUpdate().

**Пример вызова метода completeUpdate()**

  ---------------------------------------------------------------------------
  ruStoreAppUpdateManager  \`\`.completeUpdate()  \`\`.addOnFailureListener {
  throwable -\>                  \`\`}
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

Обновление происходит через нативный инструмент android. В случае
успешного обновления приложение закроется.

На этапе обновления могут возникнуть ошибки.

Возможные ошибки

Возможные ошибки

Если вы получили в ответ onFailure, то не рекомендуем самостоятельно
отображать ошибку пользователю. Отображение ошибки может негативно
повлиять на пользовательский опыт.

Список возможных ошибок:

-   RuStoreNotInstalledException() --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException() --- RuStore установленный на устройстве
    пользователя, не поддерживает обновление приложений.

-   RuStoreUserUnauthorizedException() --- пользователь не авторизован в
    RuStore. Авторизация необходима для обновления платных приложений.

-   RuStoreException(message: String) --- базовая ошибка RuStore, от
    которой наследуются все остальные ошибки. Ошибка возникает во всех
    остальных случаях, к примеру, при проблемах соединения с сервером.

-   RuStoreInstallException(code: Int) --- Ошибка скачивания и
    установки:

    -   Коды ошибки: - ERROR_UNKNOWN(Int = 4001) --- Неизвестная ошибка.

        -   ERROR_DOWNLOAD(Int = 4002) --- Ошибка при скачивании.

        -   ERROR_BLOCKED(Int = 4003) --- Установка заблокированна
            системой.

        -   ERROR_INVALID_APK(Int = 4004) --- Некорректный APK
            обновления.

        -   ERROR_CONFLICT(Int = 4005) --- Конфликт с текущей версией
            приложения.

        -   ERROR_STORAGE(Int = 4006) --- Недостаточно памяти на
            устройстве.

        -   ERROR_INCOMPATIBLE(Int = 4007) --- Несовместимо с
            устройством.

        -   ERROR_APP_NOT_OWNED(Int = 4008) --- Приложение не куплено.

        -   ERROR_INTERNAL_ERROR(Int = 4009) --- Внутренняя ошибка.

        -   ERROR_ABORTED(Int = 4010) --- Пользователь отказался от
            установки обновления.

        -   ERROR_APK_NOT_FOUND(Int = 4011) --- apk для запуска
            установки не найден.

        -   ERROR_EXTERNAL_SOURCE_DENIED(Int = 4012) --- Запуск
            обновления запрещён. Например, в первом методе вернулся
            ответ о том, что обновление недоступно, но пользователь
            вызывает второй метод

        -   ERROR_ACTIVITY_SEND_INTENT(Int = 9901) --- Ошибка отправки
            intent на открытие активити

        -   ERROR_ACTIVITY_UNKNOWN(Int = 9902) --- Неизвестная ошибка
            отрытия активити

История изменений RuStore SDK для обновления приложения

Версия SDK 1.0.1

-   Внутреннее обновление SDK.

Версия SDK 1.0.0

-   Внутреннее обновление SDK.

Версия SDK 0.2.0

-   Добавлен процесс принудительного обновления.

-   Добавлена поддержка передачи VersionCode с типом Long.

Версия SDK 0.1.2

-   Добавлен функционал Silent обновлений.

Версия SDK 0.1.1

-   Исправлена работа метода *await()* для Task API.

Unity

Общая информация

RuStore In-app updates SDK поддерживает актуальную версию приложения на
устройстве пользователя. Это помогает пользователю увидеть обновления,
оценить улучшение производительности и результат исправления ошибок.

Используйте RuStore In-app updates SDK, чтобы сообщить пользователю о
новой версии приложения и предложить установить её. Пользователь сможет
загрузить версию в фоновом режиме и увидеть прогресс установки.

Пример пользовательского сценария

Условия корректной работы SDK

Для работы RuStore In-app updates SDK необходимо соблюдение следующих
условий:

-   ОС Android версии 7.0 или выше.

-   На устройстве пользователя установлен RuStore.

-   На устройстве пользователя установлена актуальная версия RuStore.

-   Пользователь авторизован в RuStore.

-   Приложению RuStore разрешена установка приложений.

Подключение в проект

Для подключения необходимо скачать RuStore AppUpdate SDK и импортировать
его в проект (Assets → Import Package → Custom Package). Зависимости
подключаются автоматически с помощью External Dependency Manager
(включен в SDK).

Minimum API level должен быть установлен не ниже 24. Минификация
приложения (ProGuard/R8) в данный момент не поддерживается, необходимо
её отключить в настройках проекта (File → Build Settings → Player
Settings → Publishing Settings → Minify).

Создание менеджера обновлений

Перед вызовом методов библиотеки необходимо создать менеджер обновлений
при помощи фабрики.

  -----------------------------------------------------------------------
  RuStoreAppUpdateManager.Instance.Init();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка наличия обновлений

Прежде чем запрашивать обновление, проверьте, доступно ли обновление для
вашего приложения. Для проверки наличия обновлений вызовите
метод getAppUpdateInfo(). При вызове данного метода проверяются
следующие условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStoreApp на устройстве пользователя должна быть актуальной.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Приложению RuStore должна быть разрешена установка приложений.

В ответ на данный метод вы получите объект AppUpdateInfo, который будет
содержать в себе информацию о необходимости обновления. Запросите данный
объект заранее и закэшируйте его, чтобы запросить у пользователя запуск
скачивания обновления без задержки и в удобный для пользователя момент
времени.

**Пример вызова метода GetAppUpdateInfo()**

  -----------------------------------------------------------------------
  RuStoreAppUpdateManager.Instance.GetAppUpdateInfo(onFailure: (error)
  =\> {    \`\`// Handle error},onSuccess: (info) =\> {    \`\`// Process
  update info});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Объект AppUpdateInfo содержит набор параметров, необходимых для
определения доступности обновления:

-   updateAvailability --- доступность обновления:

    -   UPDATE_NOT_AVAILABLE --- обновление не требуется.

    -   UPDATE_AVAILABLE --- обновление требуется загрузить или
        обновление уже загружено на устройство пользователя.

    -   DEVELOPER_TRIGGERED_UPDATE_IN_PROGRESS --- обновление уже
        загружается или установка уже запущена.

    -   UNKNOWN --- статус по умолчанию.

<!-- -->

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   DOWNLOADED --- загружено.

    -   DOWNLOADING --- загружается.

    -   FAILED --- ошибка.

    -   INSTALLING --- устанавливается.

    -   PENDING --- в ожидании.

    -   UNKNOWN --- по умолчанию.

Запуск загрузки обновления возможен только в том случае, если поле
updateAvailability содержит значение UPDATE_AVAILABLE.

Метод может вернуть ошибку. Подробная информация о возможных ошибках
приведена в разделе **Возможные ошибки.**

Скачивание обновлений

После подтверждения доступности обновления вы можете запросить у
пользователя скачивание обновления, но перед этим необходимо запустить
слушатель статуса скачивания обновления, используя метод
registerListener().

**Пример вызова метода RegisterListener()**

  -----------------------------------------------------------------------
  RuStoreAppUpdateManager.Instance.RegisterListener(listener);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

listener --- объект класса, реализующего интерфейс
IInstallStateUpdateListener.

**IInstallStateUpdateListener**

  -----------------------------------------------------------------------
  public interface IInstallStateUpdateListener {       \`\`public void
  OnStateUpdated(InstallState state);}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Объект state описывает текущий статус скачивания обновления и содержит:

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   DOWNLOADED --- загружено.

    -   DOWNLOADING --- загружается.

    -   FAILED --- ошибка.

    -   INSTALLING --- устанавливается.

    -   PENDING --- в ожидании.

    -   UNKNOWN --- статус по умолчанию.

<!-- -->

-   bytesDownloaded --- количество загруженных байт.

-   totalBytesToDownload --- общее количество байт, которое необходимо
    загрузить.

-   installErrorCode --- код ошибки во время скачивания:

    -   ERROR_UNKNOWN --- Неизвестная ошибка.

    -   ERROR_DOWNLOAD --- Ошибка при скачивании.

    -   ERROR_BLOCKED --- Установка заблокирована системой.

    -   ERROR_INVALID_APK --- Некорректный APK обновления.

    -   ERROR_CONFLICT --- Конфликт с текущей версией приложения.

    -   ERROR_STORAGE --- Недостаточно памяти на устройстве.

    -   ERROR_INCOMPATIBLE --- Несовместимо с устройством.

    -   ERROR_APP_NOT_OWNED --- Приложение не куплено.

    -   ERROR_INTERNAL_ERROR --- Внутренняя ошибка.

    -   ERROR_ABORTED --- Пользователь отказался от установки
        обновления.

    -   ERROR_APK_NOT_FOUND --- apk-файл для запуска установки не
        найден.

    -   ERROR_EXTERNAL_SOURCE_DENIED --- Запуск обновления запрещён.
        Например, в первом методе вернулся ответ о том, что обновление
        недоступно, но пользователь вызывает второй метод.

Если необходимости в слушателе больше нет, воспользуйтесь методом
удаления слушателя unregisterListener(), передав в метод ранее
зарегистрированный слушатель.

**Пример вызова метода UnregisterListener()**

  -----------------------------------------------------------------------
  RuStoreAppUpdateManager.Instance.UnregisterListener(listener);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для запуска скачивания обновления приложения вызовите метод
StartUpdateFlow().

Объект AppUpdateInfo после однократного использования становится
невалидным. Для повторного вызова метода startUpdateFlow() запросите
AppUpdateInfo повторно используя метод getAppUpdateInfo().

**Пример вызова метода StartUpdateFlow()**

  -----------------------------------------------------------------------
  RuStoreAppUpdateManager.Instance.StartUpdateFlow(    \`\`onFailure:
  (error) =\> {        \`\`// Handle error    \`\`},    \`\`onSuccess:
  (resultCode) =\> {        \`\`// Handle flow result    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если пользователь подтвердил скачивание обновления, resultCode =
UpdateFlowResult.RESULT_OK, если отказался,  resultCode =
UpdateFlowResult.RESULT_CANCELED.

После вызова метода вы можете следить за статусом скачивания обновления
в слушателе. Если в слушателе вы получили статус DOWNLOADED, вы можете
вызвать метод установки обновления. Рекомендуем уведомить пользователя о
готовности установки обновления.

Метод может вернуть ошибку. Подробная информация приведена в
разделе **Возможные ошибки.**

Установка обновлений

После завершения скачивания APK-файла обновления вы можете запустить
установку обновления. Для запуска установки обновления вызовите метод
CompleteUpdate().

**Пример вызова метода CompleteUpdate()**

  -----------------------------------------------------------------------
  RuStoreAppUpdateManager.Instance.CompleteUpdate(    \`\`onFailure:
  (error) =\> {        \`\`// Handle error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обновление происходит через нативный инструмент Android. В случае
успешного обновления приложение закроется.

На этапе обновления могут возникнуть ошибки. Возможные ошибки

Возможные ошибки

Мы не рекомендуем самостоятельно отображать ошибку пользователю, если вы
получили в ответ onFailure. Отображение ошибки может негативно повлиять
на пользовательский опыт.

Структура ошибки:

  -----------------------------------------------------------------------
  public class RuStoreError {    \`\`public string name;    \`\`public
  string description;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Список возможных ошибок:

-   RuStoreNotInstalledException --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException --- приложение RuStore установленное на
    устройстве пользователя, не поддерживает обновление приложений.

-   RuStoreUserUnauthorizedException --- пользователь не авторизован в
    RuStore.

-   RuStoreException --- базовая ошибка RuStore, от которой наследуются
    все остальные ошибки.

-   RuStoreInstallException --- ошибка скачивания и установки.

Flutter

Общая информация

RuStore In-app updates SDK помогает поддерживать актуальную версию
вашего приложения на устройстве пользователя.

Когда пользователи поддерживают приложение в актуальном состоянии, они
могут опробовать новые функции, а также воспользоваться улучшениями
производительности и исправлениями ошибок.

Вы можете использовать RuStore In-app updates SDK для отображения
процесса обновления приложения, который обеспечивает фоновую загрузку и
установку обновления с контролем состояния. Пользователь сможет
использовать ваше приложение в момент загрузки обновления.

Ознакомьтесь с приложением примером, чтобы узнать как правильно
интегрировать SDK
обновлений: https://gitflic.ru/project/rustore/flutter-rustore-update

Пример пользовательского сценария

Условия корректной работы SDK

Для работы RuStore In-app updates SDK необходимо соблюдение следующих
условий:

-   ОС Android версии 6.0 или выше.

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStoreApp на устройстве пользователя должна быть актуальной.

-   Приложению RuStore должна быть разрешена установка приложений.

Пример реализации

Для того, чтобы узнать как правильно интегрировать пакет для работы с
push-уведомлениями, ознакомьтесь с приложением-примером:

https://gitflic.ru/project/rustore/flutter-rustore-update/file?file=example

Подключение в проект

Для подключения пакета к проекту нужно выполнить команду:

  -----------------------------------------------------------------------
  flutter pub add flutter_rustore_update
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Эта команда добавит строчку в файл pubspec.yaml:

  -----------------------------------------------------------------------
  dependencies:\`  \`\`flutter_rustore_up
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка наличия обновлений

Прежде чем запрашивать обновление, проверьте, доступно ли обновление для
вашего приложения. Для проверки наличия обновлений вызовите метод
info(). При вызове данного метода проверяются следующие условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStoreApp на устройстве пользователя должна быть актуальной.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

В ответ на данный метод вы получите объект info, который будет содержать
в себе информацию о необходимости обновления.

  -----------------------------------------------------------------------
  RustoreUpdateClient.info().then((info)
  {    \`\`print(info);}).catchError((err) {    \`\`print(err);});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Объект info содержит набор параметров, необходимых для определения
доступности обновления:

-   updateAvailability --- доступность обновления:

    -   UPDATE_AILABILITY_NOT_AVAILABLE --- обновление не нужно.

    -   UPDATE_AILABILITY_AVAILABLE --- обновление требуется загрузить
        или обновление уже загружено на устройство пользователя.

    -   UPDATE_AILABILITY_IN_PROGRESS --- обновление уже скачивается или
        установка уже запущена.

    -   UPDATE_AILABILITY_UNKNOWN --- статус по умолчанию.

<!-- -->

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   INSTALL_STATUS_DOWNLOADED --- скачано.

    -   INSTALL_STATUS_DOWNLOADING --- скачивается.

    -   INSTALL_STATUS_FAILED --- ошибка.

    -   INSTALL_STATUS_INSTALLING --- устанавливается.

    -   INSTALL_STATUS_PENDING --- в ожидании.

    -   INSTALL_STATUS_UNKNOWN --- по умолчанию.

Запуск скачивания обновления возможен только в том случае, если поле
updateAvailability содержит значение UPDATE_AILABILITY_AVAILABLE.

Метод может вернуть ошибку. Возможные ошибки

Скачивание обновлений

После подтверждения доступности обновления вы можете запросить у
пользователя скачивание обновления, но перед этим необходимо запустить
слушатель статуса скачивания обновления, используя метод listener().

  -----------------------------------------------------------------------
  RustoreUpdateClient.listener((value) {  \`\`print( \"listener
  installStatus \${value.installStatus}\" );  \`\`print( \"listener
  bytesDownloaded \${value.bytesDownloaded}\" );  \`\`print( \"listener
  totalBytesToDownload \${value.totalBytesToDownload}\" );  \`\`print(
  \"listener installErrorCode \${value.installErrorCode}\" );  \`\`if
  (value.installStatus == INSTALL_STATUS_DOWNLOADED) {    \`\`// тут
  можно вызывать метод complete()  \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Объект state описывает текущий статус скачивания обновления. Объект
содержит:

-   installStatus --- статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   INSTALL_STATUS_DOWNLOADED --- скачано.

    -   INSTALL_STATUS_DOWNLOADING --- скачивается.

    -   INSTALL_STATUS_FAILED --- ошибка.

    -   INSTALL_STATUS_INSTALLING --- устанавливается.

    -   INSTALL_STATUS_PENDING --- в ожидании.

    -   INSTALL_STATUS_UNKNOWN --- по умолчанию.

<!-- -->

-   bytesDownloaded --- количество загруженных байт.

-   totalBytesToDownload --- общее количество байт, которое необходимо
    скачать.

-   installErrorCode --- код ошибки во время скачивания.

Детальнее с возможными ошибками можно ознакомиться в разделе «Возможные
ошибки».

**Скачивание с UI от RuStore**

Для запуска скачивания обновления приложения вызовите метод download().

  -----------------------------------------------------------------------
  RustoreUpdateClient.download().then((value) {  \`\`print( \"download
  code \${value.code}\" );}).catchError((err) {  \`\`print( \"download
  err \${err}\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если пользователь подтвердил скачивание обновления, то value.code =
ACTIVITY_RESULT_OK, если отказался, то value.code =
ACTIVITY_RESULT_CANCELED.

После вызова метода вы можете следить за статусом скачивания обновления
в слушателе. Если в слушателе вы получили статус
INSTALL_STATUS_DOWNLOADED, то вы можете вызвать метод установки
обновления. Рекомендуем уведомить пользователя о готовности установки
обновления.

Метод может вернуть ошибку. Возможные ошибки

Принудительное обновление

Для запуска скачивания обязательного обновления приложения вызовите
метод immediate().

  -----------------------------------------------------------------------
  \<br\>RustoreUpdateClient.immediate().then((value) {\<br\>
  print(\"immediate code \${value.code}\");\<br\>}).catchError((err)
  {\<br\> print(\"immediate err \${err}\");\<br\>});\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если пользователь подтвердил скачивание обновления, то value.code =
ACTIVITY_RESULT_OK, если отказался, то value.code =
ACTIVITY_RESULT_CANCELED.

После вызова метода вы можете следить за статусом скачивания обновления
в слушателе. Если в слушателе вы получили статус
INSTALL_STATUS_DOWNLOADED, то вы можете вызвать метод установки
обновления. Рекомендуем уведомить пользователя о готовности установки
обновления.

Метод может вернуть ошибку. Детальнее со списком ошибок можно
ознакомиться в разделе Возможные ошибки

Тихое обновление

Для запуска скачивания обновления приложения без интерфейса RuStore
вызовите метод silent().

  -----------------------------------------------------------------------
  \<br\>RustoreUpdateClient.silent().then((value) {\<br\> print(\"silent
  code \${value.code}\");\<br\>}).catchError((err) {\<br\> print(\"silent
  err \${err}\");\<br\>});\<br\>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

После вызова метода вы можете следить за статусом скачивания обновления
в слушателе. Если в слушателе вы получили статус
INSTALL_STATUS_DOWNLOADED, то вы можете вызвать метод установки
обновления. Рекомендуем уведомить пользователя о готовности установки
обновления.

Метод может вернуть ошибку. Детальнее со списком ошибок можно
ознакомиться в разделе Возможные ошибки

Установка обновлений

После завершения скачивания apk-файла обновления вы можете запустить
установку обновления. Для запуска установки обновления вызовите метод
complete().

  -----------------------------------------------------------------------
  RustoreUpdateClient.complete().catchError((err) {  \`\`print(
  \"complete err \${err}\" );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обновление происходит через нативный инструмент Android. В случае
успешного обновления приложение закроется.

На этапе обновления могут возникнуть ошибки. Возможные ошибки

Возможные ошибки

Все ошибки в плагине реализованы константами. Описание констант в файле
const.dart

Если вы получили в ответ onFailure, то не рекомендуем самостоятельно
отображать ошибку пользователю. Отображение ошибки может негативно
повлиять на пользовательский опыт.

Список возможных ошибок:

-   UPDATE_ERROR_DOWNLOAD --- Ошибка при скачивании.

-   UPDATE_ERROR_BLOCKED --- Установка заблокирована системой.

-   UPDATE_ERROR_INVALID_APK --- Некорректный APK-обновления.

-   UPDATE_ERROR_CONFLICT --- Конфликт с текущей версией приложения.

-   UPDATE_ERROR_STORAGE --- Недостаточно памяти на устройстве.

-   UPDATE_ERROR_INCOMPATIBLE --- Несовместимо с устройством.

-   UPDATE_ERROR_APP_NOT_OWNED --- Приложение не куплено.

-   UPDATE_ERROR_INTERNAL_ERROR --- Внутренняя ошибка.

-   UPDATE_ERROR_ABORTED --- Пользователь отказался от установки
    обновления.

-   UPDATE_ERROR_APK_NOT_FOUND --- APK для запуска установки не найден.

-   UPDATE_ERROR_EXTERNAL_SOURCE_DENIED --- Запуск обновления запрещён.
    Например, в первом методе вернулся ответ о том, что обновление
    недоступно, но пользователь вызывает второй метод.

История изменений SDK обновлений

Версия SDK 0.0.3

-   Внутреннее обновление

Версия SDK 0.0.2

-   Внутреннее обновление

Версия SDK 0.0.1

-   Реализован функционал обновлений

Unreal

Общая информация

Плагин помогает поддерживать актуальную версию вашего приложения на
устройстве пользователя.

Когда пользователи поддерживают приложение в актуальном состоянии, они
могут опробовать новые функции, а также воспользоваться улучшениями
производительности и исправлениями ошибок.

Вы можете использовать RuStore In-app updates для отображения процесса
обновления приложения, который обеспечивает фоновую загрузку и установку
обновления с контролем состояния. Например, вы можете напомнить
пользователю о новой версии вашего приложения и предложить обновиться.
Пользователь сможет использовать ваше приложение в момент загрузки
обновления.

Пример пользовательского сценария

Условия корректной работы плагина

Для работы RuStore In-app updates необходимо соблюдение следующих
условий:

-   ОС Android версии 7.0 или выше.

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStoreApp на устройстве пользователя должна быть актуальной.

-   Пользователь должен быть авторизован в RuStore.

-   Приложению RuStore должна быть разрешена установка приложений.

Подключение в проект

Для подключения выполните следующие шаги:

-   Скопируйте содержимое папки *"Plugins"* из официального
    репозитория RuStore на gitflic в папку *"Plugins"* внутри своего
    проекта. Перезапустите Unreal Engine, в списке плагинов (Edit →
    Plugins → Project → Mobile) отметьте плагины "RuStoreAppUpdate" и
    "RuStoreCore".

-   Подключите модули модули "RuStoreCore" и "RuStoreAppUpdate"
    в файле *"YourProject.Build.cs"* в списке
    PublicDependencyModuleNames.

-   В настройках проекта (Edit → Project Settings → Android) установите
    параметр Minimum SDK Version на уровень не ниже 24 и параметр Target
    SDK Version не ниже 31.

Создание менеджера обновлений

Перед вызовом методов библиотеки необходимо создать менеджер обновлений.

  -----------------------------------------------------------------------
  URuStoreAppUpdateManager::Instance()-\>Init();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Все операции с менеджером также доступны из Blueprints. Пример
инициализации:

Вызов Init() привязывает объект к корню сцены, и, если дальнейшая работа
с объектом больше не планируется, для освобождения памяти необходимо
выполнить метод Dispose().

Вызов метода Dispose() отвяжет объект от корня и безопасно завершит все
отправленные запросы.

**Деинициализация**

  -----------------------------------------------------------------------
  URuStoreAppUpdateManager::Instance()-\>Dispose();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Blueprint-реализация:

Если вам нужно проверить факт инициализации библиотеки, используйте
свойство URuStoreBillingClient::Instance()-\>getIsInitialized(), его
значение true, если библиотека инициализирована, и false, если Init еще
не был вызван.

**Проверка инициализации**

  -----------------------------------------------------------------------
  URuStoreAppUpdateManager::Instance()-\>getIsInitialized();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Проверка наличия обновлений

Прежде чем запрашивать обновление, проверьте, доступно ли обновление для
вашего приложения. Для проверки наличия обновлений вызовите метод
GetAppUpdateInfo(). При вызове данного метода проверяются следующие
условия:

-   На устройстве пользователя должен быть установлен RuStore.

-   Версия RuStoreApp на устройстве пользователя должна быть актуальной.

-   Пользователь должен быть авторизован в RuStore.

-   Пользователь и приложение не должны быть заблокированы в RuStore.

-   Приложению RuStore должна быть разрешена установка приложений.

В ответ на данный метод вы получите объект AppUpdateInfo, который будет
содержать в себе информацию о необходимости обновления. Запросите
информацию заранее, чтобы запросить у пользователя запуск скачивания
обновления без задержки и в удобный для пользователя момент времени.

**Пример вызова метода GetAppUpdateInfo()**

  -----------------------------------------------------------------------
  long requestId = GetAppUpdateInfo(    \`\`\[\]( long requestId,
  TSharedPtr\<FURuStoreAppUpdateInfo, ESPMode::ThreadSafe\> response)
  {        \`\`// Process response    \`\`},    \`\`\[\]( long requestId,
  TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error)
  {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Blueprint-реализация:

Колбэк Success возвращает структуру AppUpdateInfo в параметре Response:

Объект AppUpdateInfo содержит набор параметров, необходимых для
определения доступности обновления:

-   updateAvailability - доступность обновления:

    -   UPDATE_NOT_AVAILABLE - обновление не нужно.

    -   UPDATE_AVAILABLE - обновление требуется загрузить или обновление
        уже загружено на устройство пользователя.

    -   DEVELOPER_TRIGGERED_UPDATE_IN_PROGRESS - обновление уже
        скачивается или установка уже запущена.

    -   UNKNOWN - статус по умолчанию.

<!-- -->

-   installStatus - статус установки обновления, если пользователь уже
    устанавливает обновление в текущий момент времени:

    -   DOWNLOADED - скачано.

    -   DOWNLOADING - скачивается.

    -   FAILED - ошибка.

    -   INSTALLING - устанавливается.

    -   PENDING - в ожидании.

    -   UNKNOWN - по умолчанию.

Запуск скачивания обновления возможен только в том случае, если поле
updateAvailability содержит значение UPDATE_AVAILABLE.

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error. Детальнее с ними можно ознакомиться в
разделе Возможные ошибки.

После получения AppUpdateInfo можно проверить доступность
принудительного обновления используя метод
CheckIsImmediateUpdateAllowed().

**Пример вызова метода CheckIsImmediateUpdateAllowed()**

  -------------------------------------------------------------------------
  bool available =
  URuStoreAppUpdateManager::Instance()-\>CheckIsImmediateUpdateAllowed();
  -------------------------------------------------------------------------

  -------------------------------------------------------------------------

Blueprint-реализация:

Скачивание обновления

Для запуска скачивания обновления приложения вызовите метод
StartUpdateFlow().

Доступны три сценария обновления:

EURuStoreAppUpdateOptions::DELAYED -- отложенное обновление.

EURuStoreAppUpdateOptions::SILENT -- тихое обновление.

EURuStoreAppUpdateOptions::IMMEDIATE -- принудительное обновление.

Для повторного вызова метода StartUpdateFlow() запросите AppUpdateInfo,
повторно используя метод GetAppUpdateInfo().

**Пример вызова метода StartUpdateFlow()**

  -----------------------------------------------------------------------
  EURuStoreAppUpdateOptions appUpdateOptions =
  EURuStoreAppUpdateOptions::DELAYED;long requestId =
  StartUpdateFlow(    \`\`appUpdateOptions,    \`\`\[\]( long requestId,
  EURuStoreUpdateFlowResult response) {        \`\`// Process
  response    \`\`},    \`\`\[\]( long requestId,
  TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error)
  {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Blueprint-реализация:

Колбэк Failure возвращает структуру FURuStoreError с информацией об
ошибке в параметре Error. Детальнее с ними можно ознакомиться в
разделе Возможные ошибки.

Колбэк Success возвращает значение EURuStoreUpdateFlowResult в параметре
Response:

-   EURuStoreUpdateFlowResult::RESULT_OK (-1) - обновление выполнено,
    код может быть не получен, т.к. приложение в момент обновления
    завершается.

-   EURuStoreUpdateFlowResult::RESULT_CANCELED (0) - флоу прервано
    пользователем или произошла ошибка. Предполагается, что при
    получении этого кода, следует завершить работу приложения.

-   EURuStoreUpdateFlowResult::ACTIVITY_NOT_FOUND (2) - RuStore не
    установлен, либо установлена версия, которая не поддерживает
    принудительное обновление (RuStore versionCode \< 191)

После вызова метода StartUpdateFlow() за статусом скачивания обновления
можно следить в событии OnStateUpdatedInstanceEvent.

**Событие OnStateUpdatedInstanceEvent**

  --------------------------------------------------------------------------------------
  DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FRuStoreOnStateUpdatedInstanceDelegate,
  int64, listenerId, FURuStoreInstallState, state);UPROPERTY(BlueprintAssignable,
  Category =  \"RuStore AppUpdate Manager\" )FRuStoreOnStateUpdatedInstanceDelegate
  OnStateUpdatedInstanceEvent;
  --------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------

Blueprint-реализация:

После получения статуса EURuStoreInstallStatus::DOWNLOADED в поле
installStatus, может быть вызван метод установки обновления.

Установка обновления

После завершения скачивания apk-файла обновления вы можете запустить
установку обновления. Для запуска установки обновления вызовите метод
CompleteUpdate().

**Пример вызова метода CompleteUpdate()**

  -----------------------------------------------------------------------
  requestId = CompleteUpdate(    \`\`\[\]( long requestId,
  TSharedPtr\<FURuStoreError, ESPMode::ThreadSafe\> error)
  {        \`\`// Process error    \`\`});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обновление происходит через нативный инструмент android. В случае
успешного обновления приложение закроется.

На этапе обновления могут возникнуть ошибки. Детальнее с ними можно
ознакомиться в разделе Возможные ошибки.

Возможные ошибки

Если вы получили в ответ Failure, то не рекомендуем самостоятельно
отображать ошибку пользователю. Отображение ошибки может негативно
повлиять на пользовательский опыт.

**Структура ошибки**

  -----------------------------------------------------------------------------------------------------------------
  USTRUCT(BlueprintType)struct RUSTORECORE_API
  FURuStoreRuStoreError{    \`\`GENERATED_USTRUCT_BODY()     \`\`FURuStoreRuStoreError()    \`\`{        \`\`name
  =  \"\" ;        \`\`description =  \"\" ;    \`\`}     \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString
  name;     \`\`UPROPERTY(BlueprintReadOnly)    \`\`FString description;};
  -----------------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------------

Список возможных ошибок:

-   RuStoreNotInstalledException --- на устройстве пользователя не
    установлен RuStore.

-   RuStoreOutdatedException --- RuStore установленный на устройстве
    пользователя, не поддерживает обновление приложений.

-   RuStoreUserUnauthorizedException --- пользователь не авторизован в
    RuStore.

-   RuStoreException --- базовая ошибка RuStore, от которой наследуются
    все остальные ошибки.

-   RuStoreInstallException - Ошибка скачивания и установки. Коды ошибки
    RuStoreInstallException:

    -   ERROR_UNKNOWN - Неизвестная ошибка.

    -   ERROR_DOWNLOAD - Ошибка при скачивании.

    -   ERROR_BLOCKED - Установка заблокирована системой.

    -   ERROR_INVALID_APK - Некорректный APK обновления.

    -   ERROR_CONFLICT - Конфликт с текущей версией приложения.

    -   ERROR_STORAGE - Недостаточно памяти на устройстве.

    -   ERROR_INCOMPATIBLE - Несовместимо с устройством.

    -   ERROR_APP_NOT_OWNED - Приложение не куплено.

    -   ERROR_INTERNAL_ERROR - Внутренняя ошибка.

    -   ERROR_ABORTED - Пользователь отказался от установки обновления.

    -   ERROR_APK_NOT_FOUND - apk для запуска установки не найден.

    -   ERROR_EXTERNAL_SOURCE_DENIED - Запуск обновления запрещён.
        Например, в первом методе вернулся ответ о том, что обновление
        недоступно, но пользователь вызывает второй метод.

    -   ERROR_ACTIVITY_SEND_INTENT - Ошибка отправки intent на открытие
        activity.

    -   ERROR_ACTIVITY_UNKNOWN - Неизвестная ошибка открытия activity.

История изменений

Версия плагина 1.0

-   Добавлены асинхронные варианты blueprint-методов вместо подписок на
    события.

-   Добавлены коды ошибок в перечисление EURuStoreInstallErrorCode.

-   Добавлены коды состояний в перечисление EURuStoreUpdateFlowResult.

-   RuStoreAppUpdate_UPL_Android.xml больше не добавляет атрибут
    android:exported к GameActivity и SplashActivity.

-   Багфиксы.

Версия плагина 0.2

-   Внутреннее обновление плагина.

Список зависимостей для обновления приложенияtoc: true

RuStore Geo

RuStore Geo --- это картографические продукты и высоконагруженные
сервисы на базе открытых данных OpenStreetMap.

Условия использования функционала RuStore Geo на RuStore

Следующие Условия использования функционала RuStore Geo на RuStore
(далее « **Условия**») регламентируют общие условия использования Вами
(далее **«Вы», «Разработчик»**) услуг и инструментов функционала RuStore
Geo, включая программное обеспечение для мобильных или других платформ,
которое может быть предоставлено ООО «ВК» (далее « **Компания**»),
инструментами и любыми другими приложениями, услугами, программным
обеспечением, компонентами, функциями RuStore Geo, предоставляемыми
Компанией, (совместно именуемые **«** **RuStore** **Geo** **»**).

Подключая и используя функционал RuStore Geo, Вы прямо соглашаетесь с
настоящими Условиями.

1\. Компания осуществляет оперирование RuStore Geo на основании открытой
лицензии базы данных «OpenStreetMap». Условия использования лицензии
OpenStreetMap доступны по адресу
http://www.openstreetmap.org/copyright/en.

2\. Компания не принимает решений о принадлежности территории (названия
объектов, местоположение границы, иное описание) на картах в базе данных
OpenStreetMap, и, в случае возникновения у Пользователя каких-либо
вопросов относительно принадлежности той или иной территории, информация
об этом представлена по следующей ссылке:
https://wiki.osmfoundation.org/w/images/d/d8/DisputedTerritoriesInformation.pdf.

3\. Настоящим Компания предоставляет Разработчику доступ к использованию
программного обеспечения (включая любые мобильные приложения),
предоставленного Вам от Компании (далее « **Программное обеспечение**»),
на основании настоящих Условий.

4\. Компания гарантирует, услуги по предоставлению доступа к RuStore Geo
оказываются 24 часа в сутки (24/7) в неделю и уровень доступности
составит не менее на 99,9%.

5\. Компания оставляет за собой право прерывать работу RuStore Geo для
проведения необходимых профилактических работ, в том числе, в рабочие
дни. Такие случаи не будут считаться перерывами в оказании услуг и/или
доступности RuStore Geo.

6\. Компания не несёт ответственность за недоступность RuStore Geo, если
она возникла: 1) в результате нарушения Разработчиком настоящих Условий;
2) в результате иных действий Разработчика; 3) в результате
обстоятельств непреодолимой силы (форс-мажорные обстоятельства); 4) по
причине приостановки работы RuStore Geo по требованию государственных
или муниципальных органов в случаях и порядке, определенном действующим
законодательством РФ.

7\. Техническая поддержка RuStore Geo осуществляется путем отправки
Разработчиком сообщения/запроса в службу поддержки RuStore.

8\. Компания и ее лицензиары владеют всей интеллектуальной
собственностью в отношении RuStore Geo и проприетарными базами данных
Компании, включая, но не ограничиваясь, компоненты и алгоритмы RuStore
Geo, а также доступ к серверному комплексу RuStore Geo, кроме
интеллектуальной собственности, предоставленной Компании по лицензии
OpenStreetMap.

9\. Разработчик не имеет права изменять, публиковать, передавать,
демонстрировать, участвовать в передаче или продаже, создавать
производные работы или каким-либо образом использовать контент RuStore
Geo или любую его часть. Если иное прямо не разрешено законом об
авторском праве, Разработчик не может копировать, распространять,
публиковать, демонстрировать или использовать в коммерческих целях любые
материалы, принадлежащие Компании, без явного разрешения Компании.

10\. Настоящие Условия не предоставляются Разработчику никаких прав, ни
прямо, ни косвенно, на использование каких-либо товарных знаков, знаков
обслуживания, названий или логотипов Компании, за исключением случаев,
когда Разработчик размещает и использует RuStore Geo или часть его
функционала внутри своего Продукта, и тогда указание логотипа
Компании/RuStore Geo, информации о правообладателе RuStore Geo и ссылки
https://www.rustore.ru является обязательным.

11\. Ограничиваясь целью размещения контента Разработчика, чтобы
Компания могла предоставлять Разработчику возможность использования
RuStore Geo, Разработчик настоящим предоставляет Компании
неисключительное, всемирное, бесплатное, полностью оплаченное,
передаваемое и сублицензируемое право и лицензию на использование,
копирование, кэширование, публикацию, отображение, распространение,
изменение, создание производных работ и хранение контента Разработчика в
рамках RuStore Geo. Это право и лицензия позволяют Компании размещать и
копировать контент Разработчика исключительно внутри функционала RuStore
Geo. Пользователь настоящим гарантирует, подтверждает и соглашается с
тем, что имеет право предоставлять Компании эти права.

12\. За исключением собственного контента Разработчика, весь контент,
отображаемый на RuStore Geo или доступный через RuStore Geo, включая
текст, изображения, карты, программное обеспечение или исходный код,
является собственностью Компании и/или третьих лиц и защищен нормами
действующего законодательства РФ и международными законами об
интеллектуальной собственности. Логотипы и названия продуктов,
появляющиеся на RuStore Geo или в связи с ним, являются собственностью
Компании или наших лицензиаров. Разработчик не может удалять какие-либо
уведомления о правах собственности или идентификационные этикетки
продуктов из RuStore Geo.

13\. За исключением случаев, когда Компания предоставляет информацию,
доступ к которой Разработчик получает, используя функционал RuStore Geo,
она предоставляется другими разработчиками, вводится или публикуется ими
и не контролируется, не проверяется и не подтверждается Компанией в
любом случае. Компания имеет право, но не обязанность, проверять и
отслеживать контент, размещаемый посредством функционала RuStore Geo,
определять его соответствие настоящим Условиям и любым другим правилам
Сервиса RuStore, которые время от времени могут устанавливаться
Компанией. Что касается пользовательского контента/информации, Компания
не контролирует такой контент/информацию, но Компания может использовать
определенные автоматические компьютерные системы и фильтры для
сканирования такого контента/сообщений с целью ограничения отправки
спама или другого нежелательного коммерческого контента через функционал
RuStore Geo. За содержание такого контента/сообщений полную
ответственность несут лица, его разместившие или отправившие.

14\. Функционал RuStore Geo предоставляется Компанией и функционирует
«как есть» и без любых явных или подразумеваемых гарантий, включая, но
не ограничиваясь: подразумеваемой гарантии коммерческой ценности и
пригодности для определенной цели.

15\. Компания не гарантирует, что RuStore Geo и его функциональные
возможности будут бесперебойными или безошибочными, или что дефекты в
работе RuStore Geo будут исправлены.

16\. Компания не гарантирует и не даёт никаких заявлений относительно
использования или результатов использования услуг или любых сайтов
третьих сторон, называемых на RuStore Geo, в отношении их правильности,
точности, надежности или какого-либо другого свойства.

17\. Если функционал RuStore Geo используется в Продукте Разработчика
для проезда или вождения любых транспортных средств, такое использование
RuStore Geo осуществляется исключительно на собственный риск
пользователя. Информация, предоставляемая RuStore Geo, не предназначена
для замены информации, представленной на дороге (например, светофорами,
дорожными знаками или сотрудниками ГАИ/полиции), отличается от
информации, предоставленной на RuStore Geo, пользователь не должен
руководствоваться данными RuStore Geo. Пользователь должен соблюдать все
законы и правила дорожного движения при использовании RuStore Geo.

18\. Разработчик самостоятельно несет ответственность перед третьими
лицами за свои действия, связанные с использованием функционала RuStore
Geo, в том числе, если такие действия приведут к нарушению прав и
законных интересов третьих лиц, а также за соблюдение законодательства
при использовании RuStore Geo.

19\. При использовании функционала RuStore Geo Разработчик не вправе:

а) Загружать, посылать, передавать или любым другим способом размещать
и/или распространять контент, который является незаконным, вредоносным,
клеветническим, оскорбляет нравственность, демонстрирует (или является
пропагандой) насилия и жестокости, нарушает права интеллектуальной
собственности, пропагандирует ненависть и/или дискриминацию людей по
расовому, этническому, половому, религиозному, социальному признакам,
содержит оскорбления в адрес каких-либо лиц или организаций, содержит
элементы (или является пропагандой) порнографии, детской эротики,
представляет собой рекламу (или является пропагандой) услуг сексуального
характера (в том числе под видом иных услуг), разъясняет порядок
изготовления, применения или иного использования наркотических веществ
или их аналогов, взрывчатых веществ или иного оружия;

б) Нарушать права третьих лиц, в том числе несовершеннолетних лиц и/или
причинять им вред в любой форме;

в) Выдавать себя за другого человека или представителя организации и/или
сообщества без достаточных на то прав, в том числе за сотрудников
Компании, за модераторов форумов, за владельца сайта, а также применять
любые другие формы и способы незаконного представительства других лиц в
сети, а также вводить пользователей или Компанию в заблуждение
относительно свойств и характеристик каких-либо субъектов или объектов;

г) Загружать, посылать, передавать или любым другим способом размещать
и/или распространять контент, при отсутствии прав на такие действия
согласно законодательству или каким-либо договорным отношениям;

д) Загружать, посылать, передавать или любым другим способом размещать
и/или распространять не разрешенную специальным образом рекламную
информацию, спам (в том числе и поисковый), списки чужих адресов
электронной почты, схемы «пирамид», многоуровневого (сетевого)
маркетинга (MLM), системы интернет-заработка и e-mail-бизнесов, «письма
счастья», а также использовать сервисы Компании для участия в этих
мероприятиях, или использовать сервисы Компании, исключительно для
перенаправления пользователей на страницы других доменов;

е) Загружать, посылать, передавать или любым другим способом размещать
и/или распространять какие-либо материалы, содержащие вирусы или другие
компьютерные коды, файлы или программы, предназначенные для нарушения,
уничтожения либо ограничения функциональности любого компьютерного или
телекоммуникационного оборудования или программ, для осуществления
несанкционированного доступа, а также серийные номера к коммерческим
программным продуктам и программы для их генерации, логины, пароли и
прочие средства для получения несанкционированного доступа к платным
ресурсам в Интернете, а также размещения ссылок на вышеуказанную
информацию;

ж) Несанкционированно собирать и хранить персональные данные других лиц;

з) Нарушать нормальную работу веб-сайтов, сервиса RuStore и функционала
RuStore Geo;

и) Содействовать действиям, направленным на нарушение ограничений и
запретов, налагаемых настоящими Условиями;

к) Другим образом нарушать нормы законодательства РФ, в том числе нормы
международного права.

20\. Разработчик не вправе временно хранить (кэшировать) любые
результаты работы RuStore Geo и/или полученную из них информацию, а
также изменять содержание результатов запросов к RuStore Geo,
предоставленных ему в ответ на поступивший запрос.

21\. Разработчик обязан отображать всю атрибуцию, которую Компания
предоставляет Разработчику для работы с функционалом RuStore Geo
(включая брендинг, логотипы, а также уведомления об авторских правах и
торговых марках).

22\. Компания может время от времени изменять настоящие Условия с
уведомлением Разработчика, в том числе путём размещения новой редакции
изменяемых Условий по адресу:
https://help.rustore.ru/rustore/for_developers/developer-documentation/RuStore_Geo,
и Разработчик несет ответственность за самостоятельную проверку Условий
на предмет любых изменений. Изменения в Условия, внесенные Компанией,
вступают в силу в день, следующий за днем опубликования на указанном
сайте новой редакции Условий. Продолжение использования функционала
RuStore Geo после внесения изменений в Условия означает принятие и
согласие Разработчика с такими изменениями. Если Разработчик не согласен
с изменениями в Условиях, он должен прекратить использование (отключить)
функционала RuStore Geo.

23\. По всем вопросам, связанным с настоящими Условиями, Разработчик
вправе использовать адрес электронной почты support@rustore.ru.

*Редакция от* *20* *декабря 2022 г.*

Общая информация

Для использования продуктов RuStore Geo вам необходимо использовать ключ
доступа.

Поддерживаемые языки

Мы стремимся к созданию полнофункциональных карт всего мира с
максимальной поддержкой языков, интересующих наших клиентов. На текущий
момент доступность того или иного языка определяется географическим
регионом. Основными поддерживаемыми языками являются русский, английский
и локальный в регионе.

Ограничение скорости запросов

По умолчанию, все ключи доступа имеют одинаковое ограничение числа
запросов в секунду. При необходимости вы можете как уменьшить скорость
запросов по отдельному ключу, так и увеличить. Для увеличения скорости
запросов вам необходимо обратиться к вашему менеджеру со стороны RuStore
Geo.

Стандартное ограничение скорости обращения к сервисам: 10 RPS (для
отображения карты 10 SPS, для сервисов расчёта матрицы расстояний и
решения задачи коммивояжёра - 10 EPS).

Доступ к сервисам

Для использования продуктов RuStore Geo вы должны использовать
действительный ключ доступа, который однозначно идентифицирует клиента.
Ключ доступа используется в ваших веб и мобильных продуктах при
обращении к геосервисам, а также используется для отслеживания запросов
к продуктам RuStore Geo, которые связаны с вашим проектом.

Все продукты RuStore Geo доступны по
адресу https://geo.rustore.ru/ --- для доступа к необходимому сервису
необходимо указать в адресе его версию, имя, ваш ключ доступа и тело
запроса.

Запрос к сервисам осуществляется в формате:

https://geo.rustore.ru /api/\[endpoint\]?\[api_key\]&\[query\]

где:

-   endpoint --- точка вызова сервиса;

-   query --- тело запроса с параметрами запроса;

-   api_key --- ваш ключ доступа.

Для получения ключа доступа:

-   Откройте систему RuStore Консоль.

-   Перейдите на вкладку «Приложения».

-   Выберите приложение.

-   Найдите раздел «Карты и геосервисы».

-   Нажмите «Создать токен».

Для одного приложения можно запросить только один ключ для работы с
картами.

Отобразится созданный ключ. Вы можете скопировать его и вставить в свое
приложение. Нажмите .

Продление ключа происходит автоматически при выпуске обновления
приложения. Срок действия ключа --- 90 календарных дней.

Срок действия и ограничения, применяемые для ключа,
предусмотрены соглашением о распространении программных продуктов.

Если у вас возникли проблемы с получением ключа, напишите нам.  Мы
постараемся решить проблему.

Сервисы поиска и геокодирования

Поиск мест интереса

**Поиск мест интереса** --- это сервис, который позволяет осуществлять
поиск мест интереса и дополнительной информации о них.

**/places** --- точка вызова сервиса поиска мест интереса и получения
дополнительной информации о них.

Запрос

**Обязательные параметры запроса**

  -------------------------------------------------------------------------------------------------
  Имя поля                                   Формат            Описание           Пример
  ------------------------------------------ ----------------- ------------------ -----------------
  \<br\>api_key\<br\>                        hex-string        Доступ к сервисам

  ---

  api_key=fa749bace6d8a3b1\....

  q                                          string            Тело поискового
                                                               запроса. В запросе
                                                               можно использовать
                                                               один из варинтов
                                                               для поиска:-
                                                               **координаты** в
                                                               формате lat,lon,
                                                               где: - **lat** ---
                                                               широта искомой
                                                               точки в градусах
                                                               (используется 6
                                                               знаков после
                                                               запятой); -
                                                               **lon** ---
                                                               долгота искомой
                                                               точки в градусах
                                                               (используется 6
                                                               знаков после
                                                               запятой);-
                                                               **текстовая
                                                               строка**(может
                                                               содержать имя
                                                               искомого места
                                                               интереса или
                                                               адрес).

  ---

  q=rustore.ruq=метроq=55.797041,37.537830
  -------------------------------------------------------------------------------------------------

**Дополнительные параметры запроса**

  -------------------------------------------------------------------------------------------------------------------
  Имя поля                       Формат                                 Описание                    Пример
  ------------------------------ -------------------------------------- --------------------------- -----------------
  fields                         fieldname1,fieldname2,....fieldnameN   Выбор полей, отображаемых в
                                                                        ответе.Возможные значения:-
                                                                        **name** (по умолчанию) ---
                                                                        название места интереса;-
                                                                        **place_details**
                                                                        --- детальная информация о
                                                                        месте интереса (на текущий
                                                                        момент не поддерживается);-
                                                                        **address_details** (по
                                                                        умолчанию) --- детальная
                                                                        информация о найденном
                                                                        адресе с почтовым индексом
                                                                        без координат;- **address**
                                                                        --- адрес найденного места
                                                                        интереса одной строкой;-
                                                                        **pin** (по умолчанию) -
                                                                        координаты найденного
                                                                        объекта (долгота и
                                                                        широта);- **bbox** ---
                                                                        область местонахождения
                                                                        объекта;- **geometry** ---
                                                                        границы объекта;- **type**
                                                                        ---  тип объекта.

  ---

  fields=pin,bbox,name

  types                          string                                 На текущий момент не
                                                                        поддерживается.Тип
                                                                        объектов, по которым
                                                                        осуществляется поиск.По
                                                                        умолчанию поиск
                                                                        осуществляется по всем
                                                                        типам мест
                                                                        интересов.Справочник
                                                                        постоянно актуализируется.
                                                                        Для получения полного и
                                                                        актуального справочника
                                                                        типов можно воспользоваться
                                                                        сервисом /v3/places/types

  ---

  types=hotel,metro

  lang                           2-х символьный код языка               Язык ответа на одном
                                                                        из доступных языков. По
                                                                        умолчанию на языке региона
                                                                        в котором найден объект.

  ---

  lang=en

  location                       string                                 Координата, относительно
                                                                        которой будет
                                                                        осуществляться
                                                                        поиск. Координаты в
                                                                        формате lat,lon, где:-
                                                                        **lat** --- широта искомой
                                                                        точки в градусах
                                                                        (используется 6 знаков
                                                                        после запятой);- **lon**
                                                                        --- долгота искомой точки в
                                                                        градусах (используется 6
                                                                        знаков после
                                                                        запятой).Результаты поиска
                                                                        будут отсортированы по
                                                                        расстоянию от указанной
                                                                        координаты

  ---

  location=55.796743,37.537354

  radius                         integer                                Радиус поиска в метрах
                                                                        относительно параметра
                                                                        location.Параметр location
                                                                        при использовании параметра
                                                                        radius является
                                                                        обязательным.В случае
                                                                        использования малого
                                                                        радиуса объект может быть
                                                                        не найден.

  ---

  radius=500

  limit                          integer                                Ограничение числа объектов
                                                                        в ответе. Поддерживаются
                                                                        значения в интервале от 1
                                                                        до 100.По умолчанию: 5В
                                                                        случае использования
                                                                        больших значений,
                                                                        длительность получения
                                                                        ответа может увеличиться

  ---

  limit=10

  isocode                        2char                                  Двухбуквенный код страны
                                                                        согласно ISO 3166-1 alpha-2

  ---

  isocode=RU
  -------------------------------------------------------------------------------------------------------------------

Ответ

Ответ предоставляется только в JSON формате и содержит информацию
найденную по запросу.

**JSON формат**

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                                                                                            Формат            Описание           Пример
  --------------------------------------------------------------------------------------------------------------------------------------------------- ----------------- ------------------ -----------------
  request                                                                                                                                             string            Запрос

  ---

  \"request\":
  \"/v3/places?location=55.7967432,37.5373542&api_key=internal\_&q=prime&fields=name,place_details,address,address_details,pin,bbox,geometry,type\"

  results                                                                                                                                             list              Найденный
                                                                                                                                                                        результат

  ---

  \"results\": \[    \`\`{      \`\`\"address\": \"Россия, Москва, Северный административный округ, Москва, район Аэропорт, Ленинградский проспект,
  72 к4\",      \`\`\"address_details\": {        \`\`\"building\": \"72 к4\",        \`\`\"country\": \"Россия\",        \`\`\"isocode\":
  \"RU\",        \`\`\"locality\": \"Москва\",        \`\`\"region\": \"Москва\",        \`\`\"street\": \"Ленинградский
  проспект\",        \`\`\"subregion\": \"Северный административный округ\",        \`\`\"suburb\": \"район Аэропорт\"      \`\`},      \`\`\"bbox\":
  null,      \`\`\"geometry\": {        \`\`\"coordinates\": \[          \`\`37.519963,          \`\`55.805396        \`\`\],        \`\`\"type\":
  \"Point\"      \`\`},      \`\`\"name\": \"Прайм\",      \`\`\"pin\": \[        \`\`37.519963,        \`\`55.805396      \`\`\],      \`\`\"type\":
  \"food/cafe\"    \`\`}  \`\`\]}

  address                                                                                                                                             string            Полный адрес
                                                                                                                                                                        найденного объекта

  ---

  \"address\": \"Россия, Москва, Северный административный округ, Москва, Хорошёвский, Ленинградский проспект, 39 с14\"

  address_details                                                                                                                                     list              Детальная
                                                                                                                                                                        информация об
                                                                                                                                                                        адресе найденного
                                                                                                                                                                        объекта

  ---

  \"address_details\": {        \`\`\"building\": \"39 с80\",        \`\`\"country\": \"Россия\",        \`\`\"isocode\":
  \"RU\",        \`\`\"locality\": \"Москва\",        \`\`\"postal_code\": \"125167\",        \`\`\"region\": \"Москва\",        \`\`\"street\":
  \"Ленинградский проспект\",        \`\`\"subregion\": \"Северный административный округ\",        \`\`\"suburb\": \"Хорошёвский\"}

  pin                                                                                                                                                 list              Координаты
                                                                                                                                                                        найденного объекта
                                                                                                                                                                        (долгота и широта)

  ---

  \"pin\": \[        \`\`37.538851,        \`\`55.796731\]

  bbox                                                                                                                                                list              Границы
                                                                                                                                                                        местонахождения
                                                                                                                                                                        найденного объекта
                                                                                                                                                                        для
                                                                                                                                                                        позиционирования
                                                                                                                                                                        на карте

  ---

  \"bbox\": \[        \`\`37.538253,        \`\`55.796405,        \`\`37.539368,        \`\`55.79694\]

  geometry                                                                                                                                            list              Геометрия
                                                                                                                                                                        найденного объекта
                                                                                                                                                                        объекта

  ---

  \"geometry\": {        \`\`\"coordinates\": \[          \`\`44.795525,          \`\`41.775552        \`\`\],        \`\`\"type\": \"Point\"}

  name                                                                                                                                                string            Название
                                                                                                                                                                        найденного объекта

  ---

  \"name\": \"метро Аэропорт\"

  type                                                                                                                                                string            Тип найденного
                                                                                                                                                                        объекта.

  ---

  \"type\": \"public_transport/station_train\"
  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Описание полей address_details**

  -------------------------------------------------------------------------
  Имя поля           Формат            Описание           Пример
  ------------------ ----------------- ------------------ -----------------
  country            string            Страна

  ---

  \"country\":
  \"Россия\"

  isocode            2char             Двухбуквенный код
                                       страны
                                       согласно ISO
                                       3166-1 alpha-2

  ---

  \"isocode\":
  \"RU\"

  region             string            Область

  ---

  \"region\":
  \"Москва\"

  subregion          string            Район

  ---

  \"subregion\":
  \"Северный
  административный
  округ\"

  locality           string            Населённый пункт

  ---

  \"locality\":
  \"Москва\"

  sublocality        string            Микрорайон или
                                       название жилого
                                       комплекса

  ---

  \"sublocality\":
  \"Аэропорт\"

  street             string            Улица

  ---

  \"street\":
  \"Проспект
  Ленинградский\"

  building           string            Номер дома, части
                                       дома или строения

  ---

  \"building\": \"39
  с80\"

  suburb             string            Район/микрорайон
                                       населённого пункта

  ---

  \"suburb\":
  \"Хорошёвский\"

  postal_code        string            Почтовый код

  ---

  \"postal_code\":
  \"125167\"
  -------------------------------------------------------------------------

**Описание полей geometry**

  ----------------------------------------------------------------------------------
  Имя поля                 Формат            Описание              Пример
  ------------------------ ----------------- --------------------- -----------------
  type                     string            Тип геометрии:-
                                             **Point** --- точка;-
                                             **MultiPoint** ---
                                             несколько точек;-
                                             **Linestring** ---
                                             линия;-
                                             **MultiLineString**
                                             --- несколько линий;-
                                             **Polygon** ---
                                             полигон;-
                                             **MultiPoligon** ---
                                             несколько полигонов.

  ---

  \"type\": \"Polygon\"

  coordinates              list              Массив точек (долгота
                                             и широта),
                                             описывающий геометрию
                                             объекта

  ---

  \"coordinates\": 
  \[    \`\`\[100.0,
  0.0\], \[101.0,
  0.0\],    \`\`\[101.0,
  1.0\], \[100.0,
  1.0\],    \`\`\[100.0,
  0.0\]\]
  ----------------------------------------------------------------------------------

Пример

**Запрос**

  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  https://geo.rustore.ru/api/places?api_key=\<YOUR_API_KEY\>&q=prime&fields=name,place_details,address,address_details,pin,bbox,geometry,type&location=55.7967432,37.5373542&limit=1
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Сервис геокодирования

**Геокодер** --- это сервис, который обеспечивает прямое и обратное
геокодирование.

**Прямое геокодирование** --- это процесс преобразования адресов в
географические координаты (широта и долгота), которые можно использовать
для размещения маркеров на карте или для размещения карты на экране.

**Обратное геокодирование** --- это процесс преобразования
географических координат (широта и долгота) в адрес или часть адреса
(страна, город, регион и т.д.).

Все сервисы геокодирования работают по территории всего мира на всех
доступных языках.

**/search** --- единая точка вызова сервисов прямого и обратного
геокодирования адресных объектов.

Запрос

**Обязательные параметры запроса**

  --------------------------------------------------------------------------------------------
  Имя поля                        Формат            Описание                 Пример
  ------------------------------- ----------------- ------------------------ -----------------
  api_key                         hex-string        Доступ к сервисам

  ---

  api_key=fa749bace6d8a3b1\....

  q                               string            Тело поискового
                                                    запроса.Для обратного
                                                    геокодирования ---
                                                    координаты в
                                                    формате lat,lon, где:-
                                                    **lat** --- широта
                                                    искомой точки в
                                                    градусах (используется 6
                                                    знаков после запятой);-
                                                    **lon** ---
                                                    долгота искомой точки в
                                                    градусах (используется 6
                                                    знаков после
                                                    запятой).Для прямого
                                                    геокодирования ---
                                                    текстовая строка.

  ---

  q=Москва Ленинградский 39с80
  --------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------
  q=Мюнхен
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  q=Austria
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  q=55.7967432,37.5373542
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Общие дополнительные параметры запроса

  --------------------------------------------------------------------------------------------------------------------
  Имя поля                          Формат                                 Описание                  Пример
  --------------------------------- -------------------------------------- ------------------------- -----------------
  lang                              2-х символьный код языка               Язык ответа на одном
                                                                           из доступных языков. По
                                                                           умолчанию на языке
                                                                           региона, в котором найден
                                                                           объект.

  ---

  lang=en

  limit                             unsigned integer                       Ограничение числа
                                                                           объектов в ответе.
                                                                           поддерживаются значения в
                                                                           интервале от 1 до 100.По
                                                                           умолчанию: 5

  ---

  limit=10

  fields                            fieldname1,fieldname2,....fieldnameN   Выбор полей, отображаемых
                                                                           в ответе.Возможные
                                                                           значения:-
                                                                           **address_details** (по
                                                                           умолчанию) --- детальная
                                                                           информация о найденном
                                                                           адресе с почтовым
                                                                           индексом без координат;-
                                                                           **address ---** полный
                                                                           найденный адрес одной
                                                                           строкой;- **pin** (по
                                                                           умолчанию) --- координаты
                                                                           найденного объекта
                                                                           (долгота и широта);-
                                                                           **bbox** --- область
                                                                           местонахождения объекта;-
                                                                           **geometry** --- границы
                                                                           объекта;- **type** ---
                                                                            тип объекта.

  ---

  fields=geometry,address_details

  admin_level                       admin level                            Ограничение ответа по
                                                                           административному
                                                                           уровню. Возможные
                                                                           значения:- **1** ---
                                                                           страна;- **2** ---
                                                                           регион;- **3** ---
                                                                           населённый пункт;- **4**
                                                                           --- улица;- **5** ---
                                                                           дом.По умолчанию
                                                                           ограничение не задано ---
                                                                           поиск осуществляется по
                                                                           всем административным
                                                                           уровням.

  ---

  admim_level=2
  --------------------------------------------------------------------------------------------------------------------

**Дополнительные параметры запроса для прямого геокодирования**

  -----------------------------------------------------------------------------------------
  Имя поля                         Формат            Описание             Пример
  -------------------------------- ----------------- -------------------- -----------------
  location                         string            Координата,
                                                     относительно которой
                                                     будет осуществляться
                                                     поиск и ранжирование
                                                     результатов
                                                     ответа. Координаты в
                                                     формате lat, lon,
                                                     где:- **lat** ---
                                                     широта искомой точки
                                                     в градусах.
                                                     Используется 6
                                                     знаков после
                                                     запятой;- **lon**
                                                     --- долгота искомой
                                                     точки в градусах.
                                                     Используется 6
                                                     знаков после
                                                     запятой.Результаты
                                                     поиска будут
                                                     отсортированы по
                                                     расстоянию от
                                                     указанной координаты

  ---

  location=55.7967432,37.5373542

  isocode                          2char             Двухбуквенный код
                                                     страны согласно ISO
                                                     3166-1 alpha-2

  ---

  isocode=RU
  -----------------------------------------------------------------------------------------

**Дополнительные параметры запроса для обратного геокодирования**

  ------------------------------------------------------------------------
  Имя поля           Формат            Описание          Пример
  ------------------ ----------------- ----------------- -----------------
  radius             integer           Радиус поиска в
                                       метрах
                                       относительно
                                       координат,
                                       указанных в
                                       запросе в
                                       параметре qВ
                                       случае
                                       использования
                                       малого радиуса
                                       объект может быть
                                       не найден.

  ---

  radius=300
  ------------------------------------------------------------------------

Ответ

Ответ предоставляется только в JSON формате. Используется JSON формат,
разработанный специально для сервиса Геокодер v.3 и содержит информацию
найденную по запросу.

**JSON формат**


  Имя поляФормат            Описание           Пример

  requeststring            Запрос

  ---

  \"request\": \"/v3/search?api_key=demo_demo_main&limit=1&q=55.796668,37.538871&fields=address_details,address,pin,bbox,geometry,type\",

  resultslist              Найденный
результат

  ---

  \"results\": \[    \`\`{      \`\`\"address\": \"Россия, Москва, Северный административный округ, Москва, Хорошёвский, Ленинградский проспект, 39 с14\",      \`\`\"address_details\": {        \`\`\"building\": \"39 с14\",        \`\`\"country\": \"Россия\",        \`\`\"postal_code\": \"125167\",        \`\`\"isocode\": \"RU\",        \`\`\"locality\": \"Москва\",        \`\`\"region\": \"Москва\",        \`\`\"street\": \"Ленинградский проспект\",        \`\`\"subregion\": \"Северный административный округ\",        \`\`\"suburb\": \"Хорошёвский\"      \`\`},      \`\`\"bbox\": \[        \`\`37.538253,        \`\`55.796405,        \`\`37.539368,        \`\`55.79694      \`\`\],      \`\`\"geometry\": {        \`\`\"coordinates\":
  \[          \`\`\[            \`\`\[              \`\`37.538253,              \`\`55.796822            \`\`\],            \`\`\[              \`\`37.539204,              \`\`55.796405            \`\`\],            \`\`\[              \`\`37.539368,              \`\`55.796523            \`\`\],            \`\`\[              \`\`37.539105,              \`\`55.796639            \`\`\],            \`\`\[              \`\`37.539082,              \`\`55.796674            \`\`\],            \`\`\[              \`\`37.539052,              \`\`55.796705            \`\`\],            \`\`\[              \`\`37.53901,              \`\`55.796737            \`\`\],            \`\`\[              \`\`37.538958,              \`\`55.796763            \`\`\],            \`\`\[              \`\`37.538899,              \`\`55.796784            \`\`\],            \`\`\[              \`\`37.538835,              \`\`55.796801            \`\`\],            \`\`\[              \`\`37.538772,              \`\`55.796808            \`\`\],            \`\`\[              \`\`37.538714,              \`\`55.79681            \`\`\],            \`\`\[              \`\`37.538416,              \`\`55.79694            \`\`\],            \`\`\[              \`\`37.538253,              \`\`55.796822            \`\`\]          \`\`\]        \`\`\],        \`\`\"type\":
  \"Polygon\"      \`\`},      \`\`\"pin\": \[        \`\`37.538851,        \`\`55.796731      \`\`\],      \`\`\"type\": \"building\"    \`\`}  \`\`\]

  addressstring            Полный найденный
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 адрес

  ---

  \"address\": \"Россия, Москва, Северный административный округ, Москва, Хорошёвский, Ленинградский проспект, 39 с14\",

  address_detailslist              Детальная
информация о
найденном адресе

  ---

  \"address_details\": {        \`\`\"building\": \"39 с80\",        \`\`\"country\": \"Россия\",        \`\`\"isocode\": \"RU\",        \`\`\"locality\": \"Москва\",        \`\`\"postal_code\": \"125167\",        \`\`\"region\": \"Москва\",        \`\`\"street\": \"Ленинградский проспект\",        \`\`\"subregion\": \"Северный административный округ\",        \`\`\"suburb\": \"Хорошёвский\"}

  pinlist              Координаты
найденного объекта
долгота и широта)

  ---

  \"pin\": \[        \`\`37.538851,        \`\`55.796731\]

  bboxlist              Границы
местонахождения
найденного объекта
для
позиционирования
на карте

  ---

  \"bbox\": \[        \`\`37.538253,        \`\`55.796405,        \`\`37.539368,        \`\`55.79694\]

  geometrylist              Геометрия
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 найденного объекта

  ---

  \"geometry\": {        \`\`\"coordinates\":
  \[          \`\`\[            \`\`\[              \`\`37.538253,              \`\`55.796822            \`\`\],            \`\`\[              \`\`37.539204,              \`\`55.796405            \`\`\],            \`\`\[              \`\`37.539368,              \`\`55.796523            \`\`\],            \`\`\[              \`\`37.539105,              \`\`55.796639            \`\`\],            \`\`\[              \`\`37.539082,              \`\`55.796674            \`\`\],            \`\`\[              \`\`37.539052,              \`\`55.796705            \`\`\],            \`\`\[              \`\`37.53901,              \`\`55.796737            \`\`\],            \`\`\[              \`\`37.538958,              \`\`55.796763            \`\`\],            \`\`\[              \`\`37.538899,              \`\`55.796784            \`\`\],            \`\`\[              \`\`37.538835,              \`\`55.796801            \`\`\],            \`\`\[              \`\`37.538772,              \`\`55.796808            \`\`\],            \`\`\[              \`\`37.538714,              \`\`55.79681            \`\`\],            \`\`\[              \`\`37.538416,              \`\`55.79694            \`\`\],            \`\`\[              \`\`37.538253,              \`\`55.796822            \`\`\]          \`\`\]        \`\`\],        \`\`\"type\":
  \"Polygon\"     \`\`}

  typestring            Тип объекта

  ---

  \"type\": \"building\"


**Описание полей address_details**

  -------------------------------------------------------------------------
  Имя поля           Формат            Описание           Пример
  ------------------ ----------------- ------------------ -----------------
  country            string            Страна

  ---

  \"country\":
  \"Россия\"

  isocode            2char             Двухбуквенный код
                                       страны
                                       согласно ISO
                                       3166-1 alpha-2

  ---

  \"isocode\":
  \"RU\"

  region             string            Область

  ---

  \"region\":
  \"Москва\"

  subregion          string            Район

  ---

  \"subregion\":
  \"Северный
  административный
  округй\"

  locality           string            Населённый пункт

  ---

  \"locality\":
  \"Москва\"

  sublocality        string            Микрорайон или
                                       название жилого
                                       комплекса

  ---

  \"sublocality\":
  \"Аэропорт\"

  street             string            Улица

  ---

  \"street\":
  \"Проспект
  Ленинградский\"

  building           string            Номер дома, части
                                       дома или строения

  ---

  \"building\": \"39
  с80\"

  suburb             string            Район/микрорайон
                                       населённого пункта

  ---

  \"suburb\":
  \"Хорошёвский\"

  postal_code        string            Почтовый код

  ---

  \"postal_code\":
  \"125167\"
  -------------------------------------------------------------------------

**Описание полей geometry**

  ----------------------------------------------------------------------------------
  Имя поля                 Формат            Описание              Пример
  ------------------------ ----------------- --------------------- -----------------
  type                     string            Тип геометрии:-
                                             **Point** --- точка;-
                                             **MultiPoint** ---
                                             несколько точек;-
                                             **LineString** ---
                                             линия;-
                                             **MultiLineString**
                                             --- несколько линий;-
                                             **Polygon** ---
                                             полигон;-
                                             **MultiPolygon** ---
                                             несколько полигонов.

  ---

  \"type\": \"Polygon\"

  coordinates              list              Массив точек (долгота
                                             и широта),
                                             описывающий геометрию
                                             объекта

  ---

  \"coordinates\": 
  \[    \`\`\[100.0,
  0.0\], \[101.0,
  0.0\],    \`\`\[101.0,
  1.0\], \[100.0,
  1.0\],    \`\`\[100.0,
  0.0\]\]
  ----------------------------------------------------------------------------------

Если по запросу ничего не найдено, ответ будет выглядеть следующим
образом:

  -----------------------------------------------------------------------
  {    \`\`\"results\": \[\],    \`\`\"request\":
  \"/v3/search?limit=1&q=Ленингрвавамский вца\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример

Прямое геокодирование

**Запрос**

  -------------------------------------------------------------------------------------------------------------------------------------------------------------
  https://geo.rustore.ru/api/search?api_key=\<YOUR_API_KEY\>q=Москва%20Ленинградский%2039%20с14&fields=address_details,address,pin,bbox,geometry,type&limit=1
  -------------------------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------------------------

**Ответ**


  {  \`\`\"request\": \"/search?api_key=demo_demo_main&limit=1&q=Москва Ленинградский 39 с14&fields=address_details,address,pin,bbox,geometry,type\",  \`\`\"results\": \[    \`\`{      \`\`\"address\": \"Россия, Москва, Северный административный округ, Москва, Хорошёвский, Ленинградский проспект, 39 с14\",      \`\`\"address_details\": {        \`\`\"building\": \"39 с14\",        \`\`\"country\": \"Россия\",        \`\`\"postal_code\": \"125167\",        \`\`\"isocode\": \"RU\",        \`\`\"locality\": \"Москва\",        \`\`\"region\": \"Москва\",        \`\`\"street\": \"Ленинградский проспект\",        \`\`\"subregion\": \"Северный административный округ\",        \`\`\"suburb\": \"Хорошёвский\"      \`\`},      \`\`\"bbox\": \[        \`\`37.538253,        \`\`55.796405,        \`\`37.539368,        \`\`55.79694      \`\`\],      \`\`\"geometry\": {        \`\`\"coordinates\":
  \[          \`\`\[            \`\`\[              \`\`37.538253,              \`\`55.796822            \`\`\],            \`\`\[              \`\`37.539204,              \`\`55.796405            \`\`\],            \`\`\[              \`\`37.539368,              \`\`55.796523            \`\`\],            \`\`\[              \`\`37.539105,              \`\`55.796639            \`\`\],            \`\`\[              \`\`37.539082,              \`\`55.796674            \`\`\],            \`\`\[              \`\`37.539052,              \`\`55.796705            \`\`\],            \`\`\[              \`\`37.53901,              \`\`55.796737            \`\`\],            \`\`\[              \`\`37.538958,              \`\`55.796763            \`\`\],            \`\`\[              \`\`37.538899,              \`\`55.796784            \`\`\],            \`\`\[              \`\`37.538835,              \`\`55.796801            \`\`\],            \`\`\[              \`\`37.538772,              \`\`55.796808            \`\`\],            \`\`\[              \`\`37.538714,              \`\`55.79681            \`\`\],            \`\`\[              \`\`37.538416,              \`\`55.79694            \`\`\],            \`\`\[              \`\`37.538253,              \`\`55.796822            \`\`\]          \`\`\]        \`\`\],        \`\`\"type\":
  \"Polygon\"      \`\`},      \`\`\"pin\": \[        \`\`37.538851,        \`\`55.796731      \`\`\],      \`\`\"type\": \"building\"    \`\`}  \`\`\]}




Обратное геокодирование

**Запрос**

  -----------------------------------------------------------------------------------------------------------------------------------------------
  https://geo.rustore.ru/api/search?api_key=\<YOUR_API_KEY\>q=55.796668,37.538871&fields=address_details,address,pin,bbox,geometry,type&limit=1
  -----------------------------------------------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------------------------------------------

**Ответ**


  {  \`\`\"request\": \"/v3/search?api_key=demo_demo_main&limit=1&q=55.796668,37.538871&fields=address_details,address,pin,bbox,geometry,type\",  \`\`\"results\": \[    \`\`{      \`\`\"address\": \"Россия, Москва, Северный административный округ, Москва, Хорошёвский, Ленинградский проспект, 39 с14\",      \`\`\"address_details\": {        \`\`\"building\": \"39 с14\",        \`\`\"country\": \"Россия\",        \`\`\"isocode\": \"RU\",        \`\`\"locality\": \"Москва\",        \`\`\"region\": \"Москва\",        \`\`\"street\": \"Ленинградский проспект\",        \`\`\"subregion\": \"Северный административный округ\",        \`\`\"suburb\": \"Хорошёвский\"      \`\`},      \`\`\"bbox\": \[        \`\`37.538253,        \`\`55.796405,        \`\`37.539368,        \`\`55.79694      \`\`\],      \`\`\"geometry\": {        \`\`\"coordinates\":
  \[          \`\`\[            \`\`\[              \`\`37.538253,              \`\`55.796822            \`\`\],            \`\`\[              \`\`37.539204,              \`\`55.796405            \`\`\],            \`\`\[              \`\`37.539368,              \`\`55.796523            \`\`\],            \`\`\[              \`\`37.539105,              \`\`55.796639            \`\`\],            \`\`\[              \`\`37.539082,              \`\`55.796674            \`\`\],            \`\`\[              \`\`37.539052,              \`\`55.796705            \`\`\],            \`\`\[              \`\`37.53901,              \`\`55.796737            \`\`\],            \`\`\[              \`\`37.538958,              \`\`55.796763            \`\`\],            \`\`\[              \`\`37.538899,              \`\`55.796784            \`\`\],            \`\`\[              \`\`37.538835,              \`\`55.796801            \`\`\],            \`\`\[              \`\`37.538772,              \`\`55.796808            \`\`\],            \`\`\[              \`\`37.538714,              \`\`55.79681            \`\`\],            \`\`\[              \`\`37.538416,              \`\`55.79694            \`\`\],            \`\`\[              \`\`37.538253,              \`\`55.796822            \`\`\]          \`\`\]        \`\`\],        \`\`\"type\":
  \"Polygon\"      \`\`},      \`\`\"pin\": \[        \`\`37.538851,        \`\`55.796731      \`\`\],      \`\`\"type\": \"building\"    \`\`}  \`\`\]}




Подсказчик адреса и мест интереса

**Подсказчик** --- это сервис, предлагающий подсказки для автозаполнения
адреса и/или названий мест интереса при посимвольном вводе в строку
поиска.

**/suggest** --- точка вызова подсказчика адреса и названий мест
интереса при посимвольном вводе.

Запрос

**Обязательные параметры запроса**

  -------------------------------------------------------------------------------------
  Имя поля                        Формат            Описание          Пример
  ------------------------------- ----------------- ----------------- -----------------
  \<br\>api_key\<br\>             hex-string        Доступ к сервисам

  ---

  api_key=fa749bace6d8a3b1\....

  q                               string            Тело поискового
                                                    запроса

  ---

  q=Россия Москваq=Москва
  Ленинградсq=Москва
  Ленинградский проспектq=Москва
  Ленинский д. 1q=метро Аэро
  -------------------------------------------------------------------------------------

**Дополнительные параметры запроса**

  -------------------------------------------------------------------------------------------------------
  Имя поля                       Формат                       Описание                  Пример
  ------------------------------ ---------------------------- ------------------------- -----------------
  fields                         fieldname1,fieldname2,....   Выбор полей, отображаемых
                                 fieldnameN                   в ответе.Возможные
                                                              значения:- **name** (по
                                                              умолчанию) --- найденный
                                                              объект;-
                                                              **address_details**
                                                              --- детальная информация
                                                              о найденном адресе с
                                                              почтовым индексом без
                                                              координат;-
                                                              **address** (по
                                                              умолчанию) --- полный
                                                              найденный адрес одной
                                                              строкой;- **ref** --- ID
                                                              найденного объекта;-
                                                              **type** (по
                                                              умолчанию) --- тип
                                                              объекта.

  ---

  fields=name

  types                          string                       Тип объектов по которым
                                                              осуществляется поиск:-
                                                              **address** (по
                                                              умолчанию) --- адрес;-
                                                              **place** --- название
                                                              места интереса.

  ---

  type=address,place

  lang                           2-х символьный код языка     Язык ответа на одном
                                                              из доступных языков. По
                                                              умолчанию на языке
                                                              региона, в котором найден
                                                              объект.

  ---

  lang=en

  location                       string                       Координата, относительно
                                                              которой будет
                                                              осуществляться поиск и
                                                              ранжирование результатов
                                                              ответа. Координаты в
                                                              формате lat, lon, где:-
                                                              **lat ---** широта
                                                              искомой точки в градусах.
                                                              Используется 6 знаков
                                                              после запятой;- **lon**
                                                              --- долгота искомой точки
                                                              в градусах. Используется
                                                              6 знаков после
                                                              запятой.Результаты поиска
                                                              будут отсортированы по
                                                              расстоянию от указанной
                                                              координаты

  ---

  location=55.796743,37.537354

  radius                         integer                      Радиус поиска в метрах
                                                              относительно параметра
                                                              location.Параметр
                                                              location при
                                                              использовании параметра
                                                              radius является
                                                              обязательным.В случае
                                                              использования малого
                                                              радиуса объект может быть
                                                              не найден.

  ---

  radius=500

  admin_level                    rank number                  Ограничение ответа по
                                                              административному уровню.
                                                              Используется совместно с
                                                              types=address.Возможные
                                                              значения:- **1** ---
                                                              страна;- **2** ---
                                                              регион;- **3** ---
                                                              населённый пункт;- **4**
                                                              --- улица;- **5** ---
                                                              дом.По умолчанию
                                                              ограничение не задано ---
                                                              поиск осуществляется по
                                                              всем административным
                                                              уровням.

  ---

  admin_level=3

  limit                          integer                      Ограничение числа
                                                              объектов в ответе.
                                                              Поддерживаются значения в
                                                              интервале от 1 до 100.По
                                                              умолчанию: 5В случае
                                                              использования больших
                                                              значений длительность
                                                              получения ответа может
                                                              увеличиться

  ---

  limit=10
  -------------------------------------------------------------------------------------------------------

Ответ

Ответ предоставляется только в JSON формате. Используемый JSON формат
является разработанным для сервиса Подсказчик v.3 и содержит информацию,
найденную по запросу.

**JSON формат**

  ---------------------------------------------------------------------------------------------------------
  Имя поля                                            Формат            Описание          Пример
  --------------------------------------------------- ----------------- ----------------- -----------------
  request                                             string            Запрос

  ---

  \"request\": \"/v3/suggest?limit=3&q=Москва
  Ленинградский
  39&fields=name,address_details,address,ref,type\"

  results                                             list              Найденный
                                                                        результат

  ---

  \"results\": \[    \`\`{      \`\`\"address\":
  \"Россия, Москва, Северный административный округ,
  Москва, Хорошёвский, Ленинградский проспект, 39
  с79\",      \`\`\"address_details\":
  {        \`\`\"building\": \"39
  с79\",        \`\`\"country\":
  \"Россия\",        \`\`\"isocode\":
  \"RU\",        \`\`\"locality\":
  \"Москва\",        \`\`\"region\":
  \"Москва\",        \`\`\"street\": \"Ленинградский
  проспект\",        \`\`\"subregion\": \"Северный
  административный округ\",        \`\`\"suburb\":
  \"Хорошёвский\"      \`\`},      \`\`\"ref\":
  \"1000000C4D63818\",      \`\`\"type\":
  \"building\"      \`\`\"name\": \"Ленинградский
  проспект, 39 с79\",    \`\`}  \`\`\]

  address                                             string            Полный найденный
                                                                        адрес

  ---

  \"address\": \"Россия, Москва, Северный
  административный округ, Москва, Хорошёвский,
  Ленинградский проспект, 39 с79\",

  address_details                                     list              Детальная
                                                                        информация о
                                                                        найденном адресе

  ---

  \"address_details\": {        \`\`\"building\":
  \"39 с79\",        \`\`\"country\":
  \"Россия\",        \`\`\"isocode\":
  \"RU\",        \`\`\"locality\":
  \"Москва\",        \`\`\"region\":
  \"Москва\",        \`\`\"street\": \"Ленинградский
  проспект\",        \`\`\"subregion\": \"Северный
  административный округ\",        \`\`\"suburb\":
  \"Хорошёвский\"      \`\`}

  ref                                                 hex               ID найденного
                                                                        объектаID объекта
                                                                        не является
                                                                        стабильным и
                                                                        может изменяться

  ---

  \"ref\": \"1000000C4D63818\"

  type                                                string            Тип найденного
                                                                        объекта

  ---

  \"type\": \"building\"

  name                                                string            Название
                                                                        найденного
                                                                        объекта

  ---

  \"name\": \"Ленинградский проспект, 39 с79\"
  ---------------------------------------------------------------------------------------------------------

**Описание полей address_details**

  -------------------------------------------------------------------------
  Имя поля           Формат            Описание           Пример
  ------------------ ----------------- ------------------ -----------------
  country            string            Страна

  ---

  \"country\":
  \"Россия\"

  isocode            2char             Двухбуквенный код
                                       страны
                                       согласно ISO
                                       3166-1 alpha-2

  ---

  \"isocode\":
  \"RU\"

  region             string            Область

  ---

  \"region\":
  \"Москва\"

  subregion          string            Район

  ---

  \"subregion\":
  \"Северный
  административный
  округй\"

  locality           string            Населённый пункт

  ---

  \"locality\":
  \"Москва\"

  sublocality        string            Микрорайон или
                                       название жилого
                                       комплекса

  ---

  \"sublocality\":
  \"Аэропорт\"

  street             string            Улица

  ---

  \"street\":
  \"Проспект
  Ленинградский\"

  building           string            Номер дома, части
                                       дома или строения

  ---

  \"building\": \"39
  с80\"

  suburb             string            Район/микрорайон
                                       населённого пункта

  ---

  \"suburb\":
  \"Хорошёвский\"

  postal_code        string            Почтовый код

  ---

  \"postal_code\":
  \"125167\"
  -------------------------------------------------------------------------

Пример

**Запрос**

  ---------------------------------------------------------------------------------------------------
  https://geo.rustore.ru/api/suggest?api_key=\<YOUR_API_KEY\>&limit=3&q=Москва%20Ленинградский%2039
  ---------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------
  {  \`\`\"request\": \"/suggest?limit=2&q=Москва Ленинградский
  39&api_key=demo_demo_main\",  \`\`\"results\":
  \[    \`\`{      \`\`\"address\": \"Россия, Москва, Северный
  административный округ, Москва, Хорошёвский, Ленинградский проспект, 39
  с79\",      \`\`\"name\": \"Ленинградский проспект, 39
  с79\",      \`\`\"type\":
  \"building\"    \`\`},    \`\`{      \`\`\"address\": \"Россия, Москва,
  Северный административный округ, Москва, Хорошёвский, Ленинградский
  проспект, 39 с80\",      \`\`\"name\": \"Ленинградский проспект, 39
  с80\",      \`\`\"type\":
  \"building\"    \`\`},    \`\`{      \`\`\"address\": \"Россия, Москва,
  Северный административный округ, Москва, Хорошёвский, Ленинградский
  проспект, 39 с3\",      \`\`\"name\": \"УСК ЦСКА им. А.Я.
  Гомельского\",      \`\`\"type\": \"building\"    \`\`}  \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Сервисы отображения карт

Сервисы отображения карт позволяют встраивать в продукты интерактивную и
статичную карту.

Интерактивная карта--- это сервис, позволяющий встроить на сайт или в
приложение карту, с возможностью изменения пользователем масштаба, угла
и позиции отображения, а также с возможностью добавления на карту
средствами JS различных элементов: булавки, линии, выделение необходимых
зон и других.

Статичная карта--- это сервис, позволяющий получить изображение карты с
размещёнными на ней булавками в виде изображения формата PNG, либо JPG.

Сервисы

  -----------------------------------------------------------------------
  Точка вызова                        Описание
  ----------------------------------- -----------------------------------
                                      Интерактивная карта

  /staticmap                          Статичная карта
  -----------------------------------------------------------------------

Интерактивная карта

Для отображения интерактивной карты необходимы следующие компоненты:

-   данные для отображения (тайлы);

-   стиль отображения;

-   программный код для отображения карты на веб-странице.

Данные для отображения представляют из себя кусочки мозаики квадратной
формы --- тайлы. Весь набор тайлов для отображения мира представляет
собой пирамиду. На нулевом уровне (масштабе) пирамиды находится один
тайл. Далее на каждом следующем уровне (масштабе) количество тайлов
составляет 4n, где n --- номер масштаба. Каждый тайл содержит в себе
геометрическую и атрибутивную информацию.

Стили отображения карт представляют собой json-объект с описанием, где
брать данные и как рисовать те или иные элементы.

Для встраивания карт в свой проект необходимо добавить на страницу
элемент верстки, где будет отображаться карта.

Создание интерактивной карты

Для простого отображения карты необходимо добавить JS & CSS файлы с
SDK на страницу, а также добавить код инициализации карты, не забыв
указать актуальный ключ доступа к API.

Для инициализации необходимо указать требуемый стиль:

-   light_style.json  --- mmr://api/styles/light_style.json

-   mapsme_style.json  --- mmr://api/styles/mapsme_style.json

-   main_style.json  --- mmr://api/styles/main_style.json

Добавление объектов на карту

Для добавления своих объектов на карту для начала надо описать их
координаты, обычно это делают в формате GeoJson.

**Добавление точки с пином**

Для простого добавления отдельного слоя с иконками достаточно выполните
действия, описанные ниже.

Создайте список точек для добавления на карту:

  -----------------------------------------------------------------------
  let userPointData = {    \`\`\"type\" :  \"FeatureCollection\"
  ,    \`\`\"features\" : \[{        \`\`\"type\" :  \"Feature\"
  ,        \`\`\"geometry\" : {            \`\`\"type\" :  \"Point\"
  ,            \`\`\"coordinates\" : \[37.6165,
  55.7505\]        \`\`}    \`\`}, {        \`\`\"type\" :  \"Feature\"
  ,        \`\`\"geometry\" : {            \`\`\"type\" :  \"Point\"
  ,            \`\`\"coordinates\" : \[37.4165,
  55.7505\]        \`\`}    \`\`}, {        \`\`\"type\" :  \"Feature\"
  ,        \`\`\"geometry\" : {            \`\`\"type\" :  \"Point\"
  ,            \`\`\"coordinates\" : \[37.6165,
  55.8505\]        \`\`}    \`\`}\]};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Следующим шагом опишите иконку для точек и добавьте слой, описывающий,
что точки надо рисовать именно этой иконкой. Делать это стоит по событию
загрузки карты.

  -----------------------------------------------------------------------------------------------
  map.on( \'load\' ,  function ()
  {    \`\`map.loadImage(        \`\`\'https://geo.rustore.ru/api/styles/pins/blue_target.png\'
  ,        \`\`function (error, image) {            \`\`if (error)  throw
  error;            \`\`map.addImage( \'custom_pin\' ,
  image);            \`\`map.addLayer({                \`\`\"id\" :  \"points\"
  ,                \`\`\"type\" :  \"symbol\" ,                \`\`\"source\" :
  {                    \`\`\"type\" :  \"geojson\" ,                    \`\`\"data\" :
  userPointData                \`\`},                \`\`\"layout\" :
  {                    \`\`\"icon-image\" :  \"custom_pin\"
  ,                    \`\`\"icon-size\" :
  1                \`\`}            \`\`});        \`\`}    \`\`);});
  -----------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------

**Добавление линии**

Линейные объекты добавляются на карту таким же образом, как и точечные
--- необходимо подготовить данные и описать при помощи стиля каким
образом их рисовать.

Так же как и в предыдущем примере, необходимо подготовить данные, пусть
это будут две линии.

  -----------------------------------------------------------------------
  let userLineData = {    \`\`\"type\" :  \"FeatureCollection\"
  ,    \`\`\"features\" : \[{        \`\`\"type\" :  \"Feature\"
  ,        \`\`\"geometry\" : {            \`\`\"type\" :  \"LineString\"
  ,            \`\`\"coordinates\" : \[                \`\`\[37.6165,
  55.7505\],                \`\`\[37.6375,
  55.7515\],                \`\`\[37.6375,
  55.7515\],                \`\`\[37.665,
  55.7545\],                \`\`\[37.765,
  55.7645\],                \`\`\[37.785,
  55.7745\],                \`\`\[37.803,
  55.7645\],                \`\`\[37.83,
  55.7545\],                \`\`\[37.89,
  55.78\]            \`\`\]        \`\`}    \`\`}, {        \`\`\"type\"
  :  \"Feature\" ,        \`\`\"geometry\" : {            \`\`\"type\" : 
  \"LineString\" ,            \`\`\"coordinates\" :
  \[                \`\`\[37.4165,
  55.7505\],                \`\`\[37.4166,
  55.7505\],                \`\`\[37.4169,
  55.6\],                \`\`\[37.5169,
  55.545\],                \`\`\[37.6169,
  55.45\],                \`\`\[37.5169,
  55.334\],                \`\`\[37.3169,
  55.211\]            \`\`\]        \`\`}    \`\`}\]};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Далее добавьте описание слоя для отрисовки. Также добавьте новый слой на
событие загрузки основной карты.

  -----------------------------------------------------------------------
  map.on( \'load\' ,  function ()
  {    \`\`map.addLayer({        \`\`\'id\' :  \'route\'
  ,        \`\`\'type\' :  \'line\' ,        \`\`\'source\' :
  {            \`\`\'type\' :  \'geojson\' ,            \`\`\'data\' :
  userLineData        \`\`},        \`\`\'layout\' :
  {            \`\`\'line-join\' :  \'round\'
  ,            \`\`\'line-cap\' : 
  \'round\'        \`\`},        \`\`\'paint\' :
  {            \`\`\'line-color\' :  \'#AE3478\'
  ,            \`\`\'line-width\' : 8        \`\`}    \`\`});});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Добавление полигона**

Добавление слоя с полигонами аналогично созданию слоя с линиями.
Полигоны могут быть как сплошными, так и с дырками. В качестве примера
добавьте на карту сложный полигон:

  -------------------------------------------------------------------------------
  let userPolygonData = {    \`\`\"type\" :  \"FeatureCollection\"
  ,    \`\`\"features\" : \[{        \`\`\"type\" :  \"Feature\"
  ,        \`\`\"geometry\" : {            \`\`\"type\" :  \"Polygon\"
  ,            \`\`\"coordinates\" :
  \[                \`\`\[                    \`\`\[37.427278,
  55.756486\],                    \`\`\[37.387117,
  55.734843\],                    \`\`\[37.405653,
  55.709126\],                    \`\`\[37.4592,
  55.70042\],                    \`\`\[37.518239,
  55.683585\],                    \`\`\[37.617439,
  55.690939\],                    \`\`\[37.669614,
  55.707578\],                    \`\`\[37.674419,
  55.73291\],                    \`\`\[37.635975,
  55.777345\],                    \`\`\[37.583457,
  55.795105\],                    \`\`\[37.525791,
  55.799544\],                    \`\`\[37.478765,
  55.780049\],                    \`\`\[37.427278,
  55.756486\]                \`\`\], \[                    \`\`\[37.495585,
  55.749917\],                    \`\`\[37.481511,
  55.745666\],                    \`\`\[37.48872,
  55.718796\],                    \`\`\[37.536432,
  55.718989\],                    \`\`\[37.582428,
  55.724983\],                    \`\`\[37.592382,
  55.740835\],                    \`\`\[37.551535,
  55.759964\],                    \`\`\[37.495585,
  55.749917\]                \`\`\]            \`\`\]        \`\`}    \`\`}\]};
  -------------------------------------------------------------------------------

  -------------------------------------------------------------------------------

И опишите как его рисовать на карте:

  -----------------------------------------------------------------------
  map.on( \'load\' ,  function ()
  {    \`\`map.addLayer({        \`\`\'id\' :  \'maine\'
  ,        \`\`\'type\' :  \'fill\' ,        \`\`\'source\' :
  {            \`\`\'type\' :  \'geojson\' ,            \`\`\'data\' :
  userPolygonData        \`\`},        \`\`\'layout\' :
  {},        \`\`\'paint\' : {            \`\`\'fill-color\' : 
  \'#6ea5e8\' ,            \`\`\'fill-opacity\' :
  0.5        \`\`}    \`\`});});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Быстрый старт

MMR GL JS --- JavaScript библиотека, которая использует WebGL для
рендеринга интерактивных карт.

Быстрый старт

**Подключение на html страницу**

Необходимо добавить

\` \|

**Создание токена**

Для установки \@geors/maps-sdk-js создайте токен на github:

-   Перейдите в настройки пользователя.

-   Найдите кнопку Developer settings в самом низу слева.

-   Создайте Personal access token с доступом для чтения пакетов
    (read:packages).

-   Создайте в корне проекта файл .npmrc.

-   Добавите в созданный файл две строчки.

  -------------------------------------------------------------------------------------------
  \@geors:registry=https://npm.pkg.github.com//npm.pkg.github.com/:\_authToken=ACCESS_TOKEN
  -------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------

Замените ACCESS_TOKEN на ваш созданный.

**Установка пакета**

Перейдите в корень проекта к package.json и с помощью npm или yarn
установите пакет

  -----------------------------------------------------------------------
  yarn add \@geors/maps-sdk-js
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

или

  -----------------------------------------------------------------------
  npm install \@geors/maps-sdk-js
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для инициализации карты добавьте следующий код (пример на Реакте):

  -----------------------------------------------------------------------
  import mmrgl from  \'@geors/maps-sdk-js\' ;import { useEffect } from 
  \'react\'import \'@geors/maps-sdk-js/dist/mmr-gl.css\' ;export 
  function Map() {  \`\`useEffect( () =\> {    \`\`mmrgl.accessToken = 
  \'accessToken\' ;    \`\`const map =  new
  mmrgl.Map({      \`\`container:  \'map\' ,      \`\`zoom:
  8,      \`\`center: \[37.6165, 55.7505\],      \`\`style: 
  \'mmr://api/styles/main_style.json\' ,      \`\`hash:  true
  ,    \`\`})    \`\`return () =\> {      \`\`if (map)
  map.remove();    \`\`}  \`\`}  \`\`return \<div id= \"map\" style={{
  width:  \'800px\' , height:  \'600px\' }} /\>}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Детальная информация

Более подробную информацию по использованию MMR GL JS SDK вы найдёте в
разделах:

1\. Карта

Карта на странице связана с объектом Map. Он
предоставляет методы и свойства, позволяющие изменять карту из кода. При
создании карты MMR GL JS инициализирует ее и возвращает объект Map.

**Параметры**

  ---------------------------------------------------------------------------------------------------------------------------
  Название                      Тип                                Описание
  ----------------------------- ---------------------------------- ----------------------------------------------------------
  container                     HTMLElement \| string              HTML элемент или id блока, в который MMR GL JS будет
                                                                   рендерить карту.Указанный элемент не должен содержать
                                                                   дочерних элементов.

  minZoom                       numberdefault: 0                   Минимальный уровень zoom (0-20).

  maxZoom                       numberdefault: 20                  Максимальный уровень zoom (0-20).

  minPitch                      numberdefault: 0                   Минимальный уровень наклона карты (0-85).

  maxPitch                      numberdefault: 85                  Максимальный уровень наклона карты (0-85).

  style                         object \| string                   Стиль карты в формате JSON или ссылка на стиль. Это JSON
                                                                   объект, составленный по правилами оформления стилей.-
                                                                   light_style.json --- mmr://api/styles/light_style.json-
                                                                   dark_style.json --- mmr://api/styles/dark_style.json-
                                                                   main_style.json --- mmr://api/styles/main_style.json

  hash                          boolean \| stringdefault: false    Если true, все параметры страницы
                                                                   (zoom, latitude, longitude and pitch) будут
                                                                   синхронизированы в URL через \# параметра.

  interactive                   booleandefault: false              Если false, карта не будет реагировать ни на какой элемент
                                                                   управления (мышь, экран, клавиатура).

  bearingSnap                   numberdefault: 7                   Граница, измеряемая в градусах, которая определяет когда
                                                                   пеленг карты будет привязан к северу.

  pitchWithRotate               booleandefault: true               Если false, управление наклоном карты с помощью «drag and
                                                                   rotate» будет отключено.

  clickTolerance                numberdefault: 3                   Максимальное количество пикселей, на которое пользователь
                                                                   может переместить указатель мыши во время щелчка, чтобы он
                                                                   считался допустимым щелчком (в отличие от перетаскивания
                                                                   мыши).

  attributionControl            booleandefault: true               Если true, AttributionControl будет добавлен на карту.

  customAttribution             string \| Array                    Строка или строки для отображения в AttributionControl.
                                                                   Возможно только если attributionControl = true.

  failIfMajorPerfomanceCaveat   booleandefault: false              Если true, инициализация карты завершится с ошибкой если
                                                                   производительность карты будет не приемлемой.

  preserveDrawingBuffer         booleandefault: false              Если true, холст карты можно экспортировать в PNG
                                                                   изображение используя map.getCanvas().toDataUrl(). По
                                                                   умолчанию установлен в false, для улучшения
                                                                   производительности.

  antialias                     booleandefault: false              Если true, gl контекст будет создан с применением MSAA
                                                                   сглаживания, которое может быть полезно для сглаживания
                                                                   кастомных слоев.По умолчанию установлен в false, для
                                                                   улучшения производительности.

  refreshExpiredTiles           booleandefault: true               Если false, то карта не будет запрашивать тайлы после
                                                                   истечения срока их жизни в соответствии с заголовками
                                                                   cacheControl / expires.

  maxBounds                     LngLatBoundsLike                   Если установлено, карта будет ограничена заданными
                                                                   границами.

  scrollZoom                    boolean \| objectdefault: true     Если true, то увеличение с помощью скролла работает.
                                                                   Значение объекта передается в качестве
                                                                   параметров ScrollZoomHandler.

  boxZoom                       booleandefault: true               Если true, взаимодействие типа «box zoom»
                                                                   включено (подробнее BoxZoomHandler)

  dragRotate                    booleandefault: true               Если true, взаимодействие типа «drag to rotate»
                                                                   включено (подробнее DragRotateHandler)

  dragPan                       boolean \| objectdefault: true     Если true, взаимодействие типа «drag to pan»
                                                                   включено (подробнее DragPanHandler)

  keyboard                      booleandefault: true               Если true, можно использовать клавиатуру и сочетания
                                                                   клавиш для взаимодействия с
                                                                   картой (подробнееKeyboardHandler)

  doubleClickZoom               booleandefault: true               Если true, взаимодействие типа «double click to zoom»
                                                                   включено (подробнее DoubleClickZoomHandler)

  touchZoomRotate               boolean \| objectdefault: true     Если true, взаимодействие типа «pinch to rotate and zoom»
                                                                   включено  (подробнееTouchZoomRotateHandler)

  touchPitch                    boolean \| objectdefault: true     Если true, взаимодействие типа «drag to pitch»
                                                                   включено (подробнее TouchPitchHandler)

  trackResize                   booleandefault: true               Если true, карта будет автоматически менять свой размер
                                                                   при изменении окна.

  center                        LngLatLikedefault: \[0,0\]         Начальная точка карты.Если центр не указан в параметрах
                                                                   конструктора, MMR GL JS будет смотреть его в объекте стиля
                                                                   карты. Если он также не указан в стиле, то по умолчанию он
                                                                   будет равен \[0, 0\].Примечание: используется порядок
                                                                   координат долготы, широты (в отличие от широты, долготы)
                                                                   для соответствия GeoJSON.

  zoom                          numberdefault: 0                   Начальный уровень масштаба карты.Если уровень масштаба не
                                                                   указан в параметрах конструктора, MMR GL JS будет смотреть
                                                                   его в объекте стиля карты. Если он также не указан в
                                                                   стиле, то по умолчанию он будет равен 0.

  bearing                       numberdefault: 0                   Начальный пеленг (поворот) карты, измеренный в градусах
                                                                   против часовой стрелки с севера.Если пеленг не указан в
                                                                   параметрах конструктора, MMR GL JS будет искать его в
                                                                   объекте стиля карты. Если он также не указан в стиле, то
                                                                   по умолчанию он будет равен 0.

  pitch                         numberdefault: 0                   Начальный шаг (наклон) карты, измеряемый в градусах от
                                                                   плоскости экрана (0-85).Если шаг не указан в параметрах
                                                                   конструктора, MMR GL JS будет искать его в объекте стиля
                                                                   карты. Если он также не указан в стиле, то по умолчанию он
                                                                   будет равен 0.

  bounds                        LngLatBoundsLike                   Начальные границы карты. Если заданы границы, то он
                                                                   переопределяет center и zoom.

  fitBoundsOptions              object                             Map#fitBounds Параметры объекта следует использовать
                                                                   только при подгонке исходных границ приведенных выше
                                                                   (bounds).

  renderWorldCopies             booleandefault: true               Если это true, то несколько копий мира будут отображаться
                                                                   бок о бок за пределами -180 и 180 градусов долготы.Если
                                                                   установлено значение false:- когда карта будет увеличена
                                                                   настолько, что ни одно изображение мира не заполнит весь
                                                                   контейнер карты, за пределами 180 и -180 градусов долготы
                                                                   останется пустое пространство.- объекты, пересекающие 180
                                                                   и -180 градусов долготы, будут разрезаны надвое (одна
                                                                   часть находится на правом краю карты, а другая - на левом)
                                                                   на каждом уровне масштабирования.

  maxTileCache                  numberdefault: null                Максимальное количество плиток, хранящихся в кэше для
                                                                   данного источника (source). Если этот параметр опущен,
                                                                   размер кэша будет динамически определяться в зависимости
                                                                   от текущего окна просмотра.

  localIdeographFontFamily      stringdefault: sans-serif          Определяет CSS font-family для локального переопределения
                                                                   генерации глифов в *'CJK Unified Ideographs', 'Hiragana',
                                                                   'Katakana' и 'Hangul Syllables'*.В этих языковых
                                                                   структурах настройки шрифта из стиля карты будут
                                                                   игнорироваться,
                                                                   кроме font-weight (light/regular/medium/bold).Установите
                                                                   значение false, чтобы включить настройки шрифта из стиля
                                                                   карты для этих глифов.

  localFontFamily               stringdefault: false               Определяем CSS font-family для переопределения генерации
                                                                   всех глифов. Настройки шрифта из стиля карты будут
                                                                   игнорироваться,
                                                                   кроме font-weight (light/regular/medium/bold).Если этот
                                                                   параметр установлен, то он переопределяет настройку
                                                                   в localIdeographFontFamily.

  transformRequest              RequestTransformFunctiondefault:   Функция выполняется до выполнения URL запроса. Она может
                                null                               использоваться для изменения URL, установки заголовков или
                                                                   свойства credentials для кросс-доменных запросов.

  collectResourceTiming         booleandefault: false              Если true, то информация Resource Timing API будет
                                                                   доступна для запросов выполняемых GeoJSON и Vector Tile
                                                                   (эта информация обычно недоступна из основного потока
                                                                   JavaScript). Информация будет возвращена в свойстве
                                                                   ResourceTiming.

  fadeDuration                  numberdefault: 300                 Управление длительности анимации fade-in/fade-out для
                                                                   коллизий подписей в миллисекундах. Этот параметр не влияет
                                                                   на продолжительность переходов стиля во время выполнения
                                                                   или перекрестного затухания растровых плиток.

  crossSourceCollisions         booleandefault: true               Если true, то символы из нескольких источников могут
                                                                   сталкиваться друг с другом во время обнаружения
                                                                   столкновения. Если значение false, обнаружение коллизий
                                                                   выполняется отдельно для символов в каждом источнике.

  accessToken                   stringdefault: null                Если указан, тогда будет использоваться этот токен вместо
                                                                   того, который указан в mmrgl.accessToken

  locale                        objectdefault: null                Патч для применения к таблице локализации по умолчанию для
                                                                   строк пользовательского интерфейса, например подсказок
                                                                   управления. Объект locale сопоставляет идентификаторы
                                                                   строк пользовательского интерфейса в пространстве имен с
                                                                   переведенными строками на целевом языке;
                                                                   см. src/ui/default_locale.js, например, со всеми
                                                                   поддерживаемыми строковыми идентификаторами. Объект может
                                                                   указывать все строки пользовательского интерфейса (тем
                                                                   самым добавляя поддержку нового перевода) или только
                                                                   подмножество строк (тем самым исправляя таблицу перевода
                                                                   по умолчанию).
  ---------------------------------------------------------------------------------------------------------------------------

**Пример**

  -----------------------------------------------------------------------
  var map =  new mmrgl.Map({    \`\`container:  \'map\' ,    \`\`center:
  \[37.6165, 55.7505\],    \`\`zoom: 8,    \`\`style:
  styleObject,    \`\`hash:  true ,    \`\`transformRequest: (url,
  resourceType)=\> {            \`\`if (resourceType ===  \'Source\' &&
  url.startsWith( \'http://myHost\' )) {                \`\`return
  {                    \`\`url: url.replace( \'http\' ,  \'https\'
  ),                    \`\`headers: {  \'my-custom-header\' :  true
  },                    \`\`credentials:  \'include\' // Include cookies
  for cross-origin requests                \`\`}        \`\`}    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Методы**

  -----------------------------------------------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------------------------------------------
  addControl(control, position?)      Добавляет IControl на карту,
                                      вызывая control.onAdd(this)Параметры:**control:iControl** добавляемый
                                      IControl **position:string**позиция на карте ('top-left' , 'top-right'
                                      , 'bottom-left' , and 'bottom-right'). По умолчанию 'top-right'.

  addImage(id, image, options)        Добавьте изображение в стиль. Это изображение может быть отображено на
                                      карте, как и любой другой значок в спрайте, используя ID изображения с
                                      icon-image, background-pattern, fill-pattern или line-pattern. Событие
                                      Map.event:error будет вызвано, если в спрайте недостаточно места для
                                      добавления этого изображения.
  -----------------------------------------------------------------------------------------------------------

Параметры:

**id:string**ID изображения

image:HTMLImageElement \| ImageBitmap \| ImageData \| {width: number,
height: number, data: (Uint8Array \| Uint8ClampedArray)} \|
StyleImageInterface Изображение в виде HTMLImageElement , ImageData ,
ImageBitmap или объекта со свойствами width, height и data в том же
формате, что и ImageData

options {

**pixelRatio**отношение пикселей в изображении к физическим пикселям на
экране.

**sdf**следует ли интерпретировать изображение как SDF-изображение.

**stretchX**\[\[x1, x2\], ...\] если icon-text-fit используется в слое с
этим изображением, эта опция определяет часть(части) изображения,
которая может быть растянута горизонтально.

**stretchY**\[\[y1, y2\], ...\] если icon-text-fit используется в слое с
этим изображением, эта опция определяет часть(части) изображения,
которая может быть растянута вертикально.

**content**\[x1, y1, x2, y2\] если icon-text-fit используется в слое с
этим изображением, эта опция определяет часть изображения, которая может
быть покрыта содержимым в текстовом поле.

  ---------------------------------------------------------------------------------------------------------------
  }// If the style\'s sprite does not already contain an image with ID \'cat\',// add the image \'cat-icon.png\'
  to the style\'s sprite with the ID \'cat\'.map.loadImage(
  \'https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Cat_silhouette.svg/400px-Cat_silhouette.svg.png\'
  ,  function (error, image) {    \`\`if (error)  throw error;    \`\`if (!map.hasImage( \'cat\' )) map.addImage(
  \'cat\' , image);});  // Add a stretchable image that can be used with \`icon-text-fit\`// In this example, the
  image is 600px wide by 400px high.map.loadImage(
  \'https://upload.wikimedia.org/wikipedia/commons/8/89/Black_and_White_Boxed\_%28bordered%29.png\' ,  function
  (error, image) {    \`\`if (error)  throw error;    \`\`if (!map.hasImage( \'border-image\' ))
  {        \`\`map.addImage( \'border-image\' , image, {            \`\`content: \[16, 16, 300, 384\],  // place
  text over left half of image, avoiding the 16px border            \`\`stretchX: \[\[16, 584\]\],  // stretch
  everything horizontally except the 16px border            \`\`stretchY: \[\[16, 384\]\],  // stretch everything
  vertically except the 16px border        \`\`});    \`\`}});
  ---------------------------------------------------------------------------------------------------------------
  addLayer(layer, beforedId?)

  ---------------------------------------------------------------------------------------------------------------

Слой определяет, как будут стилизованы данные из указанного источника.

Параметры:

**layer ((Object \| CustomLayerInterface))** добавляемый слой,
соответствует либо спецификации стиля, либо
спецификации CustomLayerInterface.

Описание объекта Layer:

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  id:string                           Уникальный идентификатор слоя

  type:string                         Тип слоя (например, заливка или
                                      символ ). Список типов слоев
                                      доступен в Спецификации стиля.(Так
                                      же может быть
                                      кастомным. Дополнительные сведения
                                      см. в разделе CustomLayerInterface)

  source:(string \| object)           Источник данных для слоя. Ссылка на
                                      источник, который уже был определен
                                      с использованием уникального
                                      идентификатора. Непосредственно
                                      ссылайтесь на новый источник с
                                      помощью исходного объекта (как
                                      определено в спецификации стиля).
                                      Это необходимо для всех
                                      параметров layer.type, за
                                      исключением custom.

  sourceLayer                         (необязательно) Имя слоя в
                                      указанном layer.source, который
                                      будет использоваться для слоя
                                      стиля. Это применимо только для
                                      векторных тайлов и требуется, если
                                      layer.source имеет тип vector.

  filter:array                        (необязательный) Выражение,
                                      задающее условия для объектов.
                                      Отображаются только те объекты,
                                      которые соответствуют
                                      фильтру. Спецификация
                                      стиля содержит дополнительную
                                      информацию об ограничениях
                                      параметра фильтра и полный список
                                      доступных выражений. Если фильтр не
                                      предусмотрен, будут показаны все
                                      объекты.

  layer:object                        (необязательно) Свойства слоя.
                                      Доступные свойства зависят от типа
                                      слоя. Полный список свойств для
                                      каждого типа слоя доступен
                                      в Спецификации стиля. Если свойства
                                      макета не заданы, будут
                                      использоваться значения по
                                      умолчанию.

  maxzoom:number                      (необязательно) Максимальный
                                      уровень масштабирования для слоя.
                                      При уровнях масштабирования, равных
                                      или превышающих maxzoom, слой будет
                                      скрыт. Значение может быть любым
                                      числом от 0 до 24 (включительно).
                                      Если maxzoom не указан, слой будет
                                      виден на всех уровнях
                                      масштабирования, для которых
                                      доступны тайлы.

  minzoom:number                      (необязательно) Минимальный уровень
                                      масштабирования для слоя. При
                                      уровнях масштабирования меньше,
                                      чем minzoom, слой будет скрыт.
                                      Значение может быть любым числом от
                                      0 до 24 (включительно).
                                      Если minzoom не предусмотрен, слой
                                      будет виден на всех уровнях
                                      масштабирования, для которых
                                      доступны тайлы.

  metadata:object                     (необязательно) Произвольные
                                      свойства, полезные для отслеживания
                                      со слоем, но не влияющие на
                                      рендеринг.

  renderingMode:string                Это применимо только для слоев с
                                      типом custom. Дополнительные
                                      сведения см. в
                                      разделе CustomLayerInterface.
  -----------------------------------------------------------------------

**beforeId:string** вставки нового слоя до существующего слоя по ID, в
результате чего новый слой визуально появляется под существующим слоем.
Если этот аргумент не указан, слой будет добавлен в конец массива слоев
и визуально появится над всеми остальными слоями.

  -----------------------------------------------------------------------
  // Add a circle layer with a vector sourcemap.addLayer({    \`\`id: 
  \'points-of-interest\' ,    \`\`source: {        \`\`type:  \'vector\'
  ,        \`\`url:  \'path-to-source\'    \`\`},    \`\`\'source-layer\'
  :  \'poi_label\' ,    \`\`type:  \'circle\' ,    \`\`paint:
  {        \`\`// Style Specification paint
  properties    \`\`},    \`\`layout: {    \`\`// Style Specification
  layout properties    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Define a source before using it to create a new layermap.addSource(
  \'state-data\' , {    \`\`type:  \'geojson\' ,    \`\`data: 
  \'path/to/data.geojson\'}); map.addLayer({    \`\`id:  \'states\'
  ,    \`\`// References the GeoJSON source defined above    \`\`\`// and
  does not require asource-layer\`\`\<br\>    source: \`
  \`\'state-data\'\` \`,\`\<br\>\`    type: 'symbol',\<br\>    layout:
  {\`\<br\>\`        // Set the label content to the\<br\>        \`//
  feature\'s \`name\` property        \`\`text-field: \[\'get \', \'
  name\'\]    \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Add a new symbol layer before an existing
  layermap.addLayer({    \`\`id:  \'states\' ,    \`\`// References a
  source that\'s already been defined    \`\`source: \'state-data
  \',    \`\`type: \' symbol \',    \`\`layout: {        \`\`// Set the
  label content to the        \`\`// feature\' s \`name\`
  property        \`\`text-field: \[ \'get\' ,  \'name\'
  \]    \`\`}    \`\`\`// Add the layer before the
  existingcitieslayer\`\`\<br\>}, 'cities');\`
  -----------------------------------------------------------------------
  addSource(id, source)

  -----------------------------------------------------------------------

Параметры:

**id:string** идентификатор добавляемого источника. Не должно
конфликтовать с существующими источниками.

source:object Исходный объект, соответствующий спецификации
источника или CanvasSourceOptions.

  -----------------------------------------------------------------------
  map.addSource( \'my-data\' , {    \`\`type:  \'vector\' ,    \`\`url: 
  \'path-to-source\'});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  map.addSource( \'my-data\' , {    \`\`\"type\" :  \"geojson\"
  ,    \`\`\"data\" : {        \`\`\"type\" :  \"Feature\"
  ,        \`\`\"geometry\" : {            \`\`\"type\" :  \"Point\"
  ,            \`\`\"coordinates\" : \[-77.0323,
  38.9131\]        \`\`},        \`\`\"properties\" :
  {            \`\`\"title\" :  \"title\"
  ,            \`\`\"marker-symbol\" : 
  \"monument\"        \`\`}    \`\`}});
  -----------------------------------------------------------------------
  areTilesLoaded()

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var tilesLoaded = map.areTilesLoaded();
  -----------------------------------------------------------------------
  boxZoom

  cameraForBounds(bounds, options?)
  -----------------------------------------------------------------------

**bounds:LngLatBoundsLike** вычисляет центр границ в окне, используя
самый высокий уровень масштабирования вплоть до Map#getMaxZoom(),
который помещается в окне. LngLatBounds представляет собой коробку,
которая всегда выровнена по оси с пеленгом 0.

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  padding:number\|PaddingOptions      Количество отступов в пикселях,
                                      добавляемых к заданным границам.

  bearing:number                      Желаемый пеленг карты в конце
                                      анимации, в градусах.

  offset:PointLike                    Центр заданных границ относительно
                                      центра карты, измеренный в
                                      пикселях.

  maxZoom:number                      Максимальный уровень
                                      масштабирования, допускаемый при
                                      переходе камеры в заданные границы.
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var bbox = \[\[-79, 43\], \[-73, 45\]\];  \`\`var newCameraTransform =
  map.cameraForBounds(bbox, {  \`\`padding: {top: 10, bottom:25, left:
  15, right: 5}});
  -----------------------------------------------------------------------
  doubleClickZoom

  dragPan

  dragRotate

  easeTo(options, eventData?)

  fitBounds(bounds, options?, eventData?)
  -----------------------------------------------------------------------

Параметры:

**bounds:**LngLatBoundsLike центрирует эти границы в окне и используйте
самый высокий уровень масштабирования вплоть до Map#getMaxZoom(),
который соответствует им в окне.

**options:Object** опции поддерживают все свойства
из AnimationOptions и CameraOptions в дополнение к полям ниже.

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  padding:number\|PaddingOptions      Количество отступов в пикселях,
                                      добавляемых к заданным границам.

  linear:boolean                      Если true, то карта переходит с
                                      помощью Map#easeTo. Если false, то
                                      карта переходит с помощью
                                      Map#flyTo. Эти функции
                                      и AnimationOptions для получения
                                      информации о доступных опциях.

  easing:function?                    Функция ослабления для
                                      анимированного перехода. См.
                                      раздел AnimationOptions

  offset:PointLike                    Центр заданных границ относительно
                                      центра карты, измеренный в
                                      пикселях.

  maxZoom:number                      Максимальный уровень
                                      масштабирования, допускаемый при
                                      переходе камеры в заданные границы.
  -----------------------------------------------------------------------

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  var bbox = \[\[-79, 43\], \[-73, 45\]\];map.fitBounds(bbox,
  {  \`\`padding: {top: 10, bottom:25, left: 15, right: 5}});
  -----------------------------------------------------------------------
  fitScreenCoordinates(p0, p1, bearing, options?, eventData?)

  -----------------------------------------------------------------------

Параметры:

**p0:PointLike** первая точка на экране в пиксельных координатах

**p1:PointLike** вторая точка на экране в пиксельных координатах

**bearing:number** желаемый пеленг карты в конце анимации, в градусах.
Это значение игнорируется, если карта имеет ненулевой шаг.

options:

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  padding:number\|PaddingOptions      Количество отступов в пикселях,
                                      добавляемых к заданным границам.

  linear:boolean                      Если true, то карта переходит с
                                      помощью Map#easeTo. Если false, то
                                      карта переходит с помощью
                                      Map#flyTo. Эти функции
                                      и AnimationOptions для получения
                                      информации о доступных опциях

  easing:function?                    Функция ослабления для
                                      анимированного перехода. См.
                                      раздел AnimationOptions

  offset:PointLike                    Центр заданных границ относительно
                                      центра карты, измеренный в
                                      пикселях.

  maxZoom:number                      Максимальный уровень
                                      масштабирования, допускаемый при
                                      переходе камеры в заданные границы.
  -----------------------------------------------------------------------

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  var p0 = \[220, 400\];var p1 = \[500,
  900\];map.fitScreenCoordinates(p0, p1, map.getBearing(),
  {  \`\`padding: {top: 10, bottom:25, left: 15, right: 5}});
  -----------------------------------------------------------------------
  flyTo(options, eventData?)

  -----------------------------------------------------------------------

Анимация будет пропущена, и это будет вести себя эквивалентно jumpTo,
если пользователь включил функцию уменьшенной доступности движения
(reduced motion) в своей операционной системе, если только «параметры»
не включают essential: true.

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  curve:numberdefault: 1.42           Масштабирование «curve», которое
                                      будет происходить вдоль траектории
                                      движения. Высокое значение
                                      максимизирует масштабирование для
                                      преувеличенной анимации, в то время
                                      как низкое значение минимизирует
                                      масштабирование в результате эффект
                                      получается близким к Map#easeTo.
                                      1.42 --- это среднее значение,
                                      выбранное участниками исследования
                                      пользователей, обсуждаемого в van
                                      Wijk (2003). Значение Math.pow(6,
                                      0.25) было бы эквивалентно
                                      среднеквадратичной средней
                                      скорости. Значение 1 будет
                                      производить круговое движение.

  minZoom:number                      Нулевой уровень масштабирования на
                                      пике траектории движения. Если
                                      указан параметр options.curve, то
                                      этот параметр игнорируется.

  speed:numberdefault: 1.2            Средняя скорость анимации
                                      определяется по отношению к
                                      options.curve. Скорость 1.2
                                      означает, что карта, по-видимому,
                                      движется по траектории полета в 1.2
                                      раза быстрее. Screenful --- это
                                      видимый промежуток карты. Он не
                                      соответствует фиксированному
                                      физическому расстоянию, но
                                      изменяется в зависимости от уровня
                                      масштабирования.

  screenSpeed:number?                 Средняя скорость анимации
                                      измеряется в секундах экрана,
                                      предполагая линейную временную
                                      кривую. Если указан параметр
                                      options.speed, то этот параметр
                                      игнорируется.

  maxDuration:number?                 Максимальная продолжительность
                                      анимации, измеряемая в
                                      миллисекундах. Если длительность
                                      превышает максимальную
                                      продолжительность, она сбрасывается
                                      на 0.
  -----------------------------------------------------------------------

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  // fly with default options to null islandmap.flyTo({center: \[0, 0\],
  zoom: 9});// using flyTo optionsmap.flyTo({  \`\`center: \[0,
  0\],  \`\`zoom: 9,  \`\`speed: 0.2,  \`\`curve: 1,  \`\`easing(t)
  {    \`\`return t;  \`\`}});
  -----------------------------------------------------------------------
  getBearing()

  getBounds()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var bounds = map.getBounds();
  -----------------------------------------------------------------------
  getCanvas()

  getCanvasContainer()

  getCenter()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // return a LngLat object such as {lng: 0, lat: 0}var center =
  map.getCenter();// access longitude and latitude values directlyvar
  {longitude, latitude} = map.getCenter();
  -----------------------------------------------------------------------
  getContainer()

  getFeatureState(feature)
  -----------------------------------------------------------------------

Чтобы получить доступ к значениям объекта для целей стилизации объекта,
используйте фича-выражения.

Параметры:

f **eature:Object** идентификатор объекта. Объекты фичи, возвращаемые из
Map#queryRenderedFeatures или обработчиков событий, могут использоваться
в качестве идентификаторов объектов.

options:

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  id:number\|string                   Уникальный идентификатор функции.
                                      Может быть целым числом или
                                      строкой, но поддерживает строковые
                                      значения только тогда, когда
                                      параметр promoteId был применен к
                                      источнику или строка может быть
                                      приведена к целому числу.

  source:string                       Идентификатор вектора или источника
                                      GeoJSON для объекта.

  sourceLayer:string                  (необязательно) Для источников
                                      векторных тайлов требуется
                                      sourceLayer.
  -----------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------
  // When the mouse moves over the \`my-layer\` layer, \<br\>\`// get the feature state for the
  feature under the mouse\`\<br\>\`map.on(\` \`\'mousemove\'\` \`, \` \`\'my-layer\'\` \`, \`
  \`function\` \`(e) {\`\<br\>\`  if(e.features.length \> 0)
  {\<br\>    map.getFeatureState({\`\<br\>\`      source: 'my-source',\<br\>      sourceLayer: \`
  \`\'my-source-layer\'\` \`,\`\<br\>\`      id:
  e.features\[0\].id\<br\>    });\`\<br\>\`  }\<br\>});\`
  -------------------------------------------------------------------------------------------------
  getFilter(layerId)

  getFreeCameraOptions()

  getLayer(id)
  -------------------------------------------------------------------------------------------------

Параметры:

**id:string** идентификатор слоя, который нужно получить.

  -----------------------------------------------------------------------
  var stateDataLayer = map.getLayer( \'state-data\' );
  -----------------------------------------------------------------------
  getLayoutProperty(layerId, name)

  getLight()

  getMaxBounds()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var maxBounds = map.getMaxBounds();
  -----------------------------------------------------------------------
  getMaxPitch()

  getMaxZoom()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var maxZoom = map.getMaxZoom();
  -----------------------------------------------------------------------
  getMinPitch()

  getMinZoom()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var minZoom = map.getMinZoom();
  -----------------------------------------------------------------------
  getPadding()

  getPaintProperty(layerId, name)

  getPitch()

  getRenderWorldCopies()
  -----------------------------------------------------------------------

-   когда карта будет увеличена настолько, что ни одно изображение мира
    не заполнит весь контейнер карты, за пределами 180 и -180 градусов
    долготы останется пустое пространство.

-   объекты, пересекающие 180 и -180 градусов долготы, будут разрезаны
    надвое (одна часть находится на правом краю карты, а другая-на
    левом) на каждом уровне масштабирования.

  -----------------------------------------------------------------------
  var worldCopiesRendered = map.getRenderWorldCopies();
  -----------------------------------------------------------------------
  getSource(id)

  -----------------------------------------------------------------------

Этот метод часто используется для обновления источника с использованием
элементов экземпляра для соответствующего типа источника, определенного
в источниках. Например, установка данных для источника GeoJSON или
обновление URL-адреса и координат источника изображения.

Параметры:

**id:string**идентификатор источника, который нужно получить.

  -----------------------------------------------------------------------
  var sourceObject = map.getSource( \'points\' );
  -----------------------------------------------------------------------
  getStyle()

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  map.on( \'load\' ,  function () {  \`\`var styleJson =
  map.getStyle();});
  -----------------------------------------------------------------------
  getTerrain()

  getZoom()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  map.getZoom();
  -----------------------------------------------------------------------
  hasControl(control)

  -----------------------------------------------------------------------

Параметры:

**control:IControl** IControl для проверки.

  -----------------------------------------------------------------------
  // Define a new navigation control.var navigation =  new
  mmrgl.NavigationControl();// Add zoom and rotation controls to the
  map.map.addControl(navigation);// Check that the navigation control
  exists on the map.const added = map.hasControl(navigation);// added ===
  true
  -----------------------------------------------------------------------
  hasImage(id)

  -----------------------------------------------------------------------

Параметры:

**id:string** идентификатор изображения.

  -----------------------------------------------------------------------
  // Check if an image with the ID \'cat\' exists in// the style\'s
  sprite.var catIconExists = map.hasImage(\'cat\');
  -----------------------------------------------------------------------
  isMoving()

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var isMoving = map.isMoving();
  -----------------------------------------------------------------------
  isRotating()

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  map.isRotating();
  -----------------------------------------------------------------------
  isSourceLoaded(id)

  -----------------------------------------------------------------------

Параметры:

**id:string** идентификатор источника (source), подлежащего проверке.

  -----------------------------------------------------------------------
  var sourceLoaded = map.isSourceLoaded( \'bathymetry-data\' );
  -----------------------------------------------------------------------
  isStyleLoaded()

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var styleLoadStatus = map.isStyleLoaded();
  -----------------------------------------------------------------------
  isZooming()

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var isZooming = map.isZooming();
  -----------------------------------------------------------------------
  jumpTo(options, eventData?)

  -----------------------------------------------------------------------

Параметры:

**options:CameraOptions**  объект опции

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  // jump to coordinates at current zoommap.jumpTo({center: \[0, 0\]});//
  jump with zoom, pitch, and bearing optionsmap.jumpTo({  \`\`center:
  \[0, 0\],  \`\`zoom: 8,  \`\`pitch: 45,  \`\`bearing: 90});Copy
  -----------------------------------------------------------------------
  keyboard

  listImages()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var allImages = map.listImages();
  -----------------------------------------------------------------------
  loaded()

  loadImage(url, callback)
  -----------------------------------------------------------------------

Параметры:

**url:string** URL-адрес файла изображения. Файл изображения должен быть
в формате png, webp или jpg.

**callback:Function** ожидание callback(error, data). Вызывается при
загрузке изображения или с аргументом error, если есть ошибка.

  -----------------------------------------------------------------------
  // Load an image from an external URL.map.loadImage(
  \'http://placekitten.com/50/50\' ,  function (error, image) {if
  (error)  throw error;  \`\`// Add the loaded image to the style\'s
  sprite with the ID \'kitten\'.  \`\`map.addImage(\'kitten\', image);});
  -----------------------------------------------------------------------
  moveLayer(id, beforeId?)

  -----------------------------------------------------------------------

Параметры:

**id:string** идентификатор слоя для перемещения.

**beforeId:string**идентификатор слоя до которого будет вставлен новый
слой. При просмотре карты слой id появится под слоем BeforeID. Если
параметр BeforeID опущен, то слой будет добавлен в конец массива слоев и
появится над всеми другими слоями на карте.

  -----------------------------------------------------------------------
  // Move a layer with ID \'polygon\' before the layer with ID
  \'country-label\'. The \`polygon\` layer will appear beneath the
  \`country-label\` layer on the map.map.moveLayer( \'polygon\' , 
  \'country-label\' );
  -----------------------------------------------------------------------
  off(type, listener)

  off(type, layerId, listener)

  on(type, layerId, listener)
  -----------------------------------------------------------------------

Параметры:

**type:string** тип события для лисенера (listener). События,
совместимые с необязательным параметром layerId, запускаются, когда
курсор входит в видимую часть указанного слоя снаружи этого слоя или за
пределами холста карты.

  -----------------------------------------------------------------------
  Событие                             Совместимость с layerId
  ----------------------------------- -----------------------------------
  mousedown                           yes

  mouseup                             yes

  mouseover                           yes

  mouseout                            yes

  mousemove                           yes

  mouseenter                          yes (required)

  mouseleave                          yes (required)

  click                               yes

  dbclick                             yes

  contextmenu                         yes

  touchstart                          yes

  touchend                            yes

  touchcancel                         yes

  wheel

  resize

  remove

  touchmove

  movestart

  move

  moveend

  dragstart

  drag

  dragend

  zoomstart

  zoom

  zoomend

  rotatestart

  rotate

  rotateend

  pitchstart

  pitch

  pitchend

  boxzoomstart

  boxzoomend

  boxzoomcancel

  webglcontextlost

  webglcontextrestored

  load

  render

  idle

  error

  data

  styledata

  sourcedata

  dataloading

  styledataloading

  sourcedataloading

  styleimagemissing
  -----------------------------------------------------------------------

**layerId:string** (необязательно) идентификатор слоя стиля. Событие
будет вызвано только в том случае, если его местоположение находится в
пределах видимого объекта в этом слое. Событие будет иметь свойство
features, содержащее массив соответствующих объектов. Если layerId не
указан, событие не будет иметь свойства features. Обратите внимание, что
многие типы событий несовместимы с дополнительным параметром layerId.

**listener:Function** функция, вызываемая при запуске события.

  -----------------------------------------------------------------------
  // Set an event listener that will fire// when the map has finished
  loadingmap.on( \'load\' ,  function () {    \`\`// Once the map has
  finished loading,    \`\`// add a new
  layer    \`\`map.addLayer({        \`\`id:  \'points-of-interest\'
  ,        \`\`source: {            \`\`type:  \'vector\'
  ,            \`\`url: 
  \'path-to-source\'        \`\`},        \`\`\'source-layer\' : 
  \'poi_label\' ,        \`\`type:  \'circle\' ,        \`\`paint:
  {            \`\`// Style Specification paint
  properties        \`\`},        \`\`layout: {            \`\`// Style
  Specification layout properties        \`\`}    \`\`});});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------------
  // Set an event listener that will fire// when a feature on the countries
  layer of the map is clickedmap.on( \'click\' ,  \'countries\' ,  function (e)
  {    \`\`new
  mmrgl.Popup()        \`\`.setLngLat(e.lngLat)        \`\`\`.setHTML(Country
  name: \${e.features\[0\].properties.name})\`\`\<br\>        \`.addTo(map);});
  -----------------------------------------------------------------------------
  once(type, listener)

  once(type, layerId, listener)

  panBy(offset, options?, eventData?)

  panTo(lnglat, options?, eventData?)
  -----------------------------------------------------------------------------

Параметры:

**lnglat:**LngLatLike место для панорамирования карты.

**options:**AnimationOptions объект опций

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  map.panTo(\[-74, 38\]);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Specify that the panTo animation should last 5000
  milliseconds.map.panTo(\[-74, 38\], {duration: 5000});
  -----------------------------------------------------------------------
  project(lnglat)

  -----------------------------------------------------------------------

Когда карта наклонена и lnglat полностью находится за камерой, нет
никаких пиксельных координат, соответствующих этому местоположению. В
этом случае компоненты x и y возвращаемой точки имеют значение
Number.MAX_VALUE.

Параметры:

**lnglat:**LngLatLike Географическое положение проекта.

  -----------------------------------------------------------------------
  var coordinate = \[-122.420679, 37.772537\];var point =
  map.project(coordinate);
  -----------------------------------------------------------------------
  queryRenderedFeatures(geometry? options?)

  -----------------------------------------------------------------------

Параметры:

**geometry:**PointLike \| Array Геометрия области запроса в пикселях:
либо одна точка, либо нижняя левая и верхняя правая точки, описывающие
ограничивающую рамку, где начало координат находится в верхнем левом
углу. Пропуск этого параметра (т. е. вызов Map#queryRenderedFeatures с
нулевыми аргументами или только с аргументом options) эквивалентен
передаче ограничивающего прямоугольника, охватывающего весь видовой
экран карты.

options:

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  layers:Array                        Массив идентификаторов слоя стиля
                                      для проверки запроса. Будут
                                      возвращены только объекты внутри
                                      этих слоев. Если этот параметр не
                                      определен, то будут проверены все
                                      слои.

  filter:Array                        Фильтр для ограничения результатов
                                      запроса.

  vali
  -----------------------------------------------------------------------

Возвращает:

Array: Массив объектов GeoJSON.

Значение свойств каждого возвращаемого объекта содержит свойства его
исходного объекта. Для источников GeoJSON поддерживаются только
строковые и числовые значения свойств (т. е. значения null, Array и
Object не поддерживаются).

Каждый объект включает в себя свойства слоя верхнего уровня, источника и
исходного слоя. Свойство layer - это объект, представляющий слой стиля,
к которому принадлежит объект. Свойства layout и paint в этом объекте
содержат значения, которые полностью оцениваются для данного уровня
масштабирования и объекта.

Включены только те функции, которые в данный момент визуализируются.
Некоторые функции не будут включены, например:

-   объекты из слоев, свойство видимости которых равно «none».

-   объекты из слоев, диапазон масштабирования которых исключает текущий
    уровень масштабирования.

-   функции символов, которые были скрыты из-за столкновения текста или
    значков.

Включаются объекты из всех других слоев, включая объекты, которые могут
не иметь визуализируемый результат;

Самый верхний визуализированный объект появляется первым в возвращаемом
массиве, а последующие объекты сортируются по убыванию z-порядка.
Объекты, которые визуализируются несколько раз (из-за обертывания по
антимеридиану при низких уровнях масштабирования), возвращаются только
один раз.

Поскольку объекты берутся из векторных тайлов или данных GeoJSON,
которые преобразуются в тайлы, геометрия объектов может быть разделена
или дублирована через границы тайлов, и в результате объекты могут
появляться несколько раз в результатах запроса. Например, предположим,
что существует шоссе, проходящее через ограничивающий прямоугольник
запроса. Результатом запроса будут те части шоссе, которые лежат внутри
тайлов карты, покрывающих ограничивающий прямоугольник, даже если шоссе
простирается на другие тайлы, и часть шоссе внутри каждой плитки карты
будет возвращена как отдельный объект. Точно так же точечный объект
вблизи границы тайлов может появиться в нескольких тайлах из-за
буферизации тайла.

  -----------------------------------------------------------------------
  // Find all features at a pointvar features =
  map.queryRenderedFeatures(  \`\`\[20, 35\],  \`\`{ layers: \[
  \'my-layer-name\' \] });
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Find all features within a static bounding boxvar features =
  map.queryRenderedFeatures(  \`\`\[\[10, 20\], \[30, 50\]\],  \`\`{
  layers: \[ \'my-layer-name\' \] });
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Find all features within a bounding box around a pointvar width =
  10;var height = 20;var features =
  map.queryRenderedFeatures(\[  \`\`\[point.x - width / 2, point.y -
  height / 2\],  \`\`\[point.x + width / 2, point.y + height / 2\]\], {
  layers: \[ \'my-layer-name\' \] });
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Query all rendered features from a single layervar features =
  map.queryRenderedFeatures({ layers: \[ \'my-layer-name\' \] });
  -----------------------------------------------------------------------
  querySourceFeatures(sourceId, parameters?)

  -----------------------------------------------------------------------

Параметры:

**sourceId:string** идентификатор векторных тайлов или источника GeoJSON
для запроса.

parameters:

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  sourceLayer:string                  Имя исходного слоя для запроса. Для
                                      источников векторных тайлов этот
                                      параметр является обязательным. Для
                                      источников GeoJSON он игнорируется.

  filter:Array                        Фильтр для ограничения результатов
                                      запроса.

  vali
  -----------------------------------------------------------------------

Возвращает:

Array: Массив объектов GeoJSON.

В отличие от Map#queryRenderedFeatures, эта функция возвращает все
объекты, соответствующие параметрам запроса, независимо от того,
отображаются они текущим стилем (т. е. видимыми) или нет. Домен запроса
включает в себя все загруженные в данный момент векторные тайлы и
исходные тайлы GeoJSON: эта функция не проверяет тайлы за пределами
видимого в данный момент окна просмотра.

Поскольку объекты берутся из тайлов векторных данных или данных GeoJSON,
которые преобразуются в тайлы внутренне, геометрия объектов может быть
разделена или дублирована через границы тайлов, и в результате объекты
могут появляться несколько раз в результатах запроса. Например,
предположим, что существует шоссе, проходящее через ограничивающий
прямоугольник запроса. Результатом запроса будут те части шоссе, которые
лежат внутри тайлов карты, покрывающих ограничивающий прямоугольник,
даже если шоссе простирается на другие тайлах, и часть шоссе внутри
каждого тайла карты будет возвращена как отдельный объект. Точно так же
точечный объект вблизи границы тайла может появиться в нескольких тайлах
из-за буферизации тайлов.

  -----------------------------------------------------------------------
  // Find all features in one source layer in a vector sourcevar features
  = map.querySourceFeatures( \'your-source-id\' , {  \`\`sourceLayer: 
  \'your-source-layer\'});
  -----------------------------------------------------------------------
  remove()

  removeControl(control)
  -----------------------------------------------------------------------

Параметры:

control:iControl удаляемый IControl

  -----------------------------------------------------------------------
  // Define a new navigation control.var navigation =  new
  mmrgl.NavigationControl();// Add zoom and rotation controls to the
  map.map.addControl(navigation);// Remove zoom and rotation controls
  from the map.map.removeControl(navigation);
  -----------------------------------------------------------------------
  removeFeatureState(feature, key)

  -----------------------------------------------------------------------

Параметры:

**feature:Object** идентификатор места удаления состояния. Это может
быть источник, объект или определенный ключ объекта. Объекты,
возвращаемые из Map#queryRenderedFeatures или обработчиков событий,
могут использоваться в качестве идентификаторов объектов.

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  id:number\|string                   Уникальный идентификатор объекта.
                                      Может быть целым числом или
                                      строкой, но поддерживает строковые
                                      значения только тогда, когда
                                      параметр promoteId был применен к
                                      источнику или строка может быть
                                      приведена к целому числу.

  source:string                       Идентификатор вектора или источника
                                      GeoJSON для объекта.

  sourceLayer:string                  (необязательно) Для источников
                                      векторных тайлов требуется
                                      sourceLayer.
  -----------------------------------------------------------------------

**key:string**(необязательно) ключ в состоянии объекта для сброса.

  -----------------------------------------------------------------------
  // Reset the entire state object for all features// in the
  \`my-source\` sourcemap.removeFeatureState({  \`\`source: 
  \'my-source\'});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // When the mouse leaves the \`my-layer\` layer, \<br\>\`// reset the
  entire state object for the\`\<br\>\`// feature under the
  mouse\`\<br\>\`map.on(\` \`\'mouseleave\'\` \`, \` \`\'my-layer\'\`
  \`, \` \`function\` \`(e)
  {\`\<br\>\`  map.removeFeatureState({\<br\>    source: \`
  \`\'my-source\'\`
  \`,\`\<br\>\`    sourceLayer: 'my-source-layer',\<br\>    id:
  e.features\[0\].id\`\<br\>\`  });\<br\>});\`
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // When the mouse leaves the \`my-layer\` layer, \<br\>// reset only
  the hover key-value pair in the\<br\>\`// state for the feature under
  the mouse\`\<br\>\`map.on(\` \`\'mouseleave\'\` \`, \` \`\'my-layer\'\`
  \`, \` \`function\` \`(e)
  {\`\<br\>\`  map.removeFeatureState({\<br\>    source: \`
  \`\'my-source\'\`
  \`,\`\<br\>\`    sourceLayer: 'my-source-layer',\<br\>    id:
  e.features\[0\].id\`\<br\>\`  }, 'hover');\<br\>});\`
  -----------------------------------------------------------------------
  removeImage(id)

  -----------------------------------------------------------------------

Параметры:

**id:string** идентификатор изображения.

  -----------------------------------------------------------------------
  // If an image with the ID \'cat\' exists in// the style\'s sprite,
  remove it.if (map.hasImage(\'cat \')) map.removeImage(\' cat\');
  -----------------------------------------------------------------------
  removeLayer(id)

  -----------------------------------------------------------------------

Если такого слоя не существует, запускается событие ошибки.

Параметры:

**id:string** идентификатор слоя для удаления.

  -----------------------------------------------------------------------
  // If a layer with ID \'state-data\' exists, remove it.if
  (map.getLayer( \'state-data\' )) map.removeLayer( \'state-data\' );
  -----------------------------------------------------------------------
  removeSource(id)

  -----------------------------------------------------------------------

Параметры:

**id:string** идентификатор источника для удаления.

  -----------------------------------------------------------------------
  map.removeSource( \'bathymetry-data\' );
  -----------------------------------------------------------------------
  repaint

  resetNorth(options?, eventData?)

  resetNorthPitch(options?, eventData?)

  resize(eventData?)
  -----------------------------------------------------------------------

Проверяет, изменился ли размер контейнера карты, и обновляет карту, если
она изменилась. Этот метод должен быть вызван после того, как контейнер
карты будет изменен программно или когда карта будет показана после
первоначального скрытия с помощью CSS.

Параметры:

**eventData:Object** дополнительные свойства, передаваемые событиям
movestart, move, resize и moveend, которые запускаются в результате
изменения размера. Это может быть полезно для дифференциации источника
события (например, инициированных пользователем или программно
инициированных событий).

  -----------------------------------------------------------------------
  // Resize the map when the map container is shown// after being
  initially hidden with CSS.var mapDiv = document.getElementById( \'map\'
  );if (mapDiv.style.visibility ===  true ) map.resize();
  -----------------------------------------------------------------------
  rotateTo(bearing, options?, eventData?)

  scrollZoom

  setBearing(bearing, eventData?)
  -----------------------------------------------------------------------

Эквивалентно jumpTo({bearing: bearing}).

Параметры:

**bearing:number** желаемый пеленг

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  // rotate the map to 90 degreesmap.setBearing(90);
  -----------------------------------------------------------------------
  setCenter(center, eventData?)

  -----------------------------------------------------------------------

Параметры:

**center:LngLatLike** центральная точка для установки.

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  map.setCenter(\[-74, 38\]);
  -----------------------------------------------------------------------
  setFeatureState(feature, state)

  -----------------------------------------------------------------------

Этот метод можно использовать только с источниками, имеющими feature.id
атрибут. Feature.id атрибут может быть определен тремя способами:

-   для векторных источников или источников GeoJSON, включая атрибут id
    в исходном файле данных.

-   для векторных источников или источников GeoJSON используйте опцию
    promoteId во время определения источника.

-   для источников GeoJSON используйте опцию generateId для
    автоматического назначения идентификатора на основе индекса объекта
    в исходных данных. Если вы изменяете данные объектов с помощью
    map.getSource('some id').setData(..), вам может потребоваться
    повторно применить состояние с учетом обновленных значений
    идентификаторов.

Параметры:

**feature:Object**идентификатор объекта. Объекты, возвращаемые из
Map#queryRenderedFeatures или обработчиков событий, могут использоваться
в качестве идентификаторов объектов.

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  id:number\|string                   Уникальный идентификатор объекта.
                                      Может быть целым числом или
                                      строкой, но поддерживает строковые
                                      значения только тогда, когда
                                      параметр promoteId был применен к
                                      источнику или строка может быть
                                      приведена к целому числу.

  source:string                       Идентификатор вектора или источника
                                      GeoJSON для объекта.

  sourceLayer:string                  (необязательно) Для источников
                                      векторных тайлов требуется
                                      sourceLayer.
  -----------------------------------------------------------------------

**state:Object** набор пар ключ-значение. Значения должны быть
допустимыми типами JSON.

  -----------------------------------------------------------------------
  // When the mouse moves over the \`my-layer\` layer, update// the
  feature state for the feature under the mousemap.on( \'mousemove\' , 
  \'my-layer\' ,  function (e) {  \`\`if (e.features.length \> 0)
  {    \`\`map.setFeatureState({      \`\`source:  \'my-source\'
  ,      \`\`sourceLayer:  \'my-source-layer\' ,      \`\`id:
  e.features\[0\].id,    \`\`}, {      \`\`hover: 
  true    \`\`});  \`\`}});
  -----------------------------------------------------------------------
  setFilter(layerId, filter, options = {})

  -----------------------------------------------------------------------

Фильтры управляют тем, какие объекты слоя стиля визуализируются из его
источника. Любой объект, для которого выражение фильтра имеет
значение true, будет отображен на карте. Те, что false, будут скрыты.

Используйте setFilter для отображения подмножества исходных данных.

Чтобы очистить фильтр, передайте null или undefined в качестве второго
параметра.

Параметры:

**layerId:string** идентификатор слоя, к которому будет применен фильтр.

**filter: Array \| null \| undefined** фильтр, соответствующий
определению фильтра спецификации стиля. Если задано значение null или
undefined, функция удаляет любой существующий фильтр из слоя.

**options:object**по умолчанию {} объект опций

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  vali

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // display only features with the \'name\' property
  \'USA\'map.setFilter( \'my-layer\' , \[ \'==\' , \[ \'get\' ,  \'name\'
  \],  \'USA\' \]);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // display only features with five or more
  \'available-spots\'map.setFilter( \'bike-docks\' , \[ \'\>=\' , \[
  \'get\' ,  \'available-spots\' \], 5\]);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // remove the filter for the \'bike-docks\' style layermap.setFilter(
  \'bike-docks\' ,  null );
  -----------------------------------------------------------------------
  setFreeCameraOptions(options, eventData?)

  setLayerZoomRange(layerId, minzoom, maxzoom)
  -----------------------------------------------------------------------

Для слоев стилей, использующих векторные источники, слои стилей не могут
быть отрисованы на уровнях масштабирования ниже минимального уровня
масштабирования исходного слоя, поскольку данные не существуют на этих
уровнях масштабирования. Если минимальный уровень масштабирования
исходного слоя выше минимального уровня масштабирования, определенного в
слое стиля, слой стиля не будет отображаться на всех уровнях
масштабирования в диапазоне масштабирования.

Параметры:

**layerId:string** идентификатор слоя, к которому будет применена
степень масштабирования.

**minzoom:number** минимальный масштаб для установки (0-24).

**maxzoom:number** максимальный масштаб для установки (0-24).

  -----------------------------------------------------------------------
  map.setLayerZoomRange( \'my-layer\' , 2, 5);
  -----------------------------------------------------------------------
  setLayoutProperty(layerId, name, value, options = {})

  -----------------------------------------------------------------------

Параметры:

**layerId:string** идентификатор слоя, в котором задается свойство.

**name:string** имя устанавливаемого свойства.

**value:any** значение свойства. Должен иметь тип, соответствующий этому
свойству, как определено в спецификации стиля.

**options:object**по умолчанию {} объект опций

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  vali

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  map.setLayoutProperty( \'my-layer\' ,  \'visibility\' ,  \'none\' );
  -----------------------------------------------------------------------
  setLight(light, options = {})

  -----------------------------------------------------------------------

Параметры:

**light:LightSpecification** свойства освещенности. Должен
соответствовать спецификации стиля.

**options:object**по умолчанию {} объект опций

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  vali

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  var layerVisibility = map.getLayoutProperty( \'my-layer\' , 
  \'visibility\' );
  -----------------------------------------------------------------------
  setMaxBounds(bounds)

  -----------------------------------------------------------------------

Операции панорамирования и масштабирования ограничены этими границами.
Если выполняется панорамирование или масштабирование, которые отображают
области за пределами этих границ, карта вместо этого отображает
положение и уровень масштабирования как можно ближе к запросу операции,
оставаясь при этом в пределах этих границ.

Параметры:

**bounds:LngLatBoundsLike \| null \| undefined** максимальные границы
для установки. Если задано значение null или undefined, функция удаляет
максимальные границы карты.

  -----------------------------------------------------------------------
  // Define bounds that conform to the \`LngLatBoundsLike\` object.var
  bounds = \[  \`\`\[-74.04728, 40.68392\],  // \[west,
  south\]  \`\`\[-73.91058, 40.87764\]   // \[east, north\]\];// Set the
  map\'s max bounds.map.setMaxBounds(bounds);
  -----------------------------------------------------------------------
  setMaxPitch(maxPitch)

  setMaxZoom(maxZoom)
  -----------------------------------------------------------------------

Параметры:

**maxZoom:number \| null \| undefined** максимальный уровень
масштабирования для установки. Если задано значение null или undefined,
функция удаляет текущий максимальный масштаб (устанавливает его равным
22).

  -----------------------------------------------------------------------
  map.setMaxZoom(18.75);
  -----------------------------------------------------------------------
  setMinPitch(minPitch)

  setMinZoom(minZoom)
  -----------------------------------------------------------------------

Не всегда можно уменьшить масштаб и достичь установленного minZoom.
Другие факторы, такие как высота карты, могут ограничить
масштабирование. Например, если карта имеет высоту 512 пикселей, то
масштабирование ниже zoom 0 будет невозможно, независимо от того, на что
установлен minZoom.

Параметры:

**minZoom:number \| null \| undefined** минимальный уровень
масштабирования для установки (-2 - 24). Если задано значение null или
undefined, функция удаляет текущий минимальный масштаб (т. е.
Устанавливает его равным -2).

  -----------------------------------------------------------------------
  map.setMinZoom(12.25);
  -----------------------------------------------------------------------
  setPadding(padding, eventData?)

  -----------------------------------------------------------------------

Эквивалентно jumpTo({padding: padding}).

Параметры:

**padding:PaddingOptions** желаемые отступы. Формат: { left: number,
right: number, top: number, bottom: number }

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  // Sets a left padding of 300px, and a top padding of
  50pxmap.setPadding({ left: 300, top: 50 });
  -----------------------------------------------------------------------
  setPaintProperty(layerId, name, value, options = {})

  -----------------------------------------------------------------------

Параметры:

**layerId:string**идентификатор слоя, в котором задается свойство.

**name:string**имя устанавливаемого свойства.

**value:any** значение свойства. Должен иметь тип, соответствующий этому
свойству, как определено в спецификации стиля.

**options:object**по умолчанию {} объект опций

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  vali

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  map.setPaintProperty( \'my-layer\' ,  \'fill-color\' ,  \'#faafee\' );
  -----------------------------------------------------------------------
  setPitch(pitch, eventData?)

  setRenderWorldCopies(renderWorldCopies)
  -----------------------------------------------------------------------

Параметры:

**renderWorldCopies:boolean**если true, то несколько копий мира будут
отображаться бок о бок за пределами -180 и 180 градусов долготы. Если
установлено значение false:

-   когда карта будет увеличена настолько, что ни одно изображение мира
    не заполнит весь контейнер карты, за пределами 180 и -180 градусов
    долготы останется пустое пространство.

-   объекты, пересекающие 180 и -180 градусов долготы, будут разрезаны
    надвое (одна часть находится на правом краю карты, а другая-на
    левом) на каждом уровне масштабирования.

undefined трактуется как true, null --- как false.

  -----------------------------------------------------------------------
  map.setRenderWorldCopies( true );
  -----------------------------------------------------------------------
  setStyle(style, options?)

  -----------------------------------------------------------------------

Если при использовании этого параметра стиль уже задан и options.diff
имеет значение true, средство визуализации карты попытается сравнить
данный стиль с текущим состоянием карты и выполнить только те изменения,
которые необходимы для того, чтобы стиль карты соответствовал желаемому
состоянию. Изменения в спрайтах (изображениях, используемых для иконок и
узоров) и глифах (шрифтах для текста надписи) не могут быть различены.
Если спрайты или шрифты, используемые в текущем стиле и данном стиле,
каким-либо образом отличаются, рендерер карты принудительно выполнит
полное обновление, удалив текущий стиль и построив данный с нуля.

Параметры:

**style:StyleSpecification \| string \| null** объект JSON,
соответствующий схеме, описанной в спецификации стиля, или URL-адрес
такого JSON.

**options:Object** объект опции

  --------------------------------------------------------------------------------------
  Название                                  Описание
  ----------------------------------------- --------------------------------------------
  diff:booleandefault: true                 Если false, принудительно выполните полное
                                            обновление, удалив текущий стиль и создав
                                            данный, вместо того чтобы пытаться обновить
                                            его на основе diff.

  localIdeographFontFamily:stringdefault:   Определяет семейство шрифтов CSS для
  'sans-serif'                              локально переопределяющей генерации глифов в
                                            рамках «CJK Unified
                                            Ideographs»,«Hiragana»,«Katakana» и«Hangul
                                            Syllables». В этих рамках настройки шрифта
                                            из стиля карты будут игнорироваться, за
                                            исключением ключевых слов с весом шрифта
                                            (light/regular/medium/bold). Установите
                                            значение false, чтобы включить настройки
                                            шрифта из стиля карты для этих диапазонов
                                            глифов. Форсирует полное обновление.
  --------------------------------------------------------------------------------------

  -----------------------------------------------------------------------
  map.setStyle( \"path-to-style\" );
  -----------------------------------------------------------------------
  setTerrain(terrain)

  -----------------------------------------------------------------------

Параметры:

**terrain:TerrainSpecification** свойства для установки. Должен
соответствовать спецификации стиля. Если задано значение null или
undefined, функция удаляет terrain.

  -----------------------------------------------------------------------
  map.addSource( \'mmr-dem\' , {  \`\`\'type\' :  \'raster-dem\'
  ,  \`\`\'url\' :  \'path-to-source\' ,  \`\`\'tileSize\' :
  512,  \`\`\'maxzoom\' : 14});// add the DEM source as a terrain layer
  with exaggerated heightmap.setTerrain({  \'source\' :  \'mmr-dem\' , 
  \'exaggeration\' : 1.5 });
  -----------------------------------------------------------------------
  setZoom(zoom, eventData?)

  -----------------------------------------------------------------------

Параметры:

**zoom:number** уровень масштабирования для установки (0-20).

**eventData:Object** дополнительные свойства, которые будут добавлены к
объектам событий событий, вызванных этим методом.

  -----------------------------------------------------------------------
  // Zoom to the zoom level 5 without an animated
  transitionmap.setZoom(5);
  -----------------------------------------------------------------------
  showCollisionBoxes

  showPadding

  showTerrainWireframe
  -----------------------------------------------------------------------

Каркас всегда красный и рисуется только при активном рельефе.

  -----------------------------------------------------------------------
  map.showTerrainWireframe =  true ;
  -----------------------------------------------------------------------
  showTileBoundaries

  -----------------------------------------------------------------------

Размер несжатого файла первого векторного источника отображается в
верхнем левом углу каждой плитки рядом с идентификатором плитки.

  -----------------------------------------------------------------------
  map.showTileBoundaries =  true ;
  -----------------------------------------------------------------------
  snapToNorth(options?, eventData?)

  stop()

  touchPitch

  touchZoomRotate

  triggerRepaint()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  map.triggerRepaint();
  -----------------------------------------------------------------------
  unproject(point)

  -----------------------------------------------------------------------

Параметры:

**point:PointLike** пиксельные координаты для unproject

  -----------------------------------------------------------------------
  map.on( \'click\' ,  function (e) {  \`\`// When the map is clicked,
  get the geographic coordinate.  \`\`var coordinate =
  map.unproject(e.point);});
  -----------------------------------------------------------------------
  updateImage(id, image)

  -----------------------------------------------------------------------

Параметры:

**id:string** идентификатор изображения.

**image:(HTMLImageElement \| ImageBitmap \| ImageData \| {width: number,
height: number, data: (Uint8ClampedArray \| Uint8ClampedArray)}
\| StyleImageInterface** **)** изображение в виде HTMLImageElement,
ImageData, ImageBitmap или объекта со свойствами width, height и data в
том же формате, что и ImageData.

  -----------------------------------------------------------------------
  // If an image with the ID \'cat\' already exists in the style\'s
  sprite,// replace that image with a new image,
  \'other-cat-icon.png\'.if (map.hasImage(\'cat \')) map.updateImage(\'
  cat \', \' ./other-cat-icon.png\');
  -----------------------------------------------------------------------
  version

  zoomIn(options?, eventData?)
  -----------------------------------------------------------------------

Параметры:

**options:AnimationOptions** объект опций

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  // zoom the map in one level with a custom animation
  durationmap.zoomIn({duration: 1000});
  -----------------------------------------------------------------------
  zoomOut(options?, eventData?)

  -----------------------------------------------------------------------

Параметры:

**options:AnimationOptions** объект опций

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  // zoom the map out one level with a custom animation
  offsetmap.zoomOut({offset: \[80, 60\]});
  -----------------------------------------------------------------------
  zoomTo(zoom, options, eventData?)

  -----------------------------------------------------------------------

Параметры:

**zoom:number** уровень масштабирования для перехода.

**options:AnimationOptions** объект опций

**eventData** дополнительные свойства, добавляемые к объектам событий,
инициируемых этим методом.

  -----------------------------------------------------------------------
  // Zoom to the zoom level 5 without an animated
  transitionmap.zoomTo(5);// Zoom to the zoom level 8 with an animated
  transitionmap.zoomTo(8, {  \`\`duration: 2000,  \`\`offset: \[100,
  50\]});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**События**

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  boxzoomcancel                       Срабатывает, когда пользователь
                                      отменяет взаимодействие
                                      «масштабирование коробки» или когда
                                      ограничивающий прямоугольник не
                                      соответствует минимальному порогу
                                      размера. См. BoxZoomHandler

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// the user cancels a \"box zoom\"
  interaction.map.on( \'boxzoomcancel\' ,  function ()
  {  \`\`console.log( \'A boxzoomcancel event occurred.\' );});
  -----------------------------------------------------------------------
  boxzoomend

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just after a \"box zoom\"
  interaction ends.map.on( \'boxzoomend\' ,  function ()
  {  \`\`console.log( \'A boxzoomend event occurred.\' );});
  -----------------------------------------------------------------------
  boxzoomstart

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just before a \"box zoom\"
  interaction starts.map.on( \'boxzoomstart\' ,  function ()
  {  \`\`console.log( \'A boxzoomstart event occurred.\' );});
  -----------------------------------------------------------------------
  click

  -----------------------------------------------------------------------

Это событие совместимо с необязательным параметром layerId. Если layerId
включен в качестве второго аргумента в Map#on, лисенер событий будет
срабатывать только тогда, когда точка, которая нажата, содержит видимую
часть указанного слоя.

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listenermap.on( \'click\' ,  function (e)
  {  \`\`console.log( \'A click event has occurred at \' + e.lngLat);});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener for a specific layermap.on( \'click\' , 
  \'poi-label\' ,  function (e) {  \`\`console.log( \'A click event has
  occurred on a visible portion of the poi-label layer at \' +
  e.lngLat);});
  -----------------------------------------------------------------------
  contextmenu

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when the right mouse button is//
  pressed within the map.map.on( \'contextmenu\' ,  function ()
  {    \`\`console.log( \'A contextmenu event occurred.\' );});
  -----------------------------------------------------------------------
  data

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when map data loads or
  changes.map.on( \'data\' ,  function () {  \`\`console.log( \'A data
  event occurred.\' );});
  -----------------------------------------------------------------------
  dataloading

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when any map data begins loading//
  or changing asynchronously.map.on( \'dataloading\' ,  function ()
  {  \`\`console.log( \'A dataloading event occurred.\' );});
  -----------------------------------------------------------------------
  dbclick

  -----------------------------------------------------------------------

Это событие совместимо с необязательным параметром layerId. Если layerId
включен в качестве второго аргумента в Map#on, лисенер событий будет
срабатывать только тогда, когда дважды щелкнутая точка содержит видимую
часть указанного слоя.

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listenermap.on( \'dblclick\' ,  function (e)
  {  \`\`console.log( \'A dblclick event has occurred at \' +
  e.lngLat);});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener for a specific layermap.on( \'dblclick\' , 
  \'poi-label\' ,  function (e) {  \`\`console.log( \'A dblclick event
  has occurred on a visible portion of the poi-label layer at \' +
  e.lngLat);});
  -----------------------------------------------------------------------
  drag

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// repeatedly  during a \"drag to pan\"
  interaction.map.on( \'drag\' ,  function () {  \`\`console.log( \'A
  drag event occurred.\' );});
  -----------------------------------------------------------------------
  dragend

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when a \"drag to pan\" interaction
  ends.map.on( \'dragend\' ,  function () {  \`\`console.log( \'A dragend
  event occurred.\' );});
  -----------------------------------------------------------------------
  dragstart

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when a \"drag to pan\" interaction
  starts.map.on( \'dragstart\' ,  function () {  \`\`console.log( \'A
  dragstart event occurred.\' );});
  -----------------------------------------------------------------------
  error

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when an error occurs.map.on(
  \'error\' ,  function () {  \`\`console.log( \'A error event
  occurred.\' );});
  -----------------------------------------------------------------------
  idle

  -----------------------------------------------------------------------

-   никаких переходов камеры не происходит

-   все запрошенные в данный момент тайлы загружены

-   все анимации затухания/перехода завершены

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just before the map enters an
  \"idle\" state.map.on( \'idle\' ,  function () {  \`\`console.log( \'A
  idle event occurred.\' );});
  -----------------------------------------------------------------------
  load

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when the map has finished
  loading.map.on( \'load\' ,  function () {  \`\`console.log( \'A load
  event occurred.\' );});
  -----------------------------------------------------------------------
  mousedown

  -----------------------------------------------------------------------

Это событие совместимо с необязательным параметром layerId. Если layerId
включен в качестве второго аргумента в Map#on, лисенер событий будет
срабатывать только при нажатии курсора, находясь внутри видимой части
указанного слоя.

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listenermap.on( \'mousedown\' ,  function ()
  {  \`\`console.log( \'A mousedown event has occurred.\' );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener for a specific layermap.on( \'mousedown\' , 
  \'poi-label\' ,  function () {  \`\`console.log( \'A mousedown event
  has occurred on a visible portion of the poi-label layer.\' );});
  -----------------------------------------------------------------------
  mouseenter

  -----------------------------------------------------------------------

Это событие можно прослушивать только тогда, когда Map#on включает в
себя три аргумента, где второй аргумент указывает нужный слой.

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listenermap.on( \'mouseenter\' ,  \'water\' ,  function ()
  {  \`\`console.log( \'A mouseenter event occurred on a visible portion
  of the water layer.\' );});
  -----------------------------------------------------------------------
  mouseleave

  -----------------------------------------------------------------------

Это событие можно прослушивать только тогда, когда Map#on включает в
себя три аргумента, где второй аргумент указывает нужный слой.

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when the pointing device leaves// a
  visible portion of the specified layer.map.on( \'mouseleave\' , 
  \'water\' ,  function () {  \`\`console.log( \'A mouseleave event
  occurred.\' );});
  -----------------------------------------------------------------------
  mousemove

  -----------------------------------------------------------------------

Это событие совместимо с необязательным параметром layerId. Если layerId
включен в качестве второго аргумента в Map#on, лисенер событий будет
срабатывать только тогда, когда курсор находится внутри видимой части
указанного слоя.

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listenermap.on( \'mousemove\' ,  function ()
  {  \`\`console.log( \'A mousemove event has occurred.\' );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener for a specific layermap.on( \'mousemove\' , 
  \'poi-label\' ,  function () {  \`\`console.log( \'A mousemove event
  has occurred on a visible portion of the poi-label layer.\' );});
  -----------------------------------------------------------------------
  mouseout

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when the pointing device leave\'s//
  the map\'s canvas.map.on( \'mouseout\' ,  function ()
  {  \`\`console.log( \'A mouseout event occurred.\' );});
  -----------------------------------------------------------------------
  mouseover

  -----------------------------------------------------------------------

Это событие совместимо с необязательным параметром layerId. Если layerId
включен в качестве второго аргумента в Map#on, лисенер событий будет
срабатывать только при перемещении курсора внутри видимой части
указанного слоя.

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listenermap.on( \'mouseover\' ,  function ()
  {  \`\`console.log( \'A mouseover event has occurred.\' );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener for a specific layermap.on( \'mouseover\' , 
  \'poi-label\' ,  function () {  \`\`console.log( \'A mouseover event
  has occurred on a visible portion of the poi-label layer.\' );});
  -----------------------------------------------------------------------
  mouseup

  -----------------------------------------------------------------------

Это событие совместимо с необязательным параметром layerId. Если layerId
включен в качестве второго аргумента в Map#on, прослушиватель событий
будет срабатывать только тогда, когда курсор будет отпущен, находясь
внутри видимой части указанного слоя.

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listenermap.on( \'mouseup\' ,  function ()
  {  \`\`console.log( \'A mouseup event has occurred.\' );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener for a specific layermap.on( \'mouseup\' , 
  \'poi-label\' ,  function () {  \`\`console.log( \'A mouseup event has
  occurred on a visible portion of the poi-label layer.\' );});
  -----------------------------------------------------------------------
  move

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// repeatedly during an animated
  transition.map.on( \'move\' ,  function () {  \`\`console.log( \'A move
  event occurred.\' );});
  -----------------------------------------------------------------------
  moveend

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just after the map completes a
  transition.map.on( \'moveend\' ,  function () {  \`\`console.log( \'A
  moveend event occurred.\' );});
  -----------------------------------------------------------------------
  movestart

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just before the map begins a
  transition// from one view to another.map.on( \'movestart\' ,  function
  () {  \`\`console.log( \'A movestart\` event occurred.\' );});
  -----------------------------------------------------------------------
  pitch

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// repeatedly during a pitch (tilt)
  transition.map.on( \'pitch\' ,  function () {  \`\`console.log( \'A
  pitch event occurred.\' );});
  -----------------------------------------------------------------------
  pitchend

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just after a pitch (tilt) transition
  ends.map.on( \'pitchend\' ,  function () {  \`\`console.log( \'A
  pitchend event occurred.\' );});
  -----------------------------------------------------------------------
  pitchstart

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just before a pitch (tilt)
  transition starts.map.on( \'pitchstart\' ,  function ()
  {  \`\`console.log( \'A pitchstart event occurred.\' );});
  -----------------------------------------------------------------------
  remove

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just after the map is
  removed.map.on( \'remove\' ,  function () {  \`\`console.log( \'A
  remove event occurred.\' );});
  -----------------------------------------------------------------------
  render

  -----------------------------------------------------------------------

-   изменение положения карты, масштабирования, высоты тона или пеленга

-   изменение стиля карты

-   изменение источника GeoJSON

-   загрузка векторного тайла, файла GeoJSON, глифа или спрайта

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// whenever the map is drawn to the
  screen.map.on( \'render\' ,  function () {  \`\`console.log( \'A render
  event occurred.\' );});
  -----------------------------------------------------------------------
  resize

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// immediately after the map has been
  resized.map.on( \'resize\' ,  function () {  \`\`console.log( \'A
  resize event occurred.\' );});
  -----------------------------------------------------------------------
  rotate

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// repeatedly during \"drag to rotate\"
  interaction.map.on( \'rotate\' ,  function () {  \`\`console.log( \'A
  rotate event occurred.\' );});
  -----------------------------------------------------------------------
  rotateend

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just after a \"drag to rotate\"
  interaction ends.map.on( \'rotateend\' ,  function ()
  {  \`\`console.log( \'A rotateend event occurred.\' );});
  -----------------------------------------------------------------------
  rotatestart

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just before a \"drag to rotate\"
  interaction starts.map.on( \'rotatestart\' ,  function ()
  {  \`\`console.log( \'A rotatestart event occurred.\' );});
  -----------------------------------------------------------------------
  sourcedata

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when one of the map\'s sources loads
  or changes.map.on(\'sourcedata \', function() {  \`\`console.log(\' A
  sourcedata event occurred.\');});
  -----------------------------------------------------------------------
  sourcedataloading

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// map\'s sources begin loading or//
  changing asyncronously.map.on(\'sourcedataloading \', function()
  {  \`\`console.log(\' A sourcedataloading event occurred.\');});
  -----------------------------------------------------------------------
  styledata

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when the map\'s style loads or
  changes.map.on(\'styledata \', function() {  \`\`console.log(\' A
  styledata event occurred.\');});
  -----------------------------------------------------------------------
  styledataloading

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// map\'s style begins loading or//
  changing asyncronously.map.on(\'styledataloading \', function()
  {  \`\`console.log(\' A styledataloading event occurred.\');});
  -----------------------------------------------------------------------
  styleimagemissing

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// an icon or pattern is
  missing.map.on( \'styleimagemissing\' ,  function ()
  {  \`\`console.log( \'A styleimagemissing event occurred.\' );});
  -----------------------------------------------------------------------
  touchcancel

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when a touchcancel event occurs
  within the map.map.on( \'touchcancel\' ,  function ()
  {  \`\`console.log( \'A touchcancel event occurred.\' );});
  -----------------------------------------------------------------------
  touchend

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when a touchstart event occurs
  within the map.map.on( \'touchstart\' ,  function ()
  {  \`\`console.log( \'A touchstart event occurred.\' );});
  -----------------------------------------------------------------------
  touchmove

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when a touchmove event occurs within
  the map.map.on( \'touchmove\' ,  function () {  \`\`console.log( \'A
  touchmove event occurred.\' );});
  -----------------------------------------------------------------------
  touchstart

  -----------------------------------------------------------------------

Параметры:

**data:MapMouseEvent**

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when a touchstart event occurs
  within the map. map.on(\'touchstart\', function() {  \`\`console.log(
  \'A touchstart event occurred.\' );});
  -----------------------------------------------------------------------
  webglcontextlost

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when the WebGL context is
  lost.map.on( \'webglcontextlost\' ,  function () {  \`\`console.log(
  \'A webglcontextlost event occurred.\' );});
  -----------------------------------------------------------------------
  webglcontextrestored

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when the WebGL context is
  restored.map.on( \'webglcontextrestored\' ,  function ()
  {  \`\`console.log( \'A webglcontextrestored event occurred.\' );});
  -----------------------------------------------------------------------
  wheel

  -----------------------------------------------------------------------

Параметры:

**data:MapMouseEvent**

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// when a wheel event occurs within the
  map.map.on( \'wheel\' ,  function () {  \`\`console.log( \'A wheel
  event occurred.\' );});
  -----------------------------------------------------------------------
  zoom

  -----------------------------------------------------------------------

Параметры:

**data:(MapMouseEvent \| MapTouchEvent)**

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// repeatedly during a zoom
  transition.map.on( \'zoom\' ,  function () {  \`\`console.log( \'A zoom
  event occurred.\' );});
  -----------------------------------------------------------------------
  zoomend

  -----------------------------------------------------------------------

Параметры:

**data:(MapMouseEvent \| MapTouchEvent)**

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just after a zoom transition
  finishes.map.on( \'zoomend\' ,  function () {  \`\`console.log( \'A
  zoomend event occurred.\' );});
  -----------------------------------------------------------------------
  zoomstart

  -----------------------------------------------------------------------

Параметры:

**data:(MapMouseEvent \| MapTouchEvent)**

  -----------------------------------------------------------------------
  // Initialize the mapvar map =  new mmrgl.Map({  // map options });//
  Set an event listener that fires// just before a zoom transition
  starts.map.on( \'zoomstart\' ,  function () {  \`\`console.log( \'A
  zoomstart event occurred.\' );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

2\. Свойства и опции

accessToken:string

Токен доступа к карте.The event type.

src/index.js

Пример:

  -----------------------------------------------------------------------
  mmrgl.accessToken = myAccessToken
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

baseApiUrl:string

Начальный API URL, используемый для получения тайлов, стилей, спрайтов и
глифов

src/index.js

Пример:

  -----------------------------------------------------------------------
  mmrgl.baseApiUrl =  \'https://geo.rustore.ru/api\' ;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

workerCount:number

Количество веб-воркеров на странице с GL JS картами. По умолчанию это
половина числа ядер (ограничено 6). Обязательно нужно устанавливать этот
параметр перед инициализацией карты.

src/index.js

Пример:

  -----------------------------------------------------------------------
  mmrgl.workerCount = 2;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

maxParallelImageRequests:number

Максимальное количество изображений (растровых тайлов, спрайтов, иконок)
для параллельной загрузки. Влияет на производительность в растровых
картах. 16 по умолчанию.

src/index.js

Пример:

  -----------------------------------------------------------------------
  mmrgl.maxParallelImageRequests = 10;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

supported:function

Проверяет поддержку браузером GL JS

src/index.js

Пример:

  -----------------------------------------------------------------------
  if (!mmrgl.supported()) {  \`\`alert( \'Your browser does not support
  MMR GL\' );}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

version:string

Версия текущей сборки MMR GL

src/index.js

Пример:

  -----------------------------------------------------------------------
  console.log(mmrgl.version);//\> 1.2.3;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

setRTLTextPlugin:function

Устанавливает плагин для поддержки RTL. Необходимо для поддержки
арабского и еврейского языков.

src/index.js

Параметры:

**pluginURL:string**--- путь до RTL плагина.

**callback:function(error:object)**--- функция вызывается если есть
ошибка.

**lazy:boolean** --- ленивая подгрузка.

Пример:

  -----------------------------------------------------------------------
  mmrgl.setRTLTextPlugin(pluginUrl,  function (error) {    \`\`if (error)
  {        \`\`console.log( \'something was wrong\' , error);    \`\`} 
  else {        \`\`console.log( \'rtl-text-plugin loaded successfully\'
  );    \`\`}},  true );
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

getRTLTextPluginStatus:function

Получаем статус RTL плагина. Статус плагина может быть: unavailable (т.
е. не запрошено или удалено), loading, loaded или error. Если
статус loaded и плагин запрашивается снова, то будет выдана ошибка.

src/index.js

Пример:

  -----------------------------------------------------------------------
  const pluginStatus = mmrgl.getRTLTextPluginStatus();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

clearStorage:function

Очищает cacheStorage в котором могут храниться кэш тайлов

src/index.js

Параметры:

**callback:function(error:object)**--- путь до RTL плагина.

Пример:

  -----------------------------------------------------------------------
  mmrgl.clearStorage()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

AnimationOptions (группа параметров)

Параметры, влияющие на анимацию (используются в методах: Map#panBy,
Map#easeTo), контролируют продолжительность и функцию плавности анимации
(easing function). Являются необязательными.

src/ui/camera.js

Параметры:

**duration:number**--- продолжительность анимации (в миллисекундах).

**easing:function**--- функция, принимающая время в диапазоне 0..1 и
возвращающая число, где 0-начальное состояние, а 1-конечное.

**offset:PointLike**--- смещение центра относительно реального центра
контейнера карты в конце анимации.

**animate:boolean**--- если false, анимации будут отключены.

**essential:boolean**--- если true, то анимация считается существенной и
не будет затронута prefers-reduced-motion (предпочитает уменьшенное
движение).

CameraOptions (группа параметров)

Параметры, влияющие на камеру (используются в методах: Map#jumpTo,
Map#easeTo и Map#flyTo), контролируют location (стартовая позиция), zoom
(масштабирование), bearing и pitch камеры  Все свойства являются
необязательными.

src/ui/camera.js

Параметры:

**center:LngLatLike**--- центр карты.

**zoom:number**--- удаленность (масштаб) карты.

**bearing:number**--- нужный пеленг в градусах. Пеленг --- это
направление компаса, которое находится «вверх». Например, пеленг: 90
ориентирует карту так, чтобы восток был вверх.

**pitch:number**--- желаемый наклон карты в градусах. Тангаж --- угол к
горизонту, измеряемый в градусах с диапазоном от 0 до 60 градусов.
Например, pitch: 0 обеспечивает видимость взгляда прямо вниз на карту, в
то время как pitch: 60 наклоняет перспективу пользователя к горизонту.
Увеличение значения наклона часто используется для отображения
3D-объектов.

**around:LngLatLike ---** если задан zoom, around определяет точку,
вокруг которой центрируется zoom.

**padding:PaddingOptions**--- применяется к каждой стороне viewport'а
для смещения точки схода (актуально когда карта наклонена).

PaddingOptions (группа параметров)

Параметры отступов (используются в методах: Map#fitBounds,
Map#fitScreenCoordinates и Map#setPadding). Отрегулируйте эти параметры,
чтобы установить количество отступов в пикселях, добавленных к краям
карты. Все свойства этого объекта должны быть неотрицательными целыми
числами.

src/ui/camera.js

Параметры:

**top:number**--- отступ в пикселях сверху карты.

**bottom:number**--- отступ в пикселях снизу карты.

**left:number**--- отступ в пикселях слева карты.

**right:number**--- отступ в пикселях справа карты.

Пример:

  -----------------------------------------------------------------------
  var bbox = \[\[-79, 43\], \[-73, 45\]\];map.fitBounds(bbox,
  {  \`\`padding: {top: 10, bottom:25, left: 15, right: 5}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var bbox = \[\[-79, 43\], \[-73, 45\]\];map.fitBounds(bbox,
  {  \`\`padding: 20});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

RequestParameters (группа параметров)

Объект, возвращаемый методом callback'ом Map.options.transformRequest

src/ui/ajax.js

Параметры:

**url:string**--- URL запроса.

**headers:object**--- заголовки отправляемые с запросом.

**method:string**--- метод запроса 'GET' \| 'POST' \| 'PUT'.

**type:string**--- возвращаемый тип тела запроса (body response)
'string' \| 'json' \| 'arrayBuffer'.

**credentials:string**--- 'same-origin' \| 'include' Используйте
'include' для отправки кук (cookies) в кроссдоменных запросах.

**collectResourceTiming:boolean**--- если true, то информация Resource
Timing API будет доступна для запросов выполняемых GeoJSON и Vector Tile
(эта информация обычно недоступна из основного потока JavaScript).
Информация будет возвращена в свойстве ResourceTiming.

Пример:

  -----------------------------------------------------------------------
  transformRequest:  function (url, resourceType) {    \`\`if
  (resourceType ===  \'Source\' && url.indexOf( \'http://myHost\' ) \>
  -1) {        \`\`return {            \`\`url: url.replace( \'http\' , 
  \'https\' ),            \`\`headers: {  \'my-custom-header\' :  true
  },            \`\`credentials:  \'include\' // Include cookies for
  cross-origin requests        \`\`}    \`\`}};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

StyleImageInterface (спецификация для разработчиков)

Это не метод и не класс. Интерфейс для динамически генерируемых
изображений.

Изображения, реализующие этот интерфейс, могут быть перерисованы для
каждого кадра. Их можно использовать для анимации значков и узоров или
для того, чтобы они реагировали на вводимые пользователем данные.
Изображения могут реализовывать метод StyleImageInterface#render. Этот
метод вызывается покадрово.

src/style/style_image.js

Параметры:

**width:number**

**height:number**

**data:(Uint8Array\|Uint8ClampedArray)**

Пример:

  ---------------------------------------------------------------------------
  var flashingSquare = {    \`\`width: 64,    \`\`height: 64,    \`\`data: 
  new Uint8Array(64 \* 64 \* 4),         \`\`onAdd:  function (map)
  {        \`\`this .map = map;    \`\`},         \`\`render:  function ()
  {        \`\`// keep repainting while the icon is on the
  map        \`\`this .map.triggerRepaint();                 \`\`// alternate
  between black and white based on the time        \`\`var value =
  Math.round(Date.now() / 1000) % 2 === 0  ? 255 : 0;                 \`\`//
  check if image needs to be changed        \`\`if (value !==  this
  .previousValue) {            \`\`this .previousValue =
  value;                         \`\`var bytesPerPixel =
  4;            \`\`for ( var x = 0; x \<  this .width; x++)
  {                \`\`for ( var y = 0; y \<  this .height; y++)
  {                    \`\`var offset = (y \*  this .width + x) \*
  bytesPerPixel;                    \`\`this .data\[offset + 0\] =
  value;                    \`\`this .data\[offset + 1\] =
  value;                    \`\`this .data\[offset + 2\] =
  value;                    \`\`this .data\[offset + 3\] =
  255;                \`\`}            \`\`}                         \`\`//
  return true to indicate that the image changed            \`\`return true
  ;        \`\`}    \`\`}} map.addImage( \'flashing_square\' ,
  flashingSquare);
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

CustomLayerInterface (спецификация для разработчиков)

Это не метод и не класс. Интерфейс для кастомизации стиля слоев.

Кастомные слои позволяют пользователю визуализировать непосредственно в
GL context карты с помощью камеры. Эти слои могут быть добавлены между
любыми обычными слоями с помощью Map#addLayer.

Кастомные слои должны иметь уникальный идентификатор и тип «custom». Они
должны реализовывать render и могут
реализовывать prerender, onAdd и onRemove. Они могут инициировать
рендеринг с помощью Map#triggerRepaint и должны соответствующим образом
обрабатывать Map.event:webglcontextlost и
Map.event:webglcontextrestored.

Свойство RenderingMode определяет, будет ли слой обрабатываться как слой
«2d» или «3d» карты:

-   «RenderingMode»: «3d» --- для использования буфера глубины и
    совместного использования его с другими слоями.

-   «RenderingMode»: «2d» --- для добавления слоя без глубины. Если вам
    нужно использовать буфер глубины для «2d» слоя, вы должны
    использовать закадровый фреймбуфер и CustomLayerInterface#prerender

src/style/style_layer/custom_style_layer.js

Параметры:

**id:string**--- уникальный ID слоя.

**type:string**--- тип слоя, должен быть «custom».

**renderingMode:string**---«3d» или «2d», по умолчанию «2d».

Пример:

  ----------------------------------------------------------------------------------------
  // Custom layer implemented as ES6 classclass NullIslandLayer {    \`\`constructor()
  {        \`\`this .id =  \'null-island\' ;        \`\`this .type =  \'custom\'
  ;        \`\`this .renderingMode =  \'2d\' ;    \`\`}         \`\`onAdd(map, gl)
  {        \`\`\`const vertexSource = \<br\>\`            uniform mat4
  u_matrix;\<br\>            void main() {\`\<br\>\`                gl_Position = u_matrix
  \* vec4(0.5, 0.5, 0.0, 1.0);\<br\>                gl_PointSize =
  20.0;\`\<br\>\`            \`\`\`}\`;                 \`\`\`const fragmentSource =
  \<br\>\`            void main() {\<br\>                gl_FragColor = vec4(1.0, 0.0,
  0.0, 1.0);\`\<br\>\`            \`\`\`}\`;                 \`\`const vertexShader =
  gl.createShader(gl.VERTEX_SHADER);        \`\`gl.shaderSource(vertexShader,
  vertexSource);        \`\`gl.compileShader(vertexShader);        \`\`const
  fragmentShader =
  gl.createShader(gl.FRAGMENT_SHADER);        \`\`gl.shaderSource(fragmentShader,
  fragmentSource);        \`\`gl.compileShader(fragmentShader);                 \`\`this
  .program = gl.createProgram();        \`\`gl.attachShader( this .program,
  vertexShader);        \`\`gl.attachShader( this .program,
  fragmentShader);        \`\`gl.linkProgram( this
  .program);    \`\`}         \`\`render(gl, matrix) {        \`\`gl.useProgram( this
  .program);        \`\`gl.uniformMatrix4fv(gl.getUniformLocation( this .program, 
  \"u_matrix\" ),  false , matrix);        \`\`gl.drawArrays(gl.POINTS, 0,
  1);    \`\`}}     map.on( \'load\' ,  function () {    \`\`map.addLayer( new
  NullIslandLayer());});
  ----------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------

prewarm:function

Выполняет «прогрев» всех ресурсов (например, инициализирует
веб-воркеры), чтобы снизить время на загрузки карты. Если
используются mmrgl.workerUrl и mmrgl.workerCount их нужно определять до
вызова prewarm().

По умолчанию управление этими ресурсами выполняется автоматически, и они
инициализируются по необходимости (лениво) при первом создании карты.
При вызове prewarm() ресурсы будут созданы заранее и не будут очищены
при удалении последней карты со странице. Это позволяет повторно
использовать их новыми экземплярами карт. Их можно очистить вручную,
вызвав функцию mmrgl.clearPrewarmedResources(). Это необходимо только в
том случае, если ваша веб-страница остается активной, но полностью
перестает использовать карты.

Это полезно при использовании карт в одностраничном приложении (SPA),
где пользователь будет перемещаться между различными
страницами/экранами, которые могут привести к постоянному созданию и
уничтожению экземпляров карт.

src/index.js

Пример:

  -----------------------------------------------------------------------
  mmrgl.prewarm()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

clearPrewarmedResources:function

Очищает ресурсы, которые ранее были созданы mmrgl.prewarm(). Обратите
внимание, что обычно в этом нет необходимости. Вы должны вызывать эту
функцию только в том случае, если ожидаете, что пользователь вашего
приложения не вернется к просмотру карты в любой момент вашего
приложения.

src/index.js

Пример:

  -----------------------------------------------------------------------
  mmrgl.clearPrewarmedResources()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

3\. Метки и элементы управления

Marker

Создание маркера

src/ui/marker.js

Параметры

  -------------------------------------------------------------------------------------
  Название                 Тип                     Описание
  ------------------------ ----------------------- ------------------------------------
  element                  HTMLElement             Использовать DOM элемент в качестве
                                                   маркера. По умолчанию используется
                                                   голубой, каплевидный svg маркер
                                                   (light blue, droplet-shaped).

  anchor                   stringdefault: 'center' Определяет позицию иконки
                                                   относительно ее центра. Доступные
                                                   значения: 'center', 'top', 'bottom',
                                                   'left', 'right', 'top-left',
                                                   'top-right', 'bottom-left' и
                                                   'bottom-right'.

  offset                   PointLike               Смещение применяемое относительно
                                                   центра элемента. Отрицательные
                                                   значения указывают влево и вверх.

  color                    stringdefault:          Если options.element не указан, то
                           '#3FB1CE'               будет использоваться этот цвет. По
                                                   умолчанию используется светло-синий
                                                   цвет.

  scale                    numberdefault: 1        Если options.element не указан, то
                                                   будет использоваться этот масштаб.
                                                   По умолчанию шкала соответствует
                                                   высоте 41px и ширине 27px.

  draggable                booleandefault: false   Если true, то можно перетаскивать
                                                   маркеры на новое место (drag and
                                                   drop)

  clickTolerance           numberdefault: 0        Максимальное количество пикселей, на
                                                   которое пользователь может
                                                   переместить указатель мыши во время
                                                   щелчка по маркеру, чтобы он считался
                                                   допустимым щелчком (в отличие от
                                                   перетаскивания маркера). По
                                                   умолчанию используется наследование
                                                   clickTolerance карты.

  rotation                 numberdefault: 0        Угол поворота маркера относительно
                                                   его
                                                   соответствующей rotationAlignment.
                                                   Положительное значение будет вращать
                                                   маркер по часовой стрелке.

  pitchAlignment           stringdefault: 'auto'   \- 'map' выравнивает маркер по
                                                   плоскости карты (map).- 'viewport'
                                                   выравнивает маркер по плоскости
                                                   экрана (viewport).- 'auto'
                                                   автоматически соответствует
                                                   значению rotationAlignment

  rotationAlignment        stringdefault: 'auto'   \- 'map' выравнивает поворот маркера
                                                   относительно карты (map), сохраняя
                                                   пеленг при вращении карты.-
                                                   'viewport' выравнивает поворот
                                                   маркера относительно экрана
                                                   (viewport), не зависящего от
                                                   поворотов карты.- 'auto'
                                                   эквивалентно экрану (viewport)
  -------------------------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var marker =  new mmrgl.Marker()  \`\`.setLngLat(\[30.5,
  50.5\])  \`\`.addTo(map);// Set optionsvar marker =  new
  mmrgl.Marker({  \`\`color:  \"#FFFFFF\" ,  \`\`draggable: 
  true}).setLngLat(\[30.5, 50.5\])  \`\`.addTo(map);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  addTo(map)                          Прикрепляет маркер к объекту карты.

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var marker =  new mmrgl.Marker().setLngLat(\[30.5, 50.5\]).addTo(map); 
  // add the marker to the map
  -----------------------------------------------------------------------
  getElement()

  getLngLat()

  getOffset()

  getPitchAlignment()

  getPopup()
  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var marker =  new mmrgl.Marker().setLngLat(\[0, 0\]).setPopup( new
  mmrgl.Popup().setHTML( \"\<h1\>Hello World!\</h1\>\"
  )).addTo(map); console.log(marker.getPopup());  // return the popup
  instance
  -----------------------------------------------------------------------
  getRotation()

  getRotationAlignment()

  isDraggable()

  remove()
  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var marker =  new mmrgl.Marker().addTo(map);marker.remove();
  -----------------------------------------------------------------------
  setDraggable(shouldBeDraggable)

  setLngLat(lnglat)
  -----------------------------------------------------------------------

Параметры:

**lnglat:LngLat**где должен быть расположен маркер.

Пример:

  -----------------------------------------------------------------------
  // Create a new marker, set the longitude and latitude, and add it to
  the mapnew mmrgl.Marker().setLngLat(\[-65.017, -16.457\]).addTo(map);
  -----------------------------------------------------------------------
  setOffset(offset)

  setPitchAlignment(alignment?)

  setPopup(popup)
  -----------------------------------------------------------------------

Параметры:

**popup:Popup** экземпляр всплывающего класса. Если значение undefined
или null, то любое всплывающее окно, установленное в этом экземпляре
маркера, будет снято.

Пример:

  -----------------------------------------------------------------------
  var marker =  new mmrgl.Marker()  \`\`.setLngLat(\[0,
  0\])  \`\`.setPopup( new mmrgl.Popup().setHTML( \"\<h1\>Hello
  World!\</h1\>\" ))  // add popup  \`\`.addTo(map);
  -----------------------------------------------------------------------
  setRotation(rotation)

  setRotationAlignment(alignment)

  togglePopup()
  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var marker =  new mmrgl.Marker()  \`\`.setLngLat(\[0,
  0\])  \`\`.setPopup( new mmrgl.Popup().setHTML( \"\<h1\>Hello
  World!\</h1\>\" ))  \`\`.addTo(map); marker.togglePopup();  // toggle
  popup open or closed
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

События

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  drag                                Срабатывает во время перетаскивания

  dragend                             Срабатывает, когда перетаскивание
                                      заканчивается

  dragstart                           Срабатывает при начале
                                      перетаскивания
  -----------------------------------------------------------------------

Popup

Создание всплывающего блока.

src/ui/popup.js

Параметры

  --------------------------------------------------------------------------------------------------------------------
  Название                 Тип                     Описание
  ------------------------ ----------------------- -------------------------------------------------------------------
  maxWidth                 stringdefault: '240px'  Строка, которая задает CSS-свойство максимальной ширины
                                                   всплывающего окна, например '300px'. Чтобы убедиться, что размер
                                                   всплывающего окна соответствует его содержимому, установите для
                                                   этого свойства значение "none" . Доступные значения можно найти
                                                   здесь: https://developer.mozilla.org/en-US/docs/Web/CSS/max-width

  anchor                   stringdefault: 'bottom' Определяет позицию иконки относительно ее центра. Доступные
                                                   значения: 'center', 'top', 'bottom', 'left', 'right', 'top-left',
                                                   'top-right', 'bottom-left' и 'bottom-right'.

  offset                   number \| PointLike \|  Смещение пикселя, примененное к местоположению всплывающего окна,
                           Object                  указанному как:- число (number), указывает расстояние от
                                                   местоположения всплывающего окна- PointLike указание постоянного
                                                   смещение (constant offset)- объект из точек вида {'center':
                                                   PointLike, 'top': PointLike...}, указывает смещение для каждой
                                                   позиции anchor. Отрицательные смещения указывают влево и вверх.

  className                string                  Имя класса для контейнера

  focusAfterOpen           booleandefault: true    Если true, то после открытия окна, будет произведена попытка
                                                   установить фокус (курсор) в первый элемент внутри окна, который это
                                                   поддерживает, например .

  closeOnMove              booleandefault: false   Если true, то всплывающее окно будет закрыто при перемещении карты.

  closeOnClick             booleandefault: true    Если true, то всплывающее окно будет закрыто при нажатии на карту.

  closeButton              booleandefault: true    Если true, то в правом верхнем углу всплывающего окна появится
                                                   кнопка закрытия.
  --------------------------------------------------------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var markerHeight = 50, markerRadius = 10, linearOffset = 25;var
  popupOffsets = {  \`\`\'top\' : \[0, 0\],  \`\`\'top-left\' :
  \[0,0\],  \`\`\'top-right\' : \[0,0\],  \`\`\'bottom\' : \[0,
  -markerHeight\],  \`\`\'bottom-left\' : \[linearOffset, (markerHeight -
  markerRadius + linearOffset) \* -1\],  \`\`\'bottom-right\' :
  \[-linearOffset, (markerHeight - markerRadius + linearOffset) \*
  -1\],  \`\`\'left\' : \[markerRadius, (markerHeight - markerRadius) \*
  -1\],  \`\`\'right\' : \[-markerRadius, (markerHeight - markerRadius)
  \* -1\]};var popup =  new mmrgl.Popup({offset: popupOffsets,
  className:  \'my-class\' })  \`\`.setLngLat(e.lngLat)  \`\`.setHTML(
  \"\<h1\>Hello World!\</h1\>\" )  \`\`.setMaxWidth( \"300px\"
  )  \`\`.addTo(map);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  addClassName(className)             Добавляет CSS класс к элементу
                                      всплывающего контейнера.

  -----------------------------------------------------------------------

Параметры:

**className:string**Не пустая строка с именем класса для добавления к
всплывающему контейнеру

Пример:

  -----------------------------------------------------------------------
  let popup =  new mmrgl.Popup()popup.addClassName( \'some-class\' )
  -----------------------------------------------------------------------
  addTo(map)

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  new mmrgl.Popup().setLngLat(\[0, 0\]).setHTML( \"\<h1\>Null
  Island\</h1\>\" ).addTo(map);
  -----------------------------------------------------------------------
  getElement()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  // Change the \`Popup\` element\'s font sizevar popup =  new
  mmrgl.Popup()  \`\`.setLngLat(\[-96, 37.8\])  \`\`.setHTML(
  \"\<p\>Hello World!\</p\>\" )  \`\`.addTo(map);var popupElem =
  popup.getElement();popupElem.style.fontSize =  \"25px\" ;
  -----------------------------------------------------------------------
  getLngLat()

  getMaxWidth()

  isOpen()

  remove()
  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var popup =  new mmrgl.Popup().addTo(map);popup.remove();
  -----------------------------------------------------------------------
  removeClassName(className)

  -----------------------------------------------------------------------

Параметры:

**className:string**Не пустая строка с именем класса CSS для удаления из
всплывающего контейнера

Пример:

  -----------------------------------------------------------------------
  let popup =  new mmrgl.Popup()popup.removeClassName( \'some-class\' )
  -----------------------------------------------------------------------
  setDOMContent(htmlNode)

  -----------------------------------------------------------------------

Параметры:

**htmlNode:Node**Узел DOM, который будет использоваться в качестве
содержимого для всплывающего окна.

Пример:

  ------------------------------------------------------------------------------------
  // create an element with the popup contentvar div = window.document.createElement(
  \'div\' );div.innerHTML =  \'Hello, world!\' ;var popup =  new
  mmrgl.Popup()  \`\`.setLngLat(e.lngLat)  \`\`.setDOMContent(div)  \`\`.addTo(map);
  ------------------------------------------------------------------------------------
  setHTML(html)

  ------------------------------------------------------------------------------------

Этот метод не выполняет фильтрацию HTML или дезинфекцию и должен
использоваться только с доверенным контентом. Рассмотрим Popup#setText,
если содержимое является ненадежной текстовой строкой.

Параметры:

**html:string**Строка, представляющая HTML-содержимое всплывающего окна.

Пример:

  -----------------------------------------------------------------------
  var popup =  new mmrgl.Popup()  \`\`.setLngLat(e.lngLat)  \`\`.setHTML(
  \"\<h1\>Hello World!\</h1\>\" )  \`\`.addTo(map);
  -----------------------------------------------------------------------
  setLngLat(lnglat)

  setMaxWidth(maxWidth)

  setOffset(offset?)

  setText(text)
  -----------------------------------------------------------------------

Эта функция создает текстовый узел в DOM, поэтому она не может вставлять
необработанный HTML. Используйте этот метод для защиты от XSS, если
всплывающее содержимое предоставлено пользователем.

Параметры:

**text:string** текстовое содержимое для всплывающего окна.

Пример:

  -----------------------------------------------------------------------
  var popup =  new mmrgl.Popup()  \`\`.setLngLat(e.lngLat)  \`\`.setText(
  \'Hello, world!\' )  \`\`.addTo(map);
  -----------------------------------------------------------------------
  toggleClassName(className)

  -----------------------------------------------------------------------

Параметры:

**className:string** не пустая строка с именем класса CSS для
добавления/удаления

Пример:

  -----------------------------------------------------------------------
  let popup =  new mmrgl.Popup()popup.toggleClassName( \'toggleClass\' )
  -----------------------------------------------------------------------
  trackPointer()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var popup =  new mmrgl.Popup({ closeOnClick:  false , closeButton: 
  false })  \`\`.setHTML( \"\<h1\>Hello World!\</h1\>\"
  )  \`\`.trackPointer()  \`\`.addTo(map);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

События

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  close                               Срабатывает, когда всплывающее окно
                                      закрывается вручную или программно.

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  // Create a popupvar popup =  new mmrgl.Popup();// Set an event
  listener that will fire// any time the popup is closedpopup.on(
  \'close\' ,  function (){  \`\`console.log( \'popup was closed\' );});
  -----------------------------------------------------------------------
  open

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  // Create a popupvar popup =  new mmrgl.Popup();// Set an event
  listener that will fire// any time the popup is openedpopup.on(
  \'open\' ,  function (){  \`\`console.log( \'popup was opened\' );});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

IControl (Спецификация для разработчика)

Интерфейс для элементов интерактивного управления, добавленных на карту.
Это спецификация для разработчиков: это не метод или класс.

Элементы управления должны реализовывать onAdd и onRemove так же это
должен быть 

. Чтобы использовать стиль элемента управления MMR GL JS, добавьте класс
mmrgl-ctrl.

src/ui/map.js

Пример:

  -----------------------------------------------------------------------
  // Control implemented as ES6 classclass HelloWorldControl
  {    \`\`onAdd(map) {        \`\`this .\_map = map;        \`\`this
  .\_container = document.createElement( \'div\' );        \`\`this
  .\_container.className =  \'mmrgl-ctrl\' ;        \`\`this
  .\_container.textContent =  \'Hello, world\' ;        \`\`return this
  .\_container;    \`\`}     \`\`onRemove() {        \`\`this
  .\_container.parentNode.removeChild( this
  .\_container);        \`\`this .\_map = undefined;    \`\`}} // Control
  implemented as ES5 prototypical classfunction HelloWorldControl() {
  } HelloWorldControl.prototype.onAdd =  function (map) {    \`\`this
  .\_map = map;    \`\`this .\_container = document.createElement(
  \'div\' );    \`\`this .\_container.className =  \'mmrgl-ctrl\'
  ;    \`\`this .\_container.textContent =  \'Hello, world\'
  ;    \`\`return this
  .\_container;}; HelloWorldControl.prototype.onRemove =  function ()
  {    \`\`this .\_container.parentNode.removeChild( this
  .\_container);    \`\`this .\_map = undefined;};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  getDefaultPosition()                При необходимости укажите положение
                                      по умолчанию для этого элемента
                                      управления. Если этот метод
                                      реализован и Map#addControl
                                      вызывается без параметра position,
                                      то в качестве позиции элемента
                                      управления будет использоваться
                                      значение, возвращаемое
                                      getDefaultPosition.

  onAdd(map)                          Зарегистрируйте элемент управления
                                      на карте и дайте ему возможность
                                      зарегистрировать лисенер событий и
                                      ресурсы. Этот метод вызывается
                                      Map#addControl внутренне.

  onRemove(map)                       Отмените регистрацию элемента
                                      управления на карте и дайте ему
                                      возможность отсоединить лисенер
                                      событий и ресурсы. Этот метод
                                      вызывается Map#removeControl
                                      внутренне.
  -----------------------------------------------------------------------

NavigationControl

Элемент управления NavigationControl содержит кнопки масштабирования
(zoom) и компас (compass).

src/ui/control/navigation_control.js

Параметры

  ----------------------------------------------------------------------------
  Название                 Тип                     Описание
  ------------------------ ----------------------- ---------------------------
  showCompass              booleandefault: true    Если true, то кнопка
                                                   компаса отображает.

  showZoom                 booleandefault: true    Если true, то кнопки
                                                   увеличения и уменьшения
                                                   масштаба отображаются.

  visualizePitch           booleandefault: false   Если true, то шаг
                                                   визуализируется вращением
                                                   оси X.
  ----------------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var nav =  new mmrgl.NavigationControl();map.addControl(nav, 
  \'top-left\' );
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

GeolocateControl

Элемент управления GeolocateControl предоставляет кнопку, которая
использует API геолокации браузера для определения местоположения
пользователя на карте.

Не все браузеры поддерживают геолокацию, и некоторые пользователи могут
отключить эту функцию. Поддержка геолокации для современных браузеров,
включая Chrome, требует, чтобы сайты обслуживались по протоколу HTTPS.
Если поддержка геолокации недоступна, то GeolocateControl будет
отображаться как отключенный.

Уровень масштабирования будет зависеть от точности геолокации,
обеспечиваемой устройством.

GeolocateControl имеет два режима. Если trackUserLocation имеет значение
false (по умолчанию), то элемент управления действует как кнопка,
которая при нажатии настраивает камеру карты на местоположение
пользователя. Если пользователь перемещается, карта не обновляется. Это
больше всего подходит для рабочего стола. Если trackUserLocation имеет
значение true, то элемент управления действует как кнопка переключения,
которая отслеживает передвижение пользователя. В этом режиме
GeolocateControl имеет три состояния взаимодействия:

-   'active' --- камера карты автоматически обновляется по мере
    изменения местоположения пользователя, сохраняя точку местоположения
    в центре.

-   'passive' --- точка местоположения пользователя автоматически
    обновляется, но камера карты-нет. Происходит при инициировании
    пользователем перемещения карты.

-   'disabled' --- происходит, если Геолокация недоступна, отключена или
    запрещена.

Этими состояниями взаимодействия нельзя управлять программно, скорее они
задаются на основе взаимодействия с пользователем.

src/ui/control/geolocate_control.js

Параметры

  ------------------------------------------------------------------------------------------------------------------
  Название                 Тип                                                        Описание
  ------------------------ ---------------------------------------------------------- ------------------------------
  positionOptions          Objectdefault: { enableHighAccuracy:false, timeout:6000}   Объект PositionOptions API
                                                                                      геолокации.

  fitBoundsOptions         Objectdefault: { maxZoom:15}                               Map#fitBounds объект Options,
                                                                                      который используется, когда
                                                                                      карта перемещается и
                                                                                      масштабируется до
                                                                                      местоположения пользователя.
                                                                                      По умолчанию используется
                                                                                      maxZoom 15, чтобы ограничить
                                                                                      масштаб карты для очень точных
                                                                                      местоположений.

  trackUserLocation        booleandefault: false                                      Если true, то элемент
                                                                                      управления Geolocate
                                                                                      становится переключателем и
                                                                                      когда он активен карта будет
                                                                                      получать обновления о
                                                                                      местоположении пользователя по
                                                                                      мере его изменений.

  showAccuracyCircle       booleandefault: true                                       По умолчанию,
                                                                                      если showUserLocation имеет
                                                                                      значение true, вокруг
                                                                                      местоположения пользователя
                                                                                      будет нарисован прозрачный
                                                                                      круг, указывающий точность
                                                                                      местоположения пользователя
                                                                                      (точность 95%). Установите
                                                                                      значение false для отключения.
                                                                                      Всегда отключается,
                                                                                      когда showUserLocation имеет
                                                                                      значение false.

  showUserLocation         booleandefault: true                                       По умолчанию точка будет
                                                                                      отображаться на карте в месте
                                                                                      расположения пользователя.
                                                                                      Установите значение false для
                                                                                      отключения.
  ------------------------------------------------------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.addControl( new mmrgl.GeolocateControl({  \`\`positionOptions:
  {    \`\`enableHighAccuracy:  true  \`\`},  \`\`trackUserLocation: 
  true}));
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  trigger                             Программно запросите и переместите
                                      карту в местоположение
                                      пользователя.

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  // Initialize the geolocate control.var geolocate =  new
  mmrgl.GeolocateControl({  \`\`positionOptions:
  {    \`\`enableHighAccuracy:  true  \`\`},  \`\`trackUserLocation: 
  true});// Add the control to the map.map.addControl(geolocate);map.on(
  \'load\' ,  function () {  \`\`geolocate.trigger();});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

События

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  error                               Запускался при каждом обновлении
                                      позиции API геолокации, которое
                                      возвращалось как ошибка.

  -----------------------------------------------------------------------

Параметры:

**data:PositionError** возвращаемый объект PositionError из обратного
вызова в Geolocation.getCurrentPosition() или
Geolocation.watchPosition().

Пример:

  -----------------------------------------------------------------------
  // Initialize the geolocate control.var geolocate =  new
  mmrgl.GeolocateControl({  \`\`positionOptions:
  {    \`\`enableHighAccuracy:  true  \`\`},  \`\`trackUserLocation: 
  true});// Add the control to the map.map.addControl(geolocate);// Set
  an event listener that fires// when an error event occurs.geolocate.on(
  \'error\' ,  function () {  \`\`console.log( \'An error event has
  occurred.\' )});
  -----------------------------------------------------------------------
  geolocate

  -----------------------------------------------------------------------

Параметры:

**data:Position** возвращаемый объект Position из вызова в
Geolocation.getCurrentPosition() или Geolocation.watchPosition().

Пример:

  -----------------------------------------------------------------------
  // Initialize the geolocate control.var geolocate =  new
  mmrgl.GeolocateControl({  \`\`positionOptions:
  {    \`\`enableHighAccuracy:  true  \`\`},  \`\`trackUserLocation: 
  true});// Add the control to the map.map.addControl(geolocate);// Set
  an event listener that fires// when a geolocate event
  occurs.geolocate.on( \'geolocate\' ,  function () {  \`\`console.log(
  \'A geolocate event has occurred.\' )});
  -----------------------------------------------------------------------
  outofmaxbounds

  -----------------------------------------------------------------------

Параметры:

**data:Position** возвращаемый объект Position из вызова в
Geolocation.getCurrentPosition() или Geolocation.watchPosition().

Пример:

  -----------------------------------------------------------------------
  // Initialize the geolocate control.var geolocate =  new
  mmrgl.GeolocateControl({  \`\`positionOptions:
  {    \`\`enableHighAccuracy:  true  \`\`},  \`\`trackUserLocation: 
  true});// Add the control to the map.map.addControl(geolocate);// Set
  an event listener that fires// when an outofmaxbounds event
  occurs.geolocate.on( \'outofmaxbounds\' ,  function ()
  {  \`\`console.log( \'An outofmaxbounds event has occurred.\' )});
  -----------------------------------------------------------------------
  trackuserlocationend

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  // Initialize the geolocate control.var geolocate =  new
  mmrgl.GeolocateControl({  \`\`positionOptions:
  {    \`\`enableHighAccuracy:  true  \`\`},  \`\`trackUserLocation: 
  true});// Add the control to the map.map.addControl(geolocate);// Set
  an event listener that fires// when a trackuserlocationend event
  occurs.geolocate.on( \'trackuserlocationend\' ,  function ()
  {  \`\`console.log( \'A trackuserlocationend event has occurred.\' )});
  -----------------------------------------------------------------------
  trackuserlocationstart

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  // Initialize the geolocate control.var geolocate =  new
  mmrgl.GeolocateControl({  \`\`positionOptions:
  {    \`\`enableHighAccuracy:  true  \`\`},  \`\`trackUserLocation: 
  true});// Add the control to the map.map.addControl(geolocate);// Set
  an event listener that fires// when a trackuserlocationstart event
  occurs.geolocate.on( \'trackuserlocationstart\' ,  function ()
  {  \`\`console.log( \'A trackuserlocationstart event has occurred.\'
  )});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

ScaleControl

Элемент управления ScaleControl отображает отношение расстояния на карте
к соответствующему расстоянию на земле.

src/ui/control/scale_control.js

Параметры

  ------------------------------------------------------------------------
  Название                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  maxWidth                 numberdefault: '100'    Максимальная длина
                                                   элемента управления
                                                   масштабом в пикселях.

  unit                     stringdefault: 'metric' Единица измерения
                                                   расстояния ('imperial',
                                                   'metric' или
                                                   'nautical').
  ------------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var scale =  new mmrgl.ScaleControl({    \`\`maxWidth:
  80,    \`\`unit:  \'imperial\'});map.addControl(scale);scale.setUnit(
  \'metric\' );
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  setUnit(unit)                       Установите единицу измерения
                                      расстояния на
                                      шкалеПараметры:unit:Unit Единица
                                      измерения расстояния ( «imperial» ,
                                      «metric» или «nautical»).

  -----------------------------------------------------------------------

FullscreenControl

Элемент управления FullscreenControl содержит кнопку для переключения
карты в полноэкранный режим и обратно.

src/ui/control/fullscreen_control.js

Параметры

  ------------------------------------------------------------------------
  Название                 Тип                     Описание
  ------------------------ ----------------------- -----------------------
  container                HTMLElement             container --- это
                                                   элемент DOM, который
                                                   открывать в
                                                   полноэкранном режиме.
                                                   По умолчанию контейнер
                                                   карты будет
                                                   использоваться для
                                                   полноэкранного режиме.

  ------------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.addControl( new
  mmrgl.FullscreenControl({container:  \`\`document.querySelector(
  \'body\' )}));
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

4\. География и геометрия

LngLat

Объект LngLat состоит из долготы и широты (в градусах). Эти координаты
основаны на стандарте WGS84 (EPSG:4326). MMR GL использует порядок
координат долготы и широты (в отличие от широты и долготы) в
соответствии со спецификацией GeoJSON. Обратите внимание, что любой
метод MMR GL, принимающий объект LngLat в качестве аргумента или опции,
также может принимать массив из двух чисел и выполнять неявное
преобразование. Этот гибкий тип документирован как LngLatLike.

src/geo/lng_lat.js

Параметры

**lng:number**--- долгота в градусах

**lat:number**--- широта в градусах

Пример:

  -----------------------------------------------------------------------
  var ll =  new mmrgl.LngLat(-123.9749, 40.7736);ll.lng;  // = -123.9749
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

static Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  convert(input)                      Преобразует массив из двух чисел
                                      или объект со свойствами lng и lat
                                      или lon и lat в объект LngLat.

  -----------------------------------------------------------------------

Если передается объект LngLat, функция возвращает его без изменений.

Параметры:

**input:LngLatLike** массив из двух чисел или объект для преобразования,
или объект LngLat для возврата.

Пример:

  -----------------------------------------------------------------------
  var arr = \[-73.9749, 40.7736\];var ll =
  mmrgl.LngLat.convert(arr);ll;    // = LngLat {lng: -73.9749, lat:
  40.7736}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

instance Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  distanceTo(lngLat)                  Возвращает приблизительное
                                      расстояние между парой координат в
                                      метрах, используя формулу Хаверсина
                                      (из R. W. Sinnott, «Добродетели
                                      Хаверсина», Sky and Telescope,
                                      vol. 68, no. 2, 1984, p. 159)

  -----------------------------------------------------------------------

Параметры:

**lngLat:LngLat**координаты для вычисления расстояния до цели

Пример:

  -----------------------------------------------------------------------
  var newYork =  new mmrgl.LngLat(-74.0060, 40.7128);var losAngeles = 
  new mmrgl.LngLat(-118.2437, 34.0522);newYork.distanceTo(losAngeles); 
  // = 3935751.690893987, \"истинное расстояние\" с использованием
  несферического приближения составляет \~3966 км
  -----------------------------------------------------------------------
  toArray()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var ll =  new mmrgl.LngLat(-73.9749, 40.7736);ll.toArray();  // =
  \[-73.9749, 40.7736\]
  -----------------------------------------------------------------------
  toBounds(radius)

  -----------------------------------------------------------------------

Параметры:

**radius:number**(по умолчанию 0) Расстояние в метрах от координат для
расширения границ.

Пример:

  -----------------------------------------------------------------------
  var ll =  new mmrgl.LngLat(-73.9749,
  40.7736);ll.toBounds(100).toArray();  // = \[\[-73.97501862141328,
  40.77351016847229\], \[-73.97478137858673, 40.77368983152771\]\]
  -----------------------------------------------------------------------
  toString()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var ll =  new mmrgl.LngLat(-73.9749, 40.7736);ll.toString();  // =
  \"LngLat(-73.9749, 40.7736)\"
  -----------------------------------------------------------------------
  wrap()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var ll =  new mmrgl.LngLat(286.0251, 40.7736);var wrapped =
  ll.wrap();wrapped.lng;  // = -73.9749
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

LngLatLike

LngLat может быть массивом из двух чисел (долгота и широта), или
объектом со свойствами lng и lat или lon и lat.

src/geo/lng_lat.js

Пример:

  -----------------------------------------------------------------------
  var v1 =  new mmrgl.LngLat(-122.420679, 37.772537);var v2 =
  \[-122.420679, 37.772537\];var v3 = {lon: -122.420679, lat: 37.772537};
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

LngLatBounds

Объект LngLatBounds представляет собой границу, определяемую ее
юго-западной и северо-восточной точками в долготе и широте.

Если аргументы не предоставлены, создается граница со значением null.

Любой метод MMR GL, принимающий объект LngLatBounds в качестве аргумента
или опции, также может принимать массив из двух LngLatLike конструкций и
выполнять неявное преобразование. Этот гибкий тип задокументирован как
LngLatBoundsLike.

src/geo/lng_lat_bounds.js

Параметры

**sw:number**--- долгота в градусах

**ne:number**--- широта в градусах

static Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  convert(input)                      Преобразует массив в объект
                                      LngLatBounds.

  -----------------------------------------------------------------------

Если передается объект LngLatBounds, функция возвращает его без
изменений.

Внутренне функция вызывает LngLat#convert для преобразования массивов в
значения LngLat.

Параметры:

**input:LngLatBoundsLike**Массив из двух координат для преобразования
или объект LngLatBounds для возврата.

Пример:

  -----------------------------------------------------------------------
  var arr = \[\[-73.9876, 40.7661\], \[-73.9397, 40.8002\]\];var llb =
  mmrgl.LngLatBounds.convert(arr);llb;    // = LngLatBounds {\_sw: LngLat
  {lng: -73.9876, lat: 40.7661}, \_ne: LngLat {lng: -73.9397, lat:
  40.8002}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

instance Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  contains(lnglat)                    Проверьте, находится ли точка
                                      внутри ограничивающего
                                      прямоугольника.

  -----------------------------------------------------------------------

Параметры:

**lnglat:LngLatLike**

Пример:

  -----------------------------------------------------------------------
  var llb =  new mmrgl.LngLatBounds(new mmrgl.LngLat(-73.9876,
  40.7661),new mmrgl.LngLat(-73.9397, 40.8002)); var ll =  new
  mmrgl.LngLat(-73.9567, 40.7789); console.log(llb.contains(ll));  // =
  true
  -----------------------------------------------------------------------
  extend(obj)

  getCenter()
  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var llb =  new mmrgl.LngLatBounds(\[-73.9876, 40.7661\], \[-73.9397,
  40.8002\]);llb.getCenter();  // = LngLat {lng: -73.96365, lat:
  40.78315}
  -----------------------------------------------------------------------
  getEast()

  getNorth()

  getNorthEast()

  getNorthWest()

  getSouth()

  getSouthEast()

  getSouthWest()

  getWest()

  isEmpty()

  setNorthEast(ne)

  setSouthWest(sw)

  toArray()
  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var llb =  new mmrgl.LngLatBounds(\[-73.9876, 40.7661\], \[-73.9397,
  40.8002\]);llb.toArray();  // = \[\[-73.9876, 40.7661\], \[-73.9397,
  40.8002\]\]
  -----------------------------------------------------------------------
  toString()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var llb =  new mmrgl.LngLatBounds(\[-73.9876, 40.7661\], \[-73.9397,
  40.8002\]);llb.toString();  // = \"LngLatBounds(LngLat(-73.9876,
  40.7661), LngLat(-73.9397, 40.8002))\"
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var sw =  new mmrgl.LngLat(-73.9876, 40.7661);var ne =  new
  mmrgl.LngLat(-73.9397, 40.8002);var llb =  new mmrgl.LngLatBounds(sw,
  ne);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

LngLatBoundsLike

Объект LngLatBounds является массивом из LngLatLike объектов в порядке
\[sw, ne\] или массив чисел в порядке \[west, south, east, north\].

src/geo/lng_lat_bounds.js

Пример:

  -----------------------------------------------------------------------
  var v1 =  new mmrgl.LngLatBounds(new mmrgl.LngLat(-73.9876,
  40.7661),new mmrgl.LngLat(-73.9397, 40.8002));var v2 =  new
  mmrgl.LngLatBounds(\[-73.9876, 40.7661\], \[-73.9397, 40.8002\])var v3
  = \[\[-73.9876, 40.7661\], \[-73.9397, 40.8002\]\];
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Point

Объект Point состоит из x и y, указывает расположение точки на карте

src/ui/map.js

Пример:

  -----------------------------------------------------------------------
  var point =  new mmrgl.Point(-77, 38);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

PointLike

Объект Point или массив из двух чисел, представляющих координаты экрана
x и y в пикселях.

src/ui/map.js

Пример:

  -----------------------------------------------------------------------
  var p1 =  new mmrgl.Point(-77, 38);  // a PointLike which is a Pointvar
  p2 = \[-77, 38\];  // a PointLike which is an array of two numbers
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

MercatorCoordinate

MercatorCoordinate объект представляет собой трехмерное положение.

MercatorCoordinate использует веб-проекцию меркатора (EPSG:3857) с
немного другими единицами измерения:

-   размер 1 единицы измерения --- это ширина проецируемого мира (вместо
    "метра меркатора").

-   начало координат пространства находится в северо-западном углу, а не
    в середине.

Пример:

MercatorCoordinate(0, 0, 0) --- это северо-западный угол мира меркатора,
а MercatorCoordinate(1, 1, 0) - юго-восточный угол. Если вы знакомы с
векторными тайлами, может быть полезно представить координатное
пространство как тайл 0/0/0 с величиной/масштабом 1.

Z-размерность MercatorCoordinate является конформной. Куб в координатном
пространстве меркатора будет отображаться как куб.

src/geo/mercator_coordinate.js

Параметры

**x:number**--- позиция X

**y:number**--- позиция Y

**z:number**--- позиция Z

static Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  fromLngLat(lngLatLike, altitude)    Спроецируйте LngLat на
                                      MercatorCoordinate.

  -----------------------------------------------------------------------

Параметры:

lngLatLike:LngLatLike Место для проекта.

altitude:number (по умолчанию 0) Высота в метрах позиции.

Пример:

  -----------------------------------------------------------------------
  var coord = mmrgl.MercatorCoordinate.fromLngLat({ lng: 0, lat: 0},
  0);coord;  // MercatorCoordinate(0.5, 0.5, 0)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

instance Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  meterInMercatorCoordinateUnits()    Возвращает расстояние в 1 метр в
                                      MercatorCoordinate единицах на
                                      данной широте.Для координат в
                                      реальных единицах измерения,
                                      использующих метры, это,
                                      естественно, обеспечивает масштаб
                                      для преобразования в
                                      MercatorCoordinate

  toAltitude()                        Возвращает высоту в метрах от
                                      координаты.
  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var coord =  new mmrgl.MercatorCoordinate(0, 0,
  0.02);coord.toAltitude();  // 6914.281956295339
  -----------------------------------------------------------------------
  toLngLat()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var coord =  new mmrgl.MercatorCoordinate(0.5, 0.5, 0);var lngLat =
  coord.toLngLat();  // LngLat(0, 0)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  var nullIsland =  new mmrgl.MercatorCoordinate(0.5, 0.5, 0);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

EdgeInsets

Объект EdgeInset представляет собой заполнение экрана, примененное к
краям вьюпорта (viewport). Это смещает видимый центр или точку схода
карты. Это полезно для добавления плавающих элементов пользовательского
интерфейса поверх карты и смещения точки схода при изменении размера
элементов пользовательского интерфейса.

src/geo/edge_insets.js

Параметры

**top:number**--- по умолчанию 0

**bottom:number**--- по умолчанию 0

**left:number**--- по умолчанию 0

**right:number**--- по умолчанию 0

static Методы

  -------------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -------------------------------------
  getCenter(width, height)            Служебный метод, который вычисляет
                                      новый центр приложения или точку
                                      схода после применения вставок. В
                                      пикселях и с верхним левым значением
                                      (0.0) и +y
                                      вниз.Параметры:**width:number**
                                      ширина карты в пикселях.**height:
                                      number** высота карты в пикселях.

  interpolate(start, target, t)       Интерполирует вставку на месте. При
                                      этом сохраняется текущее значение
                                      вставки для любой вставки,
                                      отсутствующей в
                                      target.Параметры:**start:
                                      (PaddingOptions \|
                                      EdgeInsets)**параметры
                                      отступов.**target:PaddingOptionsп**
                                      араметры отступов для
                                      target.**t:number**переменная
                                      интерполяции.

  toJSON()                            Возвращает текущее состояние в виде
                                      json, что полезно, если вы хотите
                                      иметь представление вставки только
                                      для чтения.
  -------------------------------------------------------------------------

5\. Handlers (обработчики)

BoxZoomHandler

BoxZoomHandler позволяет пользователю масштабировать карту так, чтобы
она помещалась в ограничивающую рамку. Чтобы задать прямоугольник,
необходимо одновременно нажать и удерживать клавишу Shift и левую кнопку
мыши и перетащить курсор.

src/ui/handler/box_zoom.js

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  disable()                           Отключает «box zoom»

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.boxZoom.disable();
  -----------------------------------------------------------------------
  enable()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.boxZoom.enable()
  -----------------------------------------------------------------------
  isActive()

  isEnabled()
  -----------------------------------------------------------------------

ScrollZoomHandler

ScrollZoomHandler позволяет пользователю масштабировать карту с помощью
прокрутки.

src/ui/handler/scroll_zoom.js

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  disable()                           Выключает «scroll to zoom»

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.scrollZoom.disable()
  -----------------------------------------------------------------------
  enable(options?)

  -----------------------------------------------------------------------

**around**--- если «center» пройден, карта будет масштабироваться вокруг
центра карты

Пример:

  -----------------------------------------------------------------------
  map.scrollZoom.enable();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.scrollZoom.enable({ around:  \'center\' })
  -----------------------------------------------------------------------
  isEnabled()

  setWheelZoomRate(wheelZoomRate)
  -----------------------------------------------------------------------

Параметры

**wheelZoomRate**--- (по умолчанию 1/450) Скорость масштабирования.

Пример:

  -----------------------------------------------------------------------
  // Slow down zoom of mouse wheelmap.scrollZoom.setWheelZoomRate(1/600);
  -----------------------------------------------------------------------
  setZoomRate(zoomRate)

  -----------------------------------------------------------------------

Параметры

**zoomRate**--- (по умолчанию 1/100) Скорость масштабирования.

Пример:

  -----------------------------------------------------------------------
  // Speed up trackpad zoommap.scrollZoom.setZoomRate(1/25);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

DragPanHandler

DragPanHandler позволяет пользователю перемещать карту, щелкая и
перетаскивая курсор.

src/ui/handler/shim/drag_pan.js

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  disable()                           Отключает «drag to pan»

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.dragPan.disable();
  -----------------------------------------------------------------------
  enable(options?)

  -----------------------------------------------------------------------

Параметры

**linearity**--- коэффициент, используемый для масштабирования скорости
сопротивления (drag velocity)

**easing**--- функция сглаживания (easing function) применяется к
map.panTo при перетаскивание.

**maxSpeed**--- максимальное значение скорости лобового сопротивления.

**deceleration**--- скорость, с которой уменьшается движение после
касания.

Пример:

  -----------------------------------------------------------------------
  map.dragPan.enable();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.dragPan.enable({  \`\`linearity: 0.3,  \`\`easing: bezier(0, 0,
  0.3, 1),  \`\`maxSpeed: 1400,  \`\`deceleration: 2500,});
  -----------------------------------------------------------------------
  isActive()

  isEnabled()
  -----------------------------------------------------------------------

DragRotateHandler

DragRotateHandler позволяет пользователю вращать карту, щелкая и
перетаскивая курсор, удерживая правую кнопку мыши или клавишу ctrl.

src/ui/handler/shim/drag_rotate.js

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  disable()                           Отключает «drag to rotate»

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.dragRotate.disable();
  -----------------------------------------------------------------------
  enable()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.dragRotate.enable();
  -----------------------------------------------------------------------
  isActive()

  isEnabled()
  -----------------------------------------------------------------------

KeyboardHandler

KeyboardHandler позволяет пользователю масштабировать, поворачивать и
панорамировать карту с помощью следующих сочетаний клавиш:

-   = / + : увеличение масштаба до 1.

-   Shift-= / Shift-+: увеличение уровня масштабирования на 2.

-   -: уменьшение уровня сигнала по 1.

-   Shift -: уменьшение уровня сигнала на 2.

-   Клавиши со стрелками (Arrow keys): панорамирование на 100 пикселей.

-   Shift+⇢: увеличение поворота на 15 градусов.

-   Shift+⇠: уменьшение поворота на 15 градусов.

-   Shift+⇡: увеличение шага на 10 градусов.

-   Shift+⇣: уменьшение шага на 10 градусов.

src/ui/handler/keyboard.js

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  disable()                           Отключает «keyboard rotate and
                                      zoom»

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.keyboard.disable();
  -----------------------------------------------------------------------
  disableRotation()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.keyboard.disableRotation();
  -----------------------------------------------------------------------
  enable()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.keyboard.enable();
  -----------------------------------------------------------------------
  enableRotation()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.keyboard.enableRotation();
  -----------------------------------------------------------------------
  isActive()

  isEnabled()
  -----------------------------------------------------------------------

DoubleClickZoomHandler

DoubleClickZoomHandler позволяет пользователю масштабировать карту в
определенной точке двойным нажатием левой кнопкой мыши или двойным
тапом.

src/ui/handler/shim/dblclick_zoom.js

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  disable()                           Отключает «double click to zoom»

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.doubleClickZoom.disable();
  -----------------------------------------------------------------------
  enable()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.doubleClickZoom.enable();
  -----------------------------------------------------------------------
  isActive()

  isEnabled()
  -----------------------------------------------------------------------

TouchZoomRotateHandler

TouchZoomRotateHandler позволяет пользователю увеличивать и поворачивать
карту, нажимая на сенсорный экран.

Они могут увеличивать масштаб одним пальцем, дважды нажимая и
перетаскивая. При втором касании удерживайте палец и перетащите его
вверх или вниз, чтобы увеличить или уменьшить масштаб.

src/ui/handler/shim/touch_zoom_rotate.js

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  disable()                           Отключает «pinch to rotate and
                                      zoom».

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.touchZoomRotate.disable();
  -----------------------------------------------------------------------
  disableRotation()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.touchZoomRotate.disableRotation();
  -----------------------------------------------------------------------
  enable(options?)

  -----------------------------------------------------------------------

Параметры

**around**--- если «center» пройден, карта будет масштабироваться вокруг
центра карты

Пример:

  -----------------------------------------------------------------------
  map.touchZoomRotate.enable();
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.touchZoomRotate.enable({ around:  \'center\' });
  -----------------------------------------------------------------------
  enableRotation()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.touchZoomRotate.enable();map.touchZoomRotate.enableRotation();
  -----------------------------------------------------------------------
  isActive()

  isEnabled()
  -----------------------------------------------------------------------

TouchPitchHandler

TouchPitchHandler позволяет пользователю наклонять карту, перетаскивая
ее вверх и вниз двумя пальцами.

src/ui/handler/touch_zoom_rotate.js

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  disable()                           Отключает «drag to pitch»

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.touchPitch.disable();
  -----------------------------------------------------------------------
  enable()

  -----------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.touchPitch.enable();
  -----------------------------------------------------------------------
  isActive()

  isEnabled()
  -----------------------------------------------------------------------

6\. Sources (источники)

GeoJSONSource

Источник (source), содержащий GeoJSON.

src/source/geojson_source.js

Пример:

  --------------------------------------------------------------------------------------
  map.addSource( \'some id\' , {  \`\`type:  \'geojson\' ,  \`\`data: 
  \'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_ports.geojson\'});
  --------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------

Пример:

  ----------------------------------------------------------------------------------------------------------------------------------------------------------
  map.addSource( \'some id\' , {    \`\`type:  \'geojson\' ,    \`\`data: {        \`\`\"type\" :  \"FeatureCollection\" ,        \`\`\"features\" :
  \[{            \`\`\"type\" :  \"Feature\" ,            \`\`\"properties\" : {},            \`\`\"geometry\" : {                \`\`\"type\" :  \"Point\"
  ,                \`\`\"coordinates\" :
  \[                    \`\`-76.53063297271729,                    \`\`39.18174077994108                \`\`\]            \`\`}        \`\`}\]    \`\`}});
  ----------------------------------------------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------------------------------------------

Пример:

  -----------------------------------------------------------------------
  map.getSource( \'some id\' ).setData({    \`\`\"type\" : 
  \"FeatureCollection\" ,    \`\`\"features\" : \[{        \`\`\"type\"
  :  \"Feature\" ,        \`\`\"properties\" : {  \"name\" :  \"Null
  Island\" },        \`\`\"geometry\" : {            \`\`\"type\" : 
  \"Point\" ,            \`\`\"coordinates\" : \[ 0, 0
  \]        \`\`}    \`\`}\]});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

  -----------------------------------------------------------------------------------
  Название                             Описание
  ------------------------------------ ----------------------------------------------
  getClusterChildren(clusterId,        Для кластеризованных источников (sources)
  callback)                            извлекает дочерние элементы данного кластера
                                       на следующем уровне масштабирования (в виде
                                       массива объектов
                                       GeoJSON).Параметры**clusterId:number**---
                                       кластер ID**callback:function\<Array\>**---
                                       функция (callback), которая будет вызвана при
                                       извлечении объектов ( (error, features) =\> {
                                       ... } ).

  getClusterExpansionZoom(clusterId,   Для кластеризованных источников (source)
  callback)                            выбирается масштаб, при котором данный кластер
                                       расширяется.Параметры**clusterId:number**---
                                       кластер ID**callback:function**--- функция
                                       (callback), которая будет вызвана при
                                       получении масштаба (zoom) ( (error, features)
                                       =\> { ... } )

  getClusterLeaves(clusterId, limit,   Для кластеризованных источников (source)
  offset, callback)                    извлекает исходные точки, принадлежащие
                                       кластеру (в виде массива объектов GeoJSON).
  -----------------------------------------------------------------------------------

Параметры

**clusterId:number**--- кластер ID

**limit:number**--- максимальное количество фич (features)

**offset:number**--- количество фич (features), которые нужно пропустить
(например, для разбиения на страницы - pagination).

**callback:function\<Array\>**--- функция (callback), которая будет
вызвана при извлечении объектов ( (error, features) =\> { ... } ).

Пример:

  -----------------------------------------------------------------------
  // Retrieve cluster leaves on clickmap.on( \'click\' ,  \'clusters\' , 
  function (e) {  \`\`var features = map.queryRenderedFeatures(e.point,
  {     \`\`layers: \[ \'clusters\' \]  \`\`});   \`\`var clusterId =
  features\[0\].properties.cluster_id;  \`\`var pointCount =
  features\[0\].properties.point_count;  \`\`var clusterSource =
  map.getSource( \'clusters\'
  );   \`\`clusterSource.getClusterLeaves(clusterId, pointCount, 0, 
  function (error, features) {    \`\`// Print cluster leaves in the
  console    \`\`console.log( \'Cluster leaves:\' , error,
  features);  \`\`})});
  -----------------------------------------------------------------------
  setData(data)

  -----------------------------------------------------------------------

VideoSource

Источник данных, содержащий видео.

src/source/video_source.js

Пример:

  -----------------------------------------------------------------------
  // add to mapmap.addSource( \'some id\' , {    \`\`type:  \'video\'
  ,    \`\`url: \[        \`\`\'path-to-video.mp4\'
  ,        \`\`\'path-to-video.webm\'    \`\`\],    \`\`coordinates:
  \[        \`\`\[-76.54, 39.18\],        \`\`\[-76.52,
  39.18\],        \`\`\[-76.52, 39.17\],        \`\`\[-76.54,
  39.17\]    \`\`\]}); // updatevar mySource = map.getSource( \'some id\'
  );mySource.setCoordinates(\[    \`\`\[-76.54335737228394,
  39.18579907229748\],    \`\`\[-76.52803659439087,
  39.1838364847587\],    \`\`\[-76.5295386314392,
  39.17683392507606\],    \`\`\[-76.54520273208618,
  39.17876344106642\]\]); map.removeSource( \'some id\' );   // remove
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  getVideo()                          Возвращает HTML видео

  pause()                             Установить на видео паузу

  play()                              Продолжить воспроизведение видео

  setCoordinates()                    Устанавливает координаты видео и
                                      перерисовывает (re-render) карту
  -----------------------------------------------------------------------

ImageSource

Источник данных изображения.

src/source/image_source.js

Пример:

  -----------------------------------------------------------------------
  // add to mapmap.addSource( \'some id\' , {    \`\`type:  \'image\'
  ,    \`\`url:  \'foo.png\' ,    \`\`coordinates:
  \[        \`\`\[-76.54, 39.18\],        \`\`\[-76.52,
  39.18\],        \`\`\[-76.52, 39.17\],        \`\`\[-76.54,
  39.17\]    \`\`\]}); // update coordinatesvar mySource = map.getSource(
  \'some id\' );mySource.setCoordinates(\[    \`\`\[-76.54335737228394,
  39.18579907229748\],    \`\`\[-76.52803659439087,
  39.1838364847587\],    \`\`\[-76.5295386314392,
  39.17683392507606\],    \`\`\[-76.54520273208618,
  39.17876344106642\]\]); // update url and coordinates
  simultaneouslymySource.updateImage({    \`\`url:  \'bar.png\'
  ,    \`\`coordinates: \[        \`\`\[-76.54335737228394,
  39.18579907229748\],        \`\`\[-76.52803659439087,
  39.1838364847587\],        \`\`\[-76.5295386314392,
  39.17683392507606\],        \`\`\[-76.54520273208618,
  39.17876344106642\]    \`\`\]}) map.removeSource( \'some id\' );   //
  remove
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

  -----------------------------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------------------------
  setCoordinates(coordinates)         Устанавливает координаты изображения и перерисовывает
                                      (re-render) карту.

  updateImage(options)                Обновляет URL --- адрес изображения и при
                                      необходимости координаты. Чтобы избежать мерцания
                                      изображения, установите свойство raster-fade-duration
                                      равным 0.Параметры**url:string**--- URL
                                      изображения**coordinates:Array\<Array\>**--- четыре
                                      координаты, представленные в виде массивов чисел
                                      долготы и широты, определяющие углы изображения.
                                      Координаты начинаются в верхнем левом углу
                                      изображения и идут по часовой стрелке.
  -----------------------------------------------------------------------------------------

CanvasSource

Источник данных, содержит контент HTML-холста (HTML canvas).

src/source/canvas_source.js

Пример:

  -----------------------------------------------------------------------
  // add to mapmap.addSource( \'some id\' , {    \`\`type:  \'canvas\'
  ,    \`\`canvas:  \'idOfMyHTMLCanvas\' ,    \`\`animate:  true
  ,    \`\`coordinates: \[        \`\`\[-76.54,
  39.18\],        \`\`\[-76.52, 39.18\],        \`\`\[-76.52,
  39.17\],        \`\`\[-76.54, 39.17\]    \`\`\]}); // updatevar
  mySource = map.getSource( \'some id\'
  );mySource.setCoordinates(\[    \`\`\[-76.54335737228394,
  39.18579907229748\],    \`\`\[-76.52803659439087,
  39.1838364847587\],    \`\`\[-76.5295386314392,
  39.17683392507606\],    \`\`\[-76.54520273208618,
  39.17876344106642\]\]); map.removeSource( \'some id\' );   // remove
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Методы

  ----------------------------------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- ----------------------------------------------------------
  getCanvas()                         Возвращает HTML канвас

  pause()                             Отключает анимацию. Карта будет отображать статическую
                                      копию изображения холста.

  play()                              Включает анимацию. Карта будет интерактивная.

  setCoordinates(coordinates)         Устанавливает координаты канваса и перерисовываем
                                      (re-render)
                                      карту.Параметры:**coordinates:Array\<Array\>**--- четыре
                                      координаты, представленные в виде массивов чисел долготы и
                                      широты, определяющие углы канваса. Координаты начинаются в
                                      верхнем левом углу канваса и идут по часовой стрелке.
  ----------------------------------------------------------------------------------------------

CanvasSourceOptions

Параметры добавления типа источника канваса на карту.

src/source/canvas_source.js

Параметры

**type:string**--- тип источника, должен быть равен «canvas».

**canvas:(string \| HTMLCanvasElement)**--- источник холста, из которого
можно считывать пиксели. Это может быть строка, представляющая
идентификатор элемента canvas, или сам HTMLCanvasElement.

**coordinates:Array\<Array\>**--- четыре координаты, обозначающие, где
разместить углы канваса, задаются в парах \[долгота, широта\].

**animate:boolean**--- является ли источник канваса анимированным. Если
канвас статичен (то есть пиксели не нужно перечитывать на каждом
кадре), animate следует установить в false для повышения
производительности.

7\. Events (события)

Evented

Методы добавления и удаления лисенеров (listeners)

src/util/evented.js

Методы

  ----------------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- ----------------------------------------
  off(type, listener)                 Удаляет ранее зарегистрированный лисенер
                                      (listener).Параметры**type:string**---
                                      тип событий**listener:function**---
                                      функция лисенер (listener)

  on(type, listener)                  Регистрирует новый лисенер
                                      (listener) Параметры**type:string**---
                                      тип событий**listener:function**---
                                      функция лисенер (listener)

  once(type, listener)                Добавляет лисенер (listener), который
                                      будет вызываться только один раз для
                                      указанного типа
                                      события.Параметры**type:string**--- тип
                                      событий**listener:function**--- функция
                                      лисенер (listener)
  ----------------------------------------------------------------------------

MapMouseEvent

События связанные с мышью

src/ui/events.js

Пример:

  -----------------------------------------------------------------------
  // The \`click\` event is an example of a \`MapMouseEvent\`.// Set up
  an event listener on the map.map.on( \'click\' ,  function (e)
  {  \`\`// The event object (e) contains information like the  \`\`//
  coordinates of the point on the map that was clicked.  \`\`console.log(
  \'A click event has occurred at \' + e.lngLat);});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Свойства

  --------------------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- --------------------------------------------
  lngLat                              Координаты курсора на карте

  originalEvent                       События DOM, вызвавшее событие карты

  point                               Пиксельные координаты курсора мыши
                                      относительно карты измеряются из левого
                                      верхнего угла.

  preventDefault()                    Предотвращает последующую обработку
                                      событий.Вызов этого метода предотвратит
                                      следующее события:- mousedown,
                                      поведение DragPanHandler-
                                      mousedown поведение DragRotateHandler-
                                      mousedown, поведение BoxZoomHandler-
                                      dblclick, поведение DoubleClickZoomHandler

  target                              Объект карты, который запустил событие.

  type                                Тип события (одно из Map.event:mousedown,
                                      Map.event:mouseup, Map.event:click,
                                      Map.event:dblclick, Map.event:mousemove,
                                      Map.event:mouseover, Map.event:mouseenter,
                                      Map.event:mouseleave, Map.event:mouseout,
                                      Map.event:contextmenu).
  --------------------------------------------------------------------------------

MapTouchEvent

События связанные с касаниями (touch)

src/ui/events.js

Свойства

  ---------------------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- ---------------------------------------------
  lngLat                              Координаты касания на карте

  lngLats                             Массив координат, соответствующих касаниям на
                                      карте

  originalEvent                       Событие DOM, вызвавшее событие карты

  point                               Пиксельные координаты курсора мыши
                                      относительно карты измеряются из левого
                                      верхнего угла.

  points                              Массив координат пикселей, соответствующих
                                      касаниям.

  preventDefault()                    Предотвращает последующую обработку события
                                      картой.Вызов этого метода предотвратит
                                      следующее события:- touchstart,
                                      поведение DragPanHandler-
                                      touchstart поведение TouchZoomRotateHandler

  target                              Объект карты, который запустил событие.

  type                                Тип события.
  ---------------------------------------------------------------------------------

MapBoxZoomEvent

События связанные с 'boxzoom', используемых BoxZoomHandler

src/ui/events.js

Параметры

**originalEvent:MouseEvent**--- DOM событие, вызвавшее событие
'boxzoom'. Может быть MouseEvent или KeyboardEvent.

**type:string**--- тип события 'boxzoom'. Может
быть: boxzoomstart, boxzoomend или boxzoomcancel.

**target:Map**--- экземпляр карты, вызвавший событие.

MapDataEvent

Объект MapDataEvent создается вместе с событиями Map.event:data и
Map.event:dataloading. Возможные значения для типов данных являются:

-   «source»: данные, не связанные с тайлами, но связанны с любым
    источником.

-   «style»: стиль карты.

Параметры

**type:string**--- тип события.

**dataType:string**--- тип данных, которые изменились. Может быть:
«source», «style».

**isSourceLoaded:boolean**--- true, если событие имеет тип данных
"source" и источник (source) не имеет нерешенных сетевых запросов
(outstanding network requests).

**source:Object**--- объект типа source.

**sourceDataType:string**--- включается, если событие имеет тип данных
'source' и событие сообщает, что внутренние данные были получены или
изменены. Возможными значениями являются 'metadata' , 'content' и
'visibility' .

**tile:Object**--- загружаемый или изменяемый тайл, если событие имеет
тип данных 'source' и связано с загрузкой тайла.

**coord:Coordinate**--- координата тайла, если событие имеет тип данных
'source' и событие связано с загрузкой тайла.

src/ui/events.js

Пример:

  -----------------------------------------------------------------------
  // The sourcedata event is an example of MapDataEvent.// Set up an
  event listener on the map.map.on( \'sourcedata\' ,  function (e)
  {  \`\`if (e.isSourceLoaded) {    \`\`// Do something when the source
  has finished loading  \`\`}});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

MapWheelEvent

События связанные с 'wheel'.

src/ui/events.js

Свойства

  -----------------------------------------------------------------------
  Название                            Описание
  ----------------------------------- -----------------------------------
  orignalEvent                        Событие DOM, вызвавшее событие map.

  preventDefault()                    Предотвращает последующую обработку
                                      события.Вызов этого метода
                                      предотвратит поведение
                                      ScrollZoomHandler.

  target                              Объект карты, который запустил
                                      событие.

  type                                Тип события
  -----------------------------------------------------------------------

8\. Использование в React приложениях

React --- это JavaScript библиотека, используемая для создания
пользовательских интерфейсов. Поскольку React манипулирует DOM'ом, может
быть сложно связать React с другими библиотеками, которые также
манипулируют DOM'ом и управляют состоянием, подобным MMR GL JS. В этом
разделе вы узнаете, как создать React приложение, которое использует MMR
GL JS для визуализации карты, отображения координат центральной точки
карты и уровня ее масштабирования, а затем обновления отображения при
взаимодействии пользователя с картой. Вы сможете использовать принципы,
описанные в этом гайде, для создания более сложных приложений,
использующих как React, так и MMR GL JS.

Настройка структуры React приложения

Создайте новую папку с именем проекта.

В папке проекта создайте новый файл:

-   **package.json**--- этот файл используется для указания всех
    пакетов, необходимых вашему приложению.

В папке проекта создайте папку public. В этой папке создайте два новых
файла:

-   **index.html**--- этот HTML-файл будет отображать визуализированную
    карту, с которой ваши пользователи смогут взаимодействовать.

-   **site.css**--- этот файл будет содержать CSS, необходимый для
    правильного форматирования карты и боковой панели. Создание HTML
    каркаса

В папке проекта создайте другую папку с именем src. В папке src создайте
новый файл:

-   **index.js**--- этот файл JavaScript будет содержать всю логику
    React, необходимую для установки и управления состоянием приложения
    и отображения карты.

После создания этих папок и файлов у вас будет следующая файловая
структура:

  -----------------------------------------------------------------------
  project└──  package .json└──  public│     └── index.html│     └──
  site.css└── src       \`\`└── index.js
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Далее выполните npm install.

Создание React приложения

Откройте public/index.html файл и вставьте в него следующий код:

index.html

  -----------------------------------------------------------------------
  \<!DOCTYPE html\>\< html lang = \"en\" \>\< head \>    \`\`\< title
  \>MMR GL JS and React\</ title \>    \`\`\< meta charset = \"utf-8\"
  /\>    \`\`\< meta name = \"viewport\" content = \"width=device-width,
  initial-scale=1\" /\>        \`\`\< link
  href=\"https://geo.rustore.ru/sdk/js/\<version\>/mmr-gl.css\"
  rel=\"stylesheet\" /\>    \`\`\< link href = \"%PUBLIC_URL%/site.css\"
  rel = \"stylesheet\" /\>    \`\`\< script
  src=\"https://geo.rustore.ru/sdk/js/\<version\>/mmr-gl.js\"\>\</ script
  \>\</ head \>\< body \>    \`\`\< div id = \"app\" \>\</ div \>\</ body
  \>\</ html \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Этот код создает структуру HTML-страницы, которую будут видеть
пользователь. В

страницы есть тэг

с идентификатором приложения. Этот

является контейнером, в котором приложение React будет отображаться на
странице.

Этот код также ссылается на два разные файла стилей в

. Первый стиль --- это стиль MMR GL JS, который гарантирует, что
элементы на вашей карте отобразятся верно. Вторая стиль --- это файл
site.css, созданный ранее, в который вы добавите CSS для конкретного
приложения.

Установка дефолтного стейта (default state)

Откройте src/index.js файл. Добавьте следующие импорты в верхнюю часть
файла:

src/index.js

Вариант с хуками (hooks)

  -----------------------------------------------------------------------
  import React, { useRef, useEffect, useState } from  \'react\' ;import
  ReactDOM from  \'react-dom\' ;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Вариант с классами (classes)

  -----------------------------------------------------------------------
  import React from  \'react\' ;import ReactDOM from  \'react-dom\' ;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Импортируйте MMR GL и добавьте свой токен доступа. Установить токен
доступа (accessToken):

  -----------------------------------------------------------------------
  mmrgl.accessToken =  \'token\' ;
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Вы можете настроить приложение React! Чтобы создать структуру, в которую
вы добавите код из следующих нескольких шагов, добавьте следующее
index.js:

Вариант с хуками (hooks)

  -----------------------------------------------------------------------
  const Map = () =\> {}; ReactDOM.render(\<Map /\>,
  document.getElementById( \'app\' ));
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Вариант с классами (classes)

  -----------------------------------------------------------------------
  class Map extends React.PureComponent {} ReactDOM.render(\<Map /\>,
  document.getElementById( \'app\' ));
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Это определяет карту, а затем указывает, что она должна быть отображена
в

с идентификатором приложения.

Отрисовка карты

Вам нужно визуализировать карту в вашем приложении. Точка входа для
инициализации карты в приложении React находится через один элемент,
указанный в return. Добавьте следующий код в свое приложение:

src/index.js

Вариант с хуками (hooks)

  -----------------------------------------------------------------------
  return (    \`\`\<div\>        \`\`\<div className= \"map-container\"
  ref={mapContainer} /\>    \`\`\</div\>);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Вариант с классами (classes)

  -----------------------------------------------------------------------
  render() {    \`\`const { lng, lat, zoom } =  this
  .state;    \`\`return (        \`\`\<div\>            \`\`\<div ref={
  this .mapContainer} className= \"map-container\"
  /\>        \`\`\</div\>    \`\`);}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

mapContainer ref указывает, что карта должна быть нарисована на
HTML-странице в новом элементе

.

Карта нуждается в нескольких правилах стиля для правильного отображения.
Добавьте следующий код в файл site.css:

  -----------------------------------------------------------------------
  .map-container {    \`\`position :  absolute ;    \`\`top :  0
  ;    \`\`right :  0 ;    \`\`left :  0 ;    \`\`bottom :  0 ;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Сохраните изменения. В командной строке выполните команду npm start. Это
запускает локальный сервер и открывает новую страницу в вашем браузере с
вашим приложением.

Если вы откроете консоль вашего браузера, вы можете увидеть
ошибку: 'map' is assigned a value but never used. Не волнуйтесь --- на
следующем шаге вы будете использовать переменную map!

Хранение координат

Затем вам нужно создать функцию, которая будет сохранять новые широту,
долготу и масштаб, когда пользователь взаимодействует с картой. Вы
напишете функцию MMR GL JS map.on('move'), которая устанавливает
значения в стейт, когда пользователь перемещает карту. В useEffect, если
вы используете хуки, или в componentDidMount(), если вы используете
классы, добавьте следующий код:

Вариант с хуками (hooks)

  ----------------------------------------------------------------------------------------------------------------------------------------------
  map.on( \'move\' , () =\>
  {    \`\`setLng(map.getCenter().lng.toFixed(4));    \`\`setLat(map.getCenter().lat.toFixed(4));    \`\`setZoom(map.getZoom().toFixed(2));});
  ----------------------------------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------------------------------

Вариант с классами (classes)

  -----------------------------------------------------------------------
  map.on( \'move\' , () =\> {    \`\`this .setState({        \`\`lng:
  map.getCenter().lng.toFixed(4),        \`\`lat:
  map.getCenter().lat.toFixed(4),        \`\`zoom:
  map.getZoom().toFixed(2)    \`\`});});
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

В этой функции используется useState(), если вы используете хуки
(hooks), или setState(), если вы используете классы (classes), чтобы
сбросить значения lng, lat и zoom при перемещении карты. В функции
используются следующие методы:

-   getCenter(), метод MMR GL JS, чтобы получить новую долготу и широту
    точки в центре карты.

-   getZoom(), метод MMR GL JS, чтобы определить уровень
    масштабирования, на который установлена карта.

-   toFixed(), метод JavaScript, позволяющий усечь результирующее число
    с плавающей запятой до заданного числа цифр.

Отображение координат

Когда вы можете собирать и хранить эту информацию, вы можете
использовать return для отображения ее на карте. Внутри открывающего
тега

, созданного для хранения карты, добавьте новый

для отображения долготы, широты и масштаба карты. Теперь оператор return
будет выглядеть так:

Вариант с хуками (hooks)

  -----------------------------------------------------------------------
  return (    \`\`\<div\>        \`\`\<div className= \"sidebar\"
  \>            \`\`Longitude: {lng} \| Latitude: {lat} \| Zoom:
  {zoom}        \`\`\</div\>        \`\`\<div className=
  \"map-container\" ref={mapContainer} /\>    \`\`\</div\>);
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Вариант с классами (classes)

  -----------------------------------------------------------------------
  render() {    \`\`const { lng, lat, zoom } =  this
  .state;    \`\`return (        \`\`\<div\>            \`\`\<div
  className= \"sidebar\" \>                \`\`Longitude: {lng} \|
  Latitude: {lat} \| Zoom:
  {zoom}            \`\`\</div\>            \`\`\<div ref={ this
  .mapContainer} className= \"map-container\"
  /\>        \`\`\</div\>    \`\`);}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Боковая панель нуждается в нескольких стилях, чтобы правильно
отображаться на странице. Добавьте следующий CSS в файл site.css:

site.css

  -----------------------------------------------------------------------
  .sidebar {    \`\`background-color : rgba( 35 ,  55 ,  75 ,  0.9
  );    \`\`color :  #ffffff ;    \`\`padding :  6px 12px ;    \`\`font
  :  15px / 24px monospace ;    \`\`z-index :  1 ;    \`\`position : 
  absolute ;    \`\`top :  0 ;    \`\`left :  0 ;    \`\`margin :  12px
  ;    \`\`border-radius:  4px ;}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Сохраните свою работу и вернитесь на страницу браузера. В левом верхнем
углу карты есть боковая панель, стилизованная в соответствии с правилами
CSS, установленными в site.css. Боковая панель показывает текущую широту
и долготу центра карты, а также уровень масштабирования. Когда вы
масштабируете и перемещаете карту, содержимое боковой панели будет
обновляться.

Описание дополнительных объектов карты

AttributionControl

Элемент управления AttributionControl представляет информацию об
атрибутах карты (копирайтинг и так далее).

src/ui/control/attribution_control.js

Параметры:

**compact:boolean**--- если true, то всегда отображается в компактном
виде, если false, то будет всегда в полный размер, по умолчанию это
работает в зависимости от размера карты (viewport \< 640 ? compact :
full )

**customAttribution:string\|Array**--- строка или строки для отображения
в атрибутах карты

Пример:

  -----------------------------------------------------------------------
  var map =  new mmrgl.Map({attributionControl:  false
  })  \`\`.addControl( new mmrgl.AttributionControl({      \`\`compact: 
  true   \`\`}));
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

LngLatBoundsLike

Объект LngLatBounds, массив LngLatLike объектов в порядке \[sw, ne\] или
массив чисел в порядке \[west, south, east, north\].

src/geo/lng_lat_bound.js

Пример:

  -----------------------------------------------------------------------
  var v1 =  new mmrgl.LngLatBounds(    \`\`new mmrgl.LngLat(-73.9876,
  40.7661),    \`\`new mmrgl.LngLat(-73.9397, 40.8002));var v2 =  new
  mmrgl.LngLatBounds(\[-73.9876, 40.7661\], \[-73.9397, 40.8002\])var v3
  = \[\[-73.9876, 40.7661\], \[-73.9397, 40.8002\]\];
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Статичная карта

**/staticmap/png** --- сервис, позволяющий получить изображение карты.

Запрос

**Обязательные параметры запроса**

  -------------------------------------------------------------------------------------------------------------
  Имя поля                     Формат                    Описание                             Пример
  ---------------------------- ------------------------- ------------------------------------ -----------------
  api_key                      hex-string                Доступ к сервисам

  ---

  fa749bace6d8a3b1\....

  \<br\>latlon\<br\>           float,float               Широта и долгота (в градусах)
                                                         геометрического центра требуемого
                                                         изображения карты.Широта и долгота
                                                         указывается через запятую.При
                                                         указании bbox в запросе значения
                                                         указанные в latlon игнорируются

  ---

  latlon=55.727,37.59

  bbox                         float,float,float,float   Область местонахождения объекта,
                                                         которая описывается парой координат
                                                         в порядке: lat1,lon1,lat2,lon2Широта
                                                         и долгота координат указывается
                                                         через запятую.Координаты разделяются
                                                         запятой

  ---

  bbox=55.7,37.65,55.8,37.66
  -------------------------------------------------------------------------------------------------------------

**Дополнительные параметры запроса**

  ----------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                     Формат            Описание                                            Пример
  ------------------------------------------------------------ ----------------- --------------------------------------------------- -----------------
  zoom                                                         integer           Уровень масштабирования в диапазоне от 0 до 17,
                                                                                 где- **0** (по умолчанию) ---  соответствует уровню
                                                                                 обзора мира;- **17** --- соответствует уровню
                                                                                 обзора здания.

  ---

  zoom=13

  width                                                        integer           Ширина изображения карты.Значение может находиться
                                                                                 в диапазоне от 32 до 1024 пикселей (по умолчанию
                                                                                 512)

  ---

  width=640

  height                                                       integer           Высота изображения карты.Значение может находиться
                                                                                 в диапазоне от 32 до 1024 пикселей (по умолчанию
                                                                                 512)

  ---

  height=480

  pins                                                         string            Параметры, которые определяют расположение и тип
                                                                                 булавок, добавляемых на карту.Параметры должны
                                                                                 передаваться в
                                                                                 формате: lat1,lon1,icon1\|lat2,lon2,icon2\|...,
                                                                                 где- **lat1...latN** --- широта расположения
                                                                                 булавки в градусах;- **lon1...lonN** ---  долгота
                                                                                 расположения булавки в градусах;- **icon1...iconN**
                                                                                 --- формат булавки.Форматы доступных булавок
                                                                                 представлены в коллекции булавок

  ---

  pins=55.7505,37.6165,blue_star\|60.6543,38.1255,red_camera

  style                                                        string            Параметр выбора стиля отображения карты.По
                                                                                 умолчанию используется стиль: main

  ---

  style=light

  padding                                                      integer           Параметр смещения атрибутов карты. Смещение
                                                                                 определяется в пикселях и равно расстоянию от
                                                                                 правого края надписи до правого края
                                                                                 атрибутов.Ограничения: значение может находиться в
                                                                                 диапазоне от 5 до width/2 пикселей (по умолчанию 5)

  ---

  padding=40

  scale                                                        integer           Параметр масштабирования изображения. Возможны
                                                                                 значения 1 или 2 (по умолчанию 1).Если scale=2, то
                                                                                 размеры итогового изображения будут в 2 раза больше
                                                                                 за счёт большей плотности пикселей. Например, при
                                                                                 запросе width=200&height=200&scale=2 результирующее
                                                                                 изображение будет размером 400x400 пикселей, но
                                                                                 выглядеть будет, как при запросе
                                                                                 width=200&height=200, а не width=400&height=400:   
                                                                                 width=200&height=200width=200&height=200&scale=2   
                                                                                   width=400&height=400

  ---

  scale= 2
  ----------------------------------------------------------------------------------------------------------------------------------------------------

Запрос (POST)

**Обязательные параметры запроса (GET)**

  -----------------------------------------------------------------------------
  Имя поля                Формат            Описание          Пример
  ----------------------- ----------------- ----------------- -----------------
  api_key                 hex-string        Доступ к сервисам

  ---

  fa749bace6d8a3b1\....
  -----------------------------------------------------------------------------

**Обязательные параметры запроса (POST)**

Параметры принимаются в теле запроса в составе JSON-объекта

  -------------------------------------------------------------------------------------------
  Имя поля                              Формат            Описание          Пример
  ------------------------------------- ----------------- ----------------- -----------------
  \<br\>coord\<br\>                     **coord** ---     Широта и долгота
                                        JSON объект с     (в градусах)
                                        float полями      геометрического
                                        «lat» и «lon»     центра требуемого
                                                          изображения
                                                          карты.При
                                                          указании «bbox» в
                                                          запросе значения,
                                                          указанные в
                                                          «coord»,
                                                          игнорируются

  ---

  {  \`\`\"lat\" :  55.727
  ,  \`\`\"lon\" :  37.59}

  bbox                                  JSON массив из    Область
                                        2-х элементов     местонахождения
                                                          объекта, которая
                                                          описывается парой
                                                          координат.

  ---

  \"bbox\" : \[  \`\`{    \`\`\"lat\"
  :  55.71 ,    \`\`\"lon\" : 
  37.65  \`\`},  \`\`{    \`\`\"lat\"
  :  55.8 ,    \`\`\"lon\" : 
  37.6535  \`\`}\]
  -------------------------------------------------------------------------------------------

**Дополнительные параметры запроса**

  ---------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                 Формат            Описание                   Пример
  ------------------------------------------------------------------------ ----------------- -------------------------- -----------------
  Имя поля                                                                 Формат            Описание                   Пример

  ---                                                                      ---               ---                        ---

  zoom                                                                     integer           Уровень масштабирования в
                                                                                             диапазоне от 0 до 17, где-
                                                                                             **0** (по умолчанию) --- 
                                                                                             соответствует уровню
                                                                                             обзора мира;- **17** ---
                                                                                             соответствует уровню
                                                                                             обзора здания.

  ---

  \"zoom\" :  13

  width                                                                    integer           Ширина изображения
                                                                                             карты.Значение может
                                                                                             находиться в диапазоне от
                                                                                             32 до 1024 пикселей (по
                                                                                             умолчанию 512)

  ---

  \"width\" :  640

  height                                                                   integer           Высота изображения
                                                                                             карты.Значение может
                                                                                             находиться в диапазоне от
                                                                                             32 до 1024 пикселей (по
                                                                                             умолчанию 512)

  ---

  \"height\" :  480

  pins                                                                     JSON массив       Описание булавок,
                                                                           объектов          добавляемых на карту

  ---

  \"pins\" : \[{  \`\`\"coord\" : {    \`\`\"lat\" :  55.73
  ,    \`\`\"lon\" :  37.59  \`\`},  \`\`\"icon\" : {    \`\`\"symbol\" : 
  \"rustore-corp_photo\"  \`\`}},{  \`\`\"coord\" : {    \`\`\"lat\" : 
  55.76 ,    \`\`\"lon\" :  37.59  \`\`},  \`\`\"icon\" :
  {    \`\`\"base64\" :  \"iVBORw0KGgoA\" \...  \`\`}},{  \`\`\"coord\" :
  {    \`\`\"lat\" :  55.745 ,    \`\`\"lon\" : 
  37.67  \`\`},  \`\`\"icon\" : {    \`\`\"url\" : 
  \"https://geo.rustore.ru/welcome/static-map-logo-50x50.png\"  \`\`}}\]

  coord                                                                    JSON массив       Определяет расположение
                                                                                             булавок добавляемых на
                                                                                             карту

  icon                                                                     JSON массив       Описание визуального
                                                                                             представления булавок
                                                                                             добавляемых на карту

  symbol                                                                   string            Поле «symbol» содержит
                                                                                             формат визуального
                                                                                             представления
                                                                                             булавкиФорматы доступных
                                                                                             булавок представлены
                                                                                             в коллекции булавок

  base64                                                                   string            Изображение булавки в
                                                                                             формате PNG в
                                                                                             base64-закодированном виде
                                                                                             (не больше 250 тысяч
                                                                                             символов)

  url                                                                      string            URL изображения PNG. Длина
                                                                                             URL не должна превышать
                                                                                             1000 символов, размер
                                                                                             изображения не должен
                                                                                             превышать 512 КБ.
                                                                                             Поддерживается только
                                                                                             транспорт HTTPS, передача
                                                                                             без сжатия и редиректов.

  features                                                                 GeoJSON объект    GeoJSON, описывающий
                                                                                             геометрию для отображения
                                                                                             на верхнем слое
                                                                                             карты.Свойство properties
                                                                                             является опциональным.

  ---

  \"features\" : {  \`\`\"type\" :  \"FeatureCollection\"
  ,  \`\`\"features\" : \[  \`\`{    \`\`\"type\" :  \"Feature\"
  ,    \`\`\"geometry\" : {      \`\`\"type\" :  \"Point\"
  ,      \`\`\"coordinates\" : \[ 37.6165 ,  55.7505
  \]    \`\`},    \`\`\"properties\" : {      \`\`\"title\" : 
  \"points\"    \`\`}  \`\`},  \`\`{    \`\`\"type\" :  \"Feature\"
  ,    \`\`\"geometry\" : {      \`\`\"type\" :  \"LineString\"
  ,      \`\`\"coordinates\" : \[        \`\`\[ 37.6163 ,  55.7503 \], \[
  37.6164 ,  55.7504 \], \[ 37.6165 ,  55.7505 \], \[ 37.6166 ,  55.7506
  \]      \`\`\]    \`\`},    \`\`\"properties\" : {      \`\`\"title\" : 
  \"line\"    \`\`}  \`\`},  \`\`{    \`\`\"type\" :  \"Feature\"
  ,    \`\`\"geometry\" : {      \`\`\"type\" :  \"Polygon\"
  ,      \`\`\"coordinates\" : \[        \`\`\[\[ 37.6395 , 55.73 \], \[
  37.6066 , 55.73 \], \[ 37.6066 , 55.751 \], \[ 37.6395 , 55.751 \], \[
  37.6395 , 55.73 \]\],        \`\`\[\[ 37.6345 , 55.735 \], \[ 37.6345 ,
  55.746 \], \[ 37.6116 , 55.746 \], \[ 37.6116 , 55.735 \], \[ 37.6345 ,
  55.735 \]\]      \`\`\]    \`\`},    \`\`\"properties\" :
  {      \`\`\"title\" :  \"polygon\"    \`\`}  \`\`}\]}

  features-style                                                           JSON объект       Настройка визуального
                                                                                             отображения GeoJSON,
                                                                                             переданного в
                                                                                             features.Отображение
                                                                                             точек, линий и
                                                                                             многоугольников
                                                                                             настраивается отдельно:-
                                                                                             point --- настройки точек.
                                                                                             Точки отображаются в виде
                                                                                             кругов. - circle-color ---
                                                                                             цвет круга -
                                                                                             circle-opacity ---
                                                                                             прозрачность круга -
                                                                                             circle-radius --- радиус
                                                                                             круга в пикселях- line ---
                                                                                             настройки линий -
                                                                                             line-width --- толщина
                                                                                             линии в пикселях  -
                                                                                             line-color --- цвет
                                                                                             линии - line-opacity ---
                                                                                             прозрачность линии-
                                                                                             polygon --- настройки
                                                                                             многоугольников -
                                                                                             fill-color --- цвет
                                                                                             заливки - fill-opacity ---
                                                                                             прозрачность заливки

  ---

  \"features-style\" : {    \`\`\"point\" : {      \`\`\"circle-color\" : 
  \"#ffffff\" ,      \`\`\"circle-opacity\" :  0.8
  ,      \`\`\"circle-radius\" :  4.0    \`\`},    \`\`\"line\" :
  {      \`\`\"line-color\" :  \"#2688eb\" ,      \`\`\"line-width\" : 
  2.0    \`\`},    \`\`\"polygon\" : {      \`\`\"fill-color\" : 
  \"#2688eb\" ,      \`\`\"fill-opacity\" :  0.5    \`\`}  \`\`}

  style                                                                    string            Параметр
                                                                                             выбора стиля отображения
                                                                                             карты.По умолчанию
                                                                                             используется стиль «main»

  ---

  \"style\" :  \"light\"

  padding                                                                  integer           Параметр смещения
                                                                                             атрибутов карты. Смещение
                                                                                             определяется в пикселях и
                                                                                             равно расстоянию от
                                                                                             правого края надписи до
                                                                                             правого края
                                                                                             атрибутов.Ограничения:
                                                                                             значение может находиться
                                                                                             в диапазоне от 5 до
                                                                                             width/2 пикселей (по
                                                                                             умолчанию 5)

  ---

  \"padding\" :  40

  scale                                                                    integer           Параметр масштабирования
                                                                                             изображения. Возможны
                                                                                             значения 1 или 2 (по
                                                                                             умолчанию 1).

  ---

  \"scale\" :  2
  ---------------------------------------------------------------------------------------------------------------------------------------

Ответ

В ответ вы получите изображение части карты, соответствующей параметрам,
указанным в запросе.

Пример

**Запрос (GET)**

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  https://geo.rustore.ru/api/staticmap/png?api_key=\<YOUR_API_KEY\>&latlon=55.727,37.59&style=main&zoom=10&width=1024&height=512&padding=5&pins=55.73,37.59,rustore-corp_photo\|55.76,37.59,green_star\|55.745,37.67,rustore-electric_a
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Запрос (POST)**

  -------------------------------------------------------------------------
  {  \`\`\"width\" :  660 ,  \`\`\"height\" :  600 ,  \`\`\"bbox\" :
  \[{      \`\`\"lat\" :  55.71 ,      \`\`\"lon\" :  37.65    \`\`},
  {      \`\`\"lat\" :  55.8 ,      \`\`\"lon\" : 
  37.6535    \`\`}  \`\`\],  \`\`\"padding\" :  200 ,  \`\`\"scale\" :  1
  ,  \`\`\"features\" : {},  \`\`\"coord\" : {    \`\`\"lat\" :  55.7505
  ,    \`\`\"lon\" :  37.6165  \`\`},  \`\`\"pins\" :
  \[    \`\`{      \`\`\"coord\" : {        \`\`\"lat\" :  55.73
  ,        \`\`\"lon\" :  37.59      \`\`},      \`\`\"icon\" :
  {        \`\`\"symbol\" : 
  \"rustore-corp_photo\"      \`\`}    \`\`},    \`\`{      \`\`\"coord\" :
  {        \`\`\"lat\" :  55.76 ,        \`\`\"lon\" : 
  37.59      \`\`},      \`\`\"icon\" : {        \`\`\"symbol\" : 
  \"green_star\"      \`\`}    \`\`},    \`\`{      \`\`\"coord\" :
  {        \`\`\"lat\" :  55.745 ,        \`\`\"lon\" : 
  37.67      \`\`},      \`\`\"icon\" : {        \`\`\"symbol\" : 
  \"rustore-electric_a\"      \`\`}    \`\`}  \`\`\],  \`\`\"zoom\" :  11
  ,  \`\`\"style\" :  \"main\"}
  -------------------------------------------------------------------------

  -------------------------------------------------------------------------

Ответ

Коллекция булавок

Название иконки (параметр запроса icon) формируется как
«цвет"+"\_"+"тип». icon=color_image

Например, если вам необходима булавка красного цвета с изображением
камеры, то icon=red_camera

При использовании сервиса создания изображения со статичной картой вы
можете использовать только заранее предопределённые булавки.

Если вам необходимо добавить дополнительные булавки для вашего проекта,
обратитесь в поддержку RuStore

Типы Булавок

**Иконки**

**Цифры**

**Алфавит**

Пример отображения

  -----------------------------------------------------------------------
  Стандартный вид                     Приближенный вид
  ----------------------------------- -----------------------------------


  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  Вода                                Аэропорт + наложение
  ----------------------------------- -----------------------------------


  -----------------------------------------------------------------------

Стили карт

На текущий момент для использования с сервисами доступны несколько
стилей карт, список постоянно пополняется. Если ни один из стилей не
удовлетворяет вашим потребностям, то мы можем разработать стиль
индивидуально под ваш проект.

  ------------------------------------------------------------------------
  Стиль              zoom level = 5    zoom level = 10   zoom level = 15
  ------------------ ----------------- ----------------- -----------------
  light

  main

  dark
  ------------------------------------------------------------------------

Сервисы маршрутизации

Маршрутизация на текущий момент представлена сервисами:

-   построения маршрута;

-   расчета матрицы расстояний;

-   расчета области достижимости;

-   построения оптимального маршрута.

Построение маршрута

Сервис построения маршрутов позволяет осуществлять построение
автомобильных, велосипедных и пешеходных маршрутов между двумя точками,
с возможностью указания промежуточных точек маршрута.

**/directions** --- точка вызова сервиса построения маршрутов с
возможностью расчёта нескольких альтернативных маршрутов за один запрос
и поддержкой пробок.

Запрос

Запрос передается в формате json в HTTP body. Json запроса состоит из
обязательных и не обязательных полей. В url запроса должны быть заданы
обязательные параметры.

Простой пример json запроса:

  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  {   \`\`\"locations\":\[      \`\`{         \`\`\"lat\":43.133200,         \`\`\"lon\":131.911300      \`\`},      \`\`{         \`\`\"lat\":50.266000,         \`\`\"lon\":127.535600      \`\`}   \`\`\],   \`\`\"costing\":\"auto\",   \`\`\"costing_options\":{      \`\`\"auto\":{         \`\`\"use_border_crossing\":0      \`\`}   \`\`},   \`\`\"directions_options\":{      \`\`\"units\":\"kilometers\"   \`\`},   \`\`\"id\":\"my_route\"}
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

В этом запросе строится маршрут между Владивостоком и Благовещенском. Он
строится так, чтобы избежать маршрута через Китай, добавляя штраф за
пересечение международных границ. Полученный маршрут отображается в
километрах.

**Обязательные url-параметры запроса**

  -----------------------------------------------------------------------------
  Имя параметра           Формат            Описание          Пример
  ----------------------- ----------------- ----------------- -----------------
  api_key                 hex-string        Доступ к сервисам

  ---

  fa749bace6d8a3b1\....
  -----------------------------------------------------------------------------

**Обязательные json-поля в HTTP body запроса**

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                                                                                                                                                                                                                                       Формат            Описание          Пример
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ----------------- ----------------- -----------------
  locations                                                                                                                                                                                                                                                                                      list              Список точек для
                                                                                                                                                                                                                                                                                                                   построения
                                                                                                                                                                                                                                                                                                                   маршрута в
                                                                                                                                                                                                                                                                                                                   массиве JSON.
                                                                                                                                                                                                                                                                                                                   Маршрут между
                                                                                                                                                                                                                                                                                                                   точками строится
                                                                                                                                                                                                                                                                                                                   в порядке,
                                                                                                                                                                                                                                                                                                                   который задан в
                                                                                                                                                                                                                                                                                                                   запросе.Каждая
                                                                                                                                                                                                                                                                                                                   точка задается
                                                                                                                                                                                                                                                                                                                   параметрами,
                                                                                                                                                                                                                                                                                                                   описание которых
                                                                                                                                                                                                                                                                                                                   приведено ниже

  ---

  \"locations\":\[    \`\`{     \`\`\"lat\":55.796932,     \`\`\"lon\":37.537849,     \`\`\"heading\":150    \`\`},    \`\`{     \`\`\"lat\":55.865625,     \`\`\"lon\":37.462290,     \`\`\"type\":\"via\"    \`\`},    \`\`{     \`\`\"lat\":55.962139,     \`\`\"lon\":37.406377    \`\`}\]

  lat                                                                                                                                                                                                                                                                                            float             Широта точки
                                                                                                                                                                                                                                                                                                                   маршрута в
                                                                                                                                                                                                                                                                                                                   градусах.
                                                                                                                                                                                                                                                                                                                   Используется 6
                                                                                                                                                                                                                                                                                                                   знаков после
                                                                                                                                                                                                                                                                                                                   запятой

  ---

  \"lat\":55.796932

  lon                                                                                                                                                                                                                                                                                            float             Долгота точки
                                                                                                                                                                                                                                                                                                                   маршрута в
                                                                                                                                                                                                                                                                                                                   градусах.
                                                                                                                                                                                                                                                                                                                   Используется 6
                                                                                                                                                                                                                                                                                                                   знаков после
                                                                                                                                                                                                                                                                                                                   запятой

  ---

  \"lon\":37.537849
  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Дополнительные json-поля в HTTP body запроса**

  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                                                                                                                                                                                          Формат            Описание                     Пример
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ----------------- ---------------------------- -----------------
  type                                                                                                                                                                                                                                              string            Тип точки маршрута. Является
                                                                                                                                                                                                                                                                      опциональным полем запроса и
                                                                                                                                                                                                                                                                      влияет на два параметра:
                                                                                                                                                                                                                                                                      возможность разворота в
                                                                                                                                                                                                                                                                      данной точке и создание
                                                                                                                                                                                                                                                                      отдельной ветки ведения в
                                                                                                                                                                                                                                                                      списке legs:- **break** (по
                                                                                                                                                                                                                                                                      умолчанию) --- развороты
                                                                                                                                                                                                                                                                      разрешены, для этой точки
                                                                                                                                                                                                                                                                      будет создана отдельная
                                                                                                                                                                                                                                                                      ветка ведения в списке legs-
                                                                                                                                                                                                                                                                      **through** --- развороты
                                                                                                                                                                                                                                                                      запрещены, для этой точки не
                                                                                                                                                                                                                                                                      будет создана отдельная
                                                                                                                                                                                                                                                                      ветка ведения в списке legs-
                                                                                                                                                                                                                                                                      **via** --- развороты
                                                                                                                                                                                                                                                                      разрешены, для этой точки не
                                                                                                                                                                                                                                                                      будет создана отдельная
                                                                                                                                                                                                                                                                      ветка ведения в списке legs-
                                                                                                                                                                                                                                                                      **break_through** ---
                                                                                                                                                                                                                                                                      развороты запрещены, для
                                                                                                                                                                                                                                                                      этой точки будет создана
                                                                                                                                                                                                                                                                      отдельная ветка ведения в
                                                                                                                                                                                                                                                                      списке legsТипы для первой и
                                                                                                                                                                                                                                                                      последней точек маршрута
                                                                                                                                                                                                                                                                      игнорируются и всегда
                                                                                                                                                                                                                                                                      считаются равным break

  ---

  \"type\":\"break\"\"type\":\"via\"

  heading                                                                                                                                                                                                                                           float             Предпочтительное направление
                                                                                                                                                                                                                                                                      движения при старте
                                                                                                                                                                                                                                                                      (является опциональным
                                                                                                                                                                                                                                                                      параметром
                                                                                                                                                                                                                                                                      запроса). Направление
                                                                                                                                                                                                                                                                      указывается в градусах с
                                                                                                                                                                                                                                                                      севера по часовой стрелке,
                                                                                                                                                                                                                                                                      где север --- 0°, восток ---
                                                                                                                                                                                                                                                                      90°, юг --- 180°, запад ---
                                                                                                                                                                                                                                                                      270°

  ---

  \"heading\":150

  costing                                                                                                                                                                                                                                           string            Тип транспорта
                                                                                                                                                                                                                                                                      для построения маршрута:-
                                                                                                                                                                                                                                                                      **auto** (по умолчанию) ---
                                                                                                                                                                                                                                                                      автомобильный;- **truck**
                                                                                                                                                                                                                                                                      --- грузовой;-
                                                                                                                                                                                                                                                                      **pedestrian** ---
                                                                                                                                                                                                                                                                      пешеходный;- **bicycle** ---
                                                                                                                                                                                                                                                                      велосипедный;- **taxi** ---
                                                                                                                                                                                                                                                                      такси и другой транспорт,
                                                                                                                                                                                                                                                                      допущенный к использованию
                                                                                                                                                                                                                                                                      полос общественного
                                                                                                                                                                                                                                                                      транспорта.

  ---

  \"costing\":\"pedestrian\"

  costing_options                                                                                                                                                                                                                                   dict              Список параметров расчёта
                                                                                                                                                                                                                                                                      маршрута. Для различных
                                                                                                                                                                                                                                                                      типов транспорта
                                                                                                                                                                                                                                                                      используются различные опции
                                                                                                                                                                                                                                                                      и ограничения.При
                                                                                                                                                                                                                                                                      использовании параметров
                                                                                                                                                                                                                                                                      расчёта маршрута необходимо
                                                                                                                                                                                                                                                                      указать тип транспорта, для
                                                                                                                                                                                                                                                                      которого будут браться
                                                                                                                                                                                                                                                                      параметры:- **auto** (по
                                                                                                                                                                                                                                                                      умолчанию) ---
                                                                                                                                                                                                                                                                      автомобильный;- **truck**
                                                                                                                                                                                                                                                                      --- грузовой;-
                                                                                                                                                                                                                                                                      **pedestrian** ---
                                                                                                                                                                                                                                                                      пешеходный;- **bicycle** ---
                                                                                                                                                                                                                                                                      велосипедный;- **taxi**
                                                                                                                                                                                                                                                                      --- такси и другой
                                                                                                                                                                                                                                                                      транспорт, допущенный к
                                                                                                                                                                                                                                                                      использованию полос
                                                                                                                                                                                                                                                                      общественного транспорта.

  ---

  \"costing_options\":{    \`\`\"auto\":    \`\`{        \`\`\"use_border_crossing\":0,        \`\`\"use_tolls\":0    \`\`}}

  units                                                                                                                                                                                                                                             string            Единица измерения расстояния
                                                                                                                                                                                                                                                                      в ответе:- **kilometers**(по
                                                                                                                                                                                                                                                                      умолчанию) --- километры;-
                                                                                                                                                                                                                                                                      **miles ---** мили.

  ---

  \"units\":\"miles\"

  language                                                                                                                                                                                                                                          string            Язык ответа:- **ru-RU** (по
                                                                                                                                                                                                                                                                      умолчанию) --- русский;-
                                                                                                                                                                                                                                                                      **en-US** --- английский.

  ---

  \"language\":\"en---US\"

  id                                                                                                                                                                                                                                                string            Идентификатор запроса,
                                                                                                                                                                                                                                                                      который возвращается вместе
                                                                                                                                                                                                                                                                      с ответом, что позволяет
                                                                                                                                                                                                                                                                      точно установить
                                                                                                                                                                                                                                                                      соответствие запроса и
                                                                                                                                                                                                                                                                      ответа.

  ---

  \"id\":\"route_to_airport\"

  directions_type                                                                                                                                                                                                                                   \- none-          Включить описание
                                                                                                                                                                                                                                                    maneuvers-        маневров.Возможные
                                                                                                                                                                                                                                                    instructions      значения:- **none** (по
                                                                                                                                                                                                                                                                      умолчанию) --- исключить
                                                                                                                                                                                                                                                                      описание манёвров из
                                                                                                                                                                                                                                                                      ответа;- **maneuvers** ---
                                                                                                                                                                                                                                                                      включить описание манёвров в
                                                                                                                                                                                                                                                                      ответ.- **instructions** ---
                                                                                                                                                                                                                                                                      добавить в описание маневров
                                                                                                                                                                                                                                                                      инструкции на
                                                                                                                                                                                                                                                                      соответствующем языке

  ---

  \"directions_type\": \"instructions\"

  avoid_locations                                                                                                                                                                                                                                   list              Набор местоположений,
                                                                                                                                                                                                                                                                      которые необходимо избегать
                                                                                                                                                                                                                                                                      при построении маршрута.
                                                                                                                                                                                                                                                                      Задаётся в виде массива
                                                                                                                                                                                                                                                                      точек с указанием широты и
                                                                                                                                                                                                                                                                      долготы

  ---

  \"avoid_locations\":\[    \`\`{     \`\`\"lat\":55.871899,     \`\`\"lon\":37.457765    \`\`},    \`\`{     \`\`\"lat\":55.884556,     \`\`\"lon\":37.441633    \`\`},    \`\`{     \`\`\"lat\":55.923995,     \`\`\"lon\":37.395115    \`\`}\]

  date_time                                                                                                                                                                                                                                         list              Дата и время в точке
                                                                                                                                                                                                                                                                      отправления или назначения
                                                                                                                                                                                                                                                                      для определения более точных
                                                                                                                                                                                                                                                                      результатов построения
                                                                                                                                                                                                                                                                      маршрута.Определяется двумя
                                                                                                                                                                                                                                                                      параметрами:- **type** ---
                                                                                                                                                                                                                                                                      тип даты и времени: -
                                                                                                                                                                                                                                                                      **0** (по умолчанию) ---
                                                                                                                                                                                                                                                                      текущая дата и время в точке
                                                                                                                                                                                                                                                                      отправления, значение value
                                                                                                                                                                                                                                                                      игнорируется; - **1** ---
                                                                                                                                                                                                                                                                      дата и время отправления; -
                                                                                                                                                                                                                                                                      **2** --- дата и время
                                                                                                                                                                                                                                                                      прибытия.- **value** ---
                                                                                                                                                                                                                                                                      значение требуемых даты и
                                                                                                                                                                                                                                                                      времени указываются в
                                                                                                                                                                                                                                                                      формате ISO 8601
                                                                                                                                                                                                                                                                      (ГГГГ-ММ-ДДTчч:мм) в местном
                                                                                                                                                                                                                                                                      часовом поясе отправления
                                                                                                                                                                                                                                                                      или прибытия в зависимости
                                                                                                                                                                                                                                                                      от параметра type.

  ---

  \"date_time\":{     \`\`\"type\":2,     \`\`\"value\":\"2020---12---33T21:00\"}

  alternates                                                                                                                                                                                                                                        integer           Максимальное количество
                                                                                                                                                                                                                                                                      альтернативных маршрутов в
                                                                                                                                                                                                                                                                      дополнение к основному
                                                                                                                                                                                                                                                                      (возвращается при их
                                                                                                                                                                                                                                                                      наличии).Определяется
                                                                                                                                                                                                                                                                      значением от 0 до 4, где:-
                                                                                                                                                                                                                                                                      **0** (по умолчанию) ---
                                                                                                                                                                                                                                                                      будет построен один маршрут,
                                                                                                                                                                                                                                                                      без расчёта альтернативных;-
                                                                                                                                                                                                                                                                      **4** --- будет рассчитано
                                                                                                                                                                                                                                                                      пять маршрутов;--- дробные
                                                                                                                                                                                                                                                                      значения не допускаются.

  ---

  \"alternates\":3

  alternates_multi_points                                                                                                                                                                                                                           boolean           Атрибут для возможного
                                                                                                                                                                                                                                                                      включения построения
                                                                                                                                                                                                                                                                      альтернативных маршрутов при
                                                                                                                                                                                                                                                                      наличии в запросе
                                                                                                                                                                                                                                                                      промежуточных точке. По
                                                                                                                                                                                                                                                                      умолчанию --- false.

  ---

  \"alternates_multi_points\":true

  completeness                                                                                                                                                                                                                                      string            Атрибут для возможного
                                                                                                                                                                                                                                                                      расширения ответа.Возможные
                                                                                                                                                                                                                                                                      значения:- **minimal**(по
                                                                                                                                                                                                                                                                      умолчанию) --- возврат
                                                                                                                                                                                                                                                                      минимальной информации
                                                                                                                                                                                                                                                                      (только маневры, без
                                                                                                                                                                                                                                                                      ребер);- **enriched** ---
                                                                                                                                                                                                                                                                      возврат информации обо всех
                                                                                                                                                                                                                                                                      ребрах, входящих в маршрут.

  ---

  \"completeness\":\"enriched\"
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Costing options

**Auto**

  ---------------------------------------------------------------------------------------
  Имя поля                    Формат            Описание                Пример
  --------------------------- ----------------- ----------------------- -----------------
  use_unpaved                 float             Значение, указывающее
                                                на готовность
                                                использовать грунтовые
                                                дороги при построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать грунтовые
                                                дороги;- **1** ---
                                                использовать грунтовые
                                                дороги;--- допускаются
                                                дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_unpaved\":0.5

  use_highways                float             Значение, указывающее
                                                на готовность
                                                использовать
                                                автомагистрали при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать
                                                автомагистрали;-
                                                **1** (по умолчанию)
                                                --- использовать
                                                автомагистрали;---
                                                допускаются дробные
                                                значения.

  ---

  \"use_highways\":0

  use_tolls                   float             Значение, указывающее
                                                на готовность
                                                использовать платные
                                                дороги при построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать платные
                                                дороги;- **1** ---
                                                использовать платные
                                                дороги;--- допускаются
                                                дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_tolls\":0

  use_ferry                   float             Значение, указывающее
                                                на готовность
                                                использовать паромные
                                                переправы при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать паромные
                                                переправы;- **1** ---
                                                использовать паромные
                                                переправы;---
                                                допускаются дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_ferry\":0.1

  use_border_crossing         float             Значение, указывающее
                                                на готовность
                                                использовать дороги
                                                пересекающие границы
                                                других государств при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать
                                                использовать дороги
                                                пересекающие границы
                                                других государств;-
                                                **1** (по
                                                умолчанию) ---
                                                использовать
                                                использовать дороги
                                                пересекающие границы
                                                других государств;---
                                                допускаются дробные
                                                значения.

  ---

  \"use_border_crossing\":0

  traffic                     boolean           Учитывать пробки и
                                                дорожные события при
                                                построении
                                                маршрута.Возможные
                                                значения:-
                                                **false** (по
                                                умолчанию) --- не
                                                учитывать пробки и
                                                дорожные события;-
                                                **true** --- учитывать
                                                пробки и дорожные
                                                события.

  ---

  \"traffic\":true
  ---------------------------------------------------------------------------------------

**Truck**

  ---------------------------------------------------------------------------------------
  Имя поля                    Формат            Описание                Пример
  --------------------------- ----------------- ----------------------- -----------------
  weight                      float             Указание массы
                                                автомобиля в тоннах,
                                                для построения маршрута
                                                с учётом допустимых
                                                весовых нагрузок на
                                                дорожную сеть.Значение
                                                по умолчанию: 21.77
                                                тонн.Номер дорожного
                                                знака по ГОСТ: 3.11.

  ---

  \"weight\":10

  height                      float             Высота грузовика в
                                                метрах.Значение по
                                                умолчанию: 4.11 м.Номер
                                                дорожного знака по
                                                ГОСТ: 3.13.

  ---

  \"height\":4.0

  width                       float             Ширина грузовика в
                                                метрах.Значение по
                                                умолчанию: 9.07 м.Номер
                                                дорожного знака по
                                                ГОСТ: 3.14.

  ---

  \"width\":11.1

  length                      float             Длина грузовика в
                                                метрах.Значение по
                                                умолчанию: 21.64
                                                м.Номер дорожного знака
                                                по ГОСТ: 3.15.

  ---

  \"length\":19.4

  axle_load                   float             Нагрузка на ось в
                                                тоннах.Значение по
                                                умолчанию: 9.07
                                                тонн.Номер дорожного
                                                знака по ГОСТ: 3.12.

  ---

  \"axle_load\":10.3

  hazmat                      boolean           Флаг, определяющий
                                                везет ли грузовик
                                                опасные
                                                материалы.Значение по
                                                умолчанию: false.Номер
                                                дорожного знака по
                                                ГОСТ: 3.32.

  ---

  \"hazmat\":true

  use_unpaved                 float             Значение, указывающее
                                                на готовность
                                                использовать грунтовые
                                                дороги при построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать грунтовые
                                                дороги;- **1** ---
                                                использовать грунтовые
                                                дороги;--- допускаются
                                                дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_unpaved\":0.5

  use_highways                float             Значение, указывающее
                                                на готовность
                                                использовать
                                                автомагистрали при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать
                                                автомагистрали;-
                                                **1** (по умолчанию)
                                                --- использовать
                                                автомагистрали;---
                                                допускаются дробные
                                                значения.

  ---

  \"use_highways\":0

  use_tolls                   float             Значение, указывающее
                                                на готовность
                                                использовать платные
                                                дороги при построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать платные
                                                дороги;- **1** ---
                                                использовать платные
                                                дороги;--- допускаются
                                                дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_tolls\":0

  use_ferry                   float             Значение, указывающее
                                                на готовность
                                                использовать паромные
                                                переправы при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать паромные
                                                переправы;- **1** ---
                                                использовать паромные
                                                переправы;---
                                                допускаются дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_ferry\":0.1

  use_border_crossing         float             Значение, указывающее
                                                на готовность
                                                использовать дороги
                                                пересекающие границы
                                                других государств при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать
                                                использовать дороги
                                                пересекающие границы
                                                других государств;-
                                                **1** (по
                                                умолчанию) ---
                                                использовать
                                                использовать дороги
                                                пересекающие границы
                                                других государств;---
                                                допускаются дробные
                                                значения.

  ---

  \"use_border_crossing\":0

  traffic                     boolean           Учитывать пробки и
                                                дорожные события при
                                                построении
                                                маршрута.Возможные
                                                значения:-
                                                **false** (по
                                                умолчанию) --- не
                                                учитывать пробки и
                                                дорожные события;-
                                                **true** --- учитывать
                                                пробки и дорожные
                                                события.

  ---

  \"traffic\":true
  ---------------------------------------------------------------------------------------

**Pedestrian**

  ------------------------------------------------------------------------------------------
  Имя поля                    Формат            Описание                   Пример
  --------------------------- ----------------- -------------------------- -----------------
  walking_speed               float             Средняя скорость движения
                                                пешком. Указывается в
                                                километрах в час.Значение
                                                по умолчанию: 5.1 км/ч

  ---

  \"walking_speed\":3

  use_ferry                   float             Значение, указывающее на
                                                готовность использовать
                                                паромные переправы при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- не использовать
                                                паромные переправы;-
                                                **1** --- использовать
                                                паромные переправы;---
                                                допускаются дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_ferry\":0.1

  use_unpaved                 float             Значение, указывающее на
                                                готовность использовать
                                                грунтовые дороги при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- не использовать
                                                грунтовые дороги;-
                                                **1** --- использовать
                                                грунтовые дороги;---
                                                допускаются дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_unpaved\":0.5

  use_roads                   float             Значение, указывающее на
                                                готовность использовать
                                                автомобильные дороги при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- не использовать
                                                автомобильные дороги;-
                                                **1** --- использовать
                                                автомобильные дороги;---
                                                допускаются дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_road\":0

  use_border_crossing         float             Значение, указывающее на
                                                готовность использовать
                                                дороги пересекающие
                                                границы других государств
                                                при построении
                                                маршрута.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- не использовать
                                                использовать дороги
                                                пересекающие границы
                                                других государств;-
                                                **1** (по умолчанию) ---
                                                использовать использовать
                                                дороги пересекающие
                                                границы других
                                                государств;--- допускаются
                                                дробные значения.

  ---

  \"use_border_crossing\":0

  use_hills                   float             Значение, указывающее на
                                                готовность следовать по
                                                маршруту с перепадами
                                                высот. Участвует в выборе
                                                подходящего маршрута и
                                                расчете ETA.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- максимально
                                                избегать перепадов рельефа
                                                местности, даже если это
                                                приведет к построению
                                                более длинного маршрута;-
                                                **1** --- не избегать
                                                перепадов рельефа
                                                местности.Допускаются
                                                дробные значения.Значение
                                                по умолчанию: 0.5.Важно
                                                помнить, что не во всех
                                                случаях удается построить
                                                альтернативный маршрут с
                                                учетом use_hills
                                                (например, если на вершину
                                                холма ведет единственная
                                                дорога).

  ---

  \"use_hills\" : 0.25

  step_penalty                float             Значение, обозначающее
                                                пенальти в секундах,
                                                прибавляемое к каждому
                                                подъему или спуску по
                                                лестницам/ступеням. Чем
                                                выше значение, тем сильнее
                                                избегаются лестницы.

  ---

  \"step_penalty\" :120. 0
  ------------------------------------------------------------------------------------------

**Bicycle**

  ------------------------------------------------------------------------------------------
  Имя поля                    Формат            Описание                   Пример
  --------------------------- ----------------- -------------------------- -----------------
  cycling_speed               float             Средняя скорость движения
                                                на велосипеде. Указывается
                                                в километрах в
                                                час.Значение по умолчанию:
                                                20 км/ч

  ---

  \"cycling_speed\":30

  use_ferry                   float             Значение, указывающее на
                                                готовность использовать
                                                паромные переправы при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- не использовать
                                                паромные переправы;-
                                                **1** --- использовать
                                                паромные переправы;---
                                                допускаются дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_ferry\":0.1

  use_unpaved                 float             Значение, указывающее на
                                                готовность использовать
                                                грунтовые дороги при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- не использовать
                                                грунтовые дороги;-
                                                **1** --- использовать
                                                грунтовые дороги;---
                                                допускаются дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_unpaved\":0.5

  use_roads                   float             Значение, указывающее на
                                                готовность использовать
                                                автомобильные дороги при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- не использовать
                                                автомобильные дороги;-
                                                **1** --- использовать
                                                автомобильные дороги;---
                                                допускаются дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_road\":0

  use_border_crossing         float             Значение, указывающее на
                                                готовность использовать
                                                дороги пересекающие
                                                границы других государств
                                                при построении
                                                маршрута.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- не использовать
                                                использовать дороги
                                                пересекающие границы
                                                других государств;-
                                                **1** (по умолчанию) ---
                                                использовать использовать
                                                дороги пересекающие
                                                границы других
                                                государств;--- допускаются
                                                дробные значения.

  ---

  \"use_border_crossing\":0

  use_hills                   float             Значение, указывающее на
                                                готовность следовать по
                                                маршруту с перепадами
                                                высот. Участвует в выборе
                                                подходящего маршрута и
                                                расчете ETA.Определяется
                                                значением от 0 до 1, где:-
                                                **0** --- максимально
                                                избегать перепадов рельефа
                                                местности, даже если это
                                                приведет к построению
                                                более длинного маршрута;-
                                                **1** --- не избегать
                                                перепадов рельефа
                                                местности.Допускаются
                                                дробные значения.Значение
                                                по умолчанию: 0.5.Важно
                                                помнить, что не во всех
                                                случаях удается построить
                                                альтернативный маршрут с
                                                учетом use_hills
                                                (например, если на вершину
                                                холма ведет единственная
                                                дорога).

  ---

  \"use_hills\" : 0.25
  ------------------------------------------------------------------------------------------

**Taxi**

  ---------------------------------------------------------------------------------------
  Имя поля                    Формат            Описание                Пример
  --------------------------- ----------------- ----------------------- -----------------
  use_unpaved                 float             Значение, указывающее
                                                на готовность
                                                использовать грунтовые
                                                дороги при построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать грунтовые
                                                дороги;- **1** ---
                                                использовать грунтовые
                                                дороги;--- допускаются
                                                дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_unpaved\":0.5

  use_highways                float             Значение, указывающее
                                                на готовность
                                                использовать
                                                автомагистрали при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать
                                                автомагистрали;-
                                                **1** (по умолчанию)
                                                --- использовать
                                                автомагистрали;---
                                                допускаются дробные
                                                значения.

  ---

  \"use_highways\":0

  use_tolls                   float             Значение, указывающее
                                                на готовность
                                                использовать платные
                                                дороги при построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать платные
                                                дороги;- **1** ---
                                                использовать платные
                                                дороги;--- допускаются
                                                дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_tolls\":0

  use_ferry                   float             Значение, указывающее
                                                на готовность
                                                использовать паромные
                                                переправы при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать паромные
                                                переправы;- **1** ---
                                                использовать паромные
                                                переправы;---
                                                допускаются дробные
                                                значения.Значение по
                                                умолчанию: 0.5

  ---

  \"use_ferry\":0.1

  use_border_crossing         float             Значение, указывающее
                                                на готовность
                                                использовать дороги
                                                пересекающие границы
                                                других государств при
                                                построении
                                                маршрута.Определяется
                                                значением от 0 до 1,
                                                где:- **0** --- не
                                                использовать
                                                использовать дороги
                                                пересекающие границы
                                                других государств;-
                                                **1**(по умолчанию) ---
                                                использовать
                                                использовать дороги
                                                пересекающие границы
                                                других государств;---
                                                допускаются дробные
                                                значения.

  ---

  \"use_border_crossing\":0
  ---------------------------------------------------------------------------------------

Ответ

**Базовая информация**

  -----------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                            Формат            Описание                      Пример
  ----------------------------------------------------------------------------------- ----------------- ----------------------------- -----------------
  trips                                                                               list              Корневой список возвращаемых
                                                                                                        маршрутов. Включает несколько
                                                                                                        элементов при запросе
                                                                                                        альтернативных маршрутов.
                                                                                                        Состоит из объектов trip,
                                                                                                        описанных ниже

  trip                                                                                dict              Словарь с полным описанием
                                                                                                        маршрута

  status                                                                              number            Код ошибки

  ---

  \"status\": 0

  status_message                                                                      string            Описание ошибки

  ---

  \"status_message\": \"Found 2 route(s) between points\"

  units                                                                               string            Единица измерения расстояния
                                                                                                        в ответе:- **kilometers** ---
                                                                                                        километры;-
                                                                                                        **miles** --- мили.

  ---

  \"units\": \"kilometers\"

  language                                                                            string            Язык ответа:- **ru-RU** ---
                                                                                                        русский;- **en-US** ---
                                                                                                        английский.

  ---

  \"language\": \"ru---RU\"

  locations                                                                           list              Список точек маршрута в
                                                                                                        соответствии с запросом с
                                                                                                        дополнительной информацией об
                                                                                                        этих точках.

  ---

  \"locations\": \[            \`\`{                \`\`\"original_index\":
  0,                \`\`\"type\": \"break\",                \`\`\"lat\":
  55.796932,                \`\`\"lon\": 37.537849,                \`\`\"heading\":
  150            \`\`},            \`\`{                \`\`\"original_index\":
  1,                \`\`\"lon\": 37.462292,                \`\`\"lat\":
  55.865623,                \`\`\"type\":
  \"via\"            \`\`},            \`\`{                \`\`\"original_index\":
  2,                \`\`\"lon\": 37.406376,                \`\`\"lat\":
  55.962139,                \`\`\"type\": \"break\"            \`\`}        \`\`\]

  original_index                                                                      integer           Указание порядкового номера
                                                                                                        точки маршрута

  ---

  \"original_index\": 0

  type                                                                                string            Тип точки маршрута:-
                                                                                                        **break** --- развороты
                                                                                                        разрешены, для этой точки
                                                                                                        будет создана отдельная ветка
                                                                                                        ведения в списке legs-
                                                                                                        **through** --- развороты
                                                                                                        запрещены, для этой точки не
                                                                                                        будет создана отдельная ветка
                                                                                                        ведения в списке legs-
                                                                                                        \`\*\*via\*\* --- развороты
                                                                                                        разрешены, для этой точки не
                                                                                                        будет создана отдельная ветка
                                                                                                        ведения в списке legs\<br\>-
                                                                                                        \*\*break\\\_through\*\* ---
                                                                                                        развороты запрещены, для этой
                                                                                                        точки будет создана отдельная
                                                                                                        ветка ведения в списке legs
                                                                                                        \| \| \| \| \-\-- \|
                                                                                                        \|"type": "break"\| \| \| lat
                                                                                                        \| float \| Широта точки
                                                                                                        маршрута в градусах.
                                                                                                        Используется 6 знаков после
                                                                                                        запятой \| \| \| \| \-\-- \|
                                                                                                        \|"lat": 55.796932\| \| \|
                                                                                                        lon \| float \| Долгота точки
                                                                                                        маршрута в градусах.
                                                                                                        Используется 6 знаков после
                                                                                                        запятой \| \| \| \| \-\-- \|
                                                                                                        \|"lon": 37.537849\| \| \|
                                                                                                        heading \| float \|
                                                                                                        Направление движения при
                                                                                                        старте.\<br\>Направление
                                                                                                        указывается в градусах с
                                                                                                        севера по часовой стрелке,
                                                                                                        где север --- 0°, восток ---
                                                                                                        90°, юг --- 180°, запад ---
                                                                                                        270°. \| \| \| \| \-\-- \|
                                                                                                        \|"heading": 150\| \| \| id
                                                                                                        \| string \| Идентификатор
                                                                                                        запроса, который возвращается
                                                                                                        вместе с ответом, что
                                                                                                        позволяет точно установить
                                                                                                        соответствие запроса и
                                                                                                        ответа. \| \| \| \| \-\-- \|
                                                                                                        \|"id":"route_to_airport"\`
  -----------------------------------------------------------------------------------------------------------------------------------------------------

**Общая информация**

  -----------------------------------------------------------------------------------------------------------------
  Имя поля                                                 Формат            Описание             Пример
  -------------------------------------------------------- ----------------- -------------------- -----------------
  summary                                                  dict              Общая информация о
                                                                             маршруте

  ---

  \"summary\": {            \`\`\"ll_boxes\":
  \[{                \`\`\"max_lon\":
  37.546925,                \`\`\"max_lat\":
  55.962685,                \`\`\"min_lat\":
  55.793781,                \`\`\"min_lon\":
  37.406376            \`\`}\],            \`\`\"time\":
  2168.574,            \`\`\"length\":
  29.121,        \`\`}

  ll_boxes                                                 list              Набор
                                                                             баундинг-боксов,
                                                                             описывающих область,
                                                                             занимаемую
                                                                             маршрутом. В общем
                                                                             случае здесь один
                                                                             элемент. При
                                                                             пересечении маршрута
                                                                             через антимеридиан
                                                                             возвращается два
                                                                             бокса (по разные
                                                                             стороны от
                                                                             меридиана).

  ---

  \"ll_boxes\": \[{            \`\`\"max_lon\":
  37.546925,            \`\`\"max_lat\":
  55.962685,            \`\`\"min_lat\":
  55.793781,            \`\`\"min_lon\":
  37.406376        \`\`}\]

  max_lon                                                  float             Максимальная долгота
                                                                             границы области
                                                                             просмотра,
                                                                             включающей в себя
                                                                             маршрут.
                                                                             Используется 6
                                                                             знаков после запятой

  ---

  \"max_lon\": 37.546925

  max_lat                                                  float             Максимальная широта
                                                                             границы области
                                                                             просмотра,
                                                                             включающей в себя
                                                                             маршрут.
                                                                             Используется 6
                                                                             знаков после запятой

  ---

  \"max_lat\": 55.962685

  time                                                     float             Расчётное время,
                                                                             требуемое на
                                                                             движение по
                                                                             маршруту.Расчётное
                                                                             время указывается в
                                                                             секундах.

  ---

  \"time\": 2168.574

  length                                                   float             Общая длина
                                                                             маршрута,
                                                                             указывается в
                                                                             выбранных единицах
                                                                             измерения.

  ---

  \"length\": 29.121

  min_lat                                                  float             Минимальная широта
                                                                             границы области
                                                                             просмотра,
                                                                             включающей в себя
                                                                             маршрут.
                                                                             Используется 6
                                                                             знаков после запятой

  ---

  \"min_lat\": 55.793781

  min_lon                                                  float             Минимальная долгота
                                                                             границы области
                                                                             просмотра,
                                                                             включающей в себя
                                                                             маршрут.
                                                                             Используется 6
                                                                             знаков после запятой

  ---

  \"min_lon\": 37.406376
  -----------------------------------------------------------------------------------------------------------------

**Маршрут и манёвры**

  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                                                                                                                                                                                                                       Формат            Описание                                       Пример
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ----------------- ---------------------------------------------- -----------------
  legs                                                                                                                                                                                                                                                                           dict              Объект legs описывает маршрут и манёвры
                                                                                                                                                                                                                                                                                                   заключённые между парой точек маршрута,
                                                                                                                                                                                                                                                                                                   имеющих свойство « type»:«break»Для n точек
                                                                                                                                                                                                                                                                                                   маршрута типа break ответ содержит n-1 элемент
                                                                                                                                                                                                                                                                                                   описания маршрута (для запроса без
                                                                                                                                                                                                                                                                                                   альтернатив). Для запроса с альтернативами
                                                                                                                                                                                                                                                                                                   каждая пара break-точек может содержать
                                                                                                                                                                                                                                                                                                   количество legs меньше или равное числу
                                                                                                                                                                                                                                                                                                   альтернатив.Каждый объект описания маршрута
                                                                                                                                                                                                                                                                                                   содержит:- словарь summary аналогичный общему,
                                                                                                                                                                                                                                                                                                   но относящийся только к его части между двумя
                                                                                                                                                                                                                                                                                                   точками маршрута типа break;- строку shape;-
                                                                                                                                                                                                                                                                                                   список maneuvers.

  ---

  \"legs\": \[            \`\`{                \`\`\"shape\": \"\...\",                \`\`\"summary\": {                            \`\`\...                \`\`},                \`\`\"maneuvers\":
  \[                    \`\`{                        \`\`\...                    \`\`},                    \`\`\...                    \`\`{                        \`\`\...                    \`\`}                                    \`\`\]            \`\`}        \`\`\]

  shape                                                                                                                                                                                                                                                                          string            Кодированный формат полилинии для хранения     см. в пример
                                                                                                                                                                                                                                                                                                   серии координат широты и долготы в виде одной  ответа
                                                                                                                                                                                                                                                                                                   строки (смотрите также: Декодирование ломаной
                                                                                                                                                                                                                                                                                                   маршрута)

  edges                                                                                                                                                                                                                                                                          list              Список ребер, входящих во все маневры
                                                                                                                                                                                                                                                                                                   (возвращается при наличии
                                                                                                                                                                                                                                                                                                   «completeness»:«enriched» во входном запросе).

  ---

  \"edges\": \[    \`\`{    \`\`\"id\": 12345,    \`\`},    \`\`\...    \`\`{    \`\`\...    \`\`}\]

  id                                                                                                                                                                                                                                                                             int               Уникальный идентификатор ребра (атрибут ребра)

  ---

  \"id\": 3459922

  length                                                                                                                                                                                                                                                                         float             Длина ребра (атрибут ребра), по умолчанию в
                                                                                                                                                                                                                                                                                                   км, единицы измерения указаны в поле «units»

  ---

  \"length\": 0.314

  use                                                                                                                                                                                                                                                                            string            Тип (атрибут ребра):- road- ramp-
                                                                                                                                                                                                                                                                                                   turn_channel- track- driveway- alley-
                                                                                                                                                                                                                                                                                                   parking_aisle- emergency_access-
                                                                                                                                                                                                                                                                                                   drive_through- culdesac- living_street-
                                                                                                                                                                                                                                                                                                   service_road- cycleway (велосипедная дорожка)-
                                                                                                                                                                                                                                                                                                   mountain_bike- sidewalk- footway- steps
                                                                                                                                                                                                                                                                                                   (лестницы, ступеньки)- path- pedestrian-
                                                                                                                                                                                                                                                                                                   bridleway- rest_area- service_area- other-
                                                                                                                                                                                                                                                                                                   rail---ferry- ferry- rail- bus-
                                                                                                                                                                                                                                                                                                   egress_connection- platform_connection-
                                                                                                                                                                                                                                                                                                   transit_connection

  ---

  \"use\": \"cycleway\"

  road_class                                                                                                                                                                                                                                                                     string            Класс дороги (атрибут ребра):- motorway-
                                                                                                                                                                                                                                                                                                   trunk- primary- secondary- tertiary-
                                                                                                                                                                                                                                                                                                   unclassified- residential- service_other

  ---

  \"road_class\": \"secondary\"

  surface                                                                                                                                                                                                                                                                        string            Тип покрытия по возрастанию грубости (атрибут
                                                                                                                                                                                                                                                                                                   ребра):- paved_smooth- paved- paved_rough-
                                                                                                                                                                                                                                                                                                   compacted- dirt- gravel- path- impassable

  ---

  \"surface\": \"gravel\"

  toll                                                                                                                                                                                                                                                                           boolean           Признак вхождения в участок платной дороги
                                                                                                                                                                                                                                                                                                   (атрибут ребра). Присутствует только для типов
                                                                                                                                                                                                                                                                                                   транспорта auto, motorcycle, truck, taxi

  ---

  \"toll\": true

  speed_limit                                                                                                                                                                                                                                                                    int               Максимально возможная скорость в км/ч (атрибут
                                                                                                                                                                                                                                                                                                   ребра)

  ---

  \"speed_limit\": 60

  iso_code                                                                                                                                                                                                                                                                       string            ISO-код страны (атрибут ребра). Указывается в
                                                                                                                                                                                                                                                                                                   том случае, когда ребро пограничное для
                                                                                                                                                                                                                                                                                                   маршрута, пересекающего границу. Формат ISO
                                                                                                                                                                                                                                                                                                   3166-1 alpha-2 (двухбуквенный)

  ---

  \"iso_code\": \"RU\"

  maneuvers                                                                                                                                                                                                                                                                      list              Список манёвров на маршруте с указание точек
                                                                                                                                                                                                                                                                                                   манёвров на полилинии, а также длины,
                                                                                                                                                                                                                                                                                                   длительности манёвра и подсказок к манёврам на
                                                                                                                                                                                                                                                                                                   выбранном языке

  ---

  \"maneuvers\": \[    \`\`{    \`\`\"travel_type\": \"car\",    \`\`\"travel_mode\": \"drive\",    \`\`\"verbal_pre_transition_instruction\": \"Проедьте 9,5 километров по М---11.\",    \`\`\"verbal_transition_alert_instruction\": \"Продолжайте по
  М---11.\",    \`\`\"length\": 9.490,    \`\`\"toll\": true,    \`\`\"instruction\": \"Продолжайте по М---11.\",    \`\`\"end_shape_index\": 459,    \`\`\"type\": 8,    \`\`\"time\": 421.573,    \`\`\"street_names\": \[\"М---11\"\],    \`\`\"begin_shape_index\":
  344    \`\`},    \`\`\...    \`\`{    \`\`\...    \`\`}\]

  travel_mode                                                                                                                                                                                                                                                                    string            Режим маршрутизации:- **drive** ---
                                                                                                                                                                                                                                                                                                   используется для типов транспорта
                                                                                                                                                                                                                                                                                                   «costing»=«auto» и «costing»=«truck»-
                                                                                                                                                                                                                                                                                                   **pedestrian**- **bicycle**

  ---

  \"travel_mode\": \"drive\"

  travel_type                                                                                                                                                                                                                                                                    string            Тип маршрутизации.- **car** ---  используется
                                                                                                                                                                                                                                                                                                   для «travel_mode»=«drive» и «costing»=«auto»-
                                                                                                                                                                                                                                                                                                   **tractor_trailer** ---  используется для
                                                                                                                                                                                                                                                                                                   «travel_mode»=«drive» и «costing»=«truck»-
                                                                                                                                                                                                                                                                                                   **foot** ---  используется для
                                                                                                                                                                                                                                                                                                   «travel_mode»=«pedestrian»Для велосипедной
                                                                                                                                                                                                                                                                                                   навигации возможны значения: - hybrid, road,
                                                                                                                                                                                                                                                                                                   cross, mountain.

  ---

  \"travel_type\": \"car\"

  verbal_pre_transition_instruction                                                                                                                                                                                                                                              string            Текст, который можно использовать в качестве
                                                                                                                                                                                                                                                                                                   устного сообщения для подготовки к манёвру.

  ---

  \"verbal_pre_transition_instruction\": \"Проедьте 9,5 километров по М---11.\"

  verbal_transition_alert_instruction                                                                                                                                                                                                                                            string            Текст, который можно использовать в качестве
                                                                                                                                                                                                                                                                                                   устного сообщения о манёвре, непосредственно
                                                                                                                                                                                                                                                                                                   перед самим манёвром.

  ---

  \"verbal_transition_alert_instruction\": \"Заедьте на кольцо и съезжайте на втором съезде.\"

  verbal_multi_cue                                                                                                                                                                                                                                                               boolean           Переменная имеет значение «true» в случаях,
                                                                                                                                                                                                                                                                                                   когда текст устного сообщения о подготовке к
                                                                                                                                                                                                                                                                                                   манёвру
                                                                                                                                                                                                                                                                                                   «verbal_pre_transition_instruction» содержит
                                                                                                                                                                                                                                                                                                   указание о нескольких последовательных, близко
                                                                                                                                                                                                                                                                                                   расположенных манёврах

  ---

  \"verbal_multi_cue\": true

  verbal_post_transition_instruction                                                                                                                                                                                                                                             string            Текст, который можно использовать в качестве
                                                                                                                                                                                                                                                                                                   устного сообщения непосредственно сразу после
                                                                                                                                                                                                                                                                                                   завершения манёвра

  ---

  \"verbal_post_transition_instruction\": \"Продолжайте двигаться 100 метров.\"

  verbal_succinct_transition_instruction                                                                                                                                                                                                                                         string            Текст, кратко характеризующий маневр

  instruction                                                                                                                                                                                                                                                                    string            Текст, который рекомендуется использовать для
                                                                                                                                                                                                                                                                                                   отображения текстовой подсказки о манёвре

  ---

  \"instruction\": \"Выезжайте слева на Ленинградский проспект.\"

  length                                                                                                                                                                                                                                                                         float             Общая длина манёвра в границах между
                                                                                                                                                                                                                                                                                                   «begin_shape_index» и «end_shape_index»,
                                                                                                                                                                                                                                                                                                   указывается в выбранных единицах измерения

  ---

  \"length\": 9.490

  begin_shape_index                                                                                                                                                                                                                                                              integer           Указатель на точку начала манёвра на полилинии

  ---

  \"begin_shape_index\": 344

  end_shape_index                                                                                                                                                                                                                                                                integer           Указатель на точку окончания манёвра на
                                                                                                                                                                                                                                                                                                   полилинии

  ---

  \"end_shape_index\": 459

  begin_edge_index                                                                                                                                                                                                                                                               integer           Индекс первого ребра из возвращенного массива
                                                                                                                                                                                                                                                                                                   ребер для начала маневра (возвращается при
                                                                                                                                                                                                                                                                                                   наличии «completeness»:«enriched» во входном
                                                                                                                                                                                                                                                                                                   запросе)

  ---

  \"begin_edge_index\": 5

  end_edge_index                                                                                                                                                                                                                                                                 integer           Индекс последнего ребра из возвращенного
                                                                                                                                                                                                                                                                                                   массива ребер для окончания маневра
                                                                                                                                                                                                                                                                                                   (возвращается при наличии
                                                                                                                                                                                                                                                                                                   «completeness»:«enriched» во входном запросе)

  ---

  \"end_edge_index\": 9

  type                                                                                                                                                                                                                                                                           integer           Код типа манёвра

  ---

  \"type\": 8

  time                                                                                                                                                                                                                                                                           float             Расчётное время, требуемое на манёвр в
                                                                                                                                                                                                                                                                                                   границах между «begin_shape_index» и
                                                                                                                                                                                                                                                                                                   «end_shape_index».Расчётное время указывается
                                                                                                                                                                                                                                                                                                   в секундах

  ---

  \"time\": 421.573

  cost                                                                                                                                                                                                                                                                           float             Степень сложности маневра или маршрута в
                                                                                                                                                                                                                                                                                                   некоторых абстрактных единицах. Позволяет
                                                                                                                                                                                                                                                                                                   сравнивать маршруты и маневры между собой и
                                                                                                                                                                                                                                                                                                   оценивать, какой из них более «затратный» по
                                                                                                                                                                                                                                                                                                   времени, по дистанции и т.д.

  street_names                                                                                                                                                                                                                                                                   list              Список названий улиц манёвра

  ---

  \"street_names\": \[\"М---11\"\]

  toll                                                                                                                                                                                                                                                                           boolean           Переменная имеет значение «true» в случаях,
                                                                                                                                                                                                                                                                                                   когда манёвр или его часть подлежат
                                                                                                                                                                                                                                                                                                   оплате.Например: часть манёвра пролегает по
                                                                                                                                                                                                                                                                                                   платной дороге

  ---

  \"toll\": true

  ferry                                                                                                                                                                                                                                                                          boolean           Переменная имеет значение «true» в случаях,
                                                                                                                                                                                                                                                                                                   когда манёвр невозможен без использования
                                                                                                                                                                                                                                                                                                   парома

  ---

  \"ferry\": true

  rough                                                                                                                                                                                                                                                                          boolean           Переменная имеет значение «true» в случаях,
                                                                                                                                                                                                                                                                                                   когда манёвр полностью или частично
                                                                                                                                                                                                                                                                                                   осуществляется по дорогам без покрытия

  ---

  \"rough\": true

  gate                                                                                                                                                                                                                                                                           boolean           Переменная имеет значение «true» в случаях,
                                                                                                                                                                                                                                                                                                   когда манёвр пересекает ворота/шлагбаумы

  ---

  \"gate\": true

  roundabout_exit_count                                                                                                                                                                                                                                                          integer           Порядковый номер съезда с кругового движения

  ---

  \"roundabout_exit_count\": 2
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Значение «type** **»** **для манёвров**

  -----------------------------------------------------------------------
  Значение «type»                     Расшифровка
  ----------------------------------- -----------------------------------
  0                                   kNone

  1                                   kStart

  2                                   kStartRight

  3                                   kStartLeft

  4                                   kDestination

  5                                   kDestinationRight

  6                                   kDestinationLeft

  7                                   kBecomes

  8                                   kContinue

  9                                   kSlightRight

  10                                  kRight

  11                                  kSharpRight

  12                                  kUturnRight

  13                                  kUturnLeft

  14                                  kSharpLeft

  15                                  kLeft

  16                                  kSlightLeft

  17                                  kRampStraight

  18                                  kRampRight

  19                                  kRampLeft

  20                                  kExitRight

  21                                  kExitLeft

  22                                  kStayStraight

  23                                  kStayRight

  24                                  kStayLeft

  25                                  kMerge

  26                                  kRoundaboutEnter

  27                                  kRoundaboutExit

  28                                  kFerryEnter

  29                                  kFerryExit

  30                                  kTransit

  31                                  kTransitTransfer

  32                                  kTransitRemainOn

  33                                  kTransitConnectionStart

  34                                  kTransitConnectionTransfer

  35                                  kTransitConnectionDestination

  36                                  kPostTransitConnectionDestination

  37                                  kMergeRight

  38                                  kMergeLeft
  -----------------------------------------------------------------------

**Маршрут не найден**

Если по запросу ничего не найдено, ответ будет выглядеть следующим
образом:

  -----------------------------------------------------------------------
  {\"error_code\":171,\"error\":\"No suitable edges near
  location\",\"status_code\":400,\"status\":\"Bad Request\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример

**Запрос**

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl ---X POST \\  \`\`---H \"Content---type: application/json\" \\  \`\`---H \"Accept: application/json\" \\  \`\`---d
  \'{\"locations\":\[{\"lat\":55.796932,\"lon\":37.537849,\"heading\":150},{\"lat\":55.865625,\"lon\":37.462290,\"type\":\"via\"},{\"lat\":55.962139,\"lon\":37.406377}\],\"costing\":\"auto\",\"language\":\"ru---RU\",\"directions_type\":\"instructions\",\"id\":\"route_to_airport\"}\'
  \\  \`\`\"https://geo.rustore.ru/api/directions?api_key=\<YOUR_API_KEY\>\"
  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Ответ**


  {   \`\`\"trips\":\[      \`\`{         \`\`\"trip\":{            \`\`\"locations\":\[               \`\`{                  \`\`\"type\":\"break\",                  \`\`\"lat\":55.796932,                  \`\`\"lon\":37.537849,                  \`\`\"heading\":150,                  \`\`\"city\":\"left\",                  \`\`\"original_index\":0               \`\`},               \`\`{                  \`\`\"type\":\"via\",                  \`\`\"lat\":55.865625,                  \`\`\"lon\":37.46229,                  \`\`\"original_index\":1               \`\`},               \`\`{                  \`\`\"type\":\"break\",                  \`\`\"lat\":55.962139,                  \`\`\"lon\":37.406377,                  \`\`\"original_index\":2               \`\`}            \`\`\],            \`\`\"legs\":\[               \`\`{                  \`\`\"maneuvers\":\[                     \`\`{                        \`\`\"type\":3,                        \`\`\"instruction\":\"Двигайтесь на северо---восток.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Двигайтесь на
  северо---запад., затем Поверните направо на Ленинградский проспект.\",                        \`\`\"verbal_pre_transition_instruction\":\"Двигайтесь на северо---запад., затем Поверните направо на Ленинградский проспект.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 50 метров.\",                        \`\`\"time\":8.72,                        \`\`\"length\":0.048,                        \`\`\"cost\":364.824,                        \`\`\"begin_shape_index\":0,                        \`\`\"end_shape_index\":3,                        \`\`\"verbal_multi_cue\":true,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":10,                        \`\`\"instruction\":\"Поверните направо на Ленинградский проспект.\",                        \`\`\"verbal_transition_alert_instruction\":\"Поверните направо на Ленинградский проспект.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Поверните
  направо.\",                        \`\`\"verbal_pre_transition_instruction\":\"Поверните направо на Ленинградский проспект.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 600 метров.\",                        \`\`\"street_names\":\[                           \`\`\"Ленинградский проспект\"                        \`\`\],                        \`\`\"time\":37.931,                        \`\`\"length\":0.593,                        \`\`\"cost\":72.21,                        \`\`\"begin_shape_index\":3,                        \`\`\"end_shape_index\":12,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":13,                        \`\`\"instruction\":\"Развернитесь налево, чтобы остаться на Ленинградский проспект.\",                        \`\`\"verbal_transition_alert_instruction\":\"Развернитесь налево, чтобы остаться на Ленинградский
  проспект.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Развернитесь налево.\",                        \`\`\"verbal_pre_transition_instruction\":\"Развернитесь налево, чтобы остаться на Ленинградский проспект.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 10 километров.\",                        \`\`\"street_names\":\[                           \`\`\"Ленинградский проспект\"                        \`\`\],                        \`\`\"time\":535.509,                        \`\`\"length\":10.369,                        \`\`\"cost\":682.537,                        \`\`\"begin_shape_index\":12,                        \`\`\"end_shape_index\":164,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":23,                        \`\`\"instruction\":\"Держитесь правой стороны на развилке.\",                        \`\`\"verbal_transition_alert_instruction\":\"Держитесь правой стороны на
  развилке.\",                        \`\`\"verbal_pre_transition_instruction\":\"Держитесь правой стороны на развилке.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 400 метров.\",                        \`\`\"time\":34.122,                        \`\`\"length\":0.378,                        \`\`\"cost\":55.773,                        \`\`\"begin_shape_index\":164,                        \`\`\"end_shape_index\":174,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":15,                        \`\`\"instruction\":\"Поверните налево.\",                        \`\`\"verbal_transition_alert_instruction\":\"Поверните налево.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Поверните налево.\",                        \`\`\"verbal_pre_transition_instruction\":\"Поверните налево.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 400
  метров.\",                        \`\`\"time\":45.832,                        \`\`\"length\":0.435,                        \`\`\"cost\":75.448,                        \`\`\"begin_shape_index\":174,                        \`\`\"end_shape_index\":195,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":9,                        \`\`\"instruction\":\"Поверните направо на Ленинградское шоссе.\",                        \`\`\"verbal_transition_alert_instruction\":\"Поверните направо на Ленинградское шоссе.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Поверните направо., затем через 300 метров, Поверните направо.\",                        \`\`\"verbal_pre_transition_instruction\":\"Поверните направо на Ленинградское шоссе., затем через 300 метров, Поверните направо.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 300
  метров.\",                        \`\`\"street_names\":\[                           \`\`\"Ленинградское шоссе\"                        \`\`\],                        \`\`\"time\":12.615,                        \`\`\"length\":0.289,                        \`\`\"cost\":28.807,                        \`\`\"begin_shape_index\":195,                        \`\`\"end_shape_index\":199,                        \`\`\"verbal_multi_cue\":true,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":9,                        \`\`\"instruction\":\"Поверните направо.\",                        \`\`\"verbal_transition_alert_instruction\":\"Поверните направо.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Поверните направо., затем через 50 метров, Поверните направо.\",                        \`\`\"verbal_pre_transition_instruction\":\"Поверните направо., затем через 50 метров, Поверните
  направо.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 50 метров.\",                        \`\`\"time\":9.245,                        \`\`\"length\":0.05,                        \`\`\"cost\":91.808,                        \`\`\"begin_shape_index\":199,                        \`\`\"end_shape_index\":201,                        \`\`\"verbal_multi_cue\":true,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":9,                        \`\`\"instruction\":\"Поверните направо.\",                        \`\`\"verbal_transition_alert_instruction\":\"Поверните направо.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Поверните направо.\",                        \`\`\"verbal_pre_transition_instruction\":\"Поверните направо.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 100
  метров.\",                        \`\`\"time\":40.258,                        \`\`\"length\":0.123,                        \`\`\"cost\":759.908,                        \`\`\"begin_shape_index\":201,                        \`\`\"end_shape_index\":213,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":10,                        \`\`\"instruction\":\"Поверните направо.\",                        \`\`\"verbal_transition_alert_instruction\":\"Поверните направо.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Поверните направо.\",                        \`\`\"verbal_pre_transition_instruction\":\"Поверните направо.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 100
  метров.\",                        \`\`\"time\":24.898,                        \`\`\"length\":0.127,                        \`\`\"cost\":36.26,                        \`\`\"begin_shape_index\":213,                        \`\`\"end_shape_index\":217,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":15,                        \`\`\"instruction\":\"Поверните налево.\",                        \`\`\"verbal_transition_alert_instruction\":\"Поверните налево.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Поверните налево., затем Поверните направо на Ленинградское шоссе.\",                        \`\`\"verbal_pre_transition_instruction\":\"Поверните налево., затем Поверните направо на Ленинградское шоссе.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 20
  метров.\",                        \`\`\"time\":8.515,                        \`\`\"length\":0.018,                        \`\`\"cost\":22.563,                        \`\`\"begin_shape_index\":217,                        \`\`\"end_shape_index\":218,                        \`\`\"verbal_multi_cue\":true,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":10,                        \`\`\"instruction\":\"Поверните направо на Ленинградское шоссе/Leningrad Avenue.\",                        \`\`\"verbal_transition_alert_instruction\":\"Поверните направо на Ленинградское шоссе.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Поверните направо., затем Выезжайте на кольцевую развязку и сверните на 3---м съезде на Беломорская улица.\",                        \`\`\"verbal_pre_transition_instruction\":\"Поверните направо на Ленинградское шоссе, Leningrad Avenue., затем Выезжайте на кольцевую развязку и сверните на 3---м съезде на
  Беломорская улица.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 80 метров.\",                        \`\`\"street_names\":\[                           \`\`\"Ленинградское шоссе\",                           \`\`\"Leningrad Avenue\"                        \`\`\],                        \`\`\"time\":5.75,                        \`\`\"length\":0.081,                        \`\`\"cost\":20.979,                        \`\`\"begin_shape_index\":218,                        \`\`\"end_shape_index\":220,                        \`\`\"verbal_multi_cue\":true,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":26,                        \`\`\"instruction\":\"Выезжайте на кольцевую развязку и сверните на 3---м съезде на Беломорская улица.\",                        \`\`\"verbal_transition_alert_instruction\":\"Выезжайте на кольцевую развязку и сверните на 3---м съезде на Беломорская
  улица.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Выезжайте на кольцевую развязку и сверните на 3---м съезде.\",                        \`\`\"verbal_pre_transition_instruction\":\"Выезжайте на кольцевую развязку и сверните на 3---м съезде на Беломорская улица.\",                        \`\`\"time\":20.267,                        \`\`\"length\":0.255,                        \`\`\"cost\":19.688,                        \`\`\"begin_shape_index\":220,                        \`\`\"end_shape_index\":239,                        \`\`\"roundabout_exit_count\":3,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":27,                        \`\`\"instruction\":\"Сверните с кольцевой развязки на Беломорская улица.\",                        \`\`\"verbal_succinct_transition_instruction\":\"Сверните с кольцевой развязки.\",                        \`\`\"verbal_pre_transition_instruction\":\"Сверните с кольцевой развязки на Беломорская
  улица.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 200 метров.\",                        \`\`\"street_names\":\[                           \`\`\"Беломорская улица\"                        \`\`\],                        \`\`\"time\":14.073,                        \`\`\"length\":0.189,                        \`\`\"cost\":24.333,                        \`\`\"begin_shape_index\":239,                        \`\`\"end_shape_index\":244,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":20,                        \`\`\"instruction\":\"Сверните на съезде на Ленинградское шоссе.\",                        \`\`\"verbal_transition_alert_instruction\":\"Сверните на съезд на Ленинградское шоссе.\",                        \`\`\"verbal_pre_transition_instruction\":\"Сверните на съезд на Ленинградское шоссе.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 8
  километров.\",                        \`\`\"street_names\":\[                           \`\`\"Ленинградское шоссе\"                        \`\`\],                        \`\`\"time\":394.793,                        \`\`\"length\":8.069,                        \`\`\"cost\":500.92,                        \`\`\"begin_shape_index\":244,                        \`\`\"end_shape_index\":355,                        \`\`\"sign\":{                           \`\`\"exit_branch_elements\":\[                              \`\`{                                 \`\`\"text\":\"Ленинградское шоссе\"                              \`\`}                           \`\`\]                        \`\`},                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":23,                        \`\`\"instruction\":\"Держитесь правой стороны к Шереметьево---2.\",                        \`\`\"verbal_transition_alert_instruction\":\"Держитесь правой стороны к
  Шереметьево---2.\",                        \`\`\"verbal_pre_transition_instruction\":\"Держитесь правой стороны к Шереметьево---2.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 600 метров.\",                        \`\`\"street_names\":\[                           \`\`\"46Н---13925\"                        \`\`\],                        \`\`\"time\":34.818,                        \`\`\"length\":0.578,                        \`\`\"cost\":38.3,                        \`\`\"begin_shape_index\":355,                        \`\`\"end_shape_index\":372,                        \`\`\"sign\":{                                                   \`\`},                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":24,                        \`\`\"instruction\":\"Держитесь прямо, чтобы свернуть на 46Н---13925/Международное шоссе.\",                        \`\`\"verbal_transition_alert_instruction\":\"Держитесь левой стороны,
  чтобы свернуть на 46Н---13925.\",                        \`\`\"verbal_pre_transition_instruction\":\"Держитесь левой стороны, чтобы свернуть на 46Н---13925, Международное шоссе.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 2.5 километров.\",                        \`\`\"street_names\":\[                           \`\`\"46Н---13925\",                           \`\`\"Международное шоссе\"                        \`\`\],                        \`\`\"time\":89.576,                        \`\`\"length\":2.654,                        \`\`\"cost\":75.352,                        \`\`\"begin_shape_index\":372,                        \`\`\"end_shape_index\":384,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":24,                        \`\`\"instruction\":\"Держитесь левой стороны, чтобы остаться на 46Н---13925/Международное
  шоссе.\",                        \`\`\"verbal_transition_alert_instruction\":\"Держитесь левой стороны, чтобы остаться на 46Н---13925.\",                        \`\`\"verbal_pre_transition_instruction\":\"Держитесь левой стороны, чтобы остаться на 46Н---13925, Международное шоссе.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 1.5 километров.\",                        \`\`\"street_names\":\[                           \`\`\"46Н---13925\",                           \`\`\"Международное шоссе\"                        \`\`\],                        \`\`\"time\":50.683,                        \`\`\"length\":1.254,                        \`\`\"cost\":46.611,                        \`\`\"begin_shape_index\":384,                        \`\`\"end_shape_index\":403,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":24,                        \`\`\"instruction\":\"Держитесь прямо к Шереметьево/ Терминал
  D.\",                        \`\`\"verbal_transition_alert_instruction\":\"Держитесь левой стороны к Шереметьево.\",                        \`\`\"verbal_pre_transition_instruction\":\"Держитесь левой стороны к Шереметьево,  Терминал D.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 500 метров.\",                        \`\`\"time\":33.139,                        \`\`\"length\":0.46,                        \`\`\"cost\":38.839,                        \`\`\"begin_shape_index\":403,                        \`\`\"end_shape_index\":413,                        \`\`\"sign\":{                                                   \`\`},                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":23,                        \`\`\"instruction\":\"Держитесь правой стороны на развилке.\",                        \`\`\"verbal_transition_alert_instruction\":\"Держитесь правой стороны на
  развилке.\",                        \`\`\"verbal_pre_transition_instruction\":\"Держитесь правой стороны на развилке.\",                        \`\`\"verbal_post_transition_instruction\":\"Продолжайте движение еще 600 метров.\",                        \`\`\"time\":43.991,                        \`\`\"length\":0.61,                        \`\`\"cost\":63.974,                        \`\`\"begin_shape_index\":413,                        \`\`\"end_shape_index\":439,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`},                     \`\`{                        \`\`\"type\":4,                        \`\`\"instruction\":\"Вы прибыли в пункт назначения.\",                        \`\`\"verbal_transition_alert_instruction\":\"Вы прибудете в пункт назначения.\",                        \`\`\"verbal_pre_transition_instruction\":\"Вы прибыли в пункт
  назначения.\",                        \`\`\"time\":0.0,                        \`\`\"length\":0.0,                        \`\`\"cost\":0.0,                        \`\`\"begin_shape_index\":439,                        \`\`\"end_shape_index\":439,                        \`\`\"travel_mode\":\"drive\",                        \`\`\"travel_type\":\"car\"                     \`\`}                  \`\`\],                  \`\`\"summary\":{                     \`\`\"ll_boxes\":\[{                        \`\`\"min_lat\":55.79378,                        \`\`\"min_lon\":37.39366,                        \`\`\"max_lat\":55.962686,                        \`\`\"max_lon\":37.546925,                     \`\`}\],                     \`\`\"has_time_restrictions\":false,                     \`\`\"time\":1444.743,                     \`\`\"length\":26.583,                     \`\`\"cost\":3019.145                  \`\`},                  \`\`\`\"shape\":\"ydqliBeqcrfA_KyO_AyA{EsHv\^aeA\~FkPl\[g_Ad\[q\~@nO}d@bt@stBtM}\_@CiHvUmr@zAsF\\yEBcEKyDg@sDgAcDgKyPaBsA_Bc@iBEuBj@oBjBoDhFuOhf@mWlu@kCzH}d@tA}f@fxAwTlo@mk@bBuU
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



Матрица расстояний

Сервис построения матрицы расстояний позволяет осуществлять расчёт ETA и
расстояния для пар пунктов отправления и назначения, определяющих
матрицу. Сервис поддерживает матрицы различной размерности:

-   один ко многим;

-   многие ко многим;

-   многие к одному.

**/dm** --- точка вызова сервиса расчёта матрицы расстояний.

Запрос

Запрос передается методом HTTP POST. В теле POST-запроса указывается
json с обязательными и необязательными полями.

Простой пример json:

  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  {\"sources\":\[{\"lat\":55.796932,\"lon\":37.537849},{\"lat\":55.801551,\"lon\":37.531575}\],\"targets\":\[{\"lat\":55.790412,\"lon\":37.534313},{\"lat\":55.788644,\"lon\":37.536507}\],\"costing\":\"pedestrian\",\"id\":\"DM_Test\"}
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Этот запрос рассчитывает матрицу времени и расстояния для пешеходного
графа для каждой пары точек отправления и назначения.

**Обязательные параметры url запроса**

  -------------------------------------------------------------------------------------
  Имя поля                        Формат            Описание          Пример
  ------------------------------- ----------------- ----------------- -----------------
  api_key                         hex-string        Доступ к сервисам

  ---

  api_key=fa749bace6d8a3b1\....
  -------------------------------------------------------------------------------------

**Обязательные параметры json для тела запроса**

  -----------------------------------------------------------------------------------------------------------------
  Имя поля                                                    Формат            Описание          Пример
  ----------------------------------------------------------- ----------------- ----------------- -----------------
  sources                                                     list              Список точек
                                                                                отправления, где
                                                                                lat и lon ---
                                                                                широта точки в
                                                                                градусах
                                                                                (используется 6
                                                                                знаков после
                                                                                запятой)

  ---

  "sources":\[{"lat": 55.796932,"lon": 37.537849},{"lat":
  55.801551,"lon": 37.531575}\]

  targets                                                     list              Список точек
                                                                                назначения, где
                                                                                lat и lon ---
                                                                                широта точки в
                                                                                градусах
                                                                                (используется 6
                                                                                знаков после
                                                                                запятой)

  ---

  \"targets\":\[{\<br\>\"lat\":
  55.790412,\<br\>\"lon\": 37.534313\<br\>},{\<br\>\"lat\":
  55.788644,\<br\>\"lon\": 37.536507\<br\>}\]
  -----------------------------------------------------------------------------------------------------------------

Максимальное суммарное число точек отправления (sources) и назначения
(targets) не должно превышать 50 точек.

**Дополнительные параметры json для тела запроса**

  ----------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                          Формат            Описание                 Пример
  --------------------------------------------------------------------------------- ----------------- ------------------------ -----------------
  costing                                                                           string            Тип транспорта
                                                                                                      для построения
                                                                                                      маршрута:- **auto** (по
                                                                                                      умолчанию) ---
                                                                                                      автомобильный;-
                                                                                                      **truck**(не
                                                                                                      поддерживается) ---
                                                                                                      грузовой;-
                                                                                                      **pedestrian** ---
                                                                                                      пешеходный;- **bicycle**
                                                                                                      --- велосипедный.

  ---

  \"costing\":\"pedestrian\"

  id                                                                                string            Идентификатор запроса,
                                                                                                      который возвращается
                                                                                                      вместе с ответом, что
                                                                                                      позволяет точно
                                                                                                      установить соответствие
                                                                                                      запроса и ответа

  ---

  \"id\":\"DM_Test\"

  costing_options                                                                   dict              Список параметров
                                                                                                      расчёта маршрута. Для
                                                                                                      различных типов
                                                                                                      транспорта
                                                                                                      используются различные
                                                                                                      опции и ограничения,
                                                                                                      аналогичные тем, которые
                                                                                                      используются в
                                                                                                      сервисе построения
                                                                                                      маршрута

  ---

  \"costing_options\":{    \`\`\"use_border_crossing\":0,    \`\`\"use_tolls\":0}

  units                                                                             string            Единица измерения
                                                                                                      расстояния в ответе:-
                                                                                                      **kilometers**(по
                                                                                                      умолчанию) ----
                                                                                                      километры;- **miles**
                                                                                                      --- мили.

  ---

  \"units\":\"miles\"
  ----------------------------------------------------------------------------------------------------------------------------------------------

Ответ

  ---------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                                            Формат            Описание          Пример
  --------------------------------------------------------------------------------------------------- ----------------- ----------------- -----------------
  id                                                                                                  string            Идентификатор
                                                                                                                        запроса, который
                                                                                                                        возвращается
                                                                                                                        вместе с ответом,
                                                                                                                        что позволяет
                                                                                                                        точно установить
                                                                                                                        соответствие
                                                                                                                        запроса и ответа

  ---

  \"id\": \"DM_Test\"

  targets                                                                                             list              Список точек
                                                                                                                        назначения, где
                                                                                                                        lat и lon ---
                                                                                                                        широта точки в
                                                                                                                        градусах
                                                                                                                        (используется 6
                                                                                                                        знаков после
                                                                                                                        запятой)

  ---

  \"targets\": \[        \`\`\[            \`\`{                \`\`\"lon\":
  37.534313,                \`\`\"lat\":
  55.790413            \`\`},            \`\`{                \`\`\"lon\":
  37.536507,                \`\`\"lat\": 55.788643            \`\`}        \`\`\]    \`\`\]

  sources                                                                                             list              Список точек
                                                                                                                        отправления, где
                                                                                                                        lat и lon ---
                                                                                                                        широта точки в
                                                                                                                        градусах
                                                                                                                        (используется 6
                                                                                                                        знаков после
                                                                                                                        запятой)

  ---

  \"sources\": \[        \`\`\[            \`\`{                \`\`\"lon\":
  37.537849,                \`\`\"lat\":
  55.796932            \`\`},            \`\`{                \`\`\"lon\":
  37.531574,                \`\`\"lat\": 55.801552            \`\`}        \`\`\]    \`\`\]

  sources_to_targets                                                                                  list              Рассчитанная
                                                                                                                        матрица,
                                                                                                                        содержащая номера
                                                                                                                        элементов матрицы
                                                                                                                        отправления и
                                                                                                                        назначения для
                                                                                                                        каждого из
                                                                                                                        результатов
                                                                                                                        расчёта, а также
                                                                                                                        расчётные
                                                                                                                        значения ETA и
                                                                                                                        EDA

  ---

  \"sources_to_targets\": \[        \`\`\[            \`\`{                \`\`\"distance\":
  1.076,                \`\`\"time\": 773,                \`\`\"to_index\":
  0,                \`\`\"from_index\":
  0            \`\`},            \`\`{                \`\`\"distance\":
  1.459,                \`\`\"time\": 1041,                \`\`\"to_index\":
  1,                \`\`\"from_index\":
  0            \`\`}        \`\`\],        \`\`\[            \`\`{                \`\`\"distance\":
  1.828,                \`\`\"time\": 1311,                \`\`\"to_index\":
  0,                \`\`\"from_index\":
  1            \`\`},            \`\`{                \`\`\"distance\":
  2.211,                \`\`\"time\": 1579,                \`\`\"to_index\":
  1,                \`\`\"from_index\": 1            \`\`}        \`\`\]    \`\`\]

  distance                                                                                            float             Общая длина
                                                                                                                        маршрута,
                                                                                                                        указывается в
                                                                                                                        выбранных
                                                                                                                        единицах
                                                                                                                        измерения (EDA)

  ---

  \"distance\": 1.828

  time                                                                                                float             Расчётное время,
                                                                                                                        требуемое на
                                                                                                                        движение по
                                                                                                                        маршруту
                                                                                                                        (ETA).Расчётное
                                                                                                                        время указывается
                                                                                                                        в секундах

  ---

  \"time\": 1311

  to_index                                                                                            integer           Порядковый номер
                                                                                                                        элемента матрицы
                                                                                                                        назначения в
                                                                                                                        запросе

  ---

  \"to_index\": 0

  from_index                                                                                          integer           Порядковый номер
                                                                                                                        элемента матрицы
                                                                                                                        отправления в
                                                                                                                        запросе

  ---

  \"from_index\": 0

  units                                                                                               string            Единица измерения
                                                                                                                        расстояния в
                                                                                                                        ответе

  ---

  \"units\": \"kilometers\"
  ---------------------------------------------------------------------------------------------------------------------------------------------------------

Если по запросу ничего не найдено, ответ будет выглядеть следующим
образом:

  -----------------------------------------------------------------------
  {\"status_code\":400,\"status\":\"Bad Request\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример

**POST-запрос с помощью утилиты curl**

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl -X POST \\  \`\`-H \"Content-type: application/json\" \\  \`\`-H \"Accept: application/json\" \\  \`\`-d
  \'{\"sources\":\[{\"lat\":55.796932,\"lon\":37.537849},{\"lat\":55.801551,\"lon\":37.531575}\],\"targets\":\[{\"lat\":55.790412,\"lon\":37.534313},{\"lat\":55.788644,\"lon\":37.536507}\],\"costing\":\"pedestrian\",\"id\":\"DM_Test\"}\'
  \\  \`\`\"https://geo.rustore.ru/api/dm?api_key=\<YOUR_API_KEY\>\"
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Область достижимости

Область достижимости --- сервис, который позволяет рассчитать контуры
областей (изолинии), которые можно достичь из выбранного местоположения
при указанном в запросе ограничении (на время в пути, либо на пройденное
расстояние). Рассчитанные контуры возвращаются в виде замкнутой линии
либо полигона, которые можно отобразить на карте.

**/iso** --- точка вызова сервиса расчёта области достижимости.
Возможные варианты построения изолиний:

-   изохроны (isochrone, линии равного времени в пути);

-   изодистанты (isodistance, линии равных расстояний).

Запрос

Запрос передается в формате json в HTTP body. json запроса состоит из
обязательных и не обязательных полей. В url запроса должны быть заданы
обязательные параметры.

Простой пример json запроса:

  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  {   \`\`\"locations\":\[      \`\`{         \`\`\"lat\":55.796932,         \`\`\"lon\":37.537849      \`\`}   \`\`\],   \`\`\"costing\":\"pedestrian\",   \`\`\"speed\":5.6,   \`\`\"contours\":\[      \`\`{         \`\`\"time\":15      \`\`},      \`\`{         \`\`\"time\":30      \`\`}   \`\`\],   \`\`\"id\":\"Iso_Test\",   \`\`\"generalize\":5}
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

По данному запросу вокруг заданной координаты будут сгенерированы две
изохроны, ограничивающие области, которые пешеход может пройти из
координаты за 15 и 30 минут. Скорость пешехода принимается за 5.6 км/ч.

**Обязательные url-параметры запроса**

  -----------------------------------------------------------------------------
  Имя параметра           Формат            Описание          Пример
  ----------------------- ----------------- ----------------- -----------------
  api_key                 hex-string        Доступ к сервисам

  ---

  fa749bace6d8a3b1\....
  -----------------------------------------------------------------------------

**Обязательные json-поля в HTTP body запроса**

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                                               Формат            Описание                 Пример
  ------------------------------------------------------------------------------------------------------ ----------------- ------------------------ -----------------
  locations                                                                                              list              Точка, относительно
                                                                                                                           которой осуществляется
                                                                                                                           расчёт матрицы
                                                                                                                           достижимости, где lat и
                                                                                                                           lon - широта и долгота
                                                                                                                           точки в градусах
                                                                                                                           (используется 6 знаков
                                                                                                                           после запятой)

  ---

  \"locations\":\[    \`\`{        \`\`\"lat\":55.796932,        \`\`\"lon\":37.537849    \`\`}\]

  contours                                                                                               list              Список параметров для
                                                                                                                           построения изолиний.
                                                                                                                           Каждый параметр
                                                                                                                           определяет метрику
                                                                                                                           (время, либо расстояние)
                                                                                                                           и цвет контура, который
                                                                                                                           можно достичь по
                                                                                                                           выбранной метрике при
                                                                                                                           движении из точки,
                                                                                                                           определённой
                                                                                                                           параметром locations:-
                                                                                                                           **time** --- время в
                                                                                                                           минутах (от 1 до 120),
                                                                                                                           за которое можно достичь
                                                                                                                           границы контура.
                                                                                                                           Используется для
                                                                                                                           построения изолиний;-
                                                                                                                           **distance** ---
                                                                                                                           расстояние в километрах
                                                                                                                           (может быть
                                                                                                                           дробным)Максимальное
                                                                                                                           число контуров в одном
                                                                                                                           запросе: 3 (три)На
                                                                                                                           каждый контур возможно
                                                                                                                           задать только одну
                                                                                                                           метрику: либо
                                                                                                                           время, либо расстояние.

  ---

  \"contours\":\[    \`\`{        \`\`\"time\":15    \`\`},    \`\`{        \`\`\"time\":30    \`\`}\]
  -------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Дополнительные json-поля в HTTP body запроса**

  --------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                          Формат            Описание                           Пример
  --------------------------------------------------------------------------------- ----------------- ---------------------------------- -----------------
  speed                                                                             float             Скорость, км/ч. Скорость возможно
                                                                                                      указать только для пеших
                                                                                                      (costing=pedestrian) и вело
                                                                                                      (costing=bicycle) изохрон.Если
                                                                                                      поле не указано, используется
                                                                                                      скорость по умолчанию: 5 км/ч для
                                                                                                      пешеходов и 20 км/ч для
                                                                                                      велосипедов.

  ---

  \"speed\":20.1

  costing                                                                           string            Тип транспорта для построения
                                                                                                      маршрута:- **auto** (по
                                                                                                      умолчанию) --- автомобильный;-
                                                                                                      **truck** (не поддерживается) ---
                                                                                                      грузовой;- **pedestrian** ---
                                                                                                      пешеходный;- **bicycle** ---
                                                                                                      велосипедный.

  ---

  \"costing\":\"pedestrian\"

  id                                                                                string            Идентификатор запроса, который
                                                                                                      возвращается вместе с ответом, что
                                                                                                      позволяет точно установить
                                                                                                      соответствие запроса и ответа

  ---

  \"id\":\"Iso_Test\"

  costing_options                                                                   dict              Список параметров расчёта
                                                                                                      маршрута. Для различных типов
                                                                                                      транспорта используются различные
                                                                                                      опции и ограничения, аналогичные
                                                                                                      тем, которые используются в
                                                                                                      сервисе построения маршрута

  ---

  \"costing_options\":{    \`\`\"use_border_crossing\":0,    \`\`\"use_tolls\":0}

  units                                                                             string            Единица измерения расстояния в
                                                                                                      ответе:- **kilometers** (по
                                                                                                      умолчанию) --- километры;-
                                                                                                      **miles** --- мили.

  ---

  \"units\":\"miles\"

  generalize                                                                        float             Значение в метрах используемое как
                                                                                                      допустимое отклонение при
                                                                                                      генерализации кривой контура
                                                                                                      по алгоритму
                                                                                                      Рамера-Дугласа-Пекера.Уменьшение
                                                                                                      числа точек кривой может приводить
                                                                                                      к пересечению смежных контуров и к
                                                                                                      самопересечениям.

  ---

  \"generalize\":5

  polygons                                                                          boolean           Определяет структуру GeoJSON:
                                                                                                      возвращать в ответе полигоны или
                                                                                                      линии контуров достижимости:-
                                                                                                      **false** (по умолчанию) ---
                                                                                                      возвращать линии;- **true** ---
                                                                                                      возвращать полигоны.

  ---

  \"polygons\":true

  show_locations                                                                    boolean           Возвращать вместе с изолиниями
                                                                                                      исходные точки (заданные
                                                                                                      в locations) и точки, заматченные
                                                                                                      на дорожный граф (от которых по
                                                                                                      факту начинается построение
                                                                                                      изолиний).Возможные значения:-
                                                                                                      **false** (по умолчанию) --- не
                                                                                                      возвращать исходные точки и точки,
                                                                                                      «притянутые» к дорожной сети;-
                                                                                                      **true** --- возвращать эти точки.

  ---

  \"show_locations\":true
  --------------------------------------------------------------------------------------------------------------------------------------------------------

Ответ

Возвращаемый ответ соответствует структуре GeoJSON и содержит:


  Имя поляФормат            Описание                 Пример

  idstring            Идентификатор запроса,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      который возвращается
вместе с ответом, что
позволяет точно
установить соответствие
запроса и ответа

  ---

  \"id\": \"Iso_Test\"

  propertieslist              Описание времени и типа
достижимости для линии
или полигона контура,
где **contour** ---
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      значение времени в
минутах из запроса

  ---

  \"properties\": {    \`\`\"contour\": 15,    \`\`\"metric\":\"time\" \`\`}

  geometrylist              Описание контура и его
структуры, содержащее:-
coordinates--- набор
координат описывающих
ломанную контура
достижимости в
формате: \[lon,lat\] -
долгота и широта точки в
градусах (используется 6
знаков после запятой)-
type--- возможные
значения структуры: -
olygon--- для полигонов
достижимости; -
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      LineString--- для линий,
описывающих контур
достижимости.

  ---

  \"geometry\": {    \`\`\"coordinates\":
  \[        \`\`\[            \`\`37.537922,            \`\`55.798004        \`\`\],        \`\`\[            \`\`37.536846,            \`\`55.797928        \`\`\],        \`\`\[            \`\`37.536957,            \`\`55.796932        \`\`\],        \`\`\[            \`\`37.537849,            \`\`55.796383        \`\`\],        \`\`\[            \`\`37.539318,            \`\`55.796932        \`\`\],        \`\`\[            \`\`37.537922,            \`\`55.798004          \`\`\]    \`\`\],    \`\`\"type\":
  \"LineString\"}


Если по запросу ничего не найдено, ответ будет выглядеть следующим
образом:

  -----------------------------------------------------------------------
  {\"status_code\":400,\"status\":\"Bad Request\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример

**Запрос**

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl -X POST \\  \`\`-H \"Content-type: application/json\" \\  \`\`-H \"Accept: application/json\" \\  \`\`-d
  \'{\"locations\":\[{\"lat\":55.796932,\"lon\":37.537849}\],\"costing\":\"pedestrian\",\"contours\":\[{\"time\":15,\"color\":\"ff0000\"},{\"time\":30,\"color\":\"00ff00\"}\],\"id\":\"Iso_Test\",\"generalize\":5}\'
  \\  \`\`\"https://geo.rustore.ru/api/iso?api_key=\<YOUR_API_KEY\>\"
  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------
  {    \`\`\"id\": \"Iso_Test\",    \`\`\"type\":
  \"FeatureCollection\",    \`\`\"features\":
  \[        \`\`{            \`\`\"properties\":
  {                \`\`\"contour\":
  30            \`\`},            \`\`\"geometry\": {             
    \"coordinates\": \[\[37.550148, 55.814228\], \[37.549480,
  55.814301\], \[37.549141, 55.814220\], \[37.548851, 55.814262\],
  \[37.546852, 55.813473\], \[37.545994, 55.814072\], \[37.545681,
  55.814106\], \[37.545200, 55.813931\], \[37.544643, 55.813137\],
  \[37.544186, 55.812927\], \[37.544849, 55.812748\], \[37.545116,
  55.812195\], \[37.545120, 55.811932\], \[37.544849, 55.811672\],
  \[37.543846, 55.811695\], \[37.543369, 55.811932\], \[37.543404,
  55.812378\], \[37.543674, 55.812927\], \[37.542850, 55.813446\],
  \[37.542519, 55.813602\], \[37.541729, 55.813808\], \[37.540901,
  55.813980\], \[37.539993, 55.814072\], \[37.539852, 55.814152\],
  \[37.539547, 55.813931\], \[37.539261, 55.813522\], \[37.539066,
  55.812931\], \[37.538933, 55.812855\], \[37.537849, 55.812763\],
  \[37.532852, 55.812763\], \[37.531853, 55.812664\], \[37.531693,
  55.812771\], \[37.531349, 55.813435\], \[37.530849, 55.813683\],
  \[37.527847, 55.813553\], \[37.527512, 55.813591\], \[37.526852,
  55.813824\], \[37.525101, 55.812931\], \[37.525043, 55.812744\],
  \[37.525280, 55.812359\], \[37.525257, 55.811932\], \[37.525066,
  55.811714\], \[37.524853, 55.811634\], \[37.522850, 55.811668\],
  \[37.520851, 55.811581\], \[37.520531, 55.811611\], \[37.519794,
  55.811874\], \[37.518070, 55.811714\], \[37.517254, 55.811531\],
  \[37.516560, 55.811222\], \[37.514851, 55.810818\], \[37.514248,
  55.810532\], \[37.512482, 55.810295\], \[37.511650, 55.809933\],
  \[37.510849, 55.809696\], \[37.510563, 55.809216\], \[37.509514,
  55.808933\], \[37.508846, 55.808617\], \[37.508575, 55.808655\],
  \[37.507908, 55.808990\], \[37.507851, 55.809124\], \[37.506790,
  55.808994\], \[37.506432, 55.808353\], \[37.506348, 55.807926\],
  \[37.506130, 55.807652\], \[37.505852, 55.807522\], \[37.504852,
  55.807327\], \[37.504086, 55.806927\], \[37.504608, 55.805935\],
  \[37.504890, 55.804932\], \[37.505463, 55.804539\], \[37.506413,
  55.803490\], \[37.506596, 55.802933\], \[37.506027, 55.801758\],
  \[37.505489, 55.801296\], \[37.505211, 55.800571\], \[37.504852,
  55.800243\], \[37.503761, 55.800022\], \[37.503632, 55.799149\],
  \[37.503334, 55.798931\], \[37.504494, 55.797573\], \[37.505337,
  55.796932\], \[37.506489, 55.795567\], \[37.506851, 55.795300\],
  \[37.507401, 55.794479\], \[37.508106, 55.794186\], \[37.508385,
  55.793926\], \[37.507927, 55.791931\], \[37.508575, 55.791653\],
  \[37.509132, 55.791214\], \[37.509377, 55.790932\], \[37.509697,
  55.789928\], \[37.510567, 55.789654\], \[37.510849, 55.789474\],
  \[37.511265, 55.789516\], \[37.511852, 55.789795\], \[37.512287,
  55.789368\], \[37.513012, 55.789093\], \[37.514851, 55.789059\],
  \[37.516853, 55.789448\], \[37.517147, 55.788933\], \[37.517376,
  55.787933\], \[37.518219, 55.787567\], \[37.518467, 55.787548\],
  \[37.518852, 55.787048\], \[37.520317, 55.787395\], \[37.520351,
  55.786930\], \[37.519840, 55.785942\], \[37.519733, 55.784813\],
  \[37.519814, 55.783936\], \[37.520851, 55.783707\], \[37.522850,
  55.783810\], \[37.523712, 55.783798\], \[37.524124, 55.783657\],
  \[37.524662, 55.783737\], \[37.524937, 55.782932\], \[37.525475,
  55.782558\], \[37.526855, 55.782169\], \[37.527237, 55.781937\],
  \[37.527851, 55.781296\], \[37.528114, 55.781197\], \[37.528477,
  55.781303\], \[37.529850, 55.781086\], \[37.530849, 55.781151\],
  \[37.531528, 55.780933\], \[37.531853, 55.780731\], \[37.532845,
  55.780922\], \[37.533852, 55.780361\], \[37.534851, 55.780132\],
  \[37.535851, 55.780499\], \[37.536850, 55.780613\], \[37.537590,
  55.780933\], \[37.538418, 55.781933\], \[37.538094, 55.782177\],
  \[37.536850, 55.782494\], \[37.536671, 55.782757\], \[37.536758,
  55.783024\], \[37.537849, 55.783115\], \[37.538853, 55.783100\],
  \[37.539192, 55.783272\], \[37.539516, 55.783272\], \[37.539516,
  55.783596\], \[37.539848, 55.784061\], \[37.542732, 55.784050\],
  \[37.543095, 55.784172\], \[37.543610, 55.784172\], \[37.543610,
  55.784691\], \[37.543850, 55.785027\], \[37.543968, 55.784927\],
  \[37.543980, 55.784069\], \[37.544151, 55.783630\], \[37.544151,
  55.783234\], \[37.544548, 55.783234\], \[37.544849, 55.783089\],
  \[37.545853, 55.783096\], \[37.546055, 55.782932\], \[37.545853,
  55.782459\], \[37.544849, 55.782249\], \[37.544636, 55.782143\],
  \[37.544563, 55.781651\], \[37.544788, 55.780872\], \[37.544926,
  55.780857\], \[37.545509, 55.781269\], \[37.546185, 55.781269\],
  \[37.546432, 55.781349\], \[37.547852, 55.781448\], \[37.548126,
  55.781658\], \[37.548252, 55.781929\], \[37.548279, 55.782932\],
  \[37.548252, 55.783337\], \[37.547714, 55.783791\], \[37.547665,
  55.783928\], \[37.547745, 55.785042\], \[37.547852, 55.785114\],
  \[37.548851, 55.785156\], \[37.549404, 55.785378\], \[37.549690,
  55.786087\], \[37.549850, 55.786221\], \[37.551277, 55.786362\],
  \[37.551544, 55.786240\], \[37.551849, 55.786335\], \[37.552105,
  55.786674\], \[37.552048, 55.787128\], \[37.551849, 55.787205\],
  \[37.551548, 55.787628\], \[37.551472, 55.787937\], \[37.551559,
  55.788227\], \[37.551849, 55.788536\], \[37.552174, 55.788609\],
  \[37.552494, 55.788929\], \[37.552151, 55.789234\], \[37.550850,
  55.789551\], \[37.550755, 55.789837\], \[37.550903, 55.789989\],
  \[37.552853, 55.789989\], \[37.552979, 55.789814\], \[37.552906,
  55.788986\], \[37.553734, 55.789055\], \[37.553852, 55.788998\],
  \[37.554855, 55.788998\], \[37.555008, 55.788773\], \[37.555096,
  55.788177\], \[37.555695, 55.788090\], \[37.555851, 55.788006\],
  \[37.556850, 55.788013\], \[37.556938, 55.787930\], \[37.556973,
  55.785805\], \[37.556450, 55.785332\], \[37.556080, 55.783703\],
  \[37.555851, 55.783459\], \[37.555420, 55.783360\], \[37.554760,
  55.783024\], \[37.554733, 55.782936\], \[37.555012, 55.782093\],
  \[37.555439, 55.781933\], \[37.555851, 55.781876\], \[37.556301,
  55.782482\], \[37.556850, 55.782600\], \[37.558849, 55.782555\],
  \[37.559853, 55.782436\], \[37.560852, 55.782436\], \[37.561218,
  55.782566\], \[37.561405, 55.782490\], \[37.561852, 55.782536\],
  \[37.562847, 55.782425\], \[37.563286, 55.782501\], \[37.563850,
  55.782726\], \[37.564850, 55.782578\], \[37.565845, 55.782696\],
  \[37.566853, 55.782688\], \[37.568306, 55.782932\], \[37.568703,
  55.783081\], \[37.569214, 55.783569\], \[37.569412, 55.783932\],
  \[37.569366, 55.784931\], \[37.569077, 55.785160\], \[37.568851,
  55.785187\], \[37.568340, 55.785419\], \[37.567787, 55.785931\],
  \[37.568188, 55.786594\], \[37.568398, 55.787384\], \[37.568851,
  55.787849\], \[37.569027, 55.787930\], \[37.568558, 55.788933\],
  \[37.568157, 55.789230\], \[37.567852, 55.789318\], \[37.567600,
  55.789680\], \[37.567585, 55.789932\], \[37.567852, 55.790161\],
  \[37.568855, 55.790195\], \[37.569851, 55.790462\], \[37.570263,
  55.790337\], \[37.570557, 55.789932\], \[37.570576, 55.789658\],
  \[37.570850, 55.789375\], \[37.571117, 55.789665\], \[37.571796,
  55.789932\], \[37.572170, 55.790607\], \[37.572571, 55.790936\],
  \[37.571640, 55.791931\], \[37.571121, 55.792206\], \[37.570133,
  55.792931\], \[37.569618, 55.793930\], \[37.568855, 55.794933\],
  \[37.568947, 55.795933\], \[37.569851, 55.796734\], \[37.570312,
  55.796932\], \[37.570080, 55.797165\], \[37.569851, 55.797222\],
  \[37.569534, 55.797619\], \[37.569134, 55.798931\], \[37.568851,
  55.799126\], \[37.567608, 55.799686\], \[37.567398, 55.799927\],
  \[37.567631, 55.800930\], \[37.568256, 55.801937\], \[37.568562,
  55.802933\], \[37.568115, 55.803204\], \[37.567337, 55.803417\],
  \[37.566853, 55.803654\], \[37.566193, 55.804276\], \[37.565849,
  55.804287\], \[37.564850, 55.804539\], \[37.562851, 55.804642\],
  \[37.562603, 55.804688\], \[37.562321, 55.804928\], \[37.562374,
  55.805931\], \[37.562851, 55.806541\], \[37.563114, 55.806667\],
  \[37.563370, 55.806927\], \[37.563446, 55.807926\], \[37.563210,
  55.808292\], \[37.562851, 55.808395\], \[37.561855, 55.808449\],
  \[37.561455, 55.808323\], \[37.561081, 55.807697\], \[37.560852,
  55.807652\], \[37.560570, 55.807930\], \[37.560551, 55.808628\],
  \[37.560448, 55.808937\], \[37.560158, 55.809238\], \[37.559292,
  55.809376\], \[37.558571, 55.809658\], \[37.557850, 55.809826\],
  \[37.557652, 55.809132\], \[37.557041, 55.808743\], \[37.556850,
  55.808704\], \[37.555855, 55.809750\], \[37.555717, 55.809799\],
  \[37.555286, 55.810364\], \[37.554852, 55.811588\], \[37.554558,
  55.811642\], \[37.553555, 55.812637\], \[37.551849, 55.813408\],
  \[37.550850, 55.813587\], \[37.550594, 55.813931\], \[37.550148,
  55.814228\]\],                \`\`\"type\":
  \"LineString\"            \`\`},            \`\`\"type\":
  \"Feature\"        \`\`},        \`\`{            \`\`\"properties\":
  {                \`\`\"contour\":
  15            \`\`},            \`\`\"geometry\":
  {                \"coordinates\": \[\[37.538876, 55.805958\],
  \[37.537895, 55.805969\], \[37.536850, 55.806187\], \[37.534851,
  55.806030\], \[37.533852, 55.806026\], \[37.530849, 55.805218\],
  \[37.530231, 55.804928\], \[37.530651, 55.803932\], \[37.530163,
  55.803619\], \[37.530067, 55.802933\], \[37.529850, 55.802757\],
  \[37.528851, 55.802734\], \[37.528469, 55.802933\], \[37.528511,
  55.803272\], \[37.529060, 55.803932\], \[37.528996, 55.804081\],
  \[37.527851, 55.804409\], \[37.526024, 55.804108\], \[37.524857,
  55.803989\], \[37.523849, 55.803200\], \[37.522850, 55.803543\],
  \[37.521851, 55.803284\], \[37.521061, 55.802933\], \[37.521778,
  55.800926\], \[37.521568, 55.799931\], \[37.521996, 55.798927\],
  \[37.522476, 55.798553\], \[37.522850, 55.798439\], \[37.523849,
  55.798332\], \[37.524094, 55.798180\], \[37.524254, 55.797932\],
  \[37.524155, 55.797630\], \[37.523849, 55.797279\], \[37.523552,
  55.797230\], \[37.522991, 55.796932\], \[37.523434, 55.795933\],
  \[37.523846, 55.795574\], \[37.524853, 55.795555\], \[37.525974,
  55.795811\], \[37.526047, 55.795933\], \[37.527344, 55.796440\],
  \[37.527584, 55.796932\], \[37.527706, 55.797081\], \[37.527851,
  55.797115\], \[37.528137, 55.796646\], \[37.528137, 55.796215\],
  \[37.528564, 55.796215\], \[37.528851, 55.796078\], \[37.529942,
  55.796028\], \[37.530178, 55.795601\], \[37.530178, 55.795261\],
  \[37.530521, 55.795261\], \[37.530849, 55.795101\], \[37.531178,
  55.795261\], \[37.531521, 55.795261\], \[37.531521, 55.795601\],
  \[37.531769, 55.796017\], \[37.533852, 55.796032\], \[37.534050,
  55.796127\], \[37.534657, 55.796127\], \[37.534657, 55.796738\],
  \[37.534790, 55.796989\], \[37.535896, 55.796978\], \[37.535950,
  55.794933\], \[37.535625, 55.794704\], \[37.535076, 55.794704\],
  \[37.534946, 55.792835\], \[37.534645, 55.792721\], \[37.534058,
  55.792721\], \[37.533852, 55.792637\], \[37.531853, 55.792431\],
  \[37.531441, 55.792336\], \[37.530727, 55.791931\], \[37.531166,
  55.790932\], \[37.531544, 55.790623\], \[37.532330, 55.790409\],
  \[37.533852, 55.790245\], \[37.534039, 55.790123\], \[37.534431,
  55.789516\], \[37.535152, 55.789234\], \[37.535465, 55.788933\],
  \[37.535500, 55.788578\], \[37.535851, 55.788170\], \[37.536205,
  55.788574\], \[37.536320, 55.788933\], \[37.536610, 55.789173\],
  \[37.536850, 55.789261\], \[37.538105, 55.789185\], \[37.538727,
  55.788811\], \[37.539024, 55.788757\], \[37.539921, 55.788868\],
  \[37.540951, 55.788834\], \[37.541851, 55.789043\], \[37.542439,
  55.789349\], \[37.542850, 55.789448\], \[37.543850, 55.789272\],
  \[37.544254, 55.789337\], \[37.544502, 55.789280\], \[37.544849,
  55.789421\], \[37.546322, 55.789463\], \[37.546852, 55.789597\],
  \[37.547276, 55.789356\], \[37.547852, 55.789242\], \[37.548000,
  55.789787\], \[37.548676, 55.789757\], \[37.549397, 55.789932\],
  \[37.549641, 55.790142\], \[37.549850, 55.790207\], \[37.551849,
  55.790260\], \[37.553345, 55.790436\], \[37.553852, 55.790600\],
  \[37.554203, 55.791931\], \[37.554337, 55.792934\], \[37.553852,
  55.793671\], \[37.553501, 55.793930\], \[37.553276, 55.794353\],
  \[37.553158, 55.794933\], \[37.552265, 55.795349\], \[37.551750,
  55.795837\], \[37.551640, 55.796932\], \[37.551228, 55.797928\],
  \[37.551395, 55.798931\], \[37.551365, 55.799931\], \[37.552040,
  55.800930\], \[37.552097, 55.801933\], \[37.551849, 55.802193\],
  \[37.551334, 55.802418\], \[37.548805, 55.802883\], \[37.548664,
  55.803932\], \[37.547852, 55.804455\], \[37.547508, 55.804588\],
  \[37.546852, 55.804703\], \[37.545853, 55.805096\], \[37.541851,
  55.805519\], \[37.540852, 55.805511\], \[37.539623, 55.805702\],
  \[37.538876, 55.805958\]\],                \`\`\"type\":
  \"LineString\"            \`\`},            \`\`\"type\":
  \"Feature\"        \`\`}    \`\`\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Оптимизация маршрута

Оптимизация маршрута --- сервис, который позволяет решить
задачу коммивояжёра и осуществить расчёт оптимального маршрута для
набора произвольных целевых точек. Для расчёта оптимального маршрута
могут быть использованы автомобильный, пешеходный и велосипедный графы.

**/optimal_route** --- точка вызова сервиса расчета оптимального
маршрута. Для входного набора координат строит оптимизированный по
времени, либо по расстоянию маршрут и формирует список координат в
порядке их посещения.

Запрос

Запрос передается в виде JSON с обязательными и необязательными
параметрами запроса.

Простой пример запроса:

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  {\"locations\":\[{\"lon\":49.22088,\"lat\":55.77055},{\"lon\":49.21999,\"lat\":55.77246},{\"lon\":49.21933,\"lat\":55.77222},{\"lon\":49.22999,\"lat\":55.78246},{\"lon\":49.26842,\"lat\":55.75043}\],\"costing\":\"pedestrian\",\"directions_options\":{\"units\":\"miles\"},\"id\":\"optimal_route_test\"}
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Этот запрос рассчитывает оптимальный пеший маршрут со стартом в первой
точке из списка «locations» и финишем в последней точке.

**Обязательные параметры запроса**

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                                                                                                                      Формат            Описание              Пример
  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ----------------- --------------------- -----------------
  api_key                                                                                                                                                                       hex-string        Доступ к сервисам

  ---

  api_key=fa749bace6d8a3b1\....

  locations                                                                                                                                                                     list              Список точек, которые
                                                                                                                                                                                                  нужно отсортировать в
                                                                                                                                                                                                  соответствии с
                                                                                                                                                                                                  порядком их
                                                                                                                                                                                                  посещения. Первая и
                                                                                                                                                                                                  последняя точка в
                                                                                                                                                                                                  списке таковыми и
                                                                                                                                                                                                  остаются, а точки
                                                                                                                                                                                                  между ними могут быть
                                                                                                                                                                                                  переставлены для
                                                                                                                                                                                                  оптимизации маршрута
                                                                                                                                                                                                  по
                                                                                                                                                                                                  времени.Минимальное
                                                                                                                                                                                                  количество точек: 2.

  ---

  \"locations\":\[    \`\`{        \`\`\"lat\":55.77055,        \`\`\"lon\":49.22088    \`\`},    \`\`{        \`\`\"lat\":55.796932,        \`\`\"lon\":37.537849    \`\`}\]
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Дополнительные параметры запроса**

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                                               Формат            Описание                 Пример
  ------------------------------------------------------------------------------------------------------ ----------------- ------------------------ -----------------
  costing                                                                                                string            Тип транспорта
                                                                                                                           для построения маршрута.
                                                                                                                           Поддерживаемые
                                                                                                                           значения:- **auto** (по
                                                                                                                           умолчанию) ---
                                                                                                                           автомобильный;-
                                                                                                                           **truck** ---
                                                                                                                           грузовики;-
                                                                                                                           **pedestrian** ---
                                                                                                                           пешеходный;- **bicycle**
                                                                                                                           --- велосипедный.

  ---

  \"costing\":\"pedestrian\"

  id                                                                                                     string            Идентификатор запроса,
                                                                                                                           который возвращается
                                                                                                                           вместе с ответом, что
                                                                                                                           позволяет точно
                                                                                                                           установить соответствие
                                                                                                                           запроса и ответа

  ---

  \"id\":\"optimal_route_test\"

  costing_options                                                                                        dict              Список параметров
                                                                                                                           расчёта маршрута. Для
                                                                                                                           различных типов
                                                                                                                           транспорта
                                                                                                                           используются различные
                                                                                                                           опции и ограничения,
                                                                                                                           аналогичные тем, которые
                                                                                                                           используются
                                                                                                                           в сервисе построения
                                                                                                                           маршрутаДополнительно
                                                                                                                           присутствует опция
                                                                                                                           "shortest", по умолчанию
                                                                                                                           выставленная в false.
                                                                                                                           Если shortest=false, то
                                                                                                                           маршрут оптимизируется
                                                                                                                           по времени. Если
                                                                                                                           shortest=true, то
                                                                                                                           маршрут оптимизируется
                                                                                                                           по расстоянию.

  ---

  \"costing_options\":{   \`\`\"auto\":{      \`\`\"shortest\":true,      \`\`\"use_tolls\":0   \`\`}}

  units                                                                                                  string            Единица измерения
                                                                                                                           расстояния в ответе:-
                                                                                                                           **kilometers** (по
                                                                                                                           умолчанию) ---
                                                                                                                           километры;- **miles**
                                                                                                                           --- мили.

  ---

  \"units\":\"miles\"

  fix_destination                                                                                        bool              Флаг, указывающий на то,
                                                                                                                           нужно ли фиксировать
                                                                                                                           последнюю из
                                                                                                                           перечисленных координат
                                                                                                                           в locations в качестве
                                                                                                                           финиша. Если
                                                                                                                           fix_destination=true, то
                                                                                                                           последняя из указанных
                                                                                                                           локаций в ответе сервиса
                                                                                                                           гарантированно будет
                                                                                                                           являться точкой финиша.
                                                                                                                           Если
                                                                                                                           fix_destination=false,
                                                                                                                           то последняя из
                                                                                                                           указанных локаций может
                                                                                                                           оказаться одной из
                                                                                                                           промежуточных точек
                                                                                                                           маршрута.Значение по
                                                                                                                           умолчанию: true.

  ---

  \"fix_destination\":\"false\"
  -------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ответ

Возвращаемый ответ соответствует структуре GeoJSON и содержит:


  Имя поля                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Формат            Описание               Пример

  idstring            Идентификатор запроса,
который возвращается
вместе с ответом, что
позволяет точно
установить
соответствие запроса и
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ответа

  ---

  \"id\": \"optimal_route_test\"

  tripobject map        Информация о маршруте
определяется
параметрами:-
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    **locations** ---
список точек маршрута,
отсортированных для
оптимального по
времени прохождения
маршрута;- **legs**
информация о
полилинии маршрута
см.
также: Декодирование
полилинии);-
summary** ---
краткая информация о
маршруте;-
status_message** ---
текстовая расшифровка
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    статуса выполнения
запроса;- **status**
статус выполнения
запроса;- **units**
единицы
измерения;-
language** --- язык,
на котором
представлена
информация о маневрах.

  ---

  {   \`\`\"trip\":{      \`\`\"locations\":\[         \`\`{            \`\`\"type\":\"break\",            \`\`\"lat\":43.1332,            \`\`\"lon\":131.9113,            \`\`\"original_index\":0         \`\`},         \`\`{            \`\`\"type\":\"break\",            \`\`\"lat\":50.266,            \`\`\"lon\":127.5356,            \`\`\"original_index\":1         \`\`}      \`\`\],      \`\`\"legs\":\[         \`\`{            \`\`\"summary\":{               \`\`\"min_lat\":43.131777,               \`\`\"min_lon\":127.535648,               \`\`\"max_lat\":50.291427,               \`\`\"max_lon\":132.040931,               \`\`\"time\":58965.898,               \`\`\"length\":1424.861,               \`\`\"cost\":54399.585            \`\`},            \`\`\"shape\":\"shape.
  In this example we skip it.\"         \`\`}      \`\`\],      \`\`\"summary\":{         \`\`\"min_lat\":43.131777,         \`\`\"min_lon\":127.535648,         \`\`\"max_lat\":50.291427,         \`\`\"max_lon\":132.040931,         \`\`\"time\":58965.898,         \`\`\"length\":1424.861,         \`\`\"cost\":54399.585      \`\`},      \`\`\"status_message\":\"Found route between points\",      \`\`\"status\":0,      \`\`\"units\":\"kilometers\",      \`\`\"language\":\"ru-RU\"   \`\`},   \`\`\"id\":\"my_route\"}


Если по запросу ничего не найдено, ответ будет выглядеть следующим
образом:

  -----------------------------------------------------------------------
  {\"status_code\":400,\"status\":\"Bad Request\"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример

**Запрос**

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl -X POST \\   \`\`-H \"Content-type: application/json\" \\   \`\`-H \"Accept: application/json\" \\   \`\`-d
  \'{\"locations\":\[{\"lon\":49.22088,\"lat\":55.77055},{\"lon\":49.21999,\"lat\":55.77246},{\"lon\":49.26842,\"lat\":55.75043}\],\"costing\":\"pedestrian\",\"directions_options\":{\"units\":\"miles\"},\"id\":\"optimal_route_test\"}\'
  \\   \`\`\"https://geo.rustore.ru/api/optimal_route?api_key=\<YOUR_API_KEY\>\"
  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------
  {    \`\`\"trip\": {        \`\`\"locations\":
  \[{            \`\`\"type\": \"break\",            \`\`\"lat\":
  55.77055,            \`\`\"lon\":
  49.22088,            \`\`\"original_index\": 0        \`\`},
  {            \`\`\"type\": \"break\",            \`\`\"lat\":
  55.77246,            \`\`\"lon\":
  49.21999,            \`\`\"original_index\": 1        \`\`},
  {            \`\`\"type\": \"break\",            \`\`\"lat\":
  55.75043,            \`\`\"lon\":
  49.26842,            \`\`\"original_index\":
  2        \`\`}\],        \`\`\"legs\": \[{            \`\`\"summary\":
  {                \`\`\"min_lat\":
  55.77065,                \`\`\"min_lon\":
  49.21999,                \`\`\"max_lat\":
  55.772514,                \`\`\"max_lon\":
  49.220883,                \`\`\"time\":
  188.317,                \`\`\"length\":
  0.164,                \`\`\"cost\":
  193.317            \`\`},            \`\`\`\"shape\": \"u\~jiBepe{
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Декодирование ломаной маршрута

Cервис построения маршрутов использует кодированный формат полилинии для
хранения серии координат широты и долготы в виде одной строки.
Полилинейное кодирование значительно уменьшает размер ответа.

Для декодирования полилинии в серию координат вы можете использовать
приведённые ниже примеры.

JavaScript

  ------------------------------------------------------------------------------
  polyline.decode =  function (str, precision) {    \`\`var index =
  0,        \`\`lat = 0,        \`\`lng = 0,        \`\`coordinates =
  \[\],        \`\`shift = 0,        \`\`result = 0,        \`\`byte =  null
  ,        \`\`latitude_change,        \`\`longitude_change,        \`\`factor =
  Math.pow(10, precision \|\| 6);    \`\`// Coordinates have variable length
  when encoded, so just keep    \`\`// track of whether we\'ve hit the end of
  the string. In each    \`\`// loop iteration, a single coordinate is
  decoded.    \`\`while (index \< str.length) {        \`\`// Reset shift,
  result, and byte        \`\`byte =  null ;        \`\`shift =
  0;        \`\`result = 0;        \`\`do {            \`\`byte =
  str.charCodeAt(index++) - 63;            \`\`result \|= (byte & 0x1f) \<\<
  shift;            \`\`shift += 5;        \`\`}  while (byte \>=
  0x20);        \`\`latitude_change = ((result & 1) ? \~(result \>\> 1) :
  (result \>\> 1));        \`\`shift = result = 0;        \`\`do
  {            \`\`byte = str.charCodeAt(index++) - 63;            \`\`result
  \|= (byte & 0x1f) \<\< shift;            \`\`shift += 5;        \`\`}  while
  (byte \>= 0x20);        \`\`longitude_change = ((result & 1) ? \~(result
  \>\> 1) : (result \>\> 1));        \`\`lat += latitude_change;        \`\`lng
  += longitude_change;        \`\`coordinates.push(\[lat / factor, lng /
  factor\]);    \`\`}    \`\`return coordinates;};
  ------------------------------------------------------------------------------

  ------------------------------------------------------------------------------

C++ 11

  ---------------------------------------------------------------------------------------------------------------
  #include \<vector\>constexpr  double kPolylinePrecision = 1E6;constexpr  double kInvPolylinePrecision = 1.0 /
  kPolylinePrecision;struct PointLL {  \`\`float lat;  \`\`float lon;};std::vector\<PointLL\> decode( const
  std::string& encoded) {  \`\`size_t i = 0;      // what byte are we looking at  \`\`// Handy lambda to turn a
  few bytes of an encoded string into an integer  \`\`auto deserialize = \[&encoded, &i\]( const int previous)
  {    \`\`// Grab each 5 bits and mask it in where it belongs using the shift    \`\`int byte, shift = 0, result
  = 0;    \`\`do {      \`\`byte =  static_cast \< int \>(encoded\[i++\]) - 63;      \`\`result \|= (byte & 0x1f)
  \<\< shift;      \`\`shift += 5;    \`\`}  while (byte \>= 0x20);    \`\`// Undo the left shift from above or
  the bit flipping and add to previous    \`\`// since its an offset    \`\`return previous + (result & 1 ?
  \~(result \>\> 1) : (result \>\> 1));  \`\`};  \`\`// Iterate over all characters in the encoded
  string  \`\`std::vector\<PointLL\> shape;  \`\`int last_lon = 0, last_lat = 0;  \`\`while (i \<
  encoded.length()) {    \`\`// Decode the coordinates, lat first for some reason    \`\`int lat =
  deserialize(last_lat);    \`\`int lon = deserialize(last_lon);    \`\`// Shift the decimal point 5 places to
  the left    \`\`shape.emplace_back( static_cast \< float \>( static_cast \< double \>(lat)
  \*                                          \`\`kInvPolylinePrecision),                       \`\`static_cast
  \< float \>( static_cast \< double \>(lon)
  \*                                          \`\`kInvPolylinePrecision));    \`\`// Remember the last one we
  encountered    \`\`last_lon = lon;    \`\`last_lat = lat;  \`\`}  \`\`return shape;}
  ---------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------

Python

  -----------------------------------------------------------------------
  #!/usr/bin/env pythonimport sys#six degrees of precision in
  valhallainv  = 1.0 / 1e6 ;def decode(encoded):    \`\`\"\"\"Decodes
  route polyline which is returned by rose.\"\"\"    \`\`decoded  =
  \[\]    \`\`i  = 0    \`\`previous_coords  = { \'lat\' :  0 ,  \'lon\'
  :  0 }    \`\`while i \<  len (encoded):        \`\`coords  = dict
  ()        \`\`for coord_name  in ( \'lat\' ,  \'lon\'
  ):            \`\`coord  = 0            \`\`shift  =
  0            \`\`byte  = 0x20            \`\`#### Keep decoding bytes
  until you have this coord.            \`\`while byte \> = 0x20
  :                \`\`byte  = ord (encoded\[i\])  -
  63                \`\`i  + = 1                \`\`coord \| = (byte & 
  0x1f ) \<\< shift                \`\`shift  + = 5            \`\`####
  Get the final value adding the previous offset and            \`\`####
  remember it for the next.            \`\`coords\[coord_name\]  =
  previous_coords\[coord_name\]  + (                \`\`\~(coord \>\>  1
  )                \`\`if coord &  1                \`\`else (coord \>\> 
  1 )            \`\`)        \`\`#### Scale by the precision and chop
  off long coords.        \`\`#### Also flip the positions so its the far
  more standard        \`\`#### (lon, lat) instead of (lat,
  lon).        \`\`decoded.append(\[            \`\`float (f
  \"{coords\[\'lon\'\] \* inv:.6f}\" ),            \`\`float (f
  \"{coords\[\'lat\'\] \* inv:.6f}\"
  ),        \`\`\])        \`\`previous_coords  = coords    \`\`return
  decodedprint decode(sys.argv\[ 1 \])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Maps Mobile SDK

**Maps SDK** позволяет добавить карту в ваше iOS и Android приложение.

Android

Подключение

Для подключения Maps SDK необходимо добавить в главный gradle- файл
проекта ссылку на maven репозиторий.

Пример кода gradle файла с ссылкой на maven репозиторий

  -----------------------------------------------------------------------------------
  allprojects {    \`\`repositories {         \`\`maven {           \`\`url 
  \'https://maven.pkg.github.com/geors/maps-sdk-android\'           \`\`credentials
  {               \`\`username =  \"your personal github
  account\"               \`\`password =  \"yor personal
  token\"           \`\`}        \`\`}    \`\`} }
  -----------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------

Также в gradle- файле модуля, использующего SDK, необходимо прописать
зависимость, как показано в примере.

Пример добавления зависимостей

  -----------------------------------------------------------------------
  implementation(\'ru.rustore.geo:mapkit:x.x.x\')
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где x.x.x --- версия SDK.

Рекомендуется использовать самую свежую версию SDK. Релизные версии SDK
имеют нумерацию 1.0.x. Последнюю версию SDK можно найти по
адресу: https://github.com/geors/maps-sdk-android/packages/1735721

Использование

Необходимо инициализировать глобальные настройки карты до использования
других компонентов SDK. Лучший вариант --- в наследнике
класса Application.

Пример объекта глобальных настроек

  -----------------------------------------------------------------------
  MapViewConfig(    \`\`val apiKey: String, // уникальный ключ для
  предоставления доступа к работе с SDK)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Установить его нужно следующим образом, как показано в примере.

Пример установки

  ---------------------------------------------------------------------------------------------
  MapGlobalConfig.setMapGlobalConfig(            \`\`MapViewConfig(                \`\`apiKey =
  apiKey        \`\`))
  ---------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------

Пример объекта MapStartOptions

  -----------------------------------------------------------------------
  data  class MapStartOptions(    \`\`val center: LatLon,  // точка
  начального расположения карты (учитываются только lat, lon)    \`\`val
  zoomLevel: Float,  // начальное значение уровня масштабирования
  (zoomLevel)    \`\`val style: MapStyle,  // стиль карты, может быть
  выбран из соответствующего enum или использован свой    \`\`val
  compassLocationMode: CompassLocationMode,  // настройка компаса, может
  быть выбран из соответствующего enum    \`\`val logoConfig: LogoConfig 
  // конфигурация логотипа)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Установить стартовые настройки нужно как показано в примере.

Пример установки

  -----------------------------------------------------------------------
  MapGlobalConfig.setMapStartOptions(MapStartOptions(\...))
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример объекта LogoConfig

  -----------------------------------------------------------------------
  data  class LogoConfig(    \`\`val logoAlignment: Alignment,  //
  выравнивание логотипа, может быть выбран из четырех возможных вариантов
  Alignment: BottomRight, BottomLeft, TopRight, TopLeft    \`\`val
  logoAdditionalPaddings: AdditionalPaddings  // дополнительные паддинги,
  с помощью которого можно задать горизонтальные и вертикальные отступы)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для работы с SDK предусмотрен ряд классов, реализующих в той или иной
форме View:

-   MapView --- является основным представлением в SDK, которое
    отображает карту;

-   ZoomView --- используется для отображения контролов + и -, которые
    можно использовать для приближения и отдаления карты;

-   CurrentLocationView --- кнопка для фокусировки карты на текущей
    позиции пользователя и следования за его положением;

-   CompassView --- компонент, отображающий направление физического
    устройства относительно севера.

Для отображения данных элементов управления необходимо разместить их в
xml-файле разметки страницы.

Пример отображения карты

  -----------------------------------------------------------------------
  \< FrameLayout    \`\`android:id =
  \"@+id/mainLayout\"    \`\`android:layout_width =
  \"match_parent\"    \`\`android:layout_height =
  \"match_parent\"    \`\`\...\>    \`\`\<
  ru.mail.maps.sdk.views.MapView        \`\`android:id =
  \"@+id/mapView\"        \`\`android:layout_width =
  \"match_parent\"        \`\`android:layout_height = \"match_parent\"
  /\>\</ FrameLayout \>
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Этого может быть достаточно для работы с картой, если остальные элементы
управления не требуются. В противном случае необходимо разместить другие
элементы управления в том же самом layout, в котором находится карта. В
примере выше это mainLayout. Также необходимо прописать ссылку на карту
для каждого из контролов.

Пример с контролами

  ----------------------------------------------------------------------------
  \< FrameLayout    \`\`xmlns:custom =
  \"http://schemas.android.com/apk/res-auto\"    \`\`android:id =
  \"@+id/mainLayout\"    \`\`android:layout_width =
  \"match_parent\"    \`\`android:layout_height =
  \"match_parent\"    \`\`\...\>    \`\`\<
  ru.mail.maps.sdk.views.MapView        \`\`android:id =
  \"@+id/mapView\"        \`\`android:layout_width =
  \"match_parent\"        \`\`android:layout_height = \"match_parent\"
  /\>    \`\`\< ru.mail.maps.sdk.views.ZoomView        \`\`android:id =
  \"@+id/zoomView\"        \`\`android:layout_width =
  \"wrap_content\"        \`\`android:layout_height =
  \"wrap_content\"        \`\`\...        \`\`custom:mapView =
  \"@+id/mapView\" /\>    \`\`\<
  ru.mail.maps.sdk.views.CompassView        \`\`android:layout_width =
  \"wrap_content\"        \`\`android:layout_height =
  \"wrap_content\"        \`\`\...        \`\`custom:mapView =
  \"@+id/mapView\" /\>    \`\`\<
  ru.mail.maps.sdk.views.CurrentLocationView        \`\`android:layout_width =
  \"wrap_content\"        \`\`android:layout_height =
  \"wrap_content\"        \`\`\...        \`\`custom:mapView =
  \"@+id/mapView\" /\>\</ FrameLayout \>
  ----------------------------------------------------------------------------

  ----------------------------------------------------------------------------

Таким образом все элементы управления будут отображаться поверх карты и
будут иметь привязку к ней. Чтобы напрямую вызывать методы карты,
необходимо получить сущность Map --- вызвать метод getMapAsync у
визуального контрола карты.

Пример прямого вызова метода карты

  -----------------------------------------------------------------------
  mapView = findViewById(R.id.mapView)mapView.getMapAsync { map -\>  //
  тот самый объект Map    \`\`\...}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для корректной работы контролов CurrentLocationView и CompassView
необходимо передать в объект Map реализацию интерфейса LocationSource.

**Пример передачи в объект Map реализации интерфейса LocationSource**

  -----------------------------------------------------------------------
  map.setLocationSource(locationSource)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Методы интерфейса** LocationSource

  -----------------------------------------------------------------------
  fun activate(listener: (mapLocation: MapLocation) -\> Unit)  //
  используется для старта процесса получения gps фиксов от системыfun
  deactivate()  // вызывается при необходимости остановить получение gps
  данных
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

SDK самостоятельно вызывает методы activate и deactivate, когда это
необходимо (согласно внутренней логике). При вызове activate в качестве
параметра передается listener, который необходимо вызывать при получении
каждого нового gps-фикса с аргументом типа MapLocation.

Пример

  -----------------------------------------------------------------------
  data  class MapLocation(    \`\`val latitude: Double? =  null ,  //
  широта \[-90, 90\]    \`\`val longitude: Double? =  null ,  // долгота
  \[-180, 180\]    \`\`val speed: Float? =  null ,  //
  скорость    \`\`val bearing: Float? =  null ,  // направление \[0,
  360\]    \`\`val accuracy: Float? =  null ,  // точность    \`\`val
  altitude: Double? =  null // высота над уровнем моря в метрах)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Каждое из полей класса может быть null, но для корректной работы
необходимо подставлять соответствующие значения, полученные от системы.
Помимо метода setLocationSource у объекта Map есть следующие.

Примеры методов объекта Map

  -----------------------------------------------------------------------
  // Изменить координаты центра карты// За анимацию изменений отвечает
  аргумент animated, за длительность - duration, а за кривую движения
  камеры - cameraCurve.// Указание длительности анимации и кривой
  движения камеры опциональноfun flyTo(mapLocation: MapLocation,
  animated: Boolean, durationMs: Int?, cameraCurve: CameraCurve =
  CameraCurve.Standard())// Увеличить карту, step --- значение шага, на
  который будет увеличена картаfun zoomIn(step: Float = .5f, animated:
  Boolean =  true )// Уменьшить карту, step --- значение шага, на который
  будет уменьшена картаfun zoomOut(step: Float = .5f, animated: Boolean
  =  true )// Выставляет направление карты, bearing лежит в полуинтервале
  \[0, 360)fun setBearing(bearing: Float, animated: Boolean =  true )//
  Выставляет уровень масштаба карты, zoom лежит в полуинтервале (0,
  20\]fun setZoom(zoom: Float, animated: Boolean =  true ) // Добавляет
  маркер на карту, где MarkerEntity --- модель маркера, id --- уникальный
  для каждого маркера идентификатор, coordinates --- координаты точки, к
  которой будет привязан маркер (учитывается только latitude и longitude,
  остальные null) и image --- одно из значений enum MarkerImagefun
  addMarker(marker: MarkerEntity)       // Добавить список маркеров на
  картуfun addMarker(markers: List\<MarkerEntity\>)// Удалить маркер с
  указанным идентификаторомfun removeMarker(id: String)// Удалить все
  маркеры с картыfun removeAllMarkers()// Показать PopUp окно над
  маркером, markerId --- идентификатор маркера, к которому будет
  привязано окно; content --- HTML-строка, текст которой будет отображен
  в окнеfun showPopUp(markerId: String, content: String)       // Скрыть
  PopUp окно для соответствующего идентификатору маркераfun
  hidePopUp(markerId: String)// Добавить метод-callback, который будет
  вызван, когда пользователь сделает клик на один из маркеров id ---
  идентификатор маркера, на который кликнул пользователь, location ---
  координаты, которые соответствуют маркеру (учитывается только latitude
  и longitude, остальные null)fun
  setOnMarkerClickListener(onCLickListener: (id: String, location:
  MapLocation) -\> Unit)// Удалить метод-callback, отвечающий за клик по
  маркеруfun removeMarkerClickListener()// Задать перемещение маркеру с
  соответствующим id в позицию location. animated --- необходима ли
  анимация перемещения маркера duration --- длительность анимации
  перемещенияfun moveMarker(id: String, location: MapLocation, animated:
  Boolean, duration: Double)// Добавить коллбэк, который будет вызываться
  в случае возникновения тех или иных ошибок в сдк. Все ошибки являются
  наследниками класса MapErrorfun addOnErrorListener(onErrorListener:
  (error: MapError) -\> Unit)// Переместить карту, чтобы центр экрана
  совпадал с параметром center (учитывается только latitude и longitude,
  остальные null)fun setCenter(center: MapLocation, animated: Boolean)//
  Изменить стиль карты без необходимости переинициализацииfun
  changeStyle(style: MapStyle)// Разрешить или запретить управление
  картой жестамиfun enableDragPan(enable: Boolean)// Разрешить или
  запретить изменение масштаба карты и вращение пользователемfun
  enableZoomRotate(enable: Boolean)// Установить метод-коллбэк, который
  будет вызван при изменении масштаба картыfun
  setOnZoomChangedListener(listener: (zoom: Double) -\> Unit)// Удалить
  метод-коллбэк, отвечающий за изменение масштаба картыfun
  removeZoomChangedListener()// Установить метод-коллбэк, отвечающий за
  событие клика по картеfun setOnMapClickListener(onClickListener:
  (location: MapLocation, screenLocation: ScreenLocation) -\>
  Unit)         \`\`// Установить метод-коллбэк, отвечающий за событие
  длительного клика по картеfun
  setOnMapLongClickListener(onClickListener: (location: MapLocation,
  screenLocation: ScreenLocation) -\> Unit)        \`\`// Добавить новый
  слой на картуfun addLayer(layer: Layer)// Добавить новый источник
  данных для картыfun addMapDataSource(source: MapDataSource)// Удалить
  источник данных по idfun removeSource(sourceId: String)// Удалить слой
  с карты по idfun removeLayer(layerId: String)// Добавить кластер на
  карту, где в объекте Cluster содержатся: id --- идентификатор кластера,
  markers --- список объектов маркеров, radius --- радиус кластера в
  метрах, textColor --- цвет текста в hex (\"#ff0000\"), backgroundColor
  --- цвет фона в hex (\"#ffffff\")fun addCluster(cluster: Cluster)//
  Удалить кластер по идентификаторуfun removeCluster(id: String)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

С помощью этих методов можно вручную управлять картой, независимо от
предоставленных SDK контролов. Все методы SDK необходимо вызывать в main
потоке.

Коллбеки также возвращаются в main поток.Для использования
метода addMapDataSource необходимо создать объект абстрактного
типа MapDataSource, который может быть одним из трех конкретных
типов: CircleSource, GeojsonSource и PolylineSource.

  -----------------------------------------------------------------------
  class CircleSource(    \`\`val id: String,  // уникальный id источника
  данных    \`\`val center: LatLon,  // центр круга    \`\`val radius:
  Double,  // радиус в метрах    \`\`val steps: Int  // количество ребер
  в интерполяции круга)class GeojsonSource(    \`\`val id: String,  //
  уникальный id источника данных    \`\`val geojsonData: ByteArray  //
  GeoJson строка в виде ByteArray)class PolylineSource(    \`\`val id:
  String,  // уникальный id источника данных    \`\`val polylineData:
  String  // закодированная в строку информация о полилинии)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Ограничения

Минимально поддерживаемая версия Android: 7.0 (min sdk 24)

iOS

Подключение

Для подключения MapsSDK вы можете использовать Swift Package Manager.

Установка с помощью Swift Package Manager

MapsSDK доступен в виде пакета для Swift Package Manager (SPM). SPM ---
это менеджер зависимостей, он интегрирован в систему сборки Swift и
автоматизирует процесс загрузки, компиляции и линковки зависимостей. Для
установки пакета выполните следующие действия:

-   Откройте проект в Xcode.

-   Нажмите File -\> Add Packages.

Также вы можете выбрать файл проекта на панели Project Navigator,
перейти к настройкам проекта, далее выбрать вкладку Package
Dependencies и нажать кнопку Add Package Dependency.

В появившемся окне введите адрес
репозитория: https://github.com/geors/maps-sdk-ios.

Интеграция карт в приложение

Импортируйте MapsSDK в файл, в котором вы будете использовать карту.

  -----------------------------------------------------------------------
  import MapsSDK
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для начала работы с картой необходимо:

-   Создать объект типа MapView.

-   Сконфигурировать карту.

-   Указать делегат карты.

Создание объекта MapView

  -----------------------------------------------------------------------
  let mapView = MapView()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Конфигурация объекта MapView**

Для конфигурации необходимо создать объект типа MapViewConfig,
содержащий следующие сведения:

-   API-ключ для работы с SDK;

-   координаты центра карты;

-   начальный уровень zoom;

-   стиль тайлов.

**Пример настройки и установки конфигурации**

  -----------------------------------------------------------------------
  let mapConfig =  MapViewConfig (    \`\`apiKey :  \"##API_KEY##\"
  ,    \`\`center :  Coordinates ( lng : 33,  lat : 55),    \`\`zoomLevel
  : 11,    \`\`style : . automatic)mapView . setup ( mapConfig )
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Уровень зума (zoomLevel) может иметь значение от 0 (самый отдаленный) до
22 (самый приближенный). Стиль тайлов (style) может принять одно из
следующих значений:

-   .automatic--- автоматический выбор стиля в зависимости
    от isDriveMode и текущей цветовой схемы устройства;

-   .main--- базовый стиль;

-   .light--- светлый стиль;

-   .dark--- темный стиль;

-   .navMain--- базовый стиль для навигации с акцентом на дороги;

-   .navDark--- темный стиль для навигации с акцентом на дороги.

**Указание делегата карты**

Делегат должен реализовывать требования протокола MapViewDelegate. Он
будет использоваться для обработки оповещений от карты о различных
событиях, таких как:

-   карта была загружена;

-   было получено событие, иницированное пользователем (например
    касание);

-   было получено событие, инициированное элементами управления картой и
    т.д.

**Пример интеграции карты в приложение**

  -----------------------------------------------------------------------
  import MapsSDK\...override func viewDidLoad () {    \`\`let mapView = 
  MapView ()        \`\`let mapConfig =  MapViewConfig
  (        \`\`apiKey :  \"##API_KEY##\" ,        \`\`center : 
  Coordinates ( lng : 33,  lat : 55),        \`\`zoomLevel :
  11,        \`\`style : . automatic    \`\`)    \`\`mapView . setup (
  mapConfig )    \`\`mapView . delegate =  self    \`\`view . addSubview
  ( mapView )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Использование и управление картой**

Установка текущих параметров пользователя

Метод setCurrentLocation устанавливает:

-   текущие координаты пользователя;

-   направление, в котором смотрит или движется пользователь (bearing);

-   точность позиции пользователя в метрах (accuracy);

-   уровень зума (zoom). Данный аргумент является опциональным.

**Установка текущей координаты и направления пользователя**

  -----------------------------------------------------------------------
  // без установки зумаmapView . setCurrentLocation ( Coordinates ( lng :
  33,  lat : 55),  bearing : 0,  accuracy : 0)// с установкой зумаmapView
  . setCurrentLocation ( Coordinates ( lng : 33,  lat : 55),  bearing :
  0,  accuracy : 0,  zoom : 10)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Уровень зума (zoom) может изменяться в диапазоне от 0 (самый отдаленный)
до 22 (самый приближенный).

Управление камерой

Для управления камерой используется метод flyTo, а
также setBearing и setZoom.

Метод flyTo

Позволяет изменить координаты центра карты. За анимацию изменений
отвечает аргумент animated, а за длительность ---duration.

  -----------------------------------------------------------------------
  // без указания длительности анимацииmapView . flyTo ( Coordinates (
  lng : 33,  lat : 55),  animated :  true )// с указание длительности
  анимацииmapView . flyTo ( Coordinates ( lng : 33,  lat : 55),  animated
  :  true ,  duration : 2)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Дополнительно вы можете передать аргумент options типа MapCameraOptions,
определяющий:

-   азимут (bearing) --- угол поворота карты;

-   зум (zoom) --- уровень зума карты;

-   отступы (padding) --- отступы с каждой стороны окна для смещения
    центральной точки вьюпорта;

-   кривую движения камеры (curve) --- коэфициент для определения
    траектории движения камеры;

-   флаг сброса режима следования (resetFollowMode) - см. раздел
    «Установка режимов следования».

Каждый из перечисленных параметров является опциональным.

Пример метода flyTo с дополнительными опциями MapCameraOptions

  -----------------------------------------------------------------------
  let options =  MapCameraOptions ( bearing :
  180,                \`\`zoom : 12,                \`\`padding : 
  UIEdgeInsets . init ( top : 20,  left : 20,  bottom : 150,  right :
  20),                \`\`curve :
  1.42,                \`\`resetFollowMode :  false )mapView . flyTo (
  Coordinates ( lng : 33,  lat : 55),  options :  options ,  animated : 
  true )
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Установка направления карты

Метод setBearing устанавливает направление карты и является облегченной
версией метода flyTo.

  -----------------------------------------------------------------------
  mapView.setBearing(90, animated: true)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Фиксация севера карты сверху

Свойство isNorthAlwaysUp запрещает вращать карту любым способом, если
установлено в true. Север будет всегда сверху карты. По умолчанию false.

  -----------------------------------------------------------------------
  mapView.isNorthAlwaysUp = true
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Скрытие маркера текущей локации

Cвойство isCurrentLocationHidden позволяет скрывать маркер текущей
локации, когда она определена. По умолчанию false.

  -----------------------------------------------------------------------
  mapView . isCurrentLocationHidden =  true
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Установка уровня зума

Метод setZoom устанавливает зум карты и является облегченной версией
метода flyTo.

  -----------------------------------------------------------------------
  mapView.setZoom(11, animated: true)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Установка режимов следования
(followLocation, followBearingAndLocation, free)

  -----------------------------------------------------------------------
  mapView.mode = .followLocation
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Вписывание области во вьюпорт

  ---------------------------------------------------------------------------
  mapView.fitBounds(northWest: coords1, southEast: coords2, animated: true)
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

Дополнительные возможности карты

Установка минимального и максимального уровня зума

  -----------------------------------------------------------------------
  mapView.setMinZoom(10, maxZoom: 15)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Включение и выключение элементов управления

  -----------------------------------------------------------------------
  mapView . isZoomButtonsHidden =  truemapView . isCompassHidden = 
  truemapView . isMyLocationButtonHidden =  true
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Включение и выключение жестов

  -----------------------------------------------------------------------
  mapView . isDragPanEnabled =  truemapView . isZoomRotateEnabled =  true
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Выравнивание логотипа

  -----------------------------------------------------------------------
  mapView . logoAlignment = . bottomRightmapView . logoIgnoresSafeArea = 
  falsemapView . logoInsets = . zero
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

По умолчанию логотип отображается в нижнем правом углу карты и
учитывает safeArea.

Маркеры

Для создания маркеров используется структура Marker. В инициализатор
передаются уникальный идентификатор маркера, координату и картинку, а
также, опционально, выравнивание. Для картинки рекомендуется
использовать изображение размером 48х48 пикселей. Можно использовать
набор из предоставляемых картинок или использовать свою собственную.

Добавление отдельных маркеров

  -----------------------------------------------------------------------
  let marker1 =  Marker ( id :  \"marker_id_1\"
  ,                     \`\`coords :  Coordinates ( lng : 33,  lat :
  55),                     \`\`pin : . electricPin
  )                    let marker2 =  Marker ( id :  \"marker_id_2\"
  ,                      \`\`coords :  Coordinates ( lng : 33,  lat :
  55),                     \`\`pin : . electricInfo
  ,                      \`\`alignment : . bottomLeft )
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

В данном случае передаются картинки из предустановленного в SDK набора
изображений. При необходимости вы можете передать собственное
изображение.

  -----------------------------------------------------------------------
  let markerImage =  UIImage (\...)let marker3 =  Marker ( id : 
  \"marker_id_3\" ,                      \`\`coords :  Coordinates ( lng
  : 33,  lat : 55),                     \`\`pin : . custom ( markerImage
  ),                      \`\`alignment : . center )
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

По умолчанию выравнивание маркера имеет значение .center, то есть центр
маркера совмещается с переданными координатами. У вас есть возможность
гибко управлять этим параметром, выбирая одно из множества доступных
значений, или передать произвольное смещение.

  -----------------------------------------------------------------------
  // Выравнивание по центру нижней граниlet marker4 =  Marker ( id : 
  \"marker_id_4\" ,                      \`\`coords :  Coordinates ( lng
  : 33,  lat : 55),                     \`\`pin : . electricPhoto
  ,                      \`\`alignment : . bottom
  )                     // Выравнивание со смещением// Смещение
  высчитывается относительно центра маркераlet marker5 =  Marker ( id : 
  \"marker_id_5\" ,                      \`\`coords :  Coordinates ( lng
  : 33,  lat : 55),                     \`\`pin : . electricStar
  ,                      \`\`alignment : . center ( offsetByX : 10,  byY
  : -10))
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для размещения маркера на карте используется метод addMarker(\_:
Marker).

Добавление маркеров по одному

  -----------------------------------------------------------------------
  mapView.addMarker(marker1)mapView.addMarker(marker2)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Добавление маркеров массивом

  -----------------------------------------------------------------------
  mapView.addMarkers(\[marker1, marker2\])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Удаление отдельного маркера с указанием его идентификатора

  -----------------------------------------------------------------------
  mapView.removeMarker(id: \"marker_id_1\")
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Удаление всех маркеров

  -----------------------------------------------------------------------
  mapView.removeAllMarkers()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Отслеживание события нажатия на маркер

  -----------------------------------------------------------------------
  func MapDelegate :  MapViewDelegate {    \`\`func mapView ( \_ map : 
  MapView ,  didSelectMarkerID markerID :  String ) {        \`\`//
  \...        \`\`// markerID - ID выбранного маркера        \`\`//
  \...    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Дополнительно при нажатии на любой маркер вызывается
метод MapViewDelegate.mapView(\_: MapView, didReceiveEvent:
MapEvent) делегата. В данном случае свойство didReceiveEvent.type имеет
значение .clickOnMarker.

  -----------------------------------------------------------------------
  func MapDelegate :  MapViewDelegate {    \`\`func mapView ( \_ map : 
  MapView ,  didReceiveEvent event :  String ) {        \`\`//
  \...        \`\`// Для события нажатия на маркер        \`\`//
  event.type = .clickOnMarker        \`\`// \...    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Кластеризация

Маркеры можно объединять в кластеры. Кластеризация создает новый
источник данных на карте. Вы можете указать радиус кластеров в метрах,
цвет текста и фона.

  -----------------------------------------------------------------------
  func mapViewDidLoad ( \_ mapView :  MapView ) {    \`\`let markers : \[
  Marker \] = \...    \`\`mapView . addCluster ( markers ,  id : 
  \"clusterId\" ,  radius : 50,  textColor : . white ,  backgroundColor :
  . blue )}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Удаление кластеров происходит с указанием идентификатора кластера.

  -----------------------------------------------------------------------
  mapView.removeCluster(id: \"clusterId\")
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Попапы

Для показа попапа на карте нужно указать идентификатор маркера, для
которого он будет отображен, а также текст внутри попапа.

  -----------------------------------------------------------------------
  mapView.displayPopup(markerId: \"marker_id_1\", content: \"Hello
  world\")
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для скрытия попапа нужно указать идентификатор маркера.

  -----------------------------------------------------------------------
  mapView.hidePopup(markerId: \"marker_id_1\")
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Для показа попапа после выбора маркера на карте необходимо реализовать
метод mapView(\_:, didSelectMarkerID:) делегата MapViewDelegate.

  -----------------------------------------------------------------------
  extension MyController :  MapViewDelegate {    \`\`func mapView ( \_
  mapView :  MapView ,  didSelectMarkerID id :  String )
  {        \`\`mapView . displayPopup ( id :  id ,  content :  \"Hello
  world\" )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Стили

Карта поддерживает смену стилей. Стиль .automatic означает, что карта
будет автоматически менять светлый и темный стили в зависимости от
настройки системной темы интерфейса.

  -----------------------------------------------------------------------
  mapView.changeStyle(.automatic)mapView.changeStyle(.dark)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

GeoJSON

Карта поддерживает отрисовку полигонов и линий из GeoJSON источника.

Добавление источника данных и отрисовка слоёв

  -----------------------------------------------------------------------
  let sourceData =  Data (\...) let source =  MapDataSource ( id : 
  \"sourceID\" ,  type : . geoJSON ( sourceData ))mapView . addSource (
  source )let fillLayer =  MapLayer (    \`\`id :  \"fillLayer\"
  ,    \`\`sourceID :  \"sourceID\" ,    \`\`paint :  FillPaintProperties
  ( fillColor : . iuColor (. green ),  fillOpacity : . value (0.3)))let
  strokeLayer =  MapLayer (    \`\`id :  \"strokeLayer\"
  ,    \`\`sourceID :  \"sourceID\" ,    \`\`paint :  LinePaintProperties
  ())mapView . addLayer ( fillLayer )mapView . addLayer ( strokeLayer )
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Значение цвета и прозрачности можно задать в самом источнике. В таком
случае используйте .source("field"), где field --- имя поля
в properties источника, из которого нужно брать значение. Удалить
источники и слои можно с указанием их идентификаторов.

  -----------------------------------------------------------------------------------------------------
  mapView.removeLayer("fillLayer")mapView.removeLayer("strokeLayer")mapView.removeSource("sourceID"))
  -----------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------

Поддерживается отрисовка маршрутов в формате кодированной строки из
сервиса Построение маршрута.

  -----------------------------------------------------------------------
  let routeSource =  MapDataSource ( id :  \"routeSourceID\" ,  type : .
  encodedString ( encodedRoute ))mapView . addSource ( routeSource )let
  routeLayer =  MapLayer (    \`\`id :  \"routeLineLayer\"
  ,    \`\`sourceID :  \"routeSourceID\" ,    \`\`paint : 
  LinePaintProperties ( lineColor : . iuColor (. red ),  lineWidth :
  2))mapView . addLayer ( routeLayer )
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Поддерживается отрисовка линий с градиентным переходом цветов на ней.
Для этого необходимо включить опцию lineMetrics у MapDataSource, создать
объект LineGradient, указав список offset по длине линии в диапазоне 0.0
... 1.0 и color hex строкой или стандартное имя цвета CSS.

  -----------------------------------------------------------------------
  let encodedRoute :  String = \...let routeSourceID =  \"route\"let
  routeSource =  MapDataSource (    \`\`id :  routeSourceID ,    \`\`type
  : . encodedString ( encodedRoute ),    \`\`lineMetrics :  true)let
  gradient =  LineGradient ( stops : \[    \`\`LineGradientStop ( offset
  : 0,  color :  \"#0000FF\" ),    \`\`LineGradientStop ( offset : 0.1, 
  color :  \"royalblue\" ),    \`\`LineGradientStop ( offset : 0.3, 
  color :  \"cyan\" ),    \`\`LineGradientStop ( offset : 0.5,  color : 
  \"lime\" ),    \`\`LineGradientStop ( offset : 0.7,  color : 
  \"yellow\" ),    \`\`LineGradientStop ( offset : 1,  color : 
  \"#FF0000\" )\])let routeLayer =  MapLayer (    \`\`id : 
  \"routeLineLayer\" ,    \`\`sourceID :  routeSourceID ,    \`\`paint : 
  LinePaintProperties (        \`\`lineColor : . iuColor (. green
  ),        \`\`lineWidth : 6,        \`\`lineGradient : 
  gradient    \`\`))mapView . addSourcesAndLayers (    \`\`sources : \[ 
  routeSource \],    \`\`layers : \[  routeLayer \])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Поддерживается отрисовка кругов. Поскольку GeoJSON не поддерживает
круги, они симулируются полигоном с заданным количеством сторон.

  -------------------------------------------------------------------------------
  mapView.addCircleSource(center: coords, radius: 500, steps: 32, id: sourceID)
  -------------------------------------------------------------------------------

  -------------------------------------------------------------------------------

Если источники(sources) и слои(layers) известны заранее, то вы можете
добавить их единым вызовом.

  -----------------------------------------------------------------------
  mapView . addSourcesAndLayers (    \`\`sources : \[        \`\`source
  ,        \`\`routeSource    \`\`\],    \`\`layers :
  \[        \`\`fillLayer ,        \`\`strokeLayer
  ,        \`\`routeLayer    \`\`\])
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пробки и изолинии

Карта может показывать пробки на дорогах, линии метро и уровни высот
(изолинии). Для включения воспользуйтесь методом setLayoutVisible.

  -----------------------------------------------------------------------
  mapView.setLayoutVisible(true,
  layout:.traffic)mapView.setLayoutVisible(true,
  layout:.isolines)mapView.setLayoutVisible(true,
  layout:.isolinesLabel)mapView.setLayoutVisible(true, layout:.subway)
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Обработка ошибок

Для обработки ошибок используется метод mapView(\_:,
didFailWithError:) делегата MapViewDelegate.

  -----------------------------------------------------------------------
  extension MyController :  MapViewDelegate {    \`\`func mapView ( \_
  mapView :  MapView ,  didFailWithError error :  Error )
  {        \`\`print ( \"Did fail with error:
  \\(error.localizedDescription)\" )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Геокодирование

Geocoder --- компонент MapsSDK для прямого и обратного геокодирования.
Для инициализации необходим API_KEY.

Пример прямого геокодирования

  -----------------------------------------------------------------------
  let geocoder =  Geocoder ( apiKey :  \"your apiKey\" )geocoder .
  geocode (    \`\`query :  \"Ленинградский проспект 39с79\"
  ,    \`\`lang :  \"ru\" ,    \`\`location :  Coordinates ( lng :
  37.537892,  lat : 55.796926)) {  result in    \`\`switch result
  {    \`\`case let . success ( response ):        \`\`print ( response
  )    \`\`case let . failure ( error ):        \`\`print ( error .
  localizedDescription )    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

SwiftUI

Для использования карты в SwiftUI предусмотрен компонент Map.

Пример использования в SwiftUI

  -----------------------------------------------------------------------
  import SwiftUIimport MapsSDKclass StateObject :  ObservableObject
  {    \`\`let mapConfig =  MapViewConfig (        \`\`apiKey :  apiKey
  ,        \`\`center :  Coordinates ( lng : 37.537892,  lat :
  55.796926)        \`\`zoomLevel : 15,        \`\`style : .
  automatic    \`\`)    \`\`let mapView =  MapView ()}extension
  StateObject :  MapViewDelegate {    \`\`// методы делегата}struct
  ContentView :  View {    \`\`@ StateObject private var state = 
  StateObject ()    \`\`var body :  some View {        \`\`Map
  (            \`\`config :  state . mapConfig ,            \`\`view : 
  state . mapView ,            \`\`delegate : 
  state        \`\`)    \`\`}}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Ограничения

MapsSDK может быть интегрирован в приложения с поддержкой iOS 12.4 и
более поздних версий.

Начиная с iPadOS 13 у пользователей появилась возможность использовать
многооконный режим. MapsSDK не был оптимизирован для работы в этом
режиме.

Вы можете с легкостью интегрировать MapsSDK в приложения, основанные на
фреймворках UIKit или SwiftUI.

Дополнительные сервисы

На странице собраны дополнительные сервисы, которые необходимы для
получения дополнительной нестандартной информации.

Сервисы

  -----------------------------------------------------------------------
  Точка вызова                        Описание
  ----------------------------------- -----------------------------------
  /elevation                          Определение высоты в точке или
                                      профиля высот по маршруту

  /ip2geo                             Определение местоположения по
                                      IP-адресу

  /timezone                           Определение часового пояса в любой
                                      точке земли, а также смещения
                                      времени относительно UTC.

  /postcode                           Определение почтового индекса по
                                      адресу и адресов, использующих
                                      индекс. Для России доступен поиск
                                      почтового отделения по индексу
  -----------------------------------------------------------------------

Определение высоты

**/elevation** --- точка вызова сервиса, который предоставляет
возможность получения данных о высоте над уровнем моря. Сервис позволяет
запрашивать высоту для:

-   отдельной точки на карте;

-   набора не связанных между собой точек;

-   маршрута --- последовательности связанных между собой точек (для
    этого используется поле resample_distance в json'е запроса).

Запрос

Запросы к API возможны с помощью HTTP POST.

**Обязательные параметры POST-запроса**

  ---------------------------------------------------------------------------------------
  Имя поля                        Формат            Описание            Пример
  ------------------------------- ----------------- ------------------- -----------------
  \<br\>api_key\<br\>             hex-string        Доступ к сервисам

  ---

  api_key=fa749bace6d8a3b1\....

  json                            string            Тело POST-запроса с
                                                    параметрами,
                                                    необходимыми для
                                                    получения
                                                    интересующих данных
                                                    о высотах.
  ---------------------------------------------------------------------------------------

**JSON запроса**

JSON передается в теле запроса.

**Обязательные поля**

  --------------------------------------------------------------------------
  Поле           Формат         Описание       Пример json'а  Пример ответа
                                               с данным полем сервиса
  -------------- -------------- -------------- -------------- --------------
  locations      В данное поле
                 можно
                 передавать
                 координаты в
                 одном из 3х
                 допустимых
                 форматов:

  --------------------------------------------------------------------------

-   Список координат:

  -----------------------------------------------------------------------
  \[ { \"lat\" :  56.1 ,  \"lon\" :  43.2 }, { \"lat\" :  56.2 ,  \"lon\"
  :  43.3 }\]
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   Закодированная строка: точки маршрута, специальным образом
    закодированные в строку (см. также: Декодирование ломаной
    маршрута). Например, полилинию в таком формате возвращает сервис
    построения маршрутов (поле ответа «shape»).

  -----------------------------------------------------------------------
  \"s{cplAfiz{pCa\]xBxBx\`AhC\|gApBrz@{\[h\...\"
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

-   Строка: одна и более координат, разделенных символом
    \|. Используются координаты в формате lat,lon, где:

    -   **lat** --- широта (используется до 6 знаков после запятой);

    -   **lon** \*\* ---\*\* долгота (используется до 6 знаков после
        запятой).

  -----------------------------------------------------------------------
  152.2 ,  34.8 \| 158.8 ,  23.0 \| 120.0 ,  10.0
  -----------------------------------------------------------------------
  ---

  {   \`\`\"locations\" :\[      \`\`{         \`\`\"lat\" : 55.601897
  ,         \`\`\"lon\" :
  37.581305      \`\`},      \`\`{         \`\`\"lat\" : 55.885040
  ,         \`\`\"lon\" : 37.680869      \`\`}   \`\`\]}

  ---

  {   \`\`\"locations\" :\[      \`\`{         \`\`\"lat\" : 55.601897
  ,         \`\`\"lon\" :
  37.581305      \`\`},      \`\`{         \`\`\"lat\" : 55.885040
  ,         \`\`\"lon\" : 37.680869      \`\`}   \`\`\],   \`\`\"height\"
  :\[      \`\`201 ,      \`\`139   \`\`\]}
  -----------------------------------------------------------------------

**Необязательные поля**

  ---------------------------------------------------------------------------------------------------------------------------------------
  Поле                                                           Формат         Описание                    Пример json'а  Пример ответа
                                                                                                            с данным полем сервиса
  -------------------------------------------------------------- -------------- --------------------------- -------------- --------------
  range                                                          Boolean        Флаг, при установке
                                                                                которого в true вместо
                                                                                одномерного
                                                                                массива "height" сервис
                                                                                возвращает двумерный
                                                                                массив "range_height", в
                                                                                котором содержатся пары
                                                                                значений. Первое ---
                                                                                расстояние в метрах от
                                                                                предыдущей точки locations,
                                                                                второе --- высота.Флаг
                                                                                удобен для построения
                                                                                профиля высот, а также для
                                                                                расчета уклона для подъемов
                                                                                и спусков.Значение по
                                                                                умолчанию: false.

  ---

  {   \`\`\"range\" : true ,   \`\`\"locations\"
  :\[      \`\`{         \`\`\"lat\" : 55.601897
  ,         \`\`\"lon\" :
  37.581305      \`\`},      \`\`{         \`\`\"lat\" :
  55.885040 ,         \`\`\"lon\" :
  37.680869      \`\`}   \`\`\]}

  ---

  {   \`\`\"locations\" :\[      \`\`{         \`\`\"lat\" :
  55.601897 ,         \`\`\"lon\" :
  37.581305      \`\`},      \`\`{         \`\`\"lat\" :
  55.885040 ,         \`\`\"lon\" :
  37.680869      \`\`}   \`\`\],   \`\`\"range_height\"
  :\[      \`\`\[         \`\`0
  ,         \`\`201      \`\`\],      \`\`\[         \`\`32131
  ,         \`\`139      \`\`\]   \`\`\]}

  resample_distance                                              Integer        Значение в метрах для
                                                                                указания расстояния между
                                                                                точками, для которых
                                                                                необходимо получить
                                                                                высоты.Исходный маршрут из
                                                                                последовательных точек
                                                                                разбивается на отрезки
                                                                                длиной resample_distance.
                                                                                Сервис возвращает
                                                                                сформированные таким
                                                                                образом точки и значения
                                                                                высот для этих точек.Пример
                                                                                использования: есть маршрут
                                                                                пользователя, необходимо
                                                                                построить для него профиль
                                                                                высот с высотами на
                                                                                расстоянии 50 метров друг
                                                                                от друга.Значение по
                                                                                умолчанию: поле
                                                                                отсутствует, сервис
                                                                                возвращает по одному
                                                                                значению высоты на одну
                                                                                указанную координату.

  ---

  {   \`\`\"resample_distance\" : 10000 ,   \`\`\"locations\"
  :\[      \`\`{         \`\`\"lat\" : 55.601897
  ,         \`\`\"lon\" :
  37.581305      \`\`},      \`\`{         \`\`\"lat\" :
  55.885040 ,         \`\`\"lon\" :
  37.680869      \`\`}   \`\`\]}

  ---

  {   \`\`\"locations\" :\[      \`\`{         \`\`\"lat\" :
  55.601897 ,         \`\`\"lon\" :
  37.581305      \`\`},      \`\`{         \`\`\"lat\" :
  55.690027 ,         \`\`\"lon\" :
  37.612137      \`\`},      \`\`{         \`\`\"lat\" :
  55.778150 ,         \`\`\"lon\" :
  37.643109      \`\`},      \`\`{         \`\`\"lat\" :
  55.866264 ,         \`\`\"lon\" :
  37.674221      \`\`},      \`\`{         \`\`\"lat\" :
  55.885040 ,         \`\`\"lon\" :
  37.680869      \`\`}   \`\`\],   \`\`\"range_height\"
  :\[      \`\`\[         \`\`0
  ,         \`\`201      \`\`\],      \`\`\[         \`\`10000
  ,         \`\`143      \`\`\],      \`\`\[         \`\`20000
  ,         \`\`161      \`\`\],      \`\`\[         \`\`30000
  ,         \`\`151      \`\`\],      \`\`\[         \`\`32131
  ,         \`\`139      \`\`\]   \`\`\]}

  height_precision                                               Integer        Количество знаков после
                                                                                запятой в значении
                                                                                высоты.Дробные значения для
                                                                                высоты нужны, например, для
                                                                                большей точности и
                                                                                плавности в профиле
                                                                                высот.Возможные
                                                                                значения: 0-2.Значение по
                                                                                умолчанию: 0 (высота -
                                                                                целое число).

  ---

  {   \`\`\"height_precision\" : 2 ,   \`\`\"locations\"
  :\[      \`\`{         \`\`\"lat\" : 55.601897
  ,         \`\`\"lon\" :
  37.581305      \`\`},      \`\`{         \`\`\"lat\" :
  55.885040 ,         \`\`\"lon\" :
  37.680869      \`\`}   \`\`\]}

  ---

  {   \`\`\"locations\" :\[      \`\`{         \`\`\"lat\" :
  55.601897 ,         \`\`\"lon\" :
  37.581305      \`\`},      \`\`{         \`\`\"lat\" :
  55.885040 ,         \`\`\"lon\" :
  37.680869      \`\`}   \`\`\],   \`\`\"height\"
  :\[      \`\`200.94 ,      \`\`138.84   \`\`\]}
  ---------------------------------------------------------------------------------------------------------------------------------------

Ответ

Если для какой-то точки не удается определить высоту, вместо значения в
метрах возвращается null.

  ------------------------------------------------------------------------
  Имя поля           Формат            Описание          Пример
  ------------------ ----------------- ----------------- -----------------
  locations          Формат поля       В данном поле     Формат "список
                     ответа совпадает  возвращаются      координат":
                     с форматом,       координаты, для
                     выбранным для     которых была
                     запроса           запрошена высота.

  ------------------------------------------------------------------------

  -----------------------------------------------------------------------
  \"locations\" :\[      \`\`{         \`\`\"lat\" : 55.601897
  ,         \`\`\"lon\" :
  37.581305      \`\`},      \`\`{         \`\`\"lat\" : 55.885040
  ,         \`\`\"lon\" : 37.680869      \`\`}   \`\`\]
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Формат "закодированная строка":

  -----------------------------------------------------------------------
  \"s{cplAfiz{pCa\]xBxBx\`AhC\|gApBrz@{\[h\...\"
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Формат "строка":

  -----------------------------------------------------------------------
  152.2 ,  34.8 \| 158.8 ,  23.0 \| 120.0 ,  10.0
  -----------------------------------------------------------------------
  height

  ---

  \"height\" :\[ 221 , 172 , 206 , 188 , 153 \]

  range_height

  ---

  \"range_height\" :\[\[ 0 , 221 \],\[ 248 , 172 \],\[ 902 , 206 \],\[
  11308 , 188 \],\[ 1601 , 153 \]\]
  -----------------------------------------------------------------------

Примеры

**Запрос с единственной координатой**

  ---------------------------------------------------------------------------
  curl -X POST \\  \`\`-H \"Content-type: application/json\" \\  \`\`-H
  \"Accept: application/json\" \\  \`\`-d \'{\"locations\":\"55.601897,
  37.581305\"}\'
  \\  \`\`\"https://geo.rustore.ru/api/elevation?api_key=\<YOUR_API_KEY\>\"
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------
  {\"locations\":\"55.601897, 37.581305\",\"height\":\[201\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Запрос с координатами, для которых нет данных о высотах**

  ---------------------------------------------------------------------------
  curl -X POST \\  \`\`-H  \"Content-type: application/json\" \\  \`\`-H 
  \"Accept: application/json\" \\  \`\`-d 
  \'{\"locations\":\[{\"lat\":0.0,\"lon\":0.0},
  {\"lat\":0.1,\"lon\":0.1}\]}\'
  \\  \`\`\"https://geo.rustore.ru/api/elevation?api_key=\<YOUR_API_KEY\>\"
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------
  { \"locations\" :\[{ \"lat\" : 0.000000 , \"lon\" : 0.000000 },{
  \"lat\" : 0.100000 , \"lon\" : 0.100000 }\], \"height\" :\[ null , null
  \]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Определение местоположения по IP

**/ip2geo** --- точка вызова сервиса определения местоположения по
IP-адресу.

Запрос

**Обязательные параметры запроса**

  -----------------------------------------------------------------------------
  Имя поля                Формат            Описание          Пример
  ----------------------- ----------------- ----------------- -----------------
  api_key                 hex-string        Доступ к сервисам

  ---

  fa749bace6d8a3b1\....
  -----------------------------------------------------------------------------

**Дополнительные параметры запроса**

  -------------------------------------------------------------------------
  Имя поля           Формат            Описание           Пример
  ------------------ ----------------- ------------------ -----------------
  q                  string            Тело поискового
                                       запроса,
                                       содержащее
                                       IP-адрес протокола
                                       IPv4 в десятичном
                                       представлении.По
                                       умолчанию, если в
                                       запросе не указан
                                       искомый IP-адрес,
                                       будет
                                       автоматически
                                       определён и
                                       использован
                                       IP-адрес клиента с
                                       которого
                                       осуществляется
                                       запрос.

  ---

  192.168.1.1

  lang               2-х символьный    Язык ответа на
                     код языка         одном из доступных
                                       языков. По
                                       умолчанию на языке
                                       региона, в котором
                                       найден объект.

  ---

  lang=en
  -------------------------------------------------------------------------

Ответ

  ------------------------------------------------------------------------
  Имя поля           Формат            Описание          Пример
  ------------------ ----------------- ----------------- -----------------
  geoid              object            Внутренний гео ID \`\`\`

  ------------------------------------------------------------------------

\| \|\| \-\-- \|\| \`\"geo_id\": \"546\"\` \| \|\| address \| string
\| Найденный адрес объекта \| \| \|\| \-\-- \|\| \`\"address\":
\"Россия, Москва\"\` \| \|\| bbox \| list \| Границы местонахождения
найденного объекта для позиционирования на карте \| \| \|\| \-\-- \|\|
\`\"bbox\":
\[\`\<br\>\`  \`\`37.326228,\`\<br\>\`  \`\`55.491308,\`\<br\>\`  \`\`37.967428,\`\<br\>\`  \`\`55.957772\`\<br\>\`\]\`
\| \|\| isocode \| 2char \| Двухбуквенный код страны согласно ISO
3166-1 alpha-2 \| \| \|\| \-\-- \|\| \`\"isocode\": \"RU\"\` \| \|\|
type \| string \| Тип объекта \| \`\`\`

  -----------------------------------------------------------------------
  \"type\": \"locality\"
  -----------------------------------------------------------------------
  ref

  -----------------------------------------------------------------------

\| \|\| \-\-- \|\| \`\"ref\": \"1000000C4D63818\"\` \| \|\| pin \|
list \| Координаты найденного объекта (долгота и широта) \| \`\`\`

  -----------------------------------------------------------------------
  \"pin\": \[        \`\`37.538851,        \`\`55.796731\]
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Пример

**Запрос**

  -----------------------------------------------------------------------------
  https://geo.rustore.ru/api/ip2geo?api_key=\<YOUR_API_KEY\>&q=46.138.195.192
  -----------------------------------------------------------------------------

  -----------------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------------------------------------------------------------
  {  \`\`\"request\": \"/ip2geo?q=46.138.195.192&api_key\",    \`\`\"results\": \[    \`\`{      \`\`\"address\": \"Россия,
  Москва\",      \`\`\"bbox\":
  \[        \`\`37.326228,        \`\`55.491308,        \`\`37.967428,        \`\`55.957772      \`\`\],      \`\`\"geo_id\":
  5506,      \`\`\"isocode\": \"RU\",      \`\`\"pin\":
  \[        \`\`37.617494,        \`\`55.750446      \`\`\],      \`\`\"ref\": \"030000000026FCFD\",      \`\`\"type\":
  \"city\"    \`\`}  \`\`\]}
  -----------------------------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------------------------

Определение часового пояса

**/timezone** --- точка вызова сервиса для определения часового пояса в
любой точке земли, а также смещения времени относительно UTC.

Запрос

**Обязательные параметры запроса**

  ------------------------------------------------------------------------------------
  Имя поля                Формат            Описание                 Пример
  ----------------------- ----------------- ------------------------ -----------------
  \<br\>api_key\<br\>     hex-string        Доступ к сервисам

  ---

  fa749bace6d8a3b1\....

  q                       string            Тело поискового
                                            запроса.Для обратного
                                            геокодирования ---
                                            координаты в
                                            формате lat, lon, где:-
                                            **lat** --- широта
                                            искомой точки в
                                            градусах (используется 6
                                            знаков после запятой);-
                                            **lon** ---
                                            долгота искомой точки в
                                            градусах (используется 6
                                            знаков после запятой).

  ---

  q=55.479205,37.32733
  ------------------------------------------------------------------------------------

**Дополнительные параметры запроса**

  -----------------------------------------------------------------------------
  Имя поля                Формат            Описание          Пример
  ----------------------- ----------------- ----------------- -----------------
  \<br\>timestamp\<br\>   unix timestamp    Временная метка в
                                            зоне UTC для
                                            которой будет
                                            вычислены
                                            параметры
                                            таймзоны.Если не
                                            указана --- будет
                                            использовано
                                            текущее время

  ---

  timestamp=1264753640
  -----------------------------------------------------------------------------

**Ответ**

  -------------------------------------------------------------------------
  Имя поля            Формат            Описание          Пример
  ------------------- ----------------- ----------------- -----------------
  tzid                string            Идентификатор
                                        часового пояса,
                                        определённый
                                        проектом CLDR

  ---

  \"tzid\":
  \"Europe/Moscow\"

  tzname_short        string            Короткое название
                                        часового пояса

  ---

  \"tzname_short\":
  \"MSK\"

  utc_delta           int               Смещение часового
                                        пояса
                                        запрошенного
                                        местоположения от
                                        UTC (в секундах)

  ---

  \"utc_delta\":
  10800
  -------------------------------------------------------------------------

Пример

**Запрос**

  -----------------------------------------------------------------------------------
  https://geo.rustore.ru/api/timezone?api_key=\<YOUR_API_KEY\>&q=55.479205,37.32733
  -----------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------

**Ответ**

  -----------------------------------------------------------------------
  {    \`\`\"request\":
  \"/v1/timezone?api_key&q=55.479205,37.32733\",    \`\`\"results\":
  \[{        \`\`\"tzid\": \"Europe/Moscow\",        \`\`\"utc_delta\":
  10800    \`\`}\]}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Поиск почтового индекса

**/postcode** --- сервис позволяет находить:

-   адреса, использующие запрошенный почтовый индекс;

-   почтовый индекс по адресу;

-   для России дополнительно можно запросить информацию об отделении
    Почты России, обслуживающем почтовый индекс.

Запрос

**Обязательные параметры запроса**

  -------------------------------------------------------------------------------------
  Имя поля                        Формат            Описание          Пример
  ------------------------------- ----------------- ----------------- -----------------
  api_key                         hex-string        Доступ к сервисам

  ---

  api_key=fa749bace6d8a3b1\....

  q                               string            Тело поискового
                                                    запроса,
                                                    содержащее
                                                    почтовый индекс,
                                                    ref адреса или
                                                    адрес, для
                                                    которого
                                                    необходимо найти
                                                    почтовый индекс

  ---

  q= 125167
  -------------------------------------------------------------------------------------

  -----------------------------------------------------------------------
  q=020000003792BE0E
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

  -----------------------------------------------------------------------
  q=Москва, Нарышкина,  5 с 1
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

**Дополнительные параметры запроса**

Имя поля \| Формат \| Описание \| Пример \|fields \|
fieldname1,fieldname2,....fieldnameN \| Выбор полей, отображаемых в
ответе. Возможные значения:- **postoffice** --- детальная информация об
отделении Почты России, обслуживающем найденный почтовый индекс;-
**postcode** (по умолчанию) --- найденный/искомый почтовый индекс;-
**addresses** (по умолчанию) --- адреса, использующие найденный почтовый
индекс. \| \| \|--- \|\<br\>fields=postoffice,postcode,addresses\<br\>
\| \|addresses \| string \| Формат ответа для поля addresses:-
**short** (по умолчанию) --- краткое иерархичное представление адресов,
использующих найденный почтовый индекс. \| \| \|---
\|\<br\>addresses=full\<br\> \| \|isocode \| char2 \| Двухбуквенный
код страны согласно ISO 3166-1 alpha-2На текущий момент поддерживается
только RU \| \| \|--- \|\<br\>isocode=ru\<br\> \| \|

Ответ

  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Имя поля                                                                                                                           Формат            Описание          Пример
  ---------------------------------------------------------------------------------------------------------------------------------- ----------------- ----------------- ------------------
  request                                                                                                                            string            Запрос

  ---

  \"request\" :  \"125167\"

  results                                                                                                                            list              Найденные
                                                                                                                                                       результаты

  ---

  \"results\" : \[    \`\`{        \`\`\"addresses\" : {            \`\`\"country\" :  \"Россия\" ,            \`\`\"localities\" :
  \[                \`\`{                    \`\`\"name\" :  \"Москва\" ,                    \`\`\"streets\" :
  \[                        \`\`{                            \`\`\"buildings\" : \[                                \`\`\"22
  с1\"                            \`\`\],                            \`\`\"name\" :  \"Старокачаловская
  улица\"                        \`\`}                    \`\`\]                \`\`}            \`\`\],            \`\`\"region\"
  :  \"Москва\" ,            \`\`\"subregion\" :  \"Юго-Западный административный округ\"        \`\`},        \`\`\"postcode\" : 
  \"117216\"    \`\`}\]

  postcode                                                                                                                           string            Найденный
                                                                                                                                                       почтовый индекс

  ---

  \"postcode\" :  125167

  addresses                                                                                                                          dict              Адреса,           addresses=short:
                                                                                                                                                       использующие
                                                                                                                                                       найденный
                                                                                                                                                       почтовый индекс
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------
  \"addresses\" : {    \`\`\"country\" :  \"Россия\" ,    \`\`\"localities\" :
  \[        \`\`{            \`\`\"name\" :  \"Москва\" ,            \`\`\"streets\" :
  \[                \`\`{                    \`\`\"buildings\" : \[\"8 К1\", \"1Д\", \"1Б\",
  \"1А\", \"1 к1\"\] ,                    \`\`\"name\" :  \"Старокачаловская
  улица\"                \`\`},                \`\`{                    \`\`\"buildings\" :
  \[ \"4Г\" ,  \"6\" ,  \"6 с2\" ,  \"2 с1\" ,  \"2А\" \],                    \`\`\"name\"
  :  \"Коктебельская
  улица\"                \`\`},                \`\`{                    \`\`\"buildings\" :
  \[ \"16\" ,  \"18\" ,  \"20 с1\" ,  \"10 с1\" ,  \"1Г\" ,  \"9 к2\"
  \],                    \`\`\"name\" :  \"Куликовская
  улица\"                \`\`}            \`\`\]        \`\`}    \`\`\],    \`\`\"region\"
  :  \"Москва\" ,    \`\`\"subregion\" :  \"Юго-Западный административный округ\"}
  ------------------------------------------------------------------------------------------
  postoffice

  ---

  \"postoffice\" : {    \`\`\"address\" :  \"Россия, Москва, Юго-Западный административный
  округ, Москва, район Северное Бутово, мкрн 3, улица Грина, 5Б\"
  ,    \`\`\"address_details\" : {        \`\`\"building\" :  \"5Б\"
  ,        \`\`\"country\" :  \"Россия\" ,        \`\`\"isocode\" :  \"RU\"
  ,        \`\`\"locality\" :  \"Москва\" ,        \`\`\"postal_code\" :  \"117216\"
  ,        \`\`\"region\" :  \"Москва\" ,        \`\`\"street\" :  \"улица Грина\"
  ,        \`\`\"sublocality\" :  \"мкрн 3\" ,        \`\`\"subregion\" :  \"Юго-Западный
  административный округ\" ,        \`\`\"suburb\" :  \"район Северное
  Бутово\"    \`\`},    \`\`\"pin\" : \[        \`\`37.570932
  ,        \`\`55.566898    \`\`\],    \`\`\"ref\" :  \"22000000023FE098\"}
  ------------------------------------------------------------------------------------------

Описание полей postoffice

  ------------------------------------------------------------------------------------
  Имя поля                       Формат            Описание          Пример
  ------------------------------ ----------------- ----------------- -----------------
  address                        string            Полный найденный
                                                   адрес

  ---

  \"address\" :  \"Россия,
  Москва, Северный
  административный округ,
  Москва, Хорошёвский,
  Ленинградский проспект, 56\"

  address_details                list              Детальная
                                                   информация о
                                                   найденном адресе

  ---

  \"address_details\" :
  {        \`\`\"building\" : 
  \"56\"
  ,        \`\`\"country\" : 
  \"Россия\"
  ,        \`\`\"isocode\" : 
  \"RU\"
  ,        \`\`\"locality\" : 
  \"Москва\"
  ,        \`\`\"postal_code\"
  :  \"125167\"
  ,        \`\`\"region\" : 
  \"Москва\"
  ,        \`\`\"street\" : 
  \"Ленинградский проспект\"
  ,        \`\`\"subregion\" : 
  \"Северный административный
  округ\"
  ,        \`\`\"suburb\" : 
  \"Хорошёвский\"}

  opening_hours                  list              Время работы
                                                   почтового
                                                   отделения

  ---

  \"opening_hours\" :
  {    \`\`\"Mo\" : \[ 09 : 00 -
  13 : 00 , 14 : 00 - 21 : 00
  \],    \`\`\"Tu\" : \[ 09 :
  00 - 13 : 00 , 14 : 00 - 21 :
  00 \],    \`\`\"We\" : \[ 09 :
  00 - 13 : 00 , 14 : 00 - 21 :
  00 \],    \`\`\"Th\" : \[ 09 :
  00 - 13 : 00 , 14 : 00 - 21 :
  00 \],    \`\`\"Fr\" : \[ 09 :
  00 - 13 : 00 , 14 : 00 - 21 :
  00 \],    \`\`\"Sa\" : \[ 10 :
  00 - 18 : 00 \],    \`\`\"Su\"
  : \[\]}

  ref                            hex               ID почтового      \`\`\`
                                                   отделенияID
                                                   объекта не
                                                   является
                                                   стабильным и
                                                   может изменяться
  ------------------------------------------------------------------------------------

\| \|\| \-\-- \|\| \`\"ref\"\` \`: \` \`\"1000000C4D63818\"\` \|
\|\| pin \| list \| Координаты почтового отделения (долгота и широта)
\| \`\`\`

  -----------------------------------------------------------------------
  \"pin\" : \[        \`\`37.538851 ,        \`\`55.796731\]
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Примеры

**Запрос**

  ---------------------------------------------------------------------------
  https:
  //geo.rustore.ru/api/postcode?api_key=\<YOUR_API_KEY\>&q=125167&fields=\*
  ---------------------------------------------------------------------------

  ---------------------------------------------------------------------------

**Ответ**

  ------------------------------------------------------------------------------------------------------
  {  \`\`\"request\" :  \"/postcode?q=125167&fields=\*\" ,  \`\`\"results\" :
  \[    \`\`{      \`\`\"addresses\" : {        \`\`\"country\" :  \"Россия\"
  ,        \`\`\"localities\" : \[          \`\`{            \`\`\"name\" :  \"Москва\"
  ,            \`\`\"streets\" : \[              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"56/2\" ,                  \`\`\"37Б\" ,                  \`\`\"39 с3\"
  ,                  \`\`\"39 с9\" ,                  \`\`\"39\" ,                  \`\`\"39\"
  ,                  \`\`\"37\" ,                  \`\`\"37 к8\" ,                  \`\`\"39\"
  ,                  \`\`\"37 к12\" ,                  \`\`\"39 с17\" ,                  \`\`\"36 с37\"
  ,                  \`\`\"36 с30\" ,                  \`\`\"36
  с38\"                \`\`\],                \`\`\"name\" :  \"Ленинградский
  проспект\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"7А\" ,                  \`\`\"5\" ,                  \`\`\"3\"
  ,                  \`\`\"4 с4\" ,                  \`\`\"4А\" ,                  \`\`\"4\"
  ,                  \`\`\"4\" ,                  \`\`\"4 с12\" ,                  \`\`\"4 с11\"
  ,                  \`\`\"4 с7\" ,                  \`\`\"2 с1\" ,                  \`\`\"4 с6\"
  ,                  \`\`\"4 с8\"                \`\`\],                \`\`\"name\" :  \"Новый
  Зыковский проезд\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"1\" ,                  \`\`\"5 кД\" ,                  \`\`\"5 к1\"
  ,                  \`\`\"10\" ,                  \`\`\"3\" ,                  \`\`\"5
  к3\"                \`\`\],                \`\`\"name\" :  \"улица
  Серёгина\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"39 с12\"                \`\`\],                \`\`\"name\" :  \"Ходынский
  бульвар\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"11\" ,                  \`\`\"11А\" ,                  \`\`\"11Б\"
  ,                  \`\`\"3\" ,                  \`\`\"10\" ,                  \`\`\"11А с1\"
  ,                  \`\`\"6\" ,                  \`\`\"8 с3\" ,                  \`\`\"8\"
  ,                  \`\`\"8 с14\" ,                  \`\`\"8 с11\"
  ,                  \`\`\"1А\"                \`\`\],                \`\`\"name\" :  \"проезд
  Аэропорта\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"5 с2\" ,                  \`\`\"5
  с1\"                \`\`\],                \`\`\"name\" :  \"Нарышкинская
  аллея\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"4\" ,                  \`\`\"5 к3\" ,                  \`\`\"5 к2\"
  ,                  \`\`\"5 к1\" ,                  \`\`\"8 к2\" ,                  \`\`\"8 к1\"
  ,                  \`\`\"7\" ,                  \`\`\"6\" ,                  \`\`\"3\"
  ,                  \`\`\"3Б\"                \`\`\],                \`\`\"name\" :  \"улица
  Константина Симонова\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"4\" ,                  \`\`\"6\" ,                  \`\`\"4А\"
  ,                  \`\`\"8\" ,                  \`\`\"5 с25\" ,                  \`\`\"5 к22\"
  ,                  \`\`\"5 к8\" ,                  \`\`\"5 к7\" ,                  \`\`\"5 к2\"
  ,                  \`\`\"5 с9\" ,                  \`\`\"5 к11\" ,                  \`\`\"5 к25\"
  ,                  \`\`\"5 к26\" ,                  \`\`\"5 с35\" ,                  \`\`\"5 к27А\"
  ,                  \`\`\"5 с19\" ,                  \`\`\"5
  с20\"                \`\`\],                \`\`\"name\" :  \"Авиационный
  переулок\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"4\" ,                  \`\`\"5\"
  ,                  \`\`\"3\"                \`\`\],                \`\`\"name\" :  \"Эльдорадовский
  переулок\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"2А\" ,                  \`\`\"2А с2\" ,                  \`\`\"3/5\"
  ,                  \`\`\"1А\" ,                  \`\`\"2 к1\" ,                  \`\`\"2 к2\"
  ,                  \`\`\"2 к3\" ,                  \`\`\"2
  с5\"                \`\`\],                \`\`\"name\" :  \"Красноармейская
  улица\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"3\"                \`\`\],                \`\`\"name\" :  \"улица Степана
  Супруна\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"3\" ,                  \`\`\"4\" ,                  \`\`\"6 к2\"
  ,                  \`\`\"6 к1\"
  ,                  \`\`\"5\"                \`\`\],                \`\`\"name\" :  \"Старый Зыковский
  проезд\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"3\" ,                  \`\`\"3
  с2\"                \`\`\],                \`\`\"name\" :  \"1-я улица 8
  Марта\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"3\"                \`\`\],                \`\`\"name\" :  \"Трудовая
  аллея\"              \`\`},              \`\`{                \`\`\"buildings\" :
  \[                  \`\`\"7\" ,                  \`\`\"5\" ,                  \`\`\"9\"
  ,                  \`\`\"9А\"
  ,                  \`\`\"11\"                \`\`\],                \`\`\"name\" :  \"улица Пилота
  Нестерова\"              \`\`}            \`\`\]          \`\`}        \`\`\],        \`\`\"region\"
  :  \"Москва\" ,        \`\`\"subregion\" :  \"Северный административный
  округ\"      \`\`},      \`\`\"postcode\" :  \"125167\" ,      \`\`\"postoffice\" :
  {        \`\`\"address\" :  \"Россия, Москва, Северный административный округ, Москва, район Аэропорт,
  Ленинградский проспект, 56\" ,        \`\`\"address_details\" : {          \`\`\"building\" :  \"56\"
  ,          \`\`\"country\" :  \"Россия\" ,          \`\`\"isocode\" :  \"RU\"
  ,          \`\`\"locality\" :  \"Москва\" ,          \`\`\"region\" :  \"Москва\"
  ,          \`\`\"street\" :  \"Ленинградский проспект\" ,          \`\`\"subregion\" :  \"Северный
  административный округ\" ,          \`\`\"suburb\" :  \"район
  Аэропорт\"        \`\`},        \`\`\"pin\" : \[          \`\`37.537903
  ,          \`\`55.798518        \`\`\],        \`\`\"ref\" : 
  \"2100000045438C4B\"      \`\`}    \`\`}  \`\`\]}
  ------------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------------------

RuStore Deeplinks

Вы можете открыть некоторые экраны приложения RuStore из вашего
приложения, используя deeplinks.

К примеру, вы можете открыть экран со всеми подписками пользователя,
используя следующий код:

  -----------------------------------------------------------------------
  try {    \`\`startActivity(Intent(Intent.ACTION_VIEW, Uri.parse(
  \"rustore://profile/subscriptions\" )))}  catch (ex:
  ActivityNotFoundException) {    \`\`// Handle error when RuStore is not
  installed}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

где «rustore://profile/subscriptions»--- это RuStore deeplink. Вы можете
заменить его на любой из перечисленных ниже deeplink, чтобы открыть
необходимый экран приложения RuStore.

Поддерживаемые браузеры

  -----------------------------------------------------------------------
  **Браузер**                         **Поддержка RuStore Deeplinks**
  ----------------------------------- -----------------------------------
  Google Chrome                       Есть

  Яндекс Браузер                      Есть

  Mozilla Firefox                     Нет

  Opera                               Нет

  Mi Browser                          Нет

  Samsung Internet                    Нет
  -----------------------------------------------------------------------

Список deeplinks

  -------------------------------------------------------------------------------------
  \### Функция                        **Deeplinks**
  ----------------------------------- -------------------------------------------------
  Экран приложения                    \-
                                      rustore://apps.rustore.ru/app/{packageName} ---
                                      откроется RuStore;-
                                      https://apps.rustore.ru/app/{packageName} ---
                                      откроется RuStore, если приложение RuStore
                                      установлено на устройстве пользователя, иначе
                                      откроется web-страница приложения в витрине;-
                                      market://details?id={packageName} --- предложит
                                      открыть RuStore или другие магазины
                                      приложений.где {packageName} --- имя пакета
                                      приложения.

  Экран подписок                      \- rustore://profile/subscriptions

  Экран аккаунта/обновлений           \- rustore://apps.rustore.ru/updates

  Экран авторизации                   \- rustore://auth
  -------------------------------------------------------------------------------------

Task API

Task --- это асинхронная задача, возвращающая ошибку или значение в
соответствующих callback (onFailure, onSuccess).

В качестве примера реализации используется метод SDK оплаты
getProducts().

Обработка результата выполнения Task

Методы, выполняемые асинхронно, возвращают Task. К примеру,
RuStoreBillingClient.getProducts() возвращает Task. Это означает, что
Task вернет ProductsResponse, если выполнение метода было успешно:

  -----------------------------------------------------------------------
  val task: Task\<ProductsResponse\> =
  RuStoreBillingClient.products.getProducts()
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Чтобы получить результат успешного выполнения метода,
добавьте callback OnSuccessListener к Task:

  -----------------------------------------------------------------------
  val task: Task\<ProductsResponse\> =
  RuStoreBillingClient.products.getProducts()task.addOnSuccessListener
  {    \`\`// Process success}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Чтобы получить ошибку выполнения, добавьте callback OnFailureListener к
Task:

  -----------------------------------------------------------------------
  val task: Task\<ProductsResponse\> =
  RuStoreBillingClient.products.getProducts()task.addOnFailureListener
  {    \`\`// Process error}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Если необходимо получить и успешный результат, и ошибку, добавьте
OnCompleteListener к Task:

  ------------------------------------------------------------------------------
  val task: Task\<ProductsResponse\> =
  RuStoreBillingClient.products.getProducts()task.addOnCompleteListener(object :
  OnCompleteListener\<ProductsResponse\> {    \`\`override fun
  onFailure(throwable: Throwable) {        \`\`// Process
  Error    \`\`}    \`\`override fun onSuccess(result: ProductsResponse)
  {        \`\`// Process success    \`\`}})
  ------------------------------------------------------------------------------

  ------------------------------------------------------------------------------

Многопоточность

Callback, добавленные к Task, выполняются на главном потоке приложения.
Если callback необходимо выполнить в другом потоке, передайте свой
Executor в метод добавления callback.

Добавление executor через корутины:

  ----------------------------------------------------------------------------------------------------
  val task: Task\<ProductsResponse\> =
  RuStoreBillingClient.products.getProducts()task.addOnCompleteListener(Dispatchers.IO.asExecutor(),
  object : OnCompleteListener\<ProductsResponse\> {    \`\`override fun onFailure(throwable:
  Throwable) {        \`\`// Process Error    \`\`}    \`\`override fun onSuccess(result:
  ProductsResponse) {        \`\`// Process success    \`\`}})
  ----------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------

Синхронное выполнение

Если ваш код уже выполняется в рабочем потоке и вам необходимо получить
результат синхронно, вы можете использовать task.await():

  -----------------------------------------------------------------------
  try {    \`\`val task: Task\<ProductsResponse\> =
  RuStoreBillingClient.products.getProducts()    \`\`task.await()} catch
  (e: CancellationException) {    \`\`// Process error}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Метод await() блокирует поток, в котором выполняется. Стоит использовать
корутины, если вы пишите на kotlin или вызывать метод в фоновом потоке,
если используете языки где нет корутин.

Использовать метод *await()* рекомендуется только после следующих версий
SDK:

-   SDK для in-app платежей - billingclient:1.1.1

-   SDK для подключения пуш-уведомлений - pushclient:0.1.8

-   SDK для подключения отзывов и оценок - review:0.1.6

-   SDK для обновления приложения - appup

Вызов метода *await()* для SDK более ранних версий может приводить к
увеличенному потреблению батареи!

Обработка Task API через корутины

Для обработки Task в корутине можно использовать следующий код:

  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  suspend fun \<T\> Task\<T\>.wrapInCoroutine(): Result\<T\> {    \`\`return suspendCancellableCoroutine { continuation -\>        \`\`addOnCompleteListener(object :
  OnCompleteListener\<T\> {            \`\`override fun onSuccess(result: T) {                \`\`if (continuation.isActive)
  {                    \`\`continuation.resume(Result.success(result))                \`\`}            \`\`}            \`\`override fun onFailure(throwable: Throwable)
  {                \`\`if (continuation.isActive)
  {                    \`\`continuation.resume(Result.failure(throwable))                \`\`}            \`\`}        \`\`})        \`\`continuation.invokeOnCancellation
  {            \`\`cancel()        \`\`}    \`\`}}
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Совместимость с остальными SDK

Версии используемых SDK должны быть совместимы. Ниже приведена таблица
совместимости версий.

  ------------------------------------------------------------------------
  RuStore SDK для    RuStore SDK для   RuStore SDK для   RuStore SDK для
  in-app платежей    подключения       обновления        подключения
                     отзывов и оценок  приложения        пуш-уведомлений
  ------------------ ----------------- ----------------- -----------------
  3.0.0              1.0.0             1.0.0             1.0.0

  ------------------------------------------------------------------------

При использовании одной из вышеуказанных версий SDK необходимо
обязательно использовать версию других SDK, указанную в таблице (не
ниже).

Список доступных SDK

  ---------------------------------------------------------------------------------------------------------------------
  Платформа    SDK для in-app       SDK для подключения  SDK для              SDK для подключения  SDK для обновления
               платежей             пуш-уведомлений      универсальных        отзывов и оценок     приложения
                                                         пуш-уведомлений
  ------------ -------------------- -------------------- -------------------- -------------------- --------------------
  Kotlin       ДокументацияПример   ДокументацияПример   ДокументацияПример   ДокументацияПример   ДокументацияПример

  Java         ДокументацияПример   ДокументацияПример   ДокументацияПример   ДокументацияПример   ДокументацияПример

  Unity        ДокументацияПример   Документация                              Документация         Документация

  Flutter      ДокументацияПример   ДокументацияПример                        ДокументацияПример   ДокументацияПример

  Unreal       ДокументацияПример
  Engine

  Godot        ДокументацияПример

  React Native ДокументацияПример

  Defold                            ДокументацияПример
  ---------------------------------------------------------------------------------------------------------------------

Инструкция по работе с API RuStore

Хост для использования API --- public-api.rustore.ru

Список доступных методов RuStore API

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  **Название**             **Метод**                                                                                                                        **Описание**
  ------------------------ -------------------------------------------------------------------------------------------------------------------------------- -----------------------
  **Получение данных
  платежа и подписки с
  помощью API (общие
  методы)**

  Получение данных платежа GET https://public-api.rustore.ru/public/purchase/{purchaseToken}                                                                Метод позволяет
  по токену покупки                                                                                                                                         получить информацию о
                                                                                                                                                            платеже по токену
                                                                                                                                                            покупки.

  Получение данных         GET https://public-api.rustore.ru/public/subscription/{subscriptionToken}                                                        Метод позволяет
  подписки по токену                                                                                                                                        получить информацию о
  подписки                                                                                                                                                  подписке по токену
                                                                                                                                                            подписки.

  Получение статуса        GET https://public-api.rustore.ru/public/subscription/{subscriptionToken}/state                                                  Метод позволяет
  подписки по токену                                                                                                                                        получить информацию о
  подписки                                                                                                                                                  статусе подписки по
                                                                                                                                                            токену подписки.

  **Получение данных
  платежа и подписки с
  помощью API (методы
  приложений)**

  Получение данных         GET https://public-api.rustore.ru/public/glike/subscription/{packageName}/{subscriptionId}/{subscriptionToken}                   Метод позволяет
  подписки по токену                                                                                                                                        получить информацию о
  подписки (V2)                                                                                                                                             подписке по токену
                                                                                                                                                            подписки.

  Подтверждение получения  POST https://public-api.rustore.ru/public/glike/subscription/{packageName}/{subscriptionId}/{purchaseToken}:acknowledge          Метод позволяет
  подписки по токену                                                                                                                                        подтвердить выдачу
  подписки                                                                                                                                                  пользователю контента
                                                                                                                                                            по подписке по токену
                                                                                                                                                            подписки.

  **Загрузка и публикация
  приложений с помощью API
  RuStore**

  Создание черновика       POST https://public-api.rustore.ru/public/v1/application/{packageName}/version                                                   Метод позволяет создать
  версии                                                                                                                                                    черновик версии и
                                                                                                                                                            заполнить его основной
                                                                                                                                                            информацией.

  Загрузка APK-файла       POST https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/apk                                   Метод позволяет
                                                                                                                                                            загрузить файл с
                                                                                                                                                            расширением .apk для
                                                                                                                                                            публикации.

  Загрузка иконки          POST https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/image/icon                            Метод позволяет
  приложения                                                                                                                                                загрузить иконку
                                                                                                                                                            приложения.

  Загрузка скриншотов      POST                                                                                                                             Метод позволяет
                           https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/image/screenshot/{orientation}/{ordinal}   загрузить скриншоты
                                                                                                                                                            приложения.

  Изменение настроек       POST https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/publish-settings                      Метод позволяет
  публикации                                                                                                                                                изменить тип
                                                                                                                                                            публикации, дату
                                                                                                                                                            отложенной публикации и
                                                                                                                                                            % для частичной
                                                                                                                                                            публикации версии.

  Получение статуса версий GET https://public-api.rustore.ru/public/v1/application/{packageName}/version?ids=704095&page=0&size=2                           Метод позволяет
  приложений                                                                                                                                                получить базовую
                                                                                                                                                            информацию по версии, а
                                                                                                                                                            также проверить статус
                                                                                                                                                            версии.

  Отправка на модерацию    POST                                                                                                                             Метод для отправки на
  черновика версии         https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/commit?priorityUpdate={priorityUpdate}     модерацию черновика
  приложения                                                                                                                                                версии приложения

  Ручная публикация        POST https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/publish                               Метод позволяет
                                                                                                                                                            опубликовать версию,
                                                                                                                                                            прошедшую модерацию
                                                                                                                                                            вручную.

  Удаление черновика       DELETE https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}                                     Метод для удаления
                                                                                                                                                            созданных ранее
                                                                                                                                                            черновиков.

  **Работа с отзывами с
  помощью RuStore API**

  Получение отзывов        GET https://public-api.rustore.ru/public/v1/application/{packageName}/comment?id={id}&page={number}&size={size}                  Метод позволяет
  приложения                                                                                                                                                получить список всех
                                                                                                                                                            последних отзывов для
                                                                                                                                                            вашего приложения или
                                                                                                                                                            получить отдельно
                                                                                                                                                            взятый отзыв.

  Получение отзывов в      GET https://public-api.rustore.ru/public/v1/application/{packageName}/comment/export?from={date_from}&to={date_to}               Метод позволяет
  формате .csv                                                                                                                                              получить все отзывы в
                                                                                                                                                            формате .csv за
                                                                                                                                                            определённый промежуток
                                                                                                                                                            времени.

  Оставить ответ на отзыв  POST https://public-api.rustore.ru/public/v1/application/{packageName}/feedback?commentId={commentId}                            Метод позволяет
                                                                                                                                                            оставить ответ на
                                                                                                                                                            отзыв.

  Получение статуса ответа GET https://public-api.rustore.ru/public/v1/application/{packageName}/feedback/{feedbackId}                                      Метод позволяет
  на отзыв                                                                                                                                                  получить статус
                                                                                                                                                            модерации ответа на
                                                                                                                                                            отзыв.

  Получение статуса        GET https://public-api.rustore.ru/public/v1/application/{packageName}/feedback/?id={id}&page={number}&size={size}                Метод позволяет
  ответов на отзывы                                                                                                                                         получить статус
                                                                                                                                                            модерации ответа на
                                                                                                                                                            отзыв или получить
                                                                                                                                                            информацию на отдельно
                                                                                                                                                            взятый ответ на отзыв.

  Изменение ответа на      POST https://public-api.rustore.ru/public/v1/application/{packageName}/feedback/{feedbackId}                                     Метод позволяет
  отзыв                                                                                                                                                     изменить текст ответа
                                                                                                                                                            на отзыв.

  Удаление ответа на отзыв DELETE https://public-api.rustore.ru/public/v1/application/{packageName}/feedback/{feedbackId}                                   Метод позволяет удалить
                                                                                                                                                            ответ на отзыв.

  Получение рейтинга       POST https://public-api.rustore.ru/public/v1/application/{packageName}/comment/statistic                                         Метод позволяет
  приложения                                                                                                                                                получить рейтинг
                                                                                                                                                            приложения.
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Авторизация и принципы работы в RuStore API

Для получения доступа к использованию возможностей RuStore API пройдите
авторизацию. Для этого сгенерируйте пару ключей --- публичный-приватный
ключ --- в системе RuStore Консоль и получите JWE-токен.

Генерация пары ключей

Для генерации ключей используется алгоритм шифрования RSA.

1\. Откройте систему RuStore Консоль.

2\. Перейдите на вкладку «Компания» в верхней части экрана в аккаунте
для юридических лиц. Для физических лиц эта же вкладка называется
«Разработчик».

3\. В левом боковом меню выберите «API RuStore».

4\. Нажмите «Создать ключ».

5\. Введите название ключа --- не более 255 символов.

6\. Выберите приложения, на которые будет распространяться приватный
ключ.

Вы можете выбрать одно или несколько приложений, а также все сразу. Если
при генерации ключа вы поставите галочку напротив пункта «Все
приложения», а затем создадите новое приложение, ключ не будет
распространяться на него.

7\. Выберите один или несколько методов RuStore API. Вы можете выбрать
как методы приложений, к которым будет иметь доступ приватный ключ, так
и общие. Общие методы будут передавать данные всех приложений вне
зависимости от того, для каких приложений настроен ключ.

8\. Нажмите «Сгенерировать ключ».

9\. Приватный ключ покажется во всплывающем окне «Приватный ключ»,
скопируйте и сохраните его.

Публичный ключ формируется автоматически при генерации приватного ключа
и независимо от пользователя записывается в базу данных. Для авторизации
понадобится только значение сгенерированного приватного ключа.

Генерация пары ключей доступна только владельцам компании. Роли
пользователей

При наличии пары ключей созданный приватный ключ появится в таблице в
системе RuStore Консоль. В ней указаны название и ID ключа, выбранные
методы и приложения, а также когда ключ был изменён (дата создания или
обновления).

1\. Откройте систему RuStore Консоль.

2\. Перейдите на вкладку «Компания» или «Разработчик» в верхней части
экрана.

3\. В блоке с названиями ключей найдите необходимый ключ.

4\. Нажмите на три точки.

5\. Нажмите «Обновить».

6\. Публичный ключ обновится автоматически.

Вы также можете удалить пару ключей в системе RuStore Консоль.

1\. Откройте систему RuStore Консоль.

2\. Перейдите на вкладку «Компания» или «Разработчик» в верхней части
экрана.

3\. В блоке с названиями ключей найдите необходимый ключ.

4\. Нажмите на три точки.

5\. Нажмите «Удалить».

Получение токена

Используйте сгенерированный приватный ключ для получения JWE-токена с
помощью метода POST /public/auth/.

Срок действия jwe-токена --- 900 секунд, затем его необходимо получить
заново, повторив метод POST /public/auth/.

Авторизация пройдена

Полученный JWE-токен позволяет использовать возможности RuStore API. Для
этого его значение нужно передавать в раздел «‎Авторизация»‎ с помощью
API-key.

Метод получения токена авторизации

Метод позволяет сгенерировать JWE-токен с помощью приватного ключа,
полученного в системе RuStore Консоль. Также метод проводит проверку
активности владельца приложения.

Для успешного выполнения запроса сгенерируйте приватный ключ.

Параметры взаимодействия

POST /public/auth/

  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  **Атрибут**   **Тип**     **Обяз.**   **Расположение**   **Описание**                                                                                                                            **Пример заполнения**
  ------------- ----------- ----------- ------------------ --------------------------------------------------------------------------------------------------------------------------------------- -----------------------------------
  companyId     string      Да, если не body               ID компании                                                                                                                             123
                            указан
                            keyId

  keyId         string      Да, если не body               ID ключа                                                                                                                                123
                            указан
                            companyId

  timestamp     string      Да          body               Время отправки запроса. Не должно отличаться от текущего серверного времени более, чем на 60 секунд.                                    2022-07-08T13:24:41.8328711+03:00

  signature     string      Да          body               RSA-подпись SHA-512 hash от строки, содержащей companyId или keyId и timestamp запроса.Алгоритм создания и проверки подписи:
                                                           SHA512withRSAПример:companyId: 123timestamp: 2022-07-08T13:24:41.8328711+03:00строка для вычисления hash:
                                                           1232022-07-08T13:24:41.8328711+03:00SHA-512
                                                           hash:0976c61cce96fccd9daaae5f594db43dd287c0e266561669184276a2e86578c0e2a39cd0b183a458d0e47b17c68548daac83db97bc710dcd07d01bae40033235
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Если у вас создано более 1 ключа, то необходимо использовать параметр
keyId вместо companyId, для авторизации по всем приватным ключам и
генерации параметра signature.

В случае проблем с пониманием алгоритма генерации параметра signature
используйте .jar файл для генерации данного параметра:

-   .jar файл для companyId;

-   .jar файл для keyId.

Передайте ID компании или ID ключа и полученный приватный ключ. В ответ
вы получите тело для запроса POST /public/auth/ с параметрами
companyId/keyId, timestamp и signature.

Сформированный параметр параметра signature действует 1 минуту, так как
напрямую зависит от timestamp.

**Параметры ответа**

  -----------------------------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Описание       Пример заполнения
  -------------- -------------- -------------- -------------- -----------------------------------
  code           string         Да             Код ответа     error/OK

  message        string         Нет            Расшифровка    Range timestamp not valid
                                               кода ответа, в
                                               случае ошибки

  body{}         object         Да

  timestamp      timestamptz    Да             Время ответа   2022-07-08T13:24:41.8328711+03:00
  -----------------------------------------------------------------------------------------------

**body{}**

  --------------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**          **Пример**
  -------------- -------------- ---------------- --------------------- -----------------------------------
  jwe            string         Да               Токен доступа к API   eyJjdHkiOiJK...sv16aBl8tTg.VkWuTw
                                                 RuStore (содержимое
                                                 payload
                                                 ниже).Многоразового
                                                 использования.

  ttl            int            Да               Срок жизни токена в   900
                                                 секундах.Срок жизни
                                                 составляет 900
                                                 секунд.
  --------------------------------------------------------------------------------------------------------

Возможные ошибки

  ------------------------------------------------------------------------
  **code**           **message**       **Описание**      **Возможные
                                                         действия**
  ------------------ ----------------- ----------------- -----------------
  400                Range timestamp   Параметр          Обновите
                     not valid         timestamp         timestamp и
                                       отличается более  signature
                                       чем на 60 секунд

  404                Company key not   Не найден         Проверьте создан
                     found             приватный ключ по ли приватный ключ
                                       переданному       у данной
                                       companyId         companyId и его
                                                         актуальность

  400                Company key       Приватный ключ по Проверьте создан
                     disabled          переданному       ли приватный ключ
                                       companyId удален  у данной
                                                         companyId и его
                                                         актуальность

  400                Signature encode  Параметр          Необходимо заново
                     error             signature         сгенировать
                                       сгенерирован      параметр
                                       некорректно       signature

  404                You cannot use    Компания с        Проверьте
                     this action       переданным        параметр
                     because the       companyId         companyId на его
                     company is not    отсутвует или не  актуальность
                     found             активна

  400                You can't use     Компания с        Проверьте
                     this action       переданным        параметр
                     because the       companyId         companyId на его
                     company is banned заблокирована     актуальность

  400                KeyId or          Обязательно       Проверьте, что
                     companyId must be использование     указан параметр
                     not null          одного из         keyId или
                                       параметров keyId  companyId
                                       или companyId

  400                Incorrect usage   У вас создано     Воспользуйтесь
                     of companyId.     более одного      параметром keyId
                     Please use keyId  приватного ключа,
                                       необходимо
                                       использовать
                                       параметр keyId
  ------------------------------------------------------------------------

Пример запроса

  --------------------------------------------------------------------------------------------------------
  curl --location 'https://public-api.rustore.ru/public/auth' \<br\>--header 'Content-Type:
  application/json' \<br\>--data
  '{"companyId":"1275328","timestamp":"2023-08-11T13:31:17.580+03:00","signature":"U4kh.......nFkbuw=="}
  --------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------

**Пример успешного ответа**

  -----------------------------------------------------------------------
  {    "code": "OK",    "message": null,    "body": {        "jwe":
  "eyJlbmMiOiJBM......nuuM227D_O1A",        "ttl":
  900    },    "timestamp": "2023-08-11T13:31:33.171847393+03:00"}
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Получение данных платежа и подписки с помощью API

Получение данных платежа по токену покупки

Метод позволяет получить информацию о платеже по токену покупки.

Параметры взаимодействия

GET https://public-api.rustore.ru/public/purchase/{purchaseToken}

  -------------------------------------------------------------------------------------------------
  **Атрибут**     **Тип**     **Описание**   **Обязательность**   **Расположение**   **Пример
                                                                                     заполнения**
  --------------- ----------- -------------- -------------------- ------------------ --------------
  Public-Token    string      Токен доступа  Да                   header
                              к Public API
                              Rustore

  purchaseToken   string      Как получить   Да                   path               111.123
                              токен покупки
  -------------------------------------------------------------------------------------------------

Параметры ответа

  -----------------------------------------------------------------------------------------------------------------
  **Атрибут**   **Тип**     **Описание**   **Обязательность**   **Расположение**   **Пример заполнения**
  ------------- ----------- -------------- -------------------- ------------------ --------------------------------
  code          string      Код ответа     Да                   body               ОК,ERROR,BAD_REQUEST,NOT_FOUND

  message       string      Расшифровка    Нет                  body
                            кода ответа

  timestamp     string      Время ответа   Да                   body

  body{}        object      Тело ответа    Нет                  body
  -----------------------------------------------------------------------------------------------------------------

**body{}**

  ------------------------------------------------------------------------------------------------------------
  **Атрибут**         **Тип**           **Описание**      **Пример заполнения**
  ------------------- ----------------- ----------------- ----------------------------------------------------
  error {}            object            Расшифровка
                                        ошибки

  invoice_id          string            Номер счета       12345

  invoice_date        string            Дата создания     2020-04-29T08:18:03+03
                                        счета

  invoice_status      string            Статус счета      created --- создан;executed --- пользователь выбрал
                                                          способ оплаты, платёж исполняется;cancelled
                                                          --- отменён пользователем;paid --- средства
                                                          зарезервированы, счёт ожидает подтверждения (только
                                                          для покупки потребляемых продуктов);confirmed
                                                          --- оплата прошла успешно;reversed, refunded
                                                          --- средства по счёту возвращены покупателю.

  invoice {}          object            Информация о
                                        счете

  image               string            Ссылка на         https://i-love-png.com/images/grim-reaper-icon.png
                                        картинку

  application_code    string            Код приложения    com.MashaAndTheBear.HairSalon

  application_name    string            Наименование      Салон красоты «Маша и медведь»
                                        приложения

  owner_code          string            Код владельца     com.MashaAndTheBear
                                        приложения

  owner_name          string            Наименование      Маша и медведь
                                        владельца
                                        приложения

  payment_info {}     object            Информация о
                                        платеже

  payment_methods{}   object            Платежные
                                        инструменты
  ------------------------------------------------------------------------------------------------------------

**body.error {}**

  -------------------------------------------------------------------------
  **Атрибут**         **Тип**           **Описание**      **Пример
                                                          заполнения**
  ------------------- ----------------- ----------------- -----------------
  user_message        string            Текст ошибки

  error_description   object            Описание ошибки

  error_code          number            Числовой код      0
                                        ошибки
  -------------------------------------------------------------------------

**body.invoice {}**

  --------------------------------------------------------------------------
  **Атрибут**          **Тип**           **Описание**      **Пример
                                                           заполнения**
  -------------------- ----------------- ----------------- -----------------
  purchaser{}          object            Информация о
                                         покупателе

  delivery_info{}      object            Информация для
                                         доставки

  invoice_params\[\]   array             Дополнительные
                                         параметры заказа

  order{}              object            Информация о
                                         заказе
  --------------------------------------------------------------------------

**body.invoice.purchaser {}**

  ------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример
                                                         заполнения**
  ------------------ ----------------- ----------------- -----------------
  email              string            Email покупателя  qq@dd.eof

  phone              string            Номер телефона    9123456789

  contact            string            Предпочитаемый    email
                                       вид связи
  ------------------------------------------------------------------------

**body.invoice. delivery_info {}**

  ------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример
                                                         заполнения**
  ------------------ ----------------- ----------------- -----------------
  address{}          object            Адрес

  delivery_type      string            Способ доставки   courier

  description        string            Дополнительная    Перезвонить за
                                       информация        1,5 часа
  ------------------------------------------------------------------------

**body.invoice. delivery_info.address {}**

  ------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример
                                                         заполнения**
  ------------------ ----------------- ----------------- -----------------
  country            string            Идентификатор     RU
                                       страны

  city               string            Город             Москва

  address            string            Адрес             ул. Вавилова, 19,
                                                         офис 1
  ------------------------------------------------------------------------

**body.invoice.invoice_params \[\]**

  --------------------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример заполнения**
  ------------------ ----------------- ----------------- -------------------------------
  key                string            Название          packageName
                                       параметра

  value              string            Значение          com.MashaAndTheBear.HairSalon
                                       параметра
  --------------------------------------------------------------------------------------

**body.invoice.order {}**

  ---------------------------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример заполнения**
  ------------------ ----------------- ----------------- --------------------------------------
  order_id           string            Уникальный        d290f1ee-6c54-4b01-90e6-d701748f0851
                                       идентификатор
                                       заказа

  order_number       string            Номер заказа      145

  order_date         string            Дата заказа       2020-04-29T08:17:03+03

  service_id         string            Идентификатор     223
                                       сервиса

  amount             number            Сумма заказа в    11836
                                       минимальных
                                       единицах валюты
                                       (в копейках)

  currency           string            Код валюты        RUB

  purpose            string            Краткое           Покупка в игре «Маша и Медведь, салон
                                       назначение        красоты Чародейка»
                                       платежа

  description        string            Описание заказа   Покупка внутриигрового контента в игре
                                                         «Маша и Медведь, салон красоты
                                                         Чародейка»

  language           string            Язык              ru-RU

  expiration_date    string            Дата и время      2022-10-11T14:05:44.741Z
                                       окончания жизни
                                       счёта

  tax_system         number            Система           0
                                       налогообложения

  trade_name         string            Торговое          Romashka
                                       наименование
                                       организации

  visual_name        string            Наименование      Покупка/продление подписки
                                       операции

  org_name           string            Наименование      ООО Ромашка
                                       организации

  org_inn            string            ИНН организации   1234567890

  visual_amount      string            Сумма             1 500,45 ₽

  order_bundle \[\]  array             Состав заказа
  ---------------------------------------------------------------------------------------------

**body.invoice.order.order_bundle \[\]**

  -----------------------------------------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример заполнения**
  ------------------ ----------------- ----------------- ----------------------------------------------------
  position_id        number            Уникальный        1
                                       идентификатор
                                       товарной позиции

  name               string            Наименование или  Кристаллы
                                       описание товарной
                                       позиции

  item_params\[\]    array             Дополнительные
                                       параметры заказа

  quantity{}         object            Описание общего
                                       количества
                                       товарных позиций

  item_amount        number            Сумма стоимости   11836
                                       всех товарных
                                       позиций в
                                       минимальных
                                       единицах валюты
                                       (в копейках)

  currency           string            Код валюты        RUB

  item_code          string            Номер             com.MashaAndTheBear.HairSalon.crystal100
                                       (идентификатор)
                                       товарной позиции

  item_price         number            Стоимость одной   11836
                                       товарной позиции
                                       в минимальных
                                       единицах валюты
                                       (в копейках)

  discount_type      string            Тип скидки на     percent
                                       товарную позицию

  discount_value     float             Значение скидки   5.25
                                       на товарную
                                       позицию

  interest_type      string            Тип агентской     agentPercent
                                       комиссии за
                                       продажу товара

  interest_value     float             Значение          15.105
                                       агентской
                                       комиссии за
                                       продажу товара

  tax_type           number            Ставка НДС        6

  tax_sum            number            Сумма налога в    2367
                                       минимальных
                                       единицах валюты
                                       (в копейках)

  image              string            Ссылка на         https://i-love-png.com/images/grim-reaper-icon.png
                                       картинку
  -----------------------------------------------------------------------------------------------------------

**body.invoice.order.order_bundle.item_params \[\]**

  --------------------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример заполнения**
  ------------------ ----------------- ----------------- -------------------------------
  key                string            Название          packageName
                                       параметра

  value              string            Значение          com.MashaAndTheBear.HairSalon
                                       параметра
  --------------------------------------------------------------------------------------

**body.invoice.order.order_bundle.quantity {}**

  ------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример
                                                         заполнения**
  ------------------ ----------------- ----------------- -----------------
  value              float             Значение          1.05

  measure            string            Единица измерения кг
  ------------------------------------------------------------------------

**body.payment_info {}**

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  **Атрибут**            **Тип**           **Описание**      **Пример заполнения**
  ---------------------- ----------------- ----------------- --------------------------------------------------------------------------------------------------------------------------------
  payment_date           number            Дата и время      2022-10-11T14:05:44.741Z
                                           оплаты счета

  payment_id             string            Уникальный        d290f1ee-6c54-4b01-90e6-d701748f0851
                                           идентификатор
                                           платежа

  payment_params{}       object            Дополнительные
                                           параметры платежа

  device_info{}          object            Информация об
                                           устройстве

  loyalty_info{}         object            Информация о
                                           программе
                                           лояльности

  card_id                string            Уникальный        ad454ffg-6c54-4b01-90e6-d701748f0851
                                           идентификатор
                                           банковской карты

  name                   string            Алиас карты       Главная

  paysys_code            string                              RBS-shortname

  masked_pan             string            Маскированный     \*\*1111
                                           номер карты

  expiry_date            string            Дата окончания    201912
                                           действия карты

  cardholder             string            Имя держателя     Ivan Petrov
                                           карты

  payment_system         string            Платежная система Visa

  payment_system_image   string            Ссылка на логотип https://smartmarkettestift.online.sberbank.ru/icons/logo_visa.png
                                           платёжной системы

  image                  string            Ссылка на логотип https://smartmarkettestift.online.sberbank.ru/icons/sberbank_mastercard_league_legends.jpeg
                                           карты

  paysys                 string            Наименование      RBS
                                           платёжного
                                           оператора

  paysys_image           string            Ссылка на логотип https://www.sberbank.ru/common/img/uploaded/redirected/s_m_business/acquiring/assets/images/intro@2x.png
                                           платёжного
                                           оператора

  payment_way            string            Способ оплаты     SberPay

  payment_way_code       string            Идентификатор     SberPay
                                           способа оплаты

  payment_way_logo       string            Ссылка на логотип https://cdn1.telegram.one/i/f7640dada78306b1c993e04001b8738d/828b1eb30921659e22e53a9edc92c4c4/24e01830d213d75deb99c22b9cd91ddd
                                           способа оплаты

  bank_info{}            object            Информация о
                                           банке
  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**body.payment_info.payment_params {}**

  ---------------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример заполнения**
  ------------------ ----------------- ----------------- --------------------------
  key                string            Название          googlePurchaseToken
                                       параметра

  value              string            Значение          ameinkbophchljaejnocadib
                                       параметра
  ---------------------------------------------------------------------------------

**body.payment_info. device_info {}**

  ----------------------------------------------------------------------------------------------------
  **Атрибут**               **Тип**           **Описание**      **Пример заполнения**
  ------------------------- ----------------- ----------------- --------------------------------------
  device_platform_type      string            Платформа         iOS
                                              устройства

  device_platform_version   string            Версия ОС         13.6.1
                                              платформы

  device_model              string            Модель устройства iPhone 7

  device_manufacturer       string            Производитель     Apple

  device_id                 string            Серийный номер    83c3f257-46d8-41fe-951b-f79d04e288c2
                                              устройства

  surface                   string                              RuStore

  surface_version           string            Версия ПО         11.5.0
  ----------------------------------------------------------------------------------------------------

**body.payment_info.loyalty_info {}**

  -----------------------------------------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример заполнения**
  ------------------ ----------------- ----------------- ----------------------------------------------------
  service_code       string            Код бонусной      sbrf_spasibo
                                       программы

  service_name       string            Наименование      Сбербанк Спасибо
                                       бонусной
                                       программы

  change_rate        number            Коэффициент       1
                                       обмена баллов на
                                       рубли

  payment_bonus      number            Сумма бонусных    19800
                                       баллов,
                                       использованная
                                       при оплате счёта,
                                       в копейках

  award_bonus        number            Сумма средств,    21850
                                       использованных
                                       для начисления
                                       баллов при оплате
                                       заказа.
                                       Указывается в
                                       минимальных
                                       единицах (в
                                       копейках)

  image              string            Ссылка на         https://i-love-png.com/images/grim-reaper-icon.png
                                       картинку
  -----------------------------------------------------------------------------------------------------------

**body.payment_info.bank_info{}**

  --------------------------------------------------------------------------------------------------------------------------
  **Атрибут**         **Тип**           **Описание**      **Пример заполнения**
  ------------------- ----------------- ----------------- ------------------------------------------------------------------
  bank_name           string            Название          ПАО Сбербанк
                                        банка-эмитента

  bank_country_code   string            Код страны        RU
                                        банка-эмитента

  bank_country_name   string            Наименование      Россия
                                        страны
                                        банка-эмитента

  bank_image          string            Ссылка на логотип https://emoji.slack-edge.com/TKK9DHNCV/sber/ad2df81a6cd9812d.png
                                        банка
  --------------------------------------------------------------------------------------------------------------------------

**body. payment_methods {}**

  -------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**       **Пример
                                                          заполнения**
  ------------------ ----------------- ------------------ -----------------
  user_message       string            Сообщение          Для подключения
                                       пользователю       подписки
                                       (необязательное)   сохраните
                                                          банковскую карту
                                                          в мобильном
                                                          приложении

  methods\[\]        array             Варианты оплаты
  -------------------------------------------------------------------------

**body. payment_methods.methods \[\]**

  ------------------------------------------------------------------------
  **Атрибут**        **Тип**           **Описание**      **Пример
                                                         заполнения**
  ------------------ ----------------- ----------------- -----------------
  method             string            Код               QR

  action             string            Название          Оплатить по
                                                         QR-коду
  ------------------------------------------------------------------------

Пример ответа:

  -----------------------------------------------------------------------------------------------------------
  {\<br\>    \"code\": \"OK\",\<br\>    \"message\": null,\<br\>    \"body\": {\<br\>        \"invoice_id\":
  \"2850\",\<br\>        \"invoice_date\": \"2023-07-18T14:31:33+03\",\<br\>        \"invoice_status\":
  \"confirmed\",\<br\>        \"application_code\": \"3399750\",\<br\>        \"application_name\": \"Маша и
  медведь\",\<br\>        \"owner_code\": \"4384191\",\<br\>        \"owner_name\": \"ООО
  \\\"Нарана\\\"\",\<br\>        \"payment_info\": {\<br\>            \"payment_date\":
  \"2023-07-18T14:31:42+03\",\<br\>            \"payment_id\": \"1736\",\<br\>            \"payment_params\":
  null,\<br\>            \"loyalty_info\": null,\<br\>            \"card_id\": \"193\",\<br\>           
  \"paysys_code\": \"RBS-shortname\",\<br\>            \"masked_pan\": \"XX1111\",\<br\>           
  \"expiry_date\": \"202412\",\<br\>            \"payment_system\": \"Visa\",\<br\>           
  \"payment_system_image\": \"https://smartmarket.online.sberbank.ru/image/visa.png\",\<br\>           
  \"paysys_image\": null,\<br\>            \"payment_way\": \"Оплата сохраненной картой\",\<br\>           
  \"payment_way_code\": \"CARD_BINDING\",\<br\>            \"payment_way_logo\":
  \"https://static.tildacdn.com/tild6236-3530-4235-b966-326630656238/\_\_\_14\_-removebg-prev.png\",\<br\>   
          \"bank_info\": {\<br\>                \"bank_name\": \"Sberbank\",\<br\>               
  \"bank_country_code\": \"SU\",\<br\>                \"bank_country_name\": null,\<br\>               
  \"bank_image\": null\<br\>            },\<br\>            \"device_info\": null,\<br\>            \"name\":
  null,\<br\>            \"cardholder\": \"CARDHOLDER NAME\",\<br\>            \"image\": null,\<br\>       
      \"paysys\": \"RBS\"\<br\>        },\<br\>        \"payment_methods\": null,\<br\>        \"error\":
  {\<br\>            \"user_message\": \"Счет подтвержден\",\<br\>            \"error_description\":
  \"\",\<br\>            \"error_code\": 0\<br\>        },\<br\>        \"invoice\": {\<br\>           
  \"delivery_info\": {\<br\>                \"delivery_type\": null,\<br\>                \"address\":
  {\<br\>                    \"country\": null,\<br\>                    \"city\": null,\<br\>               
      \"address\": null\<br\>                },\<br\>                \"description\": null\<br\>           
  },\<br\>            \"invoice_params\": \[\<br\>                {\<br\>                    \"key\":
  \"inapp_serviceparam_message_about_loyalty\",\<br\>                    \"value\": \"Оплатить подписку
  сейчас можно бонусами, а продлить её --- только за рубли.\"\<br\>                },\<br\>               
  {\<br\>                    \"key\": \"inapp_serviceparam_action_name\",\<br\>                    \"value\":
  \"Подключить подписку\"\<br\>                },\<br\>                {\<br\>                    \"key\":
  \"inapp_serviceparam_features\",\<br\>                    \"value\": \"VERIFY\"\<br\>               
  },\<br\>                {\<br\>                    \"key\": \"period_type\",\<br\>                   
  \"value\": \"DAY\"\<br\>                },\<br\>                {\<br\>                    \"key\":
  \"period_duration\",\<br\>                    \"value\": \"1\"\<br\>                },\<br\>               
  {\<br\>                    \"key\": \"current_period\",\<br\>                    \"value\":
  \"STANDARD\"\<br\>                },\<br\>                {\<br\>                    \"key\":
  \"payment_type\",\<br\>                    \"value\": \"INITIAL\"\<br\>                }\<br\>           
  \],\<br\>            \"purchaser\": {\<br\>                \"email\": null,\<br\>                \"phone\":
  null,\<br\>                \"contact\": null\<br\>            },\<br\>            \"order\": {\<br\>       
          \"order_id\": \"a090a93c-ca06-493d-a90a-ce2bac722358\",\<br\>                \"order_number\":
  \"311\",\<br\>                \"order_date\": \"2023-07-18T14:31:33+03\",\<br\>               
  \"service_id\": \"4720\",\<br\>                \"expiration_date\": \"2023-07-18T14:51:33+03\",\<br\>     
            \"tax_system\": null,\<br\>                \"trade_name\": null,\<br\>               
  \"visual_name\": \"Покупка/Продление подписки\",\<br\>                \"org_name\": \"ООО Супер
  ООО\",\<br\>                \"org_inn\": \"4419198349\",\<br\>                \"visual_amount\": \"1
  ₽\",\<br\>                \"order_bundle\": \[\<br\>                    {\<br\>                       
  \"position_id\": 1,\<br\>                        \"item_params\": \[\<br\>                           
  {\<br\>                                \"key\": \"\_auto_itemAttributes_agent_info.type\",\<br\>           
                      \"value\": \"7\"\<br\>                            },\<br\>                           
  {\<br\>                                \"key\": \"\_auto_itemAttributes_supplier_info.name\",\<br\>       
                          \"value\": \"ООО \\\"Нарана\\\"\"\<br\>                            },\<br\>       
                      {\<br\>                                \"key\":
  \"\_auto_itemAttributes_supplier_info.inn\",\<br\>                                \"value\":
  \"4419198349\"\<br\>                            }\<br\>                        \],\<br\>                   
      \"item_amount\": 100,\<br\>                        \"item_code\": \"1day\",\<br\>                     
    \"item_price\": 100,\<br\>                        \"discount_type\": null,\<br\>                       
  \"discount_value\": null,\<br\>                        \"interest_type\": null,\<br\>                     
    \"interest_value\": null,\<br\>                        \"tax_type\": 6,\<br\>                       
  \"tax_sum\": null,\<br\>                        \"name\": \"Оплата за покупку подписки \\\"1day\\\".
  Провайдер: \\\"Покупка/Продление подписки\\\"\",\<br\>                        \"quantity\": {\<br\>       
                      \"value\": 1,\<br\>                            \"measure\": \"шт\"\<br\>               
          },\<br\>                        \"currency\": \"RUB\",\<br\>                        \"image\":
  \"\"\<br\>                    }\<br\>                \],\<br\>                \"amount\": 100,\<br\>       
          \"currency\": \"RUB\",\<br\>                \"purpose\": \"1day\",\<br\>               
  \"description\": \"1day\",\<br\>                \"language\": \"ru-RU\"\<br\>            }\<br\>       
  },\<br\>        \"image\": \"\"\<br\>    },\<br\>    \"timestamp\":
  \"2023-08-02T10:11:04.655684723+03:00\"\<br\>}
  -----------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------

Валидация запроса

При получении запроса проверяется токен авторизации, полученный методом
получения токена авторизации:

-   владелец и/или приложение не должны быть заблокированы;

-   токен должен быть действительным;

-   код приложения application_code соответствует владельцу, получившему
    токен авторизации.

Получение данных подписки по токену подписки

Метод позволяет получить информацию о подписке по токену подписки.

Параметры взаимодействия

GET https://public-api.rustore.ru/public/subscription/{subscriptionToken}

  ----------------------------------------------------------------------------------------
  Атрибут             Тип         Описание    Обязательность   Расположение   Пример
                                                                              заполнения
  ------------------- ----------- ----------- ---------------- -------------- ------------
  Public-Token        string      Токен       Да               header
                                  доступа к
                                  Public API
                                  Rustore

  subscriptionToken   string      Как         Да               path           111.123
                                  получить
                                  токен
                                  подписки
  ----------------------------------------------------------------------------------------

Параметры ответа

  ---------------------------------------------------------------------------------------------------------
  Атрибут      Тип           Описание      Обязательность   Расположение   Пример заполнения
  ------------ ------------- ------------- ---------------- -------------- --------------------------------
  code         string        Код ответа    Да               body           ОК,ERROR,BAD_REQUEST,NOT_FOUND

  message      string        Расшифровка   Нет              body
                             кода ответа

  timestamp    timestamptz   Время ответа  Да               body

  body{}       object        Тело ответа   Нет              body
  ---------------------------------------------------------------------------------------------------------

**body{}**

  ------------------------------------------------------------------------------------
  Атрибут      Тип         Описание      Обязательность   Расположение   Пример
                                                                         заполнения
  ------------ ----------- ------------- ---------------- -------------- -------------
  code         number      Код ответа    Да               body

  success      boolean     Флаг          Да               body           true
                           успешности
                           ответа

  message      string      Расшифровка   Нет              body           Неизвестная
                           кода ответа                                   ошибка

  body{}       object      Тело          Нет              body
                           сообщения
  ------------------------------------------------------------------------------------

**body.body{}**

  ---------------------------------------------------------------------------------
  Атрибут             Тип               Описание          Пример заполнения
  ------------------- ----------------- ----------------- -------------------------
  serviceName         string            Название сервиса  Okko

  subscriptionId      integer           Уникальный        12345
                                        идентификатор
                                        подписки

  addParameters       string            Дополнительные    Something about
                                        параметры по      subscription
                                        подписке

  productType         string            Тип продукта      SUBSCRIPTION

  productName         string            Название продукта Okko оптимум

  productCode         string            Код продукта      monthly_sub

  recurrent           boolean           Признак           true
                                        автопродления

  countOfDay          integer           Количество дней   10

  periodType          string            Тип периода       Доступные значения: DAY,
                                                          MONTH, YEAR

  periodDuration      integer           Длительность      10
                                        периода

  nextPaymentDate     string            Дата следующего   2021-03-23
                                        платежа

  price               integer           Цена в            9999
                                        минимальной
                                        единице валюты
                                        (копейки)

  currency            string            Валюта            RUB

  imageUrl            string            Ссылка на
                                        картинку продукта

  state               string            Статус подписки   **Активные
                                                          статусы**ACTIVATED
                                                          --- подписка
                                                          активна.**Промежуточные
                                                          статусы**ACCEPTED
                                                          --- ожидает
                                                          оплаты.DEPOSITED
                                                          --- платёж проведён,
                                                          подписка ожидает
                                                          активации;CLOSE_PENDING
                                                          --- подписка в процессе
                                                          закрытия;REPEATING
                                                          --- подписка на стадии
                                                          продления, производится
                                                          попытка списания денег
                                                          для продления.**Финальные
                                                          статусы**DECLINED
                                                          --- подписка закрыта,
                                                           все попытки очередных
                                                          платежей по подписке
                                                          завершились неуспешно,
                                                          GRACE и HOLD периоды и
                                                          количество попыток
                                                          продления
                                                          закончилисьCANCELED
                                                          --- пользователь не
                                                          оплатил подписку;CLOSED
                                                          --- подписка закрыта;
                                                          пользователь отключил
                                                          автопродление подписки,
                                                          истек оплаченный период,
                                                          провайдер подтвердил
                                                          закрытие
                                                          подписки;REFUNDED
                                                          --- инициирован возврат
                                                          средств пользователю.

  currentPeriod       string            Наименование      **Доступные
                                        текущего периода  значения:**PROMO
                                                          --- бесплатный
                                                          период;START
                                                          --- стартовый период со
                                                          сниженной ценой;STANDARD
                                                          --- стандартный
                                                          период;GRACE --- грейс
                                                          период, пользователь не
                                                          оплатил подписку, попытки
                                                          списания продолжаются,
                                                          доступ к контенту
                                                          сохраняется;HOLD --- холд
                                                          период, пользователь не
                                                          оплатил подписку, попытки
                                                          списания продолжаются,
                                                          доступ к контенту должен
                                                          быть прекращён.

  debtPaymentPeriod   string            Наименование      Null если период
                                        платежного        стандартный
                                        периода

  description         string            Описание продукта Описание
                                        подписки

  tariffId            integer           Уникальный        12345
                                        идентификатор
                                        тарифа

  periods \[\]        array\[object\]   Информация о      Периоды тарифа
                                        текущем периоде
  ---------------------------------------------------------------------------------

**body.body.periods \[\]**

  ------------------------------------------------------------------------
  Атрибут            Тип               Описание          Пример заполнения
  ------------------ ----------------- ----------------- -----------------
  periodName         string            Наименование      Доступные
                                       текущего периода  значения: PROMO,
                                                         START, STANDARD,
                                                         GRACE, HOLD

  periodType         string            Тип периода       Доступные
                                                         значения: DAY,
                                                         MONTH, YEAR

  periodDuration     number            Длительность      10
                                       периода

  periodPrice        number            Цена в            10000
                                       минимальной
                                       единице валюты
                                       (копейки)

  nextPeriod         string            Наименование      Доступные
                                       следующего        значения: PROMO,
                                       периода           START, STANDARD,
                                                         GRACE, HOLD
  ------------------------------------------------------------------------

**Пример ответа:**

  ----------------------------------------------------------------------------------------------------------------------
  \"code\":\"200\",\"message\":\"something\",\"timestamp\":\"2023-08-02T10:11:04.655684723+03:00\",\"body\": {  
   \`\`\"code\" :  40401 ,    \`\`\"success\" :  false ,    \`\`\"message\" :  \"Неизвестная ошибка\" ,    \`\`\"body\"
  : {      \`\`\"serviceName\" :  \"Okko\" ,      \`\`\"subscriptionId\" :  100500 ,      \`\`\"addParameters\" : 
  \"something\" ,      \`\`\"productType\" :  \"string\" ,      \`\`\"productName\" :  \"ОККО Оптимум\" ,    
   \`\`\"productCode\" :  \"string\" ,      \`\`\"recurrent\" :  true ,      \`\`\"countOfDay\" :  100 ,    
   \`\`\"periodType\" :  \"DAY\" ,      \`\`\"periodDuration\" :  30 ,      \`\`\"nextPaymentDate\" :  \"2021-03-23\"
  ,      \`\`\"price\" :  999 ,      \`\`\"currency\" :  \"RUB\" ,      \`\`\"imageUrl\" : 
  \"https://static-eu.insales.ru/images/products/1/7435/306650379/thumb_1586524817849_15832463664565053990106868.jpg\"
  ,      \`\`\"state\" :  \"ACTIVATED\" ,      \`\`\"currentPeriod\" :  \"STANDARD\" ,      \`\`\"debtPaymentPeriod\" : 
  \"string\" ,      \`\`\"description\" :  \"Описание\" ,      \`\`\"tariffId\" :  100500 ,      \`\`\"periods\" :
  \[        \`\`{          \`\`\"periodName\" :  \"STANDARD\" ,          \`\`\"periodType\" :  \"DAY\" ,        
   \`\`\"periodDuration\" : 10 ,          \`\`\"periodPrice\" : 10000 ,          \`\`\"nextPeriod\" : 
  \"STANDARD\"        \`\`}      \`\`\]  }}
  ----------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------

Валидация запроса

При получении запроса проверяется токен авторизации, полученный
методом получения токена авторизации:

-   владелец и/или приложение не должны быть заблокированы;

-   токен должен быть действительным;

-   код приложения application_code соответствует владельцу, получившему
    токен авторизации.

Получение данных подписки по токену подписки (V2)

Метод позволяет получить информацию о подписке по токену подписки.

Параметры взаимодействия

GET https://public-api.rustore.ru/public/glike/subscription/{packageName}/{subscriptionId}/{subscriptionToken}

  ----------------------------------------------------------------------------------------------------------
  **Атрибут**         **Тип**     **Описание**        **Обязательность**   **Расположение**   **Пример
                                                                                              заполнения**
  ------------------- ----------- ------------------- -------------------- ------------------ --------------
  Public-Token        string      Токен доступа к     Да                   header
                                  Public API Rustore

  packageName         string      Наименование пакета Да                   path
                                  приложения

  subscriptionId      string      Код                 Да                   path
                                  продукта-подписки

  subscriptionToken   string      Как получить токен  Да                   path               111.123
                                  подписки
  ----------------------------------------------------------------------------------------------------------

Параметры успешного ответа

  -----------------------------------------------------------------------------------------------------------------------------------------------
  **Атрибут**               **Тип**        **Описание**                              **Обязательность**   **Пример заполнения**
  ------------------------- -------------- ----------------------------------------- -------------------- ---------------------------------------
  startTimeMillis           string         Время предоставления подписки в           да                   1577826955637
                                           миллисекундах с начала эпохи.

  expiryTimeMillis          string         Время истечения срока действия подписки в да                   1609456386128
                                           миллисекундах с начала эпохи.

  autoRenewing              boolean        Будет ли подписка автоматически           да                   false
                                           продлеваться по истечении текущего срока
                                           действия.

  priceCurrencyCode         string         Код валюты ISO 4217 для цены подписки.    да                   RUB

  priceAmountMicros         string         Цена подписки. Цена выражается в          да                   749000000
                                           микроединицах, где 1 000 000 микроединиц
                                           представляет собой одну единицу валюты.
                                           Например, если цена подписки составляет
                                           1,99 евро, ценаAmountMicros равна
                                           1990000.

  countryCode               string         Код страны/региона выставления счетов     да                   RU
                                           пользователя на момент предоставления
                                           подписки.

  paymentState              int            Состояние оплаты подписки. Возможные      нет, только для      1
                                           значения: 0. Ожидание платежа 1.          активных подписок
                                           Получение платежа 2. Бесплатная пробная
                                           версия 3. Ожидание отложенного
                                           обновления/понижения.Отсутствует для
                                           отмененных подписок с истекшим сроком
                                           действия.

  cancelReason              int            Причина, по которой подписка была         нет, только для      0
                                           отменена или не продлевается              отмененных подписок
                                           автоматически. Возможные значения: 0.     со статусом CLOSED
                                           Пользователь отменил подписку 1. Подписка
                                           была отменена системой, например, из-за
                                           проблемы с оплатой 2. Подписка заменена
                                           новой подпиской 3. Подписка отменена
                                           разработчиком

  orderId                   string         Идентификатор счёта первого платежа,      да                   41456..3
                                           связанного с покупкой подписки. Если
                                           счетов по подписке более одного, к
                                           идентификатору добавляется их количество
                                           через разделитель ".."

  acknowledgementState      int            Состояние подтверждения продукта          да                   1
                                           подписки. Возможные значения: 0. Ещё не
                                           подтверждено 1. Подтверждено

  introductoryPriceInfo{}   object         Информация о промо периоде подписки.Это   нет, только для
                                           поле не указывает, что подписка в         подписок с периодом
                                           настоящее время находится в промо         PROMO
                                           периоде.

  kind                      string         Всегда передаётся значение                да                   androidpublisher#subscriptionPurchase
                                           "androidpublisher#subscriptionPurchase"

  purchaseType              int            Всегда передаётся значение "0"            да                   0
  -----------------------------------------------------------------------------------------------------------------------------------------------

introductoryPriceInfo

  -------------------------------------------------------------------------------------------------------
  **Атрибут**                     **Тип**        **Описание**         **Обязательность**   **Пример
                                                                                           заполнения**
  ------------------------------- -------------- -------------------- -------------------- --------------
  introductoryPriceCurrencyCode   string         Код валюты ISO 4217  нет, только для      RUB
                                                 для начальной цены   подписок с периодом
                                                 подписки             PROMO

  introductoryPriceAmountMicros   string         Начальная цена       нет, только для      599000000
                                                 подписки. Валюта     подписок с периодом
                                                 совпадает с          PROMO
                                                 priceCurrencyCode.
                                                 Цена выражается в
                                                 микроединицах, где 1
                                                 000 000 микроединиц
                                                 представляет собой
                                                 одну единицу валюты.
                                                 Например, если цена
                                                 подписки составляет
                                                 1,99 евро,
                                                 ценаAmountMicros
                                                 равна 1990000.

  introductoryPricePeriod         string         Период начальной     нет, только для      P1Y
                                                 цены, указанный в    подписок с периодом
                                                 формате ISO 8601.    PROMO
                                                 Например, «P1W»
                                                 (одна неделя), «P1M»
                                                 (один месяц), «P3M»
                                                 (три месяца), «P6M»
                                                 (шесть месяцев) и
                                                 «P1Y» (один год).

  introductoryPriceCycles         string         Количество расчетных нет, только для      1
                                                 периодов для         подписок с периодом
                                                 предложения          PROMO
                                                 начальной цены.
  -------------------------------------------------------------------------------------------------------

Пример ответа в JSON

  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  {"startTimeMillis": "1694431707000","expiryTimeMillis": "1697034507000","autoRenewing": true,"priceCurrencyCode": "RUB","priceAmountMicros": "749000000","countryCode": "RU","paymentState": 1,"orderId":
  "33252..1","acknowledgementState": 1,"kind": "androidpublisher#subscriptionPurchase","purchaseType": 0,"introductoryPriceInfo": { "introductoryPriceCurrencyCode": "RUB", "introductoryPriceAmountMicros":
  "599000000", "introductoryPricePeriod": "P1M", "introductoryPriceCycles": "1" }}
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Параметры ошибочного ответа

  --------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Описание**   **Обязательность**   **Пример
                                                                    заполнения**
  -------------- -------------- -------------- -------------------- --------------
  error{}        object         Объект с       Да, если код ответа
                                данными ошибки !=200

  --------------------------------------------------------------------------------

error

  --------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Описание**   **Обязательность**   **Пример
                                                                    заполнения**
  -------------- -------------- -------------- -------------------- --------------
  code           number         http-код       Да
                                ответа

  message        string         Расшифровка    Нет
                                кода ответа
  --------------------------------------------------------------------------------

message

  -----------------------------------------------------------------------
  code                                message
  ----------------------------------- -----------------------------------
  400                                 The subscription purchase token
                                      does not match the subscription ID.

  404                                 No subscription purchase matches
                                      the subscription ID.
  -----------------------------------------------------------------------

Получение статуса подписки по токену подписки

Метод позволяет получить информацию о статусе подписки по токену
подписки.

Параметры взаимодействия

GET https://public-api.rustore.ru/public/subscription/{subscriptionToken}/state
 

  ----------------------------------------------------------------------------------------
  Атрибут             Тип         Описание    Обязательность   Расположение   Пример
                                                                              заполнения
  ------------------- ----------- ----------- ---------------- -------------- ------------
  Public-Token        string      Токен       Да               header
                                  доступа к
                                  Public API
                                  Rustore

  subscriptionToken   string      Как         Да               path           111.123
                                  получить
                                  токен
                                  подписки
  ----------------------------------------------------------------------------------------

Параметры ответа

  ---------------------------------------------------------------------------------------------------------
  Атрибут      Тип           Описание      Обязательность   Расположение   Пример заполнения
  ------------ ------------- ------------- ---------------- -------------- --------------------------------
  code         string        Код ответа    Да               body           ОК,ERROR,BAD_REQUEST,NOT_FOUND

  message      string        Расшифровка   Нет              body
                             кода ответа

  timestamp    timestamptz   Время запроса Да               body

  body{}       object        Тело ответа   Нет              body
  ---------------------------------------------------------------------------------------------------------

**body{}**

  -----------------------------------------------------------------------------------
  Атрибут      Тип         Описание      Обязательность   Расположение   Пример
                                                                         заполнения
  ------------ ----------- ------------- ---------------- -------------- ------------
  is_active    boolean     Флаг          Да               body.body{}    true
                           активности
                           подписки.-
                           true ---
                           подписка
                           активна, в
                           одном из
                           периодов:
                           PROMO, START,
                           STANDARD,
                           GRACE- false
                           --- подписка
                           не активна: в
                           HOLD периоде
                           или
                           завершилась

  -----------------------------------------------------------------------------------

**Пример ответа:**

  ---------------------------------------------------------------------------------------------------------------------------
  \"code\":\"200\",\"message\":\"something\",\"timestamp\":\"2023-08-02T10:11:04.655684723+03:00\",\"body\":{\"is_active\":
  \"true\"}
  ---------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------

Валидация запроса

При получении запроса проверяется токен авторизации, полученный
методом получения токена авторизации:

-   владелец и/или приложение не должны быть заблокированы;

-   токен должен быть действительным;

-   подписка приобретена в приложении, владельцем которого является
    компания, получившая токен доступа к Public API.

Подтверждение получения подписки по токену подписки

Метод позволяет подтвердить выдачу пользователю контента по подписке по
токену подписки.

Подтверждение получения подписки не является обязательным для работы
подписок.

Параметры взаимодействия

POST
https://public-api.rustore.ru/public/glike/subscription/{packageName}/{subscriptionId}/{purchaseToken}:acknowledge

  -------------------------------------------------------------------------------------------------------
  **Атрибут**      **Тип**     **Описание**        **Обязательность**   **Расположение**   **Пример
                                                                                           заполнения**
  ---------------- ----------- ------------------- -------------------- ------------------ --------------
  Public-Token     string      Токен доступа к     да                   header
                               Public API Rustore

  packageName      string      Наименование пакета да                   path
                               приложения

  subscriptionId   string      Код                 да                   path
                               продукта-подписки

  purchaseToken    string      Как получить токен  да                   path
                               подписки
  -------------------------------------------------------------------------------------------------------

Параметры успешного ответа

При успешном ответе response body пустой.

Валидация запроса

При получении запроса проверяется токен авторизации, полученный
методом получения токена авторизации:

-   владелец и/или приложение не должны быть заблокированы;

-   токен должен быть действительным;

-   подписка приобретена в приложении, владельцем которого является
    компания, получившая токен доступа к Public API.

Загрузка и публикация приложений с помощью API RuStore

-   Перед публикацией версии приложения выполните следующее:

    -   Создайте черновик версии с информацией о приложении --- метод
        «Создание черновика версии»;

    -   Загрузите APK --- метод «Загрузка APK-файла»;

    -   Загрузите изображения --- методы «Загрузка иконки приложения» и
        «Загрузка скриншотов».

<!-- -->

-   Черновики невозможно редактировать, но можно удалить, используя
    метод «Удаление черновика».

-   После заполнения всей информации версию можно отправить на
    модерацию  --- метод «Отправка на модерацию черновика версии
    приложения».

-   Получить список версий приложения их базовую информацию и статус ---
    метод «Получение статуса версий приложений».

-   Изменить настройки публикации (тип публикации, дату для отложенной
    публикации, а также % для частичной публикации) --- метод «Изменение
    настроек публикации».

-   После прохождения модерации и выбранном типе публикации --- ручная,
    можно опубликовать версию с помощью метода --- «Ручная публикация».

Обращаем ваше внимание, что для использования RuStore API необходимо
иметь хотя бы 1 активную версию приложения в RuStore Консоли.

Создание черновика версии

Метод позволяет создать черновик версии и заполнить его основной
информацией.

Ограничения:

-   для одного приложения можно создать только один черновик. Попытка
    создания нескольких черновиков вызовет ошибку;

-   черновики, отправленные по API, не отображаются в веб-версии консоли
    разработчика. Они станут доступны после отправки APK на модерацию и
    при изменении статуса версии приложения;

-   создание черновика возможно только при наличии активной версии
    приложения;

-   отсутствующие данные в полях черновика будут взяты из активной
    версии приложения;

-   черновик должен соответствовать типу приложения --- бесплатное или
    платное. В случае отправки платной версии для бесплатного приложения
    черновик будет обрабатываться как бесплатный;

-   для каждого типа версии приложения (appType) есть соответствующие
    категории версии. В случае несоответствия категории, при попытке
    загрузки приложения будет показана ошибка;

-   частичная публикация приложения возможна только при автоматическом
    (INSTANTLY) или ручном (MANUAL) типе публикации (параметр ---
    publishType).

Параметры взаимодействия

**POST**
https://public-api.rustore.ru/public/v1/application/{packageName}/version

  ------------------------------------------------------------------------------------------------------------------------------------------
  Атрибут                Тип           Обязателен    Расположение   Описание                             Пример заполнения
  ---------------------- ------------- ------------- -------------- ------------------------------------ -----------------------------------
  Public-Token           string        Да            header         Токен доступа к Public API Rustore

  packageName            string        Да            path           Наименование пакета приложения       com.myapp.example

  appName                string        Нет           body           Наименование версии                  Моё приложение
                                                                    приложения Максимальная длина --- 50
                                                                    символов

  appType                string        Нет           body           Тип версии приложенияВозможные       GAMES
                                                                    значения:● GAMES --- для игр;● MAIN
                                                                    --- для неигровых
                                                                    приложений.Передаваемые категории
                                                                    должны быть уникальными в рамках
                                                                    одного запроса

  categories             string        Нет           body           Категории версииМаксимальное         "health", "news"
                                                                    количество категорий --- 2 категории

  ageLegal               string        Нет           body           Возрастная категорияВозможные        7+
                                                                    варианты: ● «18+»; ● «16+»; ●
                                                                    «12+»; ● «7+»; ● «3+».

  shortDescription       string        Нет           body           Краткое описание версииМаксимальная
                                                                    длина --- 80 символов

  fullDescription        string        Нет           body           Полное описание версииМаксимальная
                                                                    длина --- 4 000 символов

  whatsNew               string        Нет           body           Описание «Что нового»Максимальная
                                                                    длина --- 500 символов

  moderInfo              string        Нет           body           Комментарий разработчика для
                                                                    модератораМаксимальная длина --- 180
                                                                    символов

  priceValue             string        Нет           body           Стоимость приложения в минимальных   8799
                                                                    единицах валюты (в копейках),
                                                                    например, «87.99 руб.» =
                                                                    8799Значение должно быть \>0

  publishType(NEW)       string        Нет           body           **Тип публикации**Может принимать    MANUAL
                                                                    значения:- MANUAL --- ручная
                                                                    публикация;- INSTANTLY ---
                                                                    автоматическая публикация, сразу
                                                                    после прохождения модерации;-
                                                                    DELAYED --- отложенная
                                                                    публикации.Примечание: если данный
                                                                    параметр не указан, то по умолчанию
                                                                    он принимается за INSTANTLY.

  publishDateTime(NEW)   timestamptz   НетДа, если   body           Дата и время для отложенной          2022-07-08T13:24:41.8328711+03:00
                                       publishType =                публикации:формат:
                                       DELAYED.                     yyyy-MM-dd'T'HH:mm:ssXXX.Указанная
                                                                    дата должна быть не раньше 24 часов
                                                                    и не позже 60 дней с планируемой
                                                                    даты отправки на модерацию. В
                                                                    дальнейшем дату отложенной
                                                                    публикации можно будет
                                                                    поменять.Примечание: если
                                                                    publishType указан MANUAL или
                                                                    INSTANTLY, данный параметр может
                                                                    быть любым и не будет учитываться.

  partialValue(NEW)      number        Нет           body           Процент для частичной публикации     5
                                                                    приложенияМожет принимать значения:-
                                                                    5%- 10%- 25%- 50%- 75%- 100%
  ------------------------------------------------------------------------------------------------------------------------------------------

Параметры ответа

  -----------------------------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Описание       Пример заполнения
  -------------- -------------- -------------- -------------- -----------------------------------
  code           string         Да             Код ответа     error/OK

  message        string         Нет            Расшифровка
                                               кода ответа

  timestamp      timestamptz    Да             Время ответа   2022-07-08T13:24:41.8328711+03:00

  content{}      object         Да
  -----------------------------------------------------------------------------------------------

content

  --------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Описание       Пример
  -------------- -------------- -------------- -------------- --------------
  versionId      number         Да             Версия         243242
                                               приложения

  --------------------------------------------------------------------------

Пример


  curl--location--requestPOST'https://public-api.rustore.ru/public/v1/application/com.package.com/version'\<br\>--header'Content-Type:application/json'\<br\>--header'Public-Token:{YOURtoken}'\<br\>--data-raw'{"appName":"ПриложениедляRuStore","appType":"MAIN","categories":\["news","education"\],"ageLegal":"7+","shortDescription":"ПриложениедляRuStore","fullDescription":"fullDescription-ПриложениедляRuStore","whatsNew":"whatsNew-ПриложениедляRuStore","moderInfo":"moderInfo-ПриложениедляRuStore","priceValue":1100}'  




**Пример ответа**

  ---------------------------------------------------------------------------------------------------------------
  {    "code": "OK",    "message": null,    "body": 243242,    "timestamp": "2023-07-27T10:28:59.039649+03:00"}
  ---------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------

Загрузка APK-файла

Метод позволяет загрузить файл с расширением .apk для публикации.

APK-файл для версии можно обновлять.

Ограничения:

-   файл только с расширением .apk;

-   размер файла --- не более 2.5 Гб;

-   загружаемая версия APK должна быть выше, чем текущая активная.

Можно загрузить сразу два APK-файла:

-   с разными подписями разработчика --- чтобы исключить ошибки
    обновления у пользователей. При скачивании на витрине RuStore отдаст
    файл с аналогичной подписью для каждого пользователя отдельно.

-   с поддержкой разных сервисов (Huawei Mobile Services и Google Mobile
    Services) --- чтобы RuStore отдал на скачивание пользователю
    APK-файл, который включает сервисы адаптированные под его
    устройство.

-   при загрузке нескольких файлов обязательно укажите в каком из них
    Huawei Mobile Services и какой файл будет доступен всем
    пользователям по умолчанию. Загрузить можно не более 10 файлов.

Обращаем ваше внимание на то, что в рамках обновления 20 июля был
добавлен️ обязательный параметр IsMainApk в метод ниже. Также просим вас
обновить пайплайны.

Параметры взаимодействия

**POST**
https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/apk

  -----------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Расположение   Описание
  -------------- -------------- -------------- -------------- -----------------
  Public-Token   string         Да             header         Токен доступа к
                                                              Public API
                                                              Rustore

  packageName    string         Да             path           Имя пакета
                                                              приложения

  versionId      number         Да             path           Версия приложения

  servicesType   string         Нет            query          Тип сервиса,
  (NEW)                                                       используемый в
                                                              приложении.
                                                              Возможные
                                                              варианты:- HMS
                                                              --- для
                                                              APK-файлов c
                                                              Huawei Mobile
                                                              Servises, -
                                                              Unknown ---
                                                              устанавливается
                                                              по умолчанию,
                                                              если поле не
                                                              заполнено

  isMainApk      boolean        Да             query          Признак, который
  (NEW)                                                       присваивается
                                                              основному
                                                              apk-файлу.
                                                              Значения:- true
                                                              --- основной
                                                              APK-файл- false
                                                              --- по умолчанию
  -----------------------------------------------------------------------------

form data

  --------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Расположение   Описание
  -------------- -------------- -------------- -------------- --------------
  file           multipart      Да                            Файл в виде
                                                              двоичного кода

  --------------------------------------------------------------------------

Параметры ответа

  -----------------------------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Описание       Пример заполнения
  -------------- -------------- -------------- -------------- -----------------------------------
  code           string         Да             Код ответа     error/OK

  message        string         Нет            Расшифровка    Детализация ошибки. Возможные
                                               кода ответа    варианты: - Уже загружено
                                                              максимальное количество аpk-файлов
                                                              / Maximum number of apk files is
                                                              already uploaded- Уже загружен
                                                              основной apk-файл / Main apk file
                                                              is already uploaded- Уже загружен
                                                              HMS apk-файл / Apk file with the
                                                              Huawei Mobile Services is already
                                                              uploaded- Файл с Huawei Mobile
                                                              Services не может быть основным /
                                                              Apk file with the Huawei Mobile
                                                              Services can not be main file- Вы
                                                              загрузили apk-файл c другим
                                                              кодом-версии / Apk file has
                                                              different version code than the one
                                                              previously uploaded- Код версии
                                                              должен быть выше, чем загруженный
                                                              ранее / The code of this version
                                                              must be larger than that of the
                                                              previous one- Версия не совпадает с
                                                              предыдущей / The package does not
                                                              match the previous version- Версия
                                                              с таким именем уже существует / A
                                                              package with this name already
                                                              exists. Rename the package.

  timestamp      timestamptz    Да             Время ответа   2022-07-08T13:24:41.8328711+03:00
  -----------------------------------------------------------------------------------------------

Пример

  --------------------------------------------------------------------------------------------------------------------------------
  curl --location --request POST
  'https://public-api.rustore.ru/public/v1/application/com.package.example/version/123/apk?servicesType=Unknown&isMainApk=true''
  \<br\>--header 'Public-Token: {YOURtoken}' \<br\>--form 'file=@"/Users/User/Downloads/package.apk"'
  --------------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------------

Загрузка иконки приложения

Метод позволяет загрузить иконку приложения.

Ограничения:

-   файл только с расширением .jpeg и .png;

-   размер файла --- не более 3 Мб;

-   размеры загружаемого изображения --- 512×512 рх.

Параметры взаимодействия

**POST**
https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/image/icon

  ---------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Расположение   Описание
  -------------- -------------- -------------- -------------- ---------------
  Public-Token   string         Да             header         Токен доступа к
                                                              Public API
                                                              Rustore

  packageName    number         Да             path           Идентификатор
                                                              приложения

  versionId      number         Да             path           Версия
                                                              приложения
  ---------------------------------------------------------------------------

Form data

  ----------------------------------------------------------------------------
  Атрибут            Тип                   Обязателен        Описание
  ------------------ --------------------- ----------------- -----------------
  file               multipart/form-data   Да                Файл

  ----------------------------------------------------------------------------

Параметры ответа

  -----------------------------------------------------------------------------------------------
  Атрибут        Тип            Обяз.          Описание       Пример заполнения
  -------------- -------------- -------------- -------------- -----------------------------------
  code           string         Да             Код ответа     error/OK

  message        string         Нет            Расшифровка
                                               кода ответа

  timestamp      timestamptz    Да             Время ответа   2022-07-08T13:24:41.8328711+03:00
  -----------------------------------------------------------------------------------------------

Пример

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl--location--requestPOST'https://public-api.rustore.ru/public/v1/application/com.package.example/version/123/image/icon'\<br\>--header'Content-Type:application/json'\<br\>--header'Public-Token:{YOURtoken}'\<br\>--form'file=@"/Users/User/Downloads/img.jpg"'
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Загрузка скриншотов

Метод позволяет загрузить скриншоты приложения.

**Ограничения:**

-   скриншоты могут быть вертикальными или горизонтальными;

-   соотношение сторон для скриншотов --- 16:9 (вертикальные) и 9:16
    (горизонтальные);

-   стороны загружаемого файла --- не менее 320px и не более 3 840px;

-   формат загружаемого файла --- .jpg или .png;

-   размер файла --- не более 3 Мб;

-   запрещена загрузка скриншотов разной ориентации. Например,
    пользователь загрузил вертикальную ориентацию (PORTRAIT) и хочет
    загрузить горизонтальную (LANDSCAPE) --- запрос вернёт ошибку;

-   при загрузке более чем 10 скриншотов уже существующие скриншоты
    станут неактивными. Например, если загрузить два скриншота с
    параметром "ordinal" = 7 активным скриншотом будет последний
    загруженный.

Параметры взаимодействия

POSThttps://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/image/screenshot/{orientation}/{ordinal}

  ----------------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Расположение   Описание
  -------------- -------------- -------------- -------------- ----------------------
  Public-Token   string         Да             header         Токен доступа к Public
                                                              API Rustore

  packageName    number         Да             path           Идентификатор
                                                              приложения

  versionId      number         Да             path           Версия приложения

  orientation    string         Да             path           Ориентация
                                                              изображенияВозможные
                                                              варианты:● LANDSCAPE
                                                              --- горизонтальная
                                                              ориентация;● PORTRAIT
                                                              ---  вертикальная
                                                              ориентация.

  ordinal        number         Да             path           Порядковый номер
                                                              скриншотаВозможные
                                                              значения:от 0 до 9
  ----------------------------------------------------------------------------------

Form data

  ----------------------------------------------------------------------------
  Атрибут            Тип                   Обязателен        Описание
  ------------------ --------------------- ----------------- -----------------
  file               multipart/form-data   Да                Файл

  ----------------------------------------------------------------------------

Параметры ответа

  -----------------------------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Описание       Пример заполнения
  -------------- -------------- -------------- -------------- -----------------------------------
  code           string         Да             Код ответа     error/OK

  message        string         Нет            Расшифровка
                                               кода ответа

  timestamp      timestamptz    Да             Время ответа   2022-07-08T13:24:41.8328711+03:00
  -----------------------------------------------------------------------------------------------

Пример

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl --location --request POST 'https://public-api.rustore.ru/public/v1/application/com.package.example/version/123/image/screenshot/landscape/1' \<br\>--header 'Content-Type: application/json' \<br\>--header 'Public-Token: {YOURtoken}' \<br\>--form 'file=@"/Users/User/Downloads/img.jpg"'
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Изменение настроек публикации

Метод позволяет изменить тип публикации, дату отложенной публикации и %
для частичной публикации версии.

Ограничения:

-   значение % для частичной публикации возможно редактировать только в
    большую сторону;

-   если partialValue --- 100, приложение считается полностью
    раскатанным;

-   можно менять или параметр partialValue или publishType и
    publishDateTime (для отложенной публикации).

Параметры взаимодействия

POST
https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/publish-settings

  -----------------------------------------------------------------------------------------------------------------------------------------
  **Атрибут**       **Тип**       **Обяз.**     **Расположение**   **Описание**                         **Пример заполнения**
  ----------------- ------------- ------------- ------------------ ------------------------------------ -----------------------------------
  Public-Token      string        Да            header             Токен доступа к Public API Rustore

  packageName       string        Да            path               Имя пакета приложения

  versionId         number        Да            path               Версия приложения

  publishType       string        Нет           body               Тип публикацииМожет принимать        MANUAL
                                                                   значения:- MANUAL --- ручная
                                                                   публикация.- INSTANTLY ---
                                                                   автоматическая публикация, сразу
                                                                   после прохождения модерации.-
                                                                   DELAYED --- отложенная публикации.

  publishDateTime   timestamptz   НетДа, если   body               Дата и время для отложенной          2022-07-08T13:24:41.8328711+03:00
                                  publishType =                    публикации:формат:
                                  DELAYED                          yyyy-MM-dd'T'HH:mm:ssXXX.Указанная
                                                                   дата должна быть не раньше 24 часов
                                                                   и не позже 60 дней с планируемой
                                                                   даты отправки на модерацию. В
                                                                   дальнейшем дату отложенной
                                                                   публикации можно будет
                                                                   поменять.Примечание: если
                                                                   publishType указан MANUAL или
                                                                   INSTANTLY, данный параметр может
                                                                   быть любым и не будет учитываться.

  partialValue      number        Нет           body               Процент для частичной публикации     5
                                                                   приложенияМожет принимать значения:-
                                                                   5%- 10%- 25%- 50%- 75%- 100%
  -----------------------------------------------------------------------------------------------------------------------------------------

Параметры ответа

  -----------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обяз.**      **Описание**   **Пример заполнения**
  -------------- -------------- -------------- -------------- -----------------------------------
  code           string         Да             Код ответа     error/OK

  message        string         Нет            Расшифровка
                                               кода ответа

  timestamp      timestamptz    Да             Время ответа   2022-07-08T13:24:41.8328711+03:00
  -----------------------------------------------------------------------------------------------

**Пример для изменения % для частичной раскатки**

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl --location 'https://public-api.rustore.ru/public/v1/application/com.example.pblsh_v2/version/704372/publish-settings' \<br\>--header 'accept: application/json' \<br\>--header 'Content-Type: application/json' \<br\>--header 'Public-Token: {YOURtoken}\<br\>--data '{"partialValue": 100}'
  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Пример ответа**

  ----------------------------------------------------------------------------------------------------------------
  {    "code": "OK",    "message": null,    "body": null,    "timestamp": "2023-08-14T15:35:12.701709488+03:00"}
  ----------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------

Получение статуса версий приложений

Метод позволяет получить базовую информацию по версии, а также проверить
статус версии

Ограничения:

-   по умолчанию на каждой странице отображается по 20 версий, вы можете
    отображать до 100 версий на странице, указав значение в параметре
    size;

-   совместно использовать параметры пагинации и фильтрации по 1 версии
    --- нельзя (либо пагинация с указанием пары параметров page и size
    либо ids).

Параметры взаимодействия

GET
https://public-api.rustore.ru/public/v1/application/{packageName}/version?ids=704095&page=0&size=2

  ----------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**     **Обяз.**   **Расположение**   **Описание**           **Пример
                                                                                   заполнения**
  -------------- ----------- ----------- ------------------ ---------------------- -------------------
  Public-Token   string      Да          header             Токен доступа к Public
                                                            API Rustore

  packageName    string      Да          path               Имя пакета приложения  com.myapp.example

  ids            number      Нет         query              id конкретной          743103
                                                            версииЗадается при
                                                            необходимости получить
                                                            конкретную версию

  page           number      Нет         query              Номер                  0
                                                            страницы. Начинается с
                                                            0

  size           number      Нет         query              Количество отзывов на  100
                                                            странице.По умолчанию
                                                            --- 20 Максимально ---
                                                            100
  ----------------------------------------------------------------------------------------------------

Параметры ответа

  -----------------------------------------------------------------------------------------------
  Атрибут        Тип            Обяз.          Описание       Пример заполнения
  -------------- -------------- -------------- -------------- -----------------------------------
  code           string         Да             Код ответа     error/OK

  message        string         Нет            Расшифровка
                                               кода ответа

  timestamp      timestamptz    Да             Время ответа   2022-07-08T13:24:41.8328711+03:00

  body{}         object         Да
  -----------------------------------------------------------------------------------------------

**body{}**

  ---------------------------------------------------------------------------
  **Атрибут**     **Тип**        **Обяз.**      **Описание**   **Пример**
  --------------- -------------- -------------- -------------- --------------
  content\[\]     massive        Да             массив,
                                                содержащий
                                                список версий

  pageNumber      number         Да             Номер текущей  0
                                                страницы

  pageSize        number         Да             Размер         2
                                                страницы

  totalElements   number         Да             Всего          5
                                                элементов

  totalPages      number         Да             Всего страниц  3
  ---------------------------------------------------------------------------

**content\[\]**

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  **Атрибут**        **Тип**        **Обяз.**      **Описание**   **Пример**
  ------------------ -------------- -------------- -------------- -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  versionId          number         Да             id версии      704372

  appName            string         Да             Название       Тест АПИ
                                                   приложения

  appType            string         Да             Тип приложения MAIN или GAME

  versionName        string         Да             Имя версии     1.0

  versionCode        number         Да             Код версии     6

  versionStatus      string         Да             Статус версии  Возможные
                                                                  занченияACTIVE,PARTIAL_ACTIVE,READY_FOR_PUBLICATION,PREVIOUS_ACTIVE,ARCHIVED,REJECTED_BY_MODERATOR,TAKEN_FOR_MODERATION,MODERATION,AUTO_CHECK,AUTO_CHECK_FAILED,DRAFT,DELETED_DRAFT,REJECTED_BY_SECURITY;

  publishType        string         Да             тип публикации Возможные значения- MANUAL- INSTANTLY- DELAYED

  publishDateTime    timestamptz    Да             время          2023-08-04T09:36:06.431+00:00
                                                   отложенной
                                                   публикации

  sendDateForModer   timestamptz    Да             Время отправки 2023-08-11T12:03:06.303+00:00
                                                   на модерацию

  partialValue       number         Да             \% для         -1 = 100%Остальные значения соответвуют
                                                   частичной
                                                   публикации

  whatsNew           string         Да             Что нового?    Исправили баги

  priceValue         number         Да             Цена, если     0
                                                   приложение
                                                   платное

  paid               boolean        Да             Платное ли     true/false
                                                   приложение
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Пример запроса**

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl --location 'https://public-api.rustore.ru/public/v1/application/com.example.pblsh_v2/version?page=0&size=2' \<br\>--header 'accept: application/json' \<br\>--header 'Public-Token: {YOURtoken}'
  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Пример ответа**


  {    "code": "OK",    "message": null,    "body": {        "content": \[            {                "versionId": 704372,                "appName": "Тест АПИ",                "appType": "MAIN",                "versionName": "1.0",                "versionCode": 6,                "versionStatus": "ACTIVE",                "publishType": "MANUAL",                "publishDateTime": "2023-08-14T12:34:43.925+00:00",                "sendDateForModer": "2023-08-11T12:03:06.303+00:00",                "partialValue": -1,                "whatsNew": "Исправили баги",                "priceValue": 0,                "paid": false            },            {                "versionId": 704197,                "appName": "PO test API",                "appType": "MAIN",                "versionName": "1.0",                "versionCode": 1,                "versionStatus": "PREVIOUS_ACTIVE",                "publishType": "INSTANTLY",                "publishDateTime": "2023-08-04T09:36:06.431+00:00",                "sendDateForModer": "2023-08-04T09:20:23.551+00:00",                "partialValue": -1,                "whatsNew": "Первая версия",                "priceValue": 0,                "paid": false            }        \],        "pageNumber": 0,        "pageSize": 2,        "totalElements": 2,        "totalPages": 1    },    "timestamp": "2023-08-14T15:38:50.413186769+03:00"}




Отправка на модерацию черновика версии приложения

Метод для отправки на модерацию черновика версии приложения

Параметры взаимодействия

POSThttps://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/commit?priorityUpdate={priorityUpdate}

  -----------------------------------------------------------------------------------------
  **Атрибут**      **Тип**        **Обязателен**   **Расположение**   **Описание**
  ---------------- -------------- ---------------- ------------------ ---------------------
  Public-Token     string         Да               header             Токен доступа к
                                                                      Public API Rustore

  packageName      string         Да               path               Имя пакета приложения

  versionId        number         Да               path               Версия приложения

  priorityUpdate   number         Нет              query              Приоритет
                                                                      обновленияВозможные
                                                                      значения:От 0 до 5,
                                                                      где 0 ---
                                                                      минимальный, а 5
                                                                      --- максимальныйПо
                                                                      умолчанию равно 0
  -----------------------------------------------------------------------------------------

Параметры ответа

  -------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример заполнения**
  -------------- -------------- ---------------- -------------- -----------------------------------
  code           string         Да               Код ответа     error/OK

  message        string         Нет              Расшифровка    Детализация ошибки. Возможные
                                                 кода ответа    значения: - Загрузите хотя бы один
                                                                основной APK-файл с сервисом
                                                                отличным от  HMS /  Version must
                                                                have at least one main non-HMS
                                                                apk-file- Вы не можете загрузить
                                                                файлы только с Huawei Mobile
                                                                Services / Version must have not
                                                                only HMS apk-file- Вы не загрузили
                                                                APK при создании черновика
                                                                / Packages for version with id = Is
                                                                not found.

  timestamp      timestamptz    Да               Время ответа   2022-07-08T13:24:41.8328711+03:00
  -------------------------------------------------------------------------------------------------

Ручная публикация

Метод позволяет опубликовать версию, прошедшую модерацию вручную.

Ограничения:

-   опубликовать версию можно только после прохождения модерации;

-   опубликовать версию если тип публикации указан вручную.

Параметры взаимодействия

POST
https://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}/publish

  ------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обяз.**      **Расположение**   **Описание**
  -------------- -------------- -------------- ------------------ --------------
  Public-Token   string         Да             header             Токен доступа
                                                                  к Public API
                                                                  Rustore

  packageName    string         Да             path               Имя пакета
                                                                  приложения

  versionId      number         Да             path               Версия
                                                                  приложения
  ------------------------------------------------------------------------------

Параметры ответа

  -----------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обяз.**      **Описание**   **Пример заполнения**
  -------------- -------------- -------------- -------------- -----------------------------------
  code           string         Да             Код ответа     error/OK

  message        string         Нет            Расшифровка
                                               кода ответа

  timestamp      timestamptz    Да             Время ответа   2022-07-08T13:24:41.8328711+03:00
  -----------------------------------------------------------------------------------------------

**Пример запроса**

  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl --location --request POST 'https://public-api.rustore.ru/public/v1/application/com.example.pblsh_v2/version/704372/publish' \<br\>--header 'accept: application/json' \<br\>--header 'Public-Token: {YOURtoken}'
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Пример ответа**

  ----------------------------------------------------------------------------------------------------------------
  {    "code": "OK",    "message": null,    "body": null,    "timestamp": "2023-08-14T15:34:44.016339151+03:00"}
  ----------------------------------------------------------------------------------------------------------------

  ----------------------------------------------------------------------------------------------------------------

Удаление черновика

Метод для удаления созданных ранее черновиков.

Ограничения:

-   удалению подлежат только те версии, которые еще не были
    опубликованы.

Параметры взаимодействия

DELETEhttps://public-api.rustore.ru/public/v1/application/{packageName}/version/{versionId}

  --------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Расположение**   **Описание**
  -------------- -------------- ---------------- ------------------ --------------
  Public-Token   string         Да               header             Токен доступа
                                                                    к Public API
                                                                    Rustore

  packageName    string         Да               path               Имя пакета
                                                                    приложения

  versionId      number         Да               path               Версия
                                                                    приложения
  --------------------------------------------------------------------------------

Параметры ответа

  -------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример заполнения**
  -------------- -------------- ---------------- -------------- -----------------------------------
  code           string         Да               Код ответа     error/OK

  message        string         Нет              Расшифровка
                                                 кода ответа

  timestamp      timestamptz    Да               Время ответа   2022-07-08T13:24:41.8328711+03:00
  -------------------------------------------------------------------------------------------------

Пример

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl --location --request DELETE 'https://public-api.rustore.ru/public/v1/application/com.package.example/version/123' \<br\>--header 'Content-Type: application/json' \<br\>--header 'Public-Token: {YOURtoken}'
  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Список категорий приложений

  ------------------------------------------------------------------------
  Название категории       Перевод                 Тип версии приложения
  ------------------------ ----------------------- -----------------------
  business                 Бизнес-сервисы          MAIN

  state                    Государственные         MAIN

  foodAndDrink             Еда и напитки           MAIN

  health                   Здоровье                MAIN

  books                    Книги                   MAIN

  news                     Новости и события       MAIN

  lifestyle                Образ жизни             MAIN

  education                Образование             MAIN

  social                   Общение                 MAIN

  adsAndServices           Объявления и услуги     MAIN

  pets                     Питомцы                 MAIN

  purchases                Покупки                 MAIN

  tools                    Полезные инструменты    MAIN

  travelling               Путешествия             MAIN

  entertainment            Развлечения             MAIN

  parenting                Родителям               MAIN

  sport                    Спорт                   MAIN

  gambling                 Ставки и лотереи        MAIN

  transport                Транспорт и навигация   MAIN

  finance                  Финансы                 MAIN

  arcade                   Аркады                  GAMES

  quiz                     Викторины               GAMES

  puzzle                   Головоломки             GAMES

  race                     Гонки                   GAMES

  children                 Дети                    GAMES

  ar                       Игры с AR               GAMES

  indie                    Инди                    GAMES

  casino                   Казино                  GAMES

  casual                   Казуальные              GAMES

  card                     Карточные               GAMES

  music                    Музыка                  GAMES

  board                    Настольные игры         GAMES

  adventure                Приключения             GAMES

  rolePlaying              Ролевые                 GAMES

  family                   Семейные                GAMES

  simulator                Симуляторы              GAMES

  word                     Словесные игры          GAMES

  sports                   Спортивные игры         GAMES

  strategy                 Стратегии               GAMES

  action                   Экшен                   GAMES
  ------------------------------------------------------------------------

Работа с отзывами с помощью RuStore API

Общий процесс работы с отзывами

-   Разработчик может получить отзывы на приложение:

    -   с помощью метода «Получение отзывов приложения»;

    -   в формате CSV --- метод «Получение отзывов в формате .csv»;

<!-- -->

-   Разработчик может ответить на отзыв, оставленный пользователем ---
    метод «Оставить ответ на отзыв»;

-   Узнать статус модерации ответа на отзыв --- метод «Получение статуса
    ответа на отзыв»;

-   Можно изменить уже опубликованный ответ на отзыв --- метод
    «Изменение ответа на отзыв»;

-   Доступно удаление ответа на отзыв --- метод «Удаление ответа на
    отзыв»;

-   Получить рейтинг приложения --- метод «Получение рейтинга
    приложения».

Для всех методов необходимо получить токен доступа к RuStore API. Срок
жизни токена --- 15 минут.

**Возможные варианты кодов ошибок**

  -----------------------------------------------------------------------
  Код                                 Значение
  ----------------------------------- -----------------------------------
  200                                 OK

  400                                 Неправильный запрос

  401                                 Не авторизован

  404                                 Не найдено

  500                                 Внутренняя ошибка сервера
  -----------------------------------------------------------------------

**Пример ответа в случае ошибки**

  ------------------------------------------------------------------------------------------------
  {"code":"ERROR","message":"404","body":null,"timestamp":"2023-05-30T20:08:14.120231216+03:00"}
  ------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------------

Получение отзывов приложения

Метод позволяет получить список всех последних отзывов для вашего
приложения или получить отдельно взятый отзыв.

Ограничения:

-   по умолчанию на каждой странице отображается по 20 отзывов, вы
    можете отображать до 100 отзывов на странице, указав значение в
    параметре size;

-   совместно использовать параметры пагинации и фильтрации по 1 отзыву
    --- нельзя (либо пагинация с указанием пары параметров page и size
    либо id);

-   если пользователь отредактировал отзыв, то отзыву присваивается
    обновленный id отзыва и признак редактирования отзыва (edited)
    принимает значение true;

-   по умолчанию сортировка производится по дате публикации отзыва
    (параметр updatedAt) от наиболее свежего отзыва.

Параметры взаимодействия

**GET**
https://public-api.rustore.ru/public/v1/application/{packageName}/comment?id={id}&page={number}&size={size}

  -------------------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**     **Обязателен**   **Расположение**   **Описание**               **Пример
                                                                                            заполнения**
  -------------- ----------- ---------------- ------------------ -------------------------- -------------------
  Public-Token   string      Да               header             Токен доступа к RuStore
                                                                 API

  packageName    string      Да               path               Наименование пакета        com.myapp.example
                                                                 приложения. Максимальная
                                                                 длина -- 50 символов

  id             number      Нет              query              Id конкретного             743103
                                                                 отзыва. Задается при
                                                                 необходимости получить
                                                                 конкретный отзыв

  page           number      Нет              query              Номер страницы. Начинается 0
                                                                 с 0

  size           number      Нет              query              Количество отзывов на      100
                                                                 странице. По умолчанию ---
                                                                 20 Максимально --- 100
  -------------------------------------------------------------------------------------------------------------

Параметры ответа

  -------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример заполнения**
  -------------- -------------- ---------------- -------------- -----------------------------------
  code           string         Да               Код ответа     error/OK

  message        string         Нет              Расшифровка
                                                 кода ответа

  timestamp      timestamptz    Да               Время ответа   2022-07-08T13:24:41.8328711+03:00

  body{}         object         Да
  -------------------------------------------------------------------------------------------------

body

  --------------------------------------------------------------------------------------
  **Атрибут**      **Тип**        **Обязателен**   **Описание**     **Пример**
  ---------------- -------------- ---------------- ---------------- --------------------
  packageName      string         Да               Наименование     com.myapp.example
                                                   пакета
                                                   приложения

  appId            number         Да               ID приложения    385727

  commentId        number         Да               ID отзыва        697535

  userName         string         Да               Имя автора       Irina
                                                   отзыва

  appRating        number         Да               Оценка отзыва    4

  commentStatus    string         Да               Статус отзыва    PUBLISHED

  commentDate      timestamptz    Да               Дата, когда был  2023-05-22
                                                   оставлен отзыв   16:32:08.008

  commentText      string         Да               Текст отзыва     Все супер!

  likeCounter      number         Да               Количество       5
                                                   лайков отзыву от
                                                   других
                                                   пользователей
                                                   витрины RuStore

  dislikeCounter   number         Да               Количество       0
                                                   дизлайков отзыву
                                                   от других
                                                   пользователей
                                                   витрины RuStore

  updatedAt        timestamptz    Да               Дата прохождения 2022-10-14
                                                   модерации и      15:14:33.033
                                                   публикации
                                                   отзыва в системе

  appVersionName   string         Да               Версия           1.4
                                                   приложения

  edited           boolean        Да               Признак          True
                                                   редактирования   --- редактировался
                                                   отзыва           (отзыв
                                                                    редактировался и был
                                                                    перезаписан).False
                                                                    --- нет
  --------------------------------------------------------------------------------------

Пример для вывода множества отзывов


  curl--location'https://public-api.rustore.ru/public/v1/application/ru.voonsh.push/comment'\<br\>--header'Content-Type:application/json'\<br\>--header'Public-Token:eyJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.jrVl3YT99saGcata9fzN6_QpoQhDsv8oBUAj9p7UyR4Ga5PM8TTyNbpTKIeaIjGoEfsBMJx0aw0b7fhD04bhSp7SWEBKGBTzFCjwOZ5_Fcezq0-NOMSayzoPttYa7oMRDiqNS4rqaUOdCUrf9qlDyEq3BGoUYCaUD7L5399l51NhSLrWpoPx1l4ZLVJ5bjlhiCoPAtLArnulq5LBoDk3naoGaRHabkkffcucEjA45uNpCsq0fx77Lk4YhN30LOccyImE-O8fUq8YryMWv4w-ZmWjax1oT9nRgO95r9EYG7Gwdekg2ILuWnsofiMXME8t1EiEuUmDpNTEyS9SiUMRwQ.lSJBV1mSmHehuqVs.8pXL_GRLwEJgIWZOzkklKgrsGKKJrG9kv1AIdD0PPU8KtsY8GVAc5xaaQgeyjSsJiSUvma_IohAaIBwP-tjTRxrnzVinMhKAJMCbiMIVqsQSRDB5j_mf91nTNewQkWJwB33Rvxd9F4Tt-Tk-1QKALU8tAT_HXAI.v9WBgx8T6yFDpeMrjw-ECQ'




Пример ответа


  {"code":"OK","message":null,"body":\[{"packageName":"ru.voonsh.push","appId":227169215,"commentId":2142370751,"userName":"Saber","appRating":5,"commentStatus":"PUBLISHED","commentDate":"2023-06-1311:58:06.006","commentText":"GoodApp,nicedone!","likeCounter":0,"dislikeCounter":0,"updatedAt":"2023-06-1311:59:50.050","appVersionName":"1.4","edited":false},{"packageName":"ru.voonsh.push","appId":227169215,"commentId":1981700287,"userName":"Виктор","appRating":5,"commentStatus":"PUBLISHED","commentDate":"2023-04-2718:54:27.027","commentText":"Отличноеприложение!;#","likeCounter":0,"dislikeCounter":0,"updatedAt":"2023-04-2718:55:30.030","appVersionName":"1.3","edited":false},{"packageName":"ru.voonsh.push","appId":227169215,"commentId":1981699775,"userName":"Григорий","appRating":5,"commentStatus":"PUBLISHED","commentDate":"2023-04-2718:54:18.018","commentText":"Отличноеприложение!","likeCounter":1,"dislikeCounter":0,"updatedAt":"2023-04-2718:55:30.030","appVersionName":"1.3","edited":false},{"packageName":"ru.voonsh.push","appId":227169215,"commentId":237681343,"userName":"Ибрагим","appRating":5,"commentStatus":"PUBLISHED","commentDate":"2022-09-1517:26:46.046","commentText":"ПовышаемДАУ)))","likeCounter":1,"dislikeCounter":1,"updatedAt":"2022-09-1618:06:39.039","appVersionName":null,"edited":false}\],"timestamp":"2023-06-15T07:32:55.505979576+03:00"}




Пример для вывода конкретного отзыва


  {    "code": "OK",    "message": null,    "body": \[        {            "packageName": "ru.voonsh.push",            "appId": 227169215,            "commentId": 2142370751,            "userName": "Saber",            "appRating": 5,            "commentStatus": "PUBLISHED",            "commentDate": "2023-06-13 11:58:06.006",            "commentText": "Good App, nice done!",            "likeCounter": 0,            "dislikeCounter": 0,            "updatedAt": "2023-06-13 11:59:50.050",            "appVersionName": "1.4",            "edited": false        },        {            "packageName": "ru.voonsh.push",            "appId": 227169215,            "commentId": 1981700287,            "userName": "Виктор",            "appRating": 5,            "commentStatus": "PUBLISHED",            "commentDate": "2023-04-27 18:54:27.027",            "commentText": "Отличное приложение! ;#",            "likeCounter": 0,            "dislikeCounter": 0,            "updatedAt": "2023-04-27 18:55:30.030",            "appVersionName": "1.3",            "edited": false        },        {            "packageName": "ru.voonsh.push",            "appId": 227169215,            "commentId": 1981699775,            "userName": "Григорий",            "appRating": 5,            "commentStatus": "PUBLISHED",            "commentDate": "2023-04-27 18:54:18.018",            "commentText": "Отличное приложение!",            "likeCounter": 1,            "dislikeCounter": 0,            "updatedAt": "2023-04-27 18:55:30.030",            "appVersionName": "1.3",            "edited": false        },        {            "packageName": "ru.voonsh.push",            "appId": 227169215,            "commentId": 237681343,            "userName": "Ибрагим",            "appRating": 5,            "commentStatus": "PUBLISHED",            "commentDate": "2022-09-15 17:26:46.046",            "commentText": "Повышаем ДАУ)))",            "likeCounter": 1,            "dislikeCounter": 1,            "updatedAt": "2022-09-16 18:06:39.039",            "appVersionName": null,            "edited": false        }    \],    "timestamp": "2023-06-15T07:32:55.505979576+03:00"}
  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



Пример для вывода конкретного отзыва


  curl --location 'https://public-api.rustore.ru/public/v1/application/ru.voonsh.push/comment?id=1981699775'
  \<br\>--header'Content-Type:application/json'\<br\>--header'Public-Token:eyJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.h635qF_TZc43287jXQVImu\_-o4eVFQwrQYe2WnjbywC_KUC4oX6W3ssyPWzlAugd2RELbVCTk1wiDdKwPIbkOJC_HdF0yAmnPg0PRxwyfCHblRuccuuEg_l6sKY1Fqrh6kH3D5N2i_HnDei-hTusAvHR333ZstAK73dc-4Ecn24jb1XyBsdg0_KddKaRpEjTMSudIV6rdpBNMlQRUyQufrP2RMXK5Kc_0gY0iA-tazQoOJmK4xstHmuFbSBx3J6oN5QIlYonx0LZ6ABf2fD0O1E7LFsVUMd2bOdLYg5id5bTRXKd238iB5snmPhGJJN3d6v8xdoV5TdOMGPvjO0A5A.-mSbEMAvEglyEOJu.eKxraHkohwEcn3cG4glUBnwypjnapol4WnwhQGyKe-TDq9TGNj9CO4hnXGh4UPSRI55w73pJwSCuDe7LfsQ8zqBVjirT_HXypowHsWBwvBG-6rwSRvhZsad2YY8wHTZeXOddVynWnESoKAnXIdImafEbIWN1Hik.VJ-b1KxDxMrgJTz_Vuul2Q'




Пример ответа

  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  {"code":"OK","message":null,"body":\[{"packageName":"ru.voonsh.push","appId":227169215,"commentId":1981699775,"userName":"Григорий","appRating":5,"commentStatus":"PUBLISHED","commentDate":"2023-04-2718:54:18.018","commentText":"Отличноеприложение!","likeCounter":1,"dislikeCounter":0,"updatedAt":"2023-04-2718:55:30.030","appVersionName":"1.3","edited":false}\],"timestamp":"2023-06-15T07:13:16.309841987+03:00"}
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Получение отзывов в формате .csv

Метод позволяет получить все отзывы в формате .csv за определённый
промежуток времени.

Ограничения:

-   минимальный период выбора отзывов --- 1 день;

-   максимальный период  выбора отзывов --- 92 дня.

Параметры взаимодействия

**GET**
https://public-api.rustore.ru/public/v1/application/{packageName}/comment/export?from={date_from}&to={date_to}

  -------------------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**     **Обязателен**   **Расположение**   **Описание**               **Пример
                                                                                            заполнения**
  -------------- ----------- ---------------- ------------------ -------------------------- -------------------
  Public-Token   string      Да               header             Токен доступа к RuStore
                                                                 API

  packageName    string      Да               path               Наименование пакета        com.myapp.example
                                                                 приложения. Максимальная
                                                                 длина --- 50 символов

  from           date        Да               query              Дата, с которой необходимо 2023-06-01
                                                                 выгружать отзывы, в
                                                                 формате ГГГГ-ММ-ДД

  to             date        Да               query              Дата, до которой           2023-06-05
                                                                 необходимо выгрузить
                                                                 отзывы включительно, в
                                                                 формате ГГГГ-ММ-ДД
  -------------------------------------------------------------------------------------------------------------

Параметры ответа

Файл в формате .csv

Содержание файла

  -----------------------------------------------------------------------
  **Название колонки**                **Описание**
  ----------------------------------- -----------------------------------
  Package Name                        Наименование пакета приложения

  User App Version                    Версия приложения

  Review Submit Date and Time         Дата, когда был оставлен отзыв

  Review Last Update Date and Time    Дата прохождения модерации и 
                                      публикации отзыва в системе

  Star Rating                         Оценка отзыва

  Review Text                         Текст отзыва

  User name                           Имя автора отзыва

  Comment Id                          ID отзыва

  Like counter                        Количество лайков отзыву от других
                                      пользователей витрины RuStore

  Dislike counter                     Количество дизлайков отзыву от
                                      других пользователей витрины
                                      RuStore

  edited                              Признак редактирования отзыва
  -----------------------------------------------------------------------

Пример


  curl--location'https://public-api.rustore.ru/public/v1/application/ru.voonsh.push/comment/export?from=2023-03-03&to=2023-04-28'\<br\>--header'Public-Token:eyJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.h635qF_TZc43287jXQVImu\_-o4eVFQwrQYe2WnjbywC_KUC4oX6W3ssyPWzlAugd2RELbVCTk1wiDdKwPIbkOJC_HdF0yAmnPg0PRxwyfCHblRuccuuEg_l6sKY1Fqrh6kH3D5N2i_HnDei-hTusAvHR333ZstAK73dc-4Ecn24jb1XyBsdg0_KddKaRpEjTMSudIV6rdpBNMlQRUyQufrP2RMXK5Kc_0gY0iA-tazQoOJmK4xstHmuFbSBx3J6oN5QIlYonx0LZ6ABf2fD0O1E7LFsVUMd2bOdLYg5id5bTRXKd238iB5snmPhGJJN3d6v8xdoV5TdOMGPvjO0A5A.-mSbEMAvEglyEOJu.eKxraHkohwEcn3cG4glUBnwypjnapol4WnwhQGyKe-TDq9TGNj9CO4hnXGh4UPSRI55w73pJwSCuDe7LfsQ8zqBVjirT_HXypowHsWBwvBG-6rwSRvhZsad2YY8wHTZeXOddVynWnESoKAnXIdImafEbIWN1Hik.VJ-b1KxDxMrgJTz_Vuul2Q'
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Оставить ответ на отзыв

Метод позволяет оставить ответ на отзыв.

Параметры взаимодействия

**POST**
https://public-api.rustore.ru/public/v1/application/{packageName}/feedback?commentId={commentId}

  -------------------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**     **Обязателен**   **Расположение**   **Описание**               **Пример
                                                                                            заполнения**
  -------------- ----------- ---------------- ------------------ -------------------------- -------------------
  Public-Token   string      Да               header             Токен доступа к RuStore
                                                                 API

  packageName    string      Да               path               Наименование пакета        com.myapp.example
                                                                 приложения. Максимальная
                                                                 длина -- 50 символов

  commentId      number      Да               query              ID отзыва пользователя     748223

  message        string      Да               body               Текст ответа на отзыв      Спасибо, за ваш
                                                                                            отзыв. Он очень
                                                                                            важен для нас
  -------------------------------------------------------------------------------------------------------------

Параметры ответа

  -------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример заполнения**
  -------------- -------------- ---------------- -------------- -----------------------------------
  code           string         Да               Код ответа     error/OK

  message        string         Нет              Расшифровка
                                                 кода ответа

  timestamp      timestamptz    Да               Время ответа   2022-07-08T13:24:41.8328711+03:00

  body{}         object         Да
  -------------------------------------------------------------------------------------------------

body

  ----------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример**
  -------------- -------------- ---------------- -------------- --------------
  id             number         Да               id ответа на   748479
                                                 отзыв

  ----------------------------------------------------------------------------

Пример


  curl--location'https://public-api.rustore.ru/public/v1/application/ru.voonsh.push/feedback?commentId=2142370751'\<br\>--header'Content-Type:application/json'\<br\>--header'Public-Token:eyJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.ziOR4J-\_3A36M55IMdJqxck4Lktk9GFe6vvdRFBkIICA6z4WLLUxdEyHNdMWYomBs9MkJecCaCStOQ5YtmHvFIRK8aoj4c386WwUBXmTDXN_BJg2puwuLivMJWuAhgveZpC7afZCwM6m5RgLi538BAjFV_gE8XvbSUKlhWhkEvIzgrK2zk211SRUVXaAdrWEz5NNSSrQhyEv1fiMgQNmV9Sehp8fxP7G_9HkAWVtfNvgEiTbFHMTO-qpWtdh5Ts440Du9MC7PL59IUmXts1Khx6xbuUWLQe3WHPQCBmKezpxtI-l9Ms4F-iopZy-bXzUaUMFsaQu8Jh4kFvztFenYg.UPvgd5jKQcFO-MRE.zHHu-P5GSwUTvEMae-bu337jxpq25TbftTC7oF8r0APCfUqdx55CbO-PuIeGdjN08K4IC8GsWhLmKr9mqEeV9L-Dh5QSqA6M7GsLH8LAqrR1UX0Z849pyhrOt_Pz4SJ3YeHdu-ITfTL5Ysr0kECMXWIMcE24X8U.zHXeYuxDJf-Wtl9Vn0betw'\<br\>--data'{"message":"Thankyou"}'




Пример ответа

  ---------------------------------------------------------------------------------------------------------
  {"code":"OK","message":null,"body":{"id":2149775551},"timestamp":"2023-06-02T16:36:57.847391009+03:00"}
  ---------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------

Получение статуса ответа на отзыв

Метод позволяет получить статус модерации ответа на отзыв.

Параметры взаимодействия

GET
https://public-api.rustore.ru/public/v1/application/{packageName}/feedback/{feedbackId}

  -----------------------------------------------------------------------------------------
  Атрибут        Тип         Обязателен   Расположение   Описание       Пример заполнения
  -------------- ----------- ------------ -------------- -------------- -------------------
  Public-Token   string      Да           header         Токен доступа
                                                         к RuStore API

  packageName    string      Да           path           Наименование   com.myapp.example
                                                         пакета
                                                         приложения.
                                                         Максимальная
                                                         длина --- 50
                                                         символов

  feedbackId     number      Нет          path           id конкретного 743103
                                                         ответа на
                                                         отзыв,
                                                         задаётся при
                                                         желании
                                                         получить
                                                         информацию о
                                                         конкретном
                                                         ответе на
                                                         отзыв
  -----------------------------------------------------------------------------------------

Параметры ответа

  -----------------------------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Описание       Пример заполнения
  -------------- -------------- -------------- -------------- -----------------------------------
  code           string         Да             Код ответа     error/OK

  message        string         Нет            Расшифровка
                                               кода ответа

  timestamp      timestamptz    Да             Время ответа   2022-07-08T13:24:41.8328711+03:00

  body{}         object         Да
  -----------------------------------------------------------------------------------------------

body

  --------------------------------------------------------------------------------
  Атрибут        Тип            Обязателен     Описание       Пример
  -------------- -------------- -------------- -------------- --------------------
  id             number         Да             id ответа на   748479
                                               отзыв

  commentId      number         Да             id отзыва      748223

  text           string         Да             Текст ответа   Это ответ на отзыв
                                                              пользователя

  status         string         Да             Статус ответа  PUBLISHED ---
                                               на отзыв       опубликован все
                                                              ок;MODERATION --- на
                                                              модерации;REJECTED
                                                              --- отклонён
                                                              модерацией;DELETED
                                                              --- удалён
                                                              разработчиком или
                                                              изменён.

  date           string         Да             Дата и время   2023-06-01
                                               последнего     18:10:43.043
                                               изменения
  --------------------------------------------------------------------------------

Пример 1

  ------------------------------------------------------------------------------------------
  curl --location
  'https://public-api.rustore.ru/public/v1/application/ru.voonsh.push/feedback/2177559743'
  \<br\>--header 'Public-Token: eyJlbmMiO........ELthVcQVmNyw'{    "code":
  "OK",    "message": null,    "body": \[        {            "id":
  "2177559743",            "commentId": "2142370751",            "text": "Thank
  you",            "status": "PUBLISHED",            "date":
  "2023-06-22T09:46:18.115+00:00"        }    \],    "timestamp":
  "2023-06-22T12:46:30.193419294+03:00"
  ------------------------------------------------------------------------------------------

  ------------------------------------------------------------------------------------------

Пример ответа

  -----------------------------------------------------------------------
  {    "code": "OK",    "message": null,    "body":
  \[        {            "id": "2177559743",            "commentId":
  "2142370751",            "text": "Thank you",            "status":
  "PUBLISHED",            "date":
  "2023-06-22T09:46:18.115+00:00"        }    \],    "timestamp":
  "2023-06-22T12:46:30.193419294+03:00"
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Получение статуса ответов на отзывы

Метод позволяет получить статус модерации ответов на отзывы или получить
информацию на отдельно взятый ответ на отзыв.

Ограничения:

-   по умолчанию на каждой странице отображается по 20 отзывов. Вы
    можете отображать до 100 отзывов на странице, указав значение в
    параметре size;

-   совместно использовать параметры пагинации и фильтрации по 1 ответу
    на отзыв --- нельзя (либо пагинация с указыванием пары параметров
    page и size либо id).

Параметры взаимодействия

**GET**
https://public-api.rustore.ru/public/v1/application/{packageName}/feedback/?id={id}&page={number}&size={size}

  -------------------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**     **Обязателен**   **Расположение**   **Описание**               **Пример
                                                                                            заполнения**
  -------------- ----------- ---------------- ------------------ -------------------------- -------------------
  Public-Token   string      Да               header             Токен доступа к RuStore
                                                                 API

  packageName    string      Да               path               Наименование пакета        com.myapp.example
                                                                 приложения. Максимальная
                                                                 длина --- 50 символов

  feedbackId     number      Нет              path               id конкретного ответа на   743103
                                                                 отзыв, задаётся при
                                                                 желании получить
                                                                 информацию о конкретном
                                                                 ответе на отзыв

  id             number      Нет              query              id конкретного ответа на   743103
                                                                 отзыв, задаётся при
                                                                 необходимости получить
                                                                 конкретный отзыв

  page           number      Нет              query              Номер страницы. Начинается 0
                                                                 с 0

  size           number      Нет              query              Количество отзывов на      100
                                                                 странице. По умолчанию ---
                                                                 20, максимально --- 100
  -------------------------------------------------------------------------------------------------------------

Параметры ответа

  -------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример заполнения**
  -------------- -------------- ---------------- -------------- -----------------------------------
  code           string         Да               Код ответа     error/OK

  message        string         Нет              Расшифровка
                                                 кода ответа

  timestamp      timestamptz    Да               Время ответа   2022-07-08T13:24:41.8328711+03:00

  body{}         object         Да
  -------------------------------------------------------------------------------------------------

body

  ----------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример**
  -------------- -------------- ---------------- -------------- --------------------
  id             number         Да               id ответа на   748479
                                                 отзыв

  commentId      number         Да               id отзыва      748223

  text           string         Да               Текст ответа   Это ответ на отзыв
                                                                пользователя

  status         string         Да               Статус ответа  PUBLISHED
                                                 на отзыв       --- опубликован все
                                                                ок;MODERATION --- на
                                                                модерации;REJECTED
                                                                --- отклонён
                                                                модерацией;DELETED
                                                                --- удалён
                                                                разработчиком или
                                                                изменён.

  date           string         Да               Дата и время   2023-06-01
                                                 последнего     18:10:43.043
                                                 изменения
  ----------------------------------------------------------------------------------

Пример 1

  ---------------------------------------------------------------------------------------------
  curl --location
  'https://public-api.rustore.ru/public/v1/application/ru.voonsh.push/feedback?id=2177559743'
  \<br\>--header 'Public-Token: eyJlb......VcQVmNyw'
  ---------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------

Ответ 1

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  {    "code": "OK",    "message": null,    "body": \[        {            "id": "2177559743",            "commentId": "2142370751",            "text": "Thank you",            "status": "PUBLISHED",            "date": "2023-06-22T09:46:18.115+00:00"        }    \],    "timestamp": "2023-06-22T12:46:30.193419294+03:00"
  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Изменение ответа на отзыв

Метод позволяет изменить текст ответа на отзыв.

Параметры взаимодействия

**POST**
https://public-api.rustore.ru/public/v1/application/{packageName}/feedback/{feedbackId}

  -------------------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**     **Обязателен**   **Расположение**   **Описание**               **Пример
                                                                                            заполнения**
  -------------- ----------- ---------------- ------------------ -------------------------- -------------------
  Public-Token   string      Да               Header             Токен доступа к RuStore
                                                                 API

  packageName    string      Да               path               Наименование пакета        com.myapp.example
                                                                 приложения. Максимальная
                                                                 длина -- 50 символов

  feedbackId     number      Нет              path               id ответа на отзыв,        743103
                                                                 который необходимо
                                                                 изменить

  message        string      Да               body               Измененный текст ответа на Это измененный
                                                                 отзыв                      ответ, там была
                                                                                            опечатка
  -------------------------------------------------------------------------------------------------------------

Параметры ответа

  -------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример заполнения**
  -------------- -------------- ---------------- -------------- -----------------------------------
  code           string         Да               Код ответа     error/OK

  message        string         Нет              Расшифровка
                                                 кода ответа

  timestamp      timestamptz    Да               Время ответа   2022-07-08T13:24:41.8328711+03:00

  body{}         string         Да
  -------------------------------------------------------------------------------------------------

body

  ---------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**        **Пример**
  -------------- -------------- ---------------- ------------------- --------------
  id             number         Да               Новый id ответа на  748479
                                                 отзыв. Предыдущий
                                                 id принимает статус
                                                 --- DELETED. При
                                                 изменении
                                                 дальнейшая работа
                                                 ведется с
                                                 обновленным id

  ---------------------------------------------------------------------------------

Пример


  curl--location'https://public-api.rustore.ru/public/v1/application/ru.voonsh.push/feedback/2149775551'\<br\>--header'Content-Type:application/json'\<br\>--header'Public-Token:eyJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.ziOR4J-\_3A36M55IMdJqxck4Lktk9GFe6vvdRFBkIICA6z4WLLUxdEyHNdMWYomBs9MkJecCaCStOQ5YtmHvFIRK8aoj4c386WwUBXmTDXN_BJg2puwuLivMJWuAhgveZpC7afZCwM6m5RgLi538BAjFV_gE8XvbSUKlhWhkEvIzgrK2zk211SRUVXaAdrWEz5NNSSrQhyEv1fiMgQNmV9Sehp8fxP7G_9HkAWVtfNvgEiTbFHMTO-qpWtdh5Ts440Du9MC7PL59IUmXts1Khx6xbuUWLQe3WHPQCBmKezpxtI-l9Ms4F-iopZy-bXzUaUMFsaQu8Jh4kFvztFenYg.UPvgd5jKQcFO-MRE.zHHu-P5GSwUTvEMae-bu337jxpq25TbftTC7oF8r0APCfUqdx55CbO-PuIeGdjN08K4IC8GsWhLmKr9mqEeV9L-Dh5QSqA6M7GsLH8LAqrR1UX0Z849pyhrOt_Pz4SJ3YeHdu-ITfTL5Ysr0kECMXWIMcE24X8U.zHXeYuxDJf-Wtl9Vn0betw'\<br\>--data'{"message":"Thankyouverymuch!"}'




Пример ответа

  ---------------------------------------------------------------------------------------------------------
  {"code":"OK","message":null,"body":{"id":2149807039},"timestamp":"2023-06-15T08:26:25.355326578+03:00"}
  ---------------------------------------------------------------------------------------------------------

  ---------------------------------------------------------------------------------------------------------

Удаление ответа на отзыв

Метод позволяет удалить ответ на отзыв.

Параметры взаимодействия

**DELETE**
https://public-api.rustore.ru/public/v1/application/{packageName}/feedback/{feedbackId}

  -------------------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**     **Обязателен**   **Расположение**   **Описание**               **Пример
                                                                                            заполнения**
  -------------- ----------- ---------------- ------------------ -------------------------- -------------------
  Public-Token   string      Да               header             Токен доступа к RuStore
                                                                 API

  packageName    string      Да               path               Наименование пакета        com.myapp.example
                                                                 приложения. Максимальная
                                                                 длина -- 50 символов

  feedbackId     number      Нет              path               id ответа на отзыв,        743103
                                                                 который необходимо удалить
  -------------------------------------------------------------------------------------------------------------

Параметры ответа

  -------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример заполнения**
  -------------- -------------- ---------------- -------------- -----------------------------------
  code           string         Да               Код ответа     error/OK

  message        string         Нет              Расшифровка
                                                 кода ответа

  timestamp      timestamptz    Да               Время ответа   2022-07-08T13:24:41.8328711+03:00
  -------------------------------------------------------------------------------------------------

Пример


  curl--location--requestDELETE'https://public-api.rustore.ru/public/v1/application/ru.voonsh.push/feedback/2149807039'\<br\>--header'Content-Type:application/json'\<br\>--header'Public-Token:eyJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.1r3cxOdxuNpypJSWXMQ4oAVYhqh6_3RlqKfItkhthhTzisiRYnboOkZpw_r5J9w0S5G8u-BexQeganyoG3MbCJ5QP2X6945wQMxlPkl81UKewkZuFrjsH36USk6dnnMbjT8Yw8nA4Yr0n8Oinspj3zkw66kZd-57EJvoMfneCEyTBY1mYEoc2DnfUa99syX1kIgX7Jfipn4yRm3pxWad5aesCK3eQFlP57CBirm8qGecDzkKcV1DeBx-qXK1S72FaXId11zN-rbe14U1z8jCCiEHhYrTIT9ci7OKF7OqF2kgRRVdCoO3eRWl4JWF-JfGAeYcv7rEpNLC32pEm5FOCA.khXZSeTodz2mVoNd.fKVjmkHUEM9AW7S_mYf-LFO4T26Lqf4RNSyjyNmFfsxZybDKahZgnaJ4lXYq-MPVN-o39eg1jISmoJcBonqS-0rIFe1P3CAM5cbNiSsTCX1r-cVdf4ei998KKGMg8bZL24-uLfxgcJSBBTgmUkyvf_KqH_dcxmQ.DwbK_08RLgHibat3h5dvkQ'




Пример ответа

  --------------------------------------------------------------------------------------------
  {"code":"OK","message":null,"body":null,"timestamp":"2023-05-30T20:07:22.365025849+03:00"}
  --------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------

Получение рейтинга приложения

Метод позволяет получить рейтинг приложения.

Параметры взаимодействия

**POST**
https://public-api.rustore.ru/public/v1/application/{packageName}/comment/statistic

  -------------------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**     **Обязателен**   **Расположение**   **Описание**               **Пример
                                                                                            заполнения**
  -------------- ----------- ---------------- ------------------ -------------------------- -------------------
  Public-Token   string      Да               header             Токен доступа к RuStore
                                                                 API

  packageName    string      Да               path               Наименование пакета        com.myapp.example
                                                                 приложения. Максимальная
                                                                 длина -- 50 символов
  -------------------------------------------------------------------------------------------------------------

Параметры ответа

  -------------------------------------------------------------------------------------------------
  **Атрибут**    **Тип**        **Обязателен**   **Описание**   **Пример заполнения**
  -------------- -------------- ---------------- -------------- -----------------------------------
  code           string         Да               Код ответа     error/OK

  message        string         Нет              Расшифровка
                                                 кода ответа

  timestamp      timestamptz    Да               Время ответа   2022-07-08T13:24:41.8328711+03:00

  body{}         object         Да
  -------------------------------------------------------------------------------------------------

body

  -------------------------------------------------------------------------------------
  **Атрибут**         **Тип**        **Обязателен**   **Описание**       **Пример**
  ------------------- -------------- ---------------- ------------------ --------------
  ratings             object         Да

  averageUserRating   number         Да               Средняя            4
                                                      пользовательская
                                                      оценка по
                                                      приложению

  totalRatings        number         Да               Общее количество   0
                                                      оценок

  totalResponses      number         Да               Общее количество   0
                                                      отзывов без
                                                      ответов

  ratingsNoComments   number         Да               Общее количество   0
                                                      оценок без отзывов
  -------------------------------------------------------------------------------------

raitings

  --------------------------------------------------------------------------
  \#### Атрибут  \#### Тип      \####          \#### Описание \#### Пример
                                Обязателен
  -------------- -------------- -------------- -------------- --------------
  amountFive     number         Да             Количество     0
                                               оценок «5»

  amountFour     number         Да             Количество     3
                                               оценок «4»

  amountThree    number         Да             Количество     0
                                               оценок «3»

  amountTwo      number         Да             Количество     0
                                               оценок «2»

  amountOne      number         Да             Количество     0
                                               оценок «1»
  --------------------------------------------------------------------------

Пример

  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  curl--location'https://public-api.rustore.ru/public/v1/application/ru.voonsh.push/comment/statistic'\<br\>--header'Public-Token:eyJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.1r3cxOdxuNpypJSWXMQ4oAVYhqh6_3RlqKfItkhthhTzisiRYnboOkZpw_r5J9w0S5G8u-BexQeganyoG3MbCJ5QP2X6945wQMxlPkl81UKewkZuFrjsH36USk6dnnMbjT8Yw8nA4Yr0n8Oinspj3zkw66kZd-57EJvoMfneCEyTBY1mYEoc2DnfUa99syX1kIgX7Jfipn4yRm3pxWad5aesCK3eQFlP57CBirm8qGecDzkKcV1DeBx-qXK1S72FaXId11zN-rbe14U1z8jCCiEHhYrTIT9ci7OKF7OqF2kgRRVdCoO3eRWl4JWF-JfGAeYcv7rEpNLC32pEm5FOCA.khXZSeTodz2mVoNd.fKVjmkHUEM9AW7S_mYf-LFO4T26Lqf4RNSyjyNmFfsxZybDKahZgnaJ4lXYq-MPVN-o39eg1jISmoJcBonqS-0rIFe1P3CAM5cbNiSsTCX1r-cVdf4ei998KKGMg8bZL24-uLfxgcJSBBTgmUkyvf_KqH_dcxmQ.DwbK_08RLgHibat3h5dvkQ'




Пример ответа

  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  {"code":"OK","message":null,"body":{"ratings":{"amountFive":13,"amountFour":2,"amountThree":0,"amountTwo":0,"amountOne":0},"averageUserRating":4.87,"totalRatings":15,"totalResponses":9,"ratingsNoComments":4},"timestamp":"2023-06-15T08:35:06.412194896+03:00"}
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Статистика для разработчиков

В RuStore Консоль есть несколько разделов статистики, в которых можно
просмотреть следующие данные:

-   количество просмотров и скачиваний приложения;

-   сумма полученной прибыли и возвратов;

-   количество push-уведомлений, отправленных пользователю и т. д.

Данная статистика позволит собрать нужные данные, чтобы повысить
функциональность приложения и сделать его более удобным для
пользователя, оценить динамику продаж и, при необходимости, изменить
стратегию монетизации вашего приложения.

Статистика загрузки версий

В RuStore Консоль реализована возможность просмотра статистики по
приложениям.

Просмотр статистики доступен только авторизованным пользователям.

Как просмотреть статистику загрузки версий?

-   Откройте RuStore Консоль.

-   Перейдите на вкладку «Приложения».

-   В боковом меню нажмите «Статистика по приложениям».

На вкладке статистики отображены следующие элементы:

-   Таблица с общей статистикой по приложению, содержащая:

    -   Общее количество просмотров приложения в интерфейсе RuStore (Web
        и МП);

    -   Общее количество скачиваний приложения в интерфейсе RuStore;

<!-- -->

-   Таблица со статистикой по версиям операционной системы (далее ОС)
    пользователей RuStore, содержащая:

    -   Название версии ОС пользователя RuStore;

    -   Количество скачиваний приложения на устройство с определенной
        версией ОС;

    -   Процент скачиваний приложения на устройство с определенной
        версией ОС;

<!-- -->

-   Таблица со статистикой по моделям устройств пользователей RuStore,
    содержащая:

    -   Название модели устройства пользователя RuStore;

    -   Количество скачиваний приложения на ту или иную модель
        устройства;

    -   Процент скачиваний приложения на ту или иную модель устройства;

При необходимости можно отсортировать элементы таблиц со статистикой по
версиям операционной системы и по моделям устройств, а именно:

-   Нажмите на иконку сортировки один раз -- все элементы таблицы будут
    отсортированы от большего к меньшему значению этого параметра;

-   Нажмите на иконку сортировки два раза -- все элементы таблицы будут
    отсортированы от меньшего к большему значению этого параметра;

-   Нажмите на иконку сортировки три раза -- список элементов вернется к
    состоянию по умолчанию.

Для удобства сортировки одновременно можно использовать несколько
фильтров.

Статистика по монетизации

В RuStore Консоли можно просматривать финансовые данные, что позволяет
вам оценить динамику продаж, в то числе конкретного контента или
подписок. Данные о доходах основаны на сведениях об объемах транзакций.

**Общие требования**

Для просмотра статистики по монетизации необходимо соблюдение следующих
условий:

-   для приложения подключен один из видов монетизации и ранее были
    совершены транзакции. Подробнее в разделе Монетизация.

-   у пользователя есть права на просмотр статистики;

-   пользователь должен быть авторизован в RuStore Консоль.

Как просмотреть статистику по платежам?

-   Откройте RuStore Консоль.

-   Выберите «Приложения» в верхнем меню.

-   Перейдите на вкладку «Монетизация → Статистика по платежам».

На странице «Статистика по платежам» данные отображаютсяпо совокупному
доходу из всех источников и по возвратам из всех источников.

Под источниками подразумевается тип продукта монетизации, подключенный к
приложению:

-   Платные приложения: доход от платной загрузки приложения из витрины
    RuStore;

-   inn-app продукты: доход от транзакций с inn-app продуктами в
    приложении;

-   Подписки: доход от регулярных платежей за использование подписки.

Для статистики по возвратам и доходам отображается следующий тип данных:

-   Сумма, с указанием валюты;

-   Количество транзакций;

-   Процент от дохода.

Выводится в случае, если компания подключила более одного типа продукта
(например, подписки + inn_app платежи)

-   Процент возврата

-   Период ---отрезок времени, за который можно посмотреть статистику.
    Доступные значения:

-   Последние сутки с 00:00 до 00:00;

-   Последние 7 дней до текущего дня включительно;

-   Последние 30 дней до текущего дня включительно;

-   Все время = с момента получения первой транзакции до текущего дня
    включительно.

<!-- -->

-   Отчет формируется на момент окончания выбранного периода.

Статистика push-уведомлений

В RuStore Консоль можно просматриватьстатистику по push-уведомлениям для
опубликованных приложений.

Статистика рассчитывается на основании данных для каждого приложения, в
котором настроены push-уведомления.

Как просмотреть статистику по push-уведомлениям?

-   Откройте RuStore Консоль.

-   Выберите «Приложения» в верхнем меню.

-   Перейдите на вкладку «Push-уведомления → Статистика по
    push-уведомлениям».

Данные статистики по push-уведомлениям отображаются через день после
публикации новой версии приложения.

На странице статистики по push-уведомлениям отображается количество:

-   всех отправленных push-уведомлений;

-   доставленных push-уведомлений;

-   пользователей, которые перешли в приложение, кликнув на
    push-уведомление.

Эти данные собраны для просмотра по периодам времени: за день, за
неделю, за месяц или за все время.

Проверка подписи APK

Для работы большинства SDK необходимо, чтобы приложение было подписано
правильной подписью. Чтобы узнать, какой подписью подписан файл APK,
нужно воспользоваться дополнительными инструментами, которые покажут
отпечаток подписи.

Информация о подписи указана в файле build.gradle. Если не указать
подпись явно, используется подпись по умолчанию
\~/.android/debug.keystore.

Ниже рассмотрены способы, с помощью которых можно узнать подпись.

Получение подписи с помощью Android Studio

  -----------------------------------------------------------------------
  gradle signingreport
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

Результат выполнения команды:

Отпечаток подписи указан в строке SHA-256.

Получение подписи с помощью apksigner

  -----------------------------------------------------------------------
  apksigner verify --print-certs -v example.apk
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

example.apk --- ваше приложение.

Результат выполнения команды Mac OS:

Значение Signer #1 certificate SHA-256 digest --- это нужный отпечаток
подписи.

Получение подписи с помощью keytool

  -----------------------------------------------------------------------
  keytool -printcert -jarfile example.apk
  -----------------------------------------------------------------------

  -----------------------------------------------------------------------

example.apk --- ваше приложение.

Результат выполнения команды Mac OS:

Отпечаток подписи указан в строке SHA256.

Проверка для пуш-уведомлений

Отпечаток подписи, полученный с помощью указанных инструментов, должен
совпадать с отпечатком, который указан в проекте пуш-уведомлений ---
поле «Отпечаток подписи SHA-256».

Подробная информация о подписи --- в официальной документации Google.

Соглашение об инфор.взаимодействии с потенциальными партнерами

Настоящее соглашение (далее --- « **Соглашение**»), заключается между
ООО «ВК» (ОГРН 1027739850962, Россия, 125167, г. Москва, Ленинградский
проспект д.39, стр.79) (далее -- **Компания**) и потенциальным партнером
(далее -- **Претендент**), проявившим интерес к потенциальному
заключению с Компанией Соглашения RuStore о распространении программных
продуктов
(https://help.rustore.ru/rustore/legal_info/developers_agreement).

Настоящее Соглашение определяет условия обмена информацией между
Компанией и Претендентом.

Претендент безоговорочно и в полном объеме принимает условия Соглашения
путем направления заполненной анкеты для потенциальных партнеров
Компании, содержащую ссылку на настоящее Соглашение (далее -- «
**Анкета**»), посредством веб-формы в чат-боте в Telegram (в
соответствии с ч.3. ст. 438 ГК РФ).

-   **ПРЕДМЕТ СОГЛАШЕНИЯ**

1.1. Компания безвозмездно оказывает Претенденту перечисленные ниже
услуги (далее -- «Услуги»):

        I.         Рассмотрение Претендента на предмет его соответствия
требованиям, предъявляемым к партнерам Компании для принятия решения о
заключении, сопровождении, изменении, расторжении договоров Компанией.

      II.         Учет Претендента в качестве потенциального партнера
Компании, в том числе упрощение повторных рассмотрений Претендента на
предмет его соответствия требованиям, предъявляемым к контрагентам
Компании.

      III.         Информирование Претендента о продуктах Компании, в
том числе приглашения на мероприятия, проводимые Компанией.

1.2. В целях оказания Услуг Компания может получать от Претендента и
обрабатывать информацию о Претенденте и его представителях, включающую:

-   ФИО Претендента -- физического лица/ индивидуального
    предпринимателя;

-   ФИО представителя Претендента;

-   Должность представителя Претендента;

-   Email Претендента;

-   Телефон Претендента;

-   Ник Претендента в Telegram;

-   Email представителя Претендента;

-   Телефон представителя Претендента;

-   Ник представителя Претендента в Telegram;

-   Название Претендента-юридического лица;

-   Сайт Претендента.

В указанном перечне перечислен максимальный объем данных, которые могут
быть запрошены в Анкете в чат-боте в Telegram.

1.3. Претендент гарантирует, что указанные им в Анкете данные
предоставлены им лично, являются достоверными, корректными и
действительными и согласен предоставить Компании возможность производить
проверку предоставленных данных.

1.4. Претендент настоящим дает согласие Компании на период действия
Соглашения на обработку (сбор, получение, запись, систематизацию,
накопление, хранение, уточнение (обновление, изменение), извлечение,
использование, блокирование, удаление, уничтожение) предоставленных в
ходе заполнения Анкеты персональных данных с использованием средств
автоматизации или без использования таких средств для целей исполнения
настоящего Соглашения на период действия Соглашения.

Компания осуществляет сбор предоставленных в ходе заполнения Анкеты
персональных данных с привлечением третьего лица, а именно: ООО «Много
Приложений», место нахождения: 119071, Россия, г. Москва, вн.тер.г.
муниципальный округ Донской, Ленинский пр-кт, д. 15А, этаж 16, помещ. 6,
ОГРН 1237700094752, ИНН 9725113777.

1.5. Претендент с целью исполнения Соглашения (получения Услуг) поручает
Компании в течение срока действия Соглашения осуществлять обработку
информации о представителе Претендента, предусмотренной настоящим
Соглашением, с использованием средств автоматизации или без
использования таких средств способами: получение, запись,
систематизация, накопление, хранение, уточнение (обновление, изменение),
использование, блокирование, удаление, уничтожение.

Претендент гарантирует наличие законных оснований для обработки
Компанией по поручению Претендента информации о представителе и
контактных лицах Претендента, указанной в Анкете. В случае, если такие
законные основания перестают действовать в отношении соответствующего
субъекта данных, Претендент обязуется незамедлительно сообщить об этом
письмом по адресу местонахождения Компании.

Компания обязуется обеспечить конфиденциальность информации,
обрабатываемой по поручению Претендента в рамках настоящего Соглашения.
Компания обязуется соблюдать требования применимого законодательства к
защите обрабатываемой по поручению Претендента информации.

Претендент гарантирует, что уведомил представителей и контактных лиц
Претендента об обработке их данных Компанией по поручению Претендента на
условиях настоящего Соглашения.

1.6. Компания обязуется обрабатывать полученные во исполнение настоящего
Соглашения персональные данные в порядке, определенным Соглашением и
законодательством РФ.

1.7. В случае прекращения действия законного основания для обработки
Компанией информации о представителе Претендента, Претендент обязан
направить Компании уведомление в письменном виде на адрес места
нахождения Компании с указанием данных соответствующего представителя.

1.8. Компания имеет право хранить предоставленные Претендентом
персональные данные в принадлежащих Компании информационных системах
управления взаимоотношениями с контрагентами.

**2. СРОК ДЕЙСТВИЯ, ИЗМЕНЕНИЕ И РАСТОРЖЕНИЕ СОГЛАШЕНИЯ**

2.1. Настоящее Соглашение вступает в силу для Претендента с момента его
принятия Претендентом и действует до его расторжения по соглашению
Сторон, либо по требованию одной из Сторон по основаниям и в порядке,
предусмотренном Соглашением и действующим законодательством РФ.

2.2. Претендент вправе расторгнуть настоящее Соглашение посредством
направления Компании уведомления об этом письмом по адресу
местонахождения Компании. Настоящее Соглашение считается расторгнутым по
истечении 30 календарных дней со дня получения Компанией уведомления
Претендента.

2.3. Компания вправе продолжить обработку предоставленных Претендентом
персональных данных после направления Претендентом уведомления о разрыве
Соглашения при наличии иных законных оснований их обработки, к числу
которых может относиться необходимость исполнения иных соглашений,
стороной которых является Претендент, а также необходимость выполнения
возложенных законодательством Российской Федерации на Компанию функций,
полномочий и обязанностей.

2.4. Настоящее Соглашение может быть изменено Компанией при условии
уведомления Претендента путём размещения новой редакции указанных
документов в сети Интернет на странице по ссылке:
https://help.rustore.ru/rustore/for_developers/potentialpartners.
Претендент обязуется самостоятельно периодически проверять Соглашение на
предмет внесения изменений. Изменения в Соглашение, внесенные Компанией,
вступают в силу со дня, следующего за днем опубликования таких
изменений.

2.5. В случаях неисполнения и/или ненадлежащего исполнения обязательств
по Соглашению Стороны несут ответственность в соответствии с действующим
законодательством Российской Федерации.

**3. РАЗРЕШЕНИЕ СПОРОВ**

3.1. Все споры, связанные с заключением, толкованием, исполнением и
расторжением Соглашения, будут разрешаться Сторонами путем переговоров.
Соблюдение досудебного претензионного порядка разрешения споров
обязательно. Претензии должны быть рассмотрены Стороной, получившей
претензию, в течение 30 (тридцати) календарных дней со дня ее получения.

3.2. В случае невозможности урегулировать разногласия путем переговоров,
Стороны вправе обратиться за разрешением спора в судебные органы. В
таком случае спор передается в соответствующий суд по месту нахождения
Компании, если иное не предусмотрено законодательством РФ.

*Редакция от 09 ноября 2023 года*

Правила акции «Призы от RuStore»

(далее « **Правила Акции**», « **Правила**»)

*Настоящие Правила Акции являются соглашением между Вами (далее -- «
**Участник**») и Организатором Акции, предметом которого является
участие в Акции, установление прав и обязанностей Участников Акции, а
также порядка организации и проведения Акции.*

*Принимая участие в Акции, Вы безоговорочно и в полном объеме принимаете
Правила Акции.*

**1.** **Термины и определения**

1.1.         **Акция «Призы от** **RuStore** **»**(далее --- «
**Акция**») представляет собой мероприятие или комплекс мероприятий,
целями проведения которого является привлечение внимания потребителей к
платформе RuStore (https://www.rustore.ru/), принадлежащей Организатору
Акции, повышение узнаваемости данного продукта и его продвижение на
рынке товаров, работ и услуг.

1.2.         **Организатор Акции**--- ООО «ВК», место нахождения:
125167, г. Москва, Ленинградский проспект, д. 39, стр. 79, ОГРН
1027739850962, ИНН 7743001840;

1.3.         **Технический партнер Акции**--- ООО «Много Приложений»,
место нахождения: 119071, Россия, г. Москва, вн.тер.г. муниципальный
округ Донской, Ленинский пр-кт, д. 15А, этаж 16, помещ. 6, ОГРН
1237700094752, ИНН 9725113777.

1.4.         **Победитель**--- Участник, имеющий право на получение
Приза согласно условиям Правил Акции.

1.5.         **Место проведения Акции:**

\- в период 9-10 ноября 2023 года - Стенд RuStore на конференции
«Mobius», проводимой по адресу: г. Санкт-Петербург, пл. Победы, д.1,
гостиница Пулковская;

\- 18 ноября 2023 года -- конференция «RuStore Mobile Conf», проводимая
по адресу: Москва, Ленинградский пр-т., 39, стр. 79, Бизнес-центр
SkyLight;

\- в период 27-28 ноября 2023 года -- конференция «Highload++»,
проводимая по адресу: Кампус СКОЛКОВО, Московская область, Одинцовский
район, Сколково, улица Новая, дом 100;

\- в период с 30 ноября по 01 декабря 2023 года -- конференция «Team
Lead Conf», проводимая по адресу: Кампус СКОЛКОВО, Московская область,
Одинцовский район, Сколково, улица Новая, дом 100.

1.6.         **Участник Акции**--- физическое лицо, достигшее возраста
18 лет, обладающее необходимой дееспособностью и выполнившее необходимые
для участия в Акции действия, указанные в п. 3.1. Правил Акции.

1.7.         **Приз** --- один из призов, указанных в разделе 6 Правил
Акции, и подлежащий передаче Победителю в качестве награды.

1.8.         **Необоснованное преимущество** --- результат
неправомерных, нечестных и/или иных действий, направленных на получение
Приза или иного преимущества в Акции путем обмана, подлога, шантажа,
принуждения, злоупотребления, незаконного получения информации, доступа
к данным и/или обхода условий Акции, в том числе с помощью использования
технических/программных средств, а также использования
технических/программных и прочих уязвимостей, позволяющих осуществить
такие действия. К таким действиям, в частности, относятся неправомерное
получение доступа (взлом) к данным Участников Акции и прочие средства
получения необоснованного преимущества.

**2.** **Общие положения**

2.1.         Информирование Участников и потенциальных участников об
условиях участия в Акции производится посредством размещения информации
в Месте проведения Акции и иными способами, не запрещенными применимым
законодательством.

2.2.         В случае изменения Срока проведения Акции, изменения
призового фонда или иных условий проведения Акции Организатор публикует
такие изменения по ссылки размещения настоящих Правил:
https://help.rustore.ru/rustore/for_developers/rules_promotion.
Организатор вправе в одностороннем порядке вносить изменения в условия
Правил Акции.

2.3.         По всем вопросам, связанным с проведением Акции, Участник
вправе обратиться к Организатору, отправив сообщение по электронной
почте на адрес: support@rustore.ru. Организатор отвечает на запросы
Участников в течение 7 (семи) рабочих дней с даты получения запроса по
будним дням (с понедельника по пятницу с 10:00 до 18:00 по московскому
времени).

2.4.         Акция не является лотереей, стимулирующей лотереей либо
иной основанной на риске азартной игрой.

2.5.         Официальным языком при проведении Акции является русский
язык.

2.6.         Участниками Акции не могут быть сотрудники Организатора и
аффилированных с ним лиц, которые участвуют в организации Акции,
сотрудники Технического партнера Акции, а также члены семей всех
упомянутых лиц.

2.7.         Результаты проведения Акции являются окончательными и не
подлежащими пересмотру, за исключением случаев выявления Организатором
Акции после объявления таких результатов нарушений условий Правил Акции
Победителями/Участниками Акции.

**3.** **Условия участия в Акции**

3.1.      Для принятия участия в Акции Участник должен совершить
следующие действия:

3.1.1. быть зарегистрированным участником конференции в Месте проведения
Акции;

3.1.2. отсканировать размещенный в Месте проведения Акции QR-код,
перейти по предоставленной ссылке в чат-бот в Telegram, подтвердить
ознакомление в настоящими Правилами, нажав кнопку «Start»;

3.1.3. выполнить задания, предлагаемые в чат-боте в игровой форме, и
получить за это определенное количество виртуальной игровой валюты.

3.2.      Право участия в розыгрыше Приза могут получить только
Участники, которые произвели действия, указанные в п. 3.1. Правил Акции.
Организатор может отказать в участии в Акции в случае установления
нарушения Участником условий Правил Акции.

3.3.      Акция проводится посредством чат-бота в Telegram, функционал
которого предоставлен Техническим партнером Акции.

**4.** **Срок проведения Акции**

4.1.      Акция проводится в период с 9:00 МСК 09 ноября 2023 года по
18:30 МСК 01 декабря 2023 года (далее -- « **Срок проведения Акции**»).

4.2.      Срок выполнения действий, указанных в п. 3.1. Правил Акции: в
течение Срока проведения Акции.

4.3.      Срок подведения итогов, определения/объявления Победителей и
вручения Призов: в течение Срока проведения Акции.

**5.** **Порядок определения Победителей**

5.1.      Количество Победителей ограничено количеством Призов, согласно
п. 6.1 Правил.

5.2.      По итогам выполнения заданий в чат-боте согласно пп.
3.1.2.-3.1.3. Правил каждому участнику Акции начисляется определенное
количество виртуальной игровой валюты, которую можно обменять на
доступные Призы в Месте проведения Акции.

**6.** **Призовой фонд**

6.1.      Призовой фонд формируется за счет средств Организатора Акции и
включает в себя: 250 термосов, 3700 монет в коробочках «Жабкоины», 2400
пар носков, 3800 шторок для телефона,970 карточных игр (маленьких,
90х60).

6.1.1.              Условия получения и использования Приза:

а) Все Призы в рамках Акции предоставляются Организатором Акции.

б) Участник соглашается и признает, что указанные количество Призов и
состав призового фонда могут изменяться по усмотрению Организатора
Акции. Ответственность за качество Призов несёт их производитель.

в) Право на получение Приза не может быть уступлено другому лицу, а
также передано в залог либо обременено иным образом.

г) Выплата денежного эквивалента Приза не осуществляется.

д) Один Участник Акции может получить только один Приз в течение Срока
проведения Акции.

е) Дополнительные условия получения и использования Призов, а также
ограничения по их использованию, могут указываться Организатором Акции
на странице размещения настоящих Правил:
https://help.rustore.ru/rustore/for_developers/rules_promotion.

6.2.      Стоимость Призов не превышает 4000,00 рублей, в связи с чем
Организатор Акции в соответствии со ст. 226 Налогового Кодекса РФ не
выступает налоговым агентом лица, объявленного Победителем в Акции, по
уплате налога на доходы физических лиц со стоимости Призов, превышающей
4000,00 руб. (ставка налога -- 35% в соответствии со ст. 224 Налогового
Кодекса РФ для налоговых резидентов), и не обязан исчислять, удерживать
и перечислять в бюджет сумму налога, удержанного из доходов Победителя
Акции, получившего Приз, а также не обязан подавать в налоговые органы
сведения о доходах Победителя Акции в виде полученного Приза.

**7.** **Условия вручения Приза**

7.1.      После выполнения заданий (согласно пп. 3.1.2-3.1.3 Правил)
Участник Акции вправе в чат-боте выбрать Приз из перечня доступных
Призов и обратиться к Организатору Акции за его получением в Месте
проведения Акции. Для вручения Приза Победитель обязуется предоставить
по запросу Организатора сведения, указанные в разделе 8 Правил Акции.

7.2.      Непредставление Победителем сведений, указанных в разделе 8
Правил Акции, до момента окончания Срока проведения Акции считается
отказом Победителя от получения Приза.

7.3.      Призы вручаются Организатором Акции в течение Срока проведения
Акции при условии предоставления Победителем сведений, указанных в
разделе 8 Правил Акции, путём выдачи Приза в Месте проведения Акции.

7.4.      В случае, если вручение Приза не состоялось в результате
действий Победителя, например, в случае пропуска Победителем или
истечения срока на востребование Приза, предоставления Победителем
некорректных данных, необходимых для вручения Приза, повторное вручение
Приза Организатором не производится. В данном случае Приз считается
невостребованным, и Организатор Акции имеет право распорядиться им по
своему усмотрению.

7.5.      Приз не подлежит возврату или обмену и замене на другие Призы.
Выплата денежных средств в размере, эквивалентном стоимости Приза, не
производится.

**8.** **Порядок обработки информации об Участниках**

8.1.     Отношения, связанные с обработкой информации о данных
Участников, регулируются настоящими Правилами Акции, а также действующим
законодательством Российской Федерации.

8.2.     Организатор Акции обрабатывает информацию о данных Участников в
соответствии с условиями, предусмотренными ниже:

  -----------------------------------------------------------------------
  Собираемая информация               Цель обработки
  ----------------------------------- -----------------------------------
  Об Участниках и Победителях:a)      Заключение, исполнение, изменение
  Ф.И. Участника;b)  Адрес            сопровождение, расторжение Правил
  электронной почты;c)   Название     Акции с Участниками и Победителями
  компании;d)  Ник в Telegram.        с учетом требований действующего
                                      законодательства.

  -----------------------------------------------------------------------

8.3.     Организатор осуществляет обработку данных Участников путем
сбора, получения, записи, систематизации, накопления, хранения,
уточнения (обновления, изменения), сопоставления, использования,
блокирования, удаления и уничтожения данных Участника. Организатор
вправе поручить обработку данных третьим лицам, указанным в п. 1.3.
Правил Акции.

8.4.     Организатор осуществляет обработку данных Участников в течение
Срока проведения Акции, а после окончания Акции (если применимо) -- в
случаях и в течение срока, предусмотренного действующим
законодательством.

8.5.     Обработка Организатором данных Участников прекращается, а
соответствующие данные подлежат уничтожению Организатором в случае
прекращения действия настоящих Правил Акции.

8.6.     Организатор принимает технические и организационно-правовые
меры в целях обеспечения защиты информации о данных Участников от
неправомерного или случайного доступа к ним, уничтожения, изменения,
блокирования, копирования, распространения, а также от иных
неправомерных действий.

8.7.     Технические меры безопасности реализованы Организатором с
учетом требований законодательства, современного уровня техники,
характера обрабатываемых данных и рисков, связанных с их обработкой.

**9.** **Прочие условия**

9.1.     Все спорные вопросы, касающиеся Акции, регулируются действующим
законодательством РФ. В случае возникновения ситуаций, допускающих
неоднозначное толкование условий Правил Акции, и (или) вопросов, не
урегулированных Правилами Акции, окончательное решение о таком
толковании и (или) разъяснении принимается исключительно Организатором.

9.2.     Организатор в одностороннем порядке и без объяснения причин
имеет право в любой момент исключить из числа Участников лиц:

9.2.1.        подозреваемых Организатором в получении или попытке
получения Необоснованного преимущества и (или) в совершении иных
недобросовестных действий, целью которых является необоснованное
получение Приза;

9.2.2.        не соответствующих требованиям, предъявляемым к Участникам
в соответствии с Правилами Акции;

9.2.3.        нарушающих права третьих лиц (например, авторские,
исключительные и иные интеллектуальные права);

9.2.4.        использующих программное обеспечение, нарушающее работу
чат-бота и/или создающее возможность изменения результатов Акции;

9.2.5.        использующих для участия в Акции чужие данные и/или
данные, содержащие неполные и/или недостоверные сведения об Участнике;

9.2.6.        нарушающих иные условия Правил Акции и (или) положения
законодательства РФ.

9.3.     В случае нарушения Участником обязательств, предусмотренных
п. 9.2. Правил Акции, Участник несет ответственность в соответствии с
действующим законодательством РФ. В этом случае Участник будет считаться
дисквалифицированным, а результаты Акции аннулированными.

В случае возникновения у Организатора убытков, связанных с нарушением
Участником условий Правил Акции, а также прав третьих лиц, Участник
обязуется самостоятельно и за свой счет нести убытки, связанные с
нарушением любых прав третьих лиц, а также возместить убытки
Организатору, если убытки возникли у Организатора вследствие такого
нарушения.

9.4.      Участник вправе отказаться от участия в Акции в любой момент в
период ее проведения, направив уведомление (сообщение) Организатору по
электронной почте на адрес: support@rustore.ru.

9.5.     В случае письменного отказа Победителя от получения Приза,
совершения действий, указанных в п. 7.4. Правил Акции, он теряет право
получения Приза от Организатора Акции.

9.6.     Организатор не компенсирует Участнику расходы, связанные с его
участием в Акции, в том числе расходы, связанные с оплатой доступа в
сеть «Интернет», оплатой услуг связи и прочих расходов, которые могут
возникнуть у Участника.

9.7.     В случае обстоятельств, неподконтрольных Организатору, при
незапланированных событиях или в исключительной ситуации (пожар,
наводнение, стихийное бедствие, атака интернет-серверов, забастовка),
ставящих под опасность финансовую или техническую целесообразность
Акции, даже если ответственность за них лежит на Организаторе (при
условии добросовестного выполнения Организатором своих обязательств),
Организатор сохраняет за собой право отменить всю Акцию или ее часть.
При отмене Акции Участники не могут требовать компенсацию (в том числе
возмещение убытков) в какой бы то ни было форме.

9.8.     Если по какой-либо причине любой аспект Акции не может
осуществляться так, как это запланировано, в том числе по причинам,
связанным  с заражением компьютерными вирусами, неполадками в сети
Интернет, дефектами, манипуляциями, несанкционированным вмешательством,
фальсификацией, техническими неполадками или любой причиной,
неконтролируемой Организатором, которая искажает или затрагивает
исполнение, безопасность, честность, целостность или надлежащее
проведение Акции, Организатор может по своему усмотрению аннулировать,
прекратить, изменить или временно приостановить проведение Акции.

9.9.     Организатор Акции не несёт ответственности за какие-либо прямые
или косвенные потери Участников, связанные с участием в Акции, в том
числе явившиеся результатом сбоев в телекоммуникационных и
энергетических сетях, действий вредоносных программ, недобросовестных
действий третьих лиц, направленных на несанкционированный доступ и/или
выведение из строя программного и/или аппаратного комплекса Организатора
Акции, а также непредвиденных обстоятельств непреодолимой силы.
Организатор Акции не обязан возмещать потери Участникам Акции в подобных
случаях.

*Редакция 17 ноября 2023 года*
